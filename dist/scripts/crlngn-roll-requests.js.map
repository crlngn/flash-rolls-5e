{"version":3,"file":"crlngn-roll-requests.js","sources":["../../src/constants/Hooks.mjs","../../src/constants/General.mjs","../../src/components/LogUtil.mjs","../../src/constants/Settings.mjs","../../src/components/SettingsUtil.mjs","../../src/components/SocketUtil.mjs","../../src/components/GeneralUtil.mjs","../../src/components/RollUtil.mjs","../../src/components/Main.mjs","../../src/module.mjs"],"sourcesContent":["/**\n * Core Foundry hooks\n * @constant\n * @type {Object}\n */\nexport const HOOKS_CORE = {\n  INIT: \"init\",\n  READY: \"ready\",\n  RENDER_CHAT_MESSAGE: \"renderChatMessage\",\n  UPDATE_SCENE: \"updateScene\",\n  RENDER_SCENE_NAVIGATION: \"renderSceneNavigation\"\n};\n\n/**\n * Socketlib hooks\n */\nexport const HOOKS_SOCKET = {\n  READY: \"socketlib.ready\"\n}\n\n/**\n * DnD5e hooks\n */\nexport const HOOKS_DND5E = {\n  // General Rolling Process\n  PRE_ROLL_V2: \"dnd5e.preRollV2\",\n  \n  // Ability Checks & Saving Throws\n  PRE_ROLL_ABILITY_CHECK: \"dnd5e.preRollAbilityCheck\",\n  PRE_ROLL_SAVING_THROW: \"dnd5e.preRollSavingThrow\",\n  ROLL_ABILITY_CHECK: \"dnd5e.rollAbilityCheck\",\n  ROLL_SAVING_THROW: \"dnd5e.rollSavingThrow\",\n  \n  // Concentration\n  PRE_BEGIN_CONCENTRATING: \"dnd5e.preBeginConcentrating\",\n  BEGIN_CONCENTRATING: \"dnd5e.beginConcentrating\",\n  PRE_END_CONCENTRATION: \"dnd5e.preEndConcentration\",\n  END_CONCENTRATION: \"dnd5e.endConcentration\",\n  PRE_ROLL_CONCENTRATION_V2: \"dnd5e.preRollConcentrationV2\",\n  ROLL_CONCENTRATION_V2: \"dnd5e.rollConcentrationV2\",\n  \n  // Damage\n  PRE_CALCULATE_DAMAGE: \"dnd5e.preCalculateDamage\",\n  CALCULATE_DAMAGE: \"dnd5e.calculateDamage\",\n  PRE_APPLY_DAMAGE: \"dnd5e.preApplyDamage\",\n  APPLY_DAMAGE: \"dnd5e.applyDamage\",\n  \n  // Death Saves\n  PRE_ROLL_DEATH_SAVE_V2: \"dnd5e.preRollDeathSaveV2\",\n  ROLL_DEATH_SAVE_V2: \"dnd5e.rollDeathSaveV2\",\n  POST_ROLL_DEATH_SAVE: \"dnd5e.postRollDeathSave\",\n  \n  // Skills & Tools\n  PRE_ROLL_SKILL_V2: \"dnd5e.preRollSkillV2\",\n  PRE_ROLL_TOOL_CHECK_V2: \"dnd5e.preRollToolCheckV2\",\n  ROLL_SKILL_V2: \"dnd5e.rollSkillV2\",\n  ROLL_TOOL_CHECK_V2: \"dnd5e.rollToolCheckV2\",\n  \n  // Hit Dice\n  PRE_ROLL_HIT_DIE_V2: \"dnd5e.preRollHitDieV2\",\n  ROLL_HIT_DIE_V2: \"dnd5e.rollHitDieV2\",\n  \n  // Hit Points\n  PRE_ROLL_CLASS_HIT_POINTS: \"dnd5e.preRollClassHitPoints\",\n  ROLL_CLASS_HIT_POINTS: \"dnd5e.rollClassHitPoints\",\n  PRE_ROLL_NPC_HIT_POINTS: \"dnd5e.preRollNPCHitPoints\",\n  ROLL_NPC_HIT_POINTS: \"dnd5e.rollNPChitPoints\",\n  \n  // Initiative\n  PRE_ROLL_INITIATIVE_DIALOG: \"dnd5e.preRollInitiativeDialog\",\n  PRE_ROLL_INITIATIVE: \"dnd5e.preRollInitiative\",\n  ROLL_INITIATIVE: \"dnd5e.rollInitiative\",\n  \n  // Attacks\n  PRE_ROLL_ATTACK_V2: \"dnd5e.preRollAttackV2\",\n  ROLL_ATTACK_V2: \"dnd5e.rollAttackV2\",\n  POST_ROLL_ATTACK: \"dnd5e.postRollAttack\",\n  \n  // Damage Rolls\n  PRE_ROLL_DAMAGE_V2: \"dnd5e.preRollDamageV2\",\n  ROLL_DAMAGE_V2: \"dnd5e.rollDamageV2\",\n  \n  // Formula Rolls\n  PRE_ROLL_FORMULA_V2: \"dnd5e.preRollFormulaV2\",\n  ROLL_FORMULA_V2: \"dnd5e.rollFormulaV2\",\n  \n  // Recharge Rolls\n  PRE_ROLL_RECHARGE_V2: \"dnd5e.preRollRechargeV2\",\n  ROLL_RECHARGE_V2: \"dnd5e.rollRechargeV2\",\n  \n  // Item Display\n  PRE_DISPLAY_CARD_V2: \"dnd5e.preDisplayCardV2\",\n  DISPLAY_CARD: \"dnd5e.displayCard\",\n\n  // Config\n  BUILD_ROLL_CONFIG: \"dnd5e.buildRollConfig\",\n  POST_ROLL_CONFIG: \"dnd5e.postRollConfiguration\"\n}","/**\n * Module ID constant\n * @constant\n * @type {string}\n */\nexport const MODULE_ID = \"crlngn-roll-requests\";\n\n/**\n * Debug tag for console logging\n * @constant\n * @type {Array}\n */\nexport const DEBUG_TAG = [\n  `%cCarolingian Rolls`,\n  `color:rgb(47, 151, 161); font-weight: bold;`,\n  `|`,\n];\n","import { DEBUG_TAG, MODULE_ID } from \"../constants/General.mjs\";\n\n/**\n * Utility class for handling logging operations in the module\n * Provides methods for debug, warning, and error logging with module context\n */\nexport class LogUtil {\n  /** @type {boolean} Whether debug logging is enabled */\n  static debugOn = false;\n\n  /**\n   * Logs information to the console, adding module name and reference\n   * @param {string} ref - Reference information to log after module name\n   * @param {any[]} data - data to log on console\n   * @param {boolean} [bypassSettings=false] - Whether to bypass debug settings check\n   */\n  static log(ref=\"\", data=[], bypassSettings=false) {\n    try {\n      const debugSetting = game.settings.get(MODULE_ID, \"debugMode\") || LogUtil.debugOn;\n      const isDebugModeOn = bypassSettings || debugSetting;\n      if(!isDebugModeOn) { return; }\n      console.log(...DEBUG_TAG, ref, ...data);\n    } catch(e) {\n      console.log(...DEBUG_TAG, ref, ...data);\n    }\n  }\n\n  /**\n   * Outputs warning on console, adding module name and reference\n   * @param {string} ref - Reference information to log after module name\n   * @param {any[]} data - data to log on console\n   */\n  static warn(ref=\"\", data=[]) {\n    console.warn(...DEBUG_TAG, ref, ...data);\n  }\n\n  /**\n   * Logs an error to the console and/or UI notification\n   * @param {string} strRef - Reference string for the error\n   * @param {object} options - Error logging configuration\n   * @param {boolean} [options.ui=false] - Whether to show UI notification\n   * @param {boolean} [options.console=true] - Whether to log to console\n   * @param {boolean} [options.permanent=false] - Whether UI notification should be permanent\n   * @static\n   */\n  static error(strRef, options = { ui: false, console: true, permanent: false }) {\n    if(options.ui) {\n      ui.notifications?.error(strRef, { localize: true, permanent: options.permanent });\n    }\n    if(options.console) console.error(...DEBUG_TAG, strRef);\n  }\n}","export const SETTING_INPUT = {\n  select: \"select\", \n  checkbox: \"checkbox\"\n}\nexport const SETTING_SCOPE = {\n  client: \"client\",\n  world: \"world\"\n}\n\n/**\n * Get all module settings\n * @returns {Object} Module settings\n */\nexport const getSettings = () => {\n  return {\n    debugMode: {\n      tag: \"debug-mode\", \n      label: game.i18n.localize(\"CRLNGN_ROLLS.settings.debugMode.label\"),\n      hint: game.i18n.localize(\"CRLNGN_ROLLS.settings.debugMode.hint\"),\n      propType: Boolean,\n      inputType: SETTING_INPUT.checkbox,\n      default: true,\n      scope: SETTING_SCOPE.client,\n      config: true\n    }\n    // Additional settings will be added as needed\n  };\n};\n","import { MODULE_ID } from \"../constants/General.mjs\";\nimport { getSettings } from \"../constants/Settings.mjs\";\nimport { LogUtil } from \"./LogUtil.mjs\";\n\n/**\n * Utility class for managing module settings\n */\nexport class SettingsUtil {\n  \n  /**\n   * Register all module settings\n   * @static\n   */\n  static registerSettings() {\n    const SETTINGS = getSettings();\n    \n    /* Register each of the settings defined in the SETTINGS constant */\n    const settingsList = Object.entries(SETTINGS);\n    settingsList.forEach(async(entry) => {\n      const setting = entry[1]; \n      LogUtil.log(\"Registering... \",[entry]);\n\n      const settingObj = { \n        name: setting.label,\n        hint: setting.hint,\n        default: setting.default,\n        type: setting.propType,\n        scope: setting.scope,\n        config: setting.config,\n        requiresReload: setting.requiresReload || false,\n        onChange: value => SettingsUtil.apply(setting.tag, value)\n      }\n      if(setting.choices){\n        settingObj.choices = setting.choices;\n      }\n\n      await game.settings.register(MODULE_ID, setting.tag, settingObj);\n\n      /* if the setting has never been defined, set as default value */\n      if(SettingsUtil.get(setting.tag)===undefined){\n        SettingsUtil.set(setting.tag, setting.default);\n      }\n      LogUtil.log(\"registerSettings\",[setting.tag, SettingsUtil.get(setting.tag)]);\n    });\n  }\n  \n  /**\n   * Retrieves the value of a module setting\n   * @param {string} settingName - Name of the setting to retrieve\n   * @param {string} [moduleName=MODULE_ID] - ID of the module the setting belongs to\n   * @returns {*} Current value of the setting\n   */\n  static get(settingName, moduleName=MODULE_ID){\n    if(!settingName){ return null; }\n\n    let setting = false;\n\n    if(moduleName===MODULE_ID){\n      setting = game.settings.get(moduleName, settingName);\n    }else{\n      const client = game.settings.storage.get(\"client\");\n      let selectedSetting = client[`${moduleName}.${settingName}`];\n      //\n      if(selectedSetting===undefined){\n        const world = game.settings.storage.get(\"world\");\n        selectedSetting = world.getSetting(`${moduleName}.${settingName}`);\n      }\n      setting = selectedSetting?.value;\n      LogUtil.log(\"GET Setting\", [selectedSetting, setting]);\n    }\n\n    return setting;\n  }\n  \n  /**\n   * Updates the value of a module setting\n   * @param {string} settingName - Name of the setting to update\n   * @param {*} newValue - New value to set\n   * @param {string} [moduleName=MODULE_ID] - ID of the module the setting belongs to\n   * @returns {boolean} True if setting was updated successfully\n   */\n  static set(settingName, newValue, moduleName=MODULE_ID){ \n    if(!settingName){ return false; }\n\n    let selectedSetting = game.settings.storage.get(\"client\")[`${moduleName}.${settingName}`];\n\n    if(!selectedSetting){\n      const world = game.settings.storage.get(\"world\");\n      selectedSetting = world.getSetting(`${moduleName}.${settingName}`);\n    } \n    LogUtil.log(\"Setting\",[settingName, selectedSetting]);\n\n    try{\n      game.settings.set(moduleName, settingName, newValue);\n    }catch(e){\n      LogUtil.log(\"Unable to change setting\",[settingName, selectedSetting]);\n    }\n\n    return true;\n  }\n}\n","import { MODULE_ID } from \"../constants/General.mjs\";\nimport { HOOKS_SOCKET } from \"../constants/Hooks.mjs\";\nimport { LogUtil } from \"./LogUtil.mjs\";\n\n/**\n * Utility class for managing socket communication using socketlib.\n */\nexport class SocketUtil {\n  static socket;\n\n  /**\n   * Initializes the socket module and registers it with socketlib.\n   * This should be called once during FoundryVTT initialization.\n   * \n   * @param {Function} callbackFunc - Optional callback to execute after registration.\n   */\n  static initialize = (callbackFunc) => {\n      Hooks.once(HOOKS_SOCKET.READY, () => { \n        LogUtil.log(`Attempting to register module...`);\n\n        // Check if socketlib is available before registering the module\n        if (typeof socketlib === \"undefined\") {\n          LogUtil.error(\"SocketUtil Error: socketlib is not loaded. Ensure it is installed and enabled.\");\n          return;\n        }\n\n        try { \n          // Register the module with socketlib\n          SocketUtil.socket = socketlib.registerModule(MODULE_ID);\n\n          // Execute callback function if provided\n          if (callbackFunc) {\n            callbackFunc();\n          }\n\n          LogUtil.log(`SocketUtil | Module registered`, [SocketUtil.socket]);\n        } catch (e) {\n            LogUtil.log(`Problem registering module`, [e]);\n        }\n      });\n  }\n\n  /**\n   * Registers a callback function that can be called remotely via the socket.\n   * \n   * @param {string} name - The name of the remote function.\n   * @param {Function} func - The function to be executed remotely.\n   */\n  static registerCall = (name, func) => {\n      if (SocketUtil.socket) {\n        SocketUtil.socket.register(name, func);\n        LogUtil.log(`SocketUtil - Registered callback`, [SocketUtil.socket, name]);\n      } else {\n        LogUtil.log(`SocketUtil - Failed to register callback (socket not initialized)`, [SocketUtil.socket, name]);\n      }\n  }\n\n  /**\n   * Sends a message via the socket (currently only logs it and calls a callback).\n   * \n   * @param {*} value - The message or data to send.\n   * @param {Function} callback - The callback function to execute after sending.\n   */\n  static sendMessage = (value, callback) => {\n    LogUtil.log(`SocketUtil - sendMessage`, [value]);\n    if (callback) {\n        callback();\n    }\n  }\n\n  /**\n   * Executes a function as the GM.\n   * \n   * @param {Function} handler - The function to execute.\n   * @param {...*} parameters - The parameters to pass to the function.\n   * @returns {Promise} A promise resolving when the function executes.\n   */\n  static execAsGM = async (handler, ...parameters) => {\n    if (!SocketUtil.socket) {\n        LogUtil.log(\"SocketUtil - Socket not initialized. Cannot execute as GM.\");\n        return;\n    }\n    return await SocketUtil.socket.executeAsGM(handler, ...parameters);\n  }\n\n  /**\n   * Executes a function for all connected clients.\n   * \n   * @param {Function} handler - The function to execute.\n   * @param {...*} parameters - The parameters to pass to the function.\n   * @returns {Promise} A promise resolving when the function executes for all clients.\n   */\n  static execForAll = async (handler, ...parameters) => {\n      if (!SocketUtil.socket) {\n          LogUtil.log(\"SocketUtil - Socket not initialized. Cannot execute for all clients.\");\n          return;\n      }\n      return await SocketUtil.socket.executeForEveryone(handler, ...parameters);\n  }\n\n\n  /**\n   * Executes a function as the specified user.\n   * @param {Function} handler - The function to execute.\n   * @param {String} userId - the id of the user that should execute this function\n   * @param {...*} parameters - The parameters to pass to the function.\n   * @returns {Promise} A promise resolving when the function executes.\n   */\n  static execAsUser = async (handler, userId, ...parameters) => {\n    if (!SocketUtil.socket) {\n        LogUtil.log(\"SocketUtil - Socket not initialized. Cannot execute as user.\");\n        return;\n    }\n    \n    // We need to use the original handler, but we'll handle deserialization on reception\n    const resp = await SocketUtil.socket.executeAsUser(handler, userId, ...parameters);\n    LogUtil.log(\"SocketUtil - Executed as user.\", [resp]);\n    return resp;\n  }\n\n  /**\n   * Serializes an object for transport, handling Roll objects properly\n   * @param {*} data - The data to serialize\n   * @returns {*} - Serialized data\n   */\n  static serializeForTransport(data) {\n    // Handle null or undefined\n    if (data == null) return data;\n    \n    if (data.rolls && Array.isArray(data.rolls)) {\n      // data.rolls = data.rolls.map(r => SocketUtil.serializeForTransport(r));\n      \n      data.rolls = data.rolls.map(r => {\n        if(r instanceof Roll){\n          let test = r.toJSON();\n          return test;\n        }else{\n          return r;\n        }\n      });\n    }\n    LogUtil.log(\"ROLLS DATA\", [data]);\n    \n    return data;\n  }\n\n  /**\n   * Deserializes data received from transport, reconstructing Roll objects\n   * @param {*} data - The serialized data\n   * @returns {*} - Deserialized data with reconstructed objects\n   */\n  static deserializeFromTransport(data) {\n    let result = {};\n    // Handle null or undefined\n    if (data == null) return data;\n\n    if(data.rolls && data.rolls.length > 0){\n      // rolls = data.rolls.map(r => Roll.fromJSON(JSON.stringify(r)));\n      \n      result = {\n        ...data,\n        rolls: data.rolls.map(r => {\n          if(typeof r === 'string'){\n            return Roll.fromJSON(r);\n          }else{\n            return Roll.fromJSON(JSON.stringify(r));\n          }\n        })\n      }\n    }\n    LogUtil.log(\"ROLLS RESULT\", [result]);\n    \n    return result;\n  }\n\n}\n","import { LogUtil } from \"./LogUtil.mjs\";\nimport { SettingsUtil } from \"./SettingsUtil.mjs\";\n\nexport class GeneralUtil {\n  /**\n   * Identifies the current selected or targeted tokens\n   * @param {User5e} user\n   * @returns {Set} A set of targeted tokens\n   */\n  static getTargets(user) {\n    let gm = game.users.find(us=>us.isGM===true);\n    let targetTokens = user.targets || gm.targets; // || canvas.tokens?.controlled;\n\n    return new Set([...targetTokens]);\n  }\n\n  static getClientTargets = () => {\n    if (!game.user) return [];\n\n    // Convert the Set of targets to an array\n    const selectedTargets = Array.from(game.user.targets);//.filter(target => target.actor);\n\n    LogUtil.log(\"Selected Targets\", [ \n      game.user.id, \n      selectedTargets, \n      selectedTargets.filter(target => target.actor) \n    ]);\n    return selectedTargets;\n  };\n\n\n\n  /**\n  * Grab the targeted tokens and return relevant information for hit calculation\n  * @returns {TargetDescriptor[]}\n  */\n  static getTargetDescriptors = () => {\n    const targets = new Map();\n    for ( const token of game.user.targets ) {\n      const { name } = token;\n      const { img, system, uuid, statuses } = token.actor ?? {};\n      if ( uuid ) {\n        const ac = statuses.has(\"coverTotal\") ? null : system.attributes?.ac?.value;\n        targets.set(uuid, { name, img, uuid, ac: ac ?? null });\n      }\n    }\n    return Array.from(targets.values());\n  }\n\n  /**\n   * \n   * @param {String} itemUuid \n   * @returns {Actor5e}\n   */\n  static getActorFromItem(itemUuid){\n    const actorId = itemUuid.split(\".\")[1];\n    const actor = game.actors.get(actorId);\n\n    return actor;\n  }\n\n  static findItemFromActor = (actorId, itemId, actionName) => {\n    const actor = game.actors.get(actorId);\n    LogUtil.log(\"findItemFromActor\", [itemId, actionName]);\n    if(!actor) return null;\n\n    let item = itemId ? actor.items.find((it) => {\n      return it.id === itemId; \n    }) : null; \n\n    if(!item){ \n      // match exact name\n      item = actionName ? actor.items.find((it) => it.name.toLowerCase() === actionName.toLowerCase()) : null;\n      // if no exact name, look for the name with \"(Legacy)\" tag\n      if(!item){ item = actor.items.find((it) => it.name.toLowerCase() === (actionName + \" (Legacy)\").toLowerCase()) };\n    } \n\n    return item;\n  }\n\n  /**\n   * Checks if module is currently installed and active\n   * @param {string} moduleName \n   * @returns \n   */\n  static isModuleOn(moduleName){\n    const module = game.modules?.get(moduleName);\n    return module?.active ? true : false;\n  }\n\n  /**\n   * checks roll mode to determine if its mode is blind / private\n   * @param {String} mode \n   */\n  static isPrivateRoll(mode){\n    return mode === CONST.DICE_ROLL_MODES.BLIND || mode === CONST.DICE_ROLL_MODES.PRIVATE;\n  }\n\n  /**\n   * Removes the MeasuredTemplate \n   * @param {Item5e} item \n   */\n  static removeTemplateForItem (item) {\n    LogUtil.log(\"removeTemplateForItem - A\", [item]);\n    const removeTemplateSettingOn = SettingsUtil.get(\"remove-template\");\n    LogUtil.log(\"removeTemplateForItem - B\", [removeTemplateSettingOn]);\n    if(!removeTemplateSettingOn){ return; }\n    const templates = canvas.templates.objects.children.filter(mt => {\n      return mt.document.flags.dnd5e.item === item?.uuid;\n    });\n\n    canvas.scene.deleteEmbeddedDocuments('MeasuredTemplate', templates.map(i=>i.id));\n  }\n\n  static getUserFromActor(actorId){\n    let owner;\n    if(!actorId){ return null; }\n    const actor = actorId ? game.actors.get(actorId) : null;\n    \n    let assignedPlayer = game.users.players.find(pl=>{\n      return pl.active === true && pl.character.id === actorId;\n    });\n    owner = assignedPlayer;\n\n    if(!owner){ \n      // owner = game.users.find(u => u.isGM===true); \n      game.users.players.forEach(pl => {\n        if(pl.active && actor.testUserPermission(pl, foundry.CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER, { exact:true })){\n          owner = pl;\n        }\n      });\n    }\n\n    // let gm = game.users.find(u => u.isGM===true);\n    LogUtil.log(\"getUserFromActor\", [actorId, owner]);\n\n    return owner;\n  }\n\n\n  static html(parent, selector) {\n    return parent.querySelector(selector);\n  }\n\n  /**\n   * Adds css rules to a <style> element at the body\n   * @param {string} varName \n   * @param {string} varValue \n   */\n  static addCSSVars = (varName, varValue) => {\n    let bodyStyle = document.querySelector('#crlngn-chat-vars');\n    \n    if (!bodyStyle) {\n      // Create style element if it doesn't exist\n      const body = document.querySelector('body');\n      bodyStyle = document.createElement('style');\n      bodyStyle.id = 'crlngn-chat-vars';\n      bodyStyle.textContent = 'body.crlngn-chat {\\n}\\n';\n      body.prepend(bodyStyle);\n    }\n    \n    // Parse the current CSS content\n    let cssText = bodyStyle.textContent;\n    \n    // Find or create the rule block\n    let ruleStart = cssText.indexOf('body.crlngn-chat {');\n    let ruleEnd = cssText.indexOf('}', ruleStart);\n    \n    if (ruleStart === -1) {\n      // If rule doesn't exist, create it\n      cssText = 'body.crlngn-chat {\\n}\\n';\n      ruleStart = 0;\n      ruleEnd = cssText.indexOf('}');\n    }\n    \n    // Get all the current declarations\n    const rulePart = cssText.substring(ruleStart + 'body.crlngn-chat {'.length, ruleEnd);\n    \n    // Split by semicolons to get individual declarations\n    const declarations = rulePart.split(';')\n      .map(decl => decl.trim())\n      .filter(decl => decl !== '');\n    \n    // Create a map of existing variables\n    const varsMap = {};\n    declarations.forEach(decl => {\n      const parts = decl.split(':');\n      if (parts.length >= 2) {\n        const name = parts[0].trim();\n        const value = parts.slice(1).join(':').trim(); // Handle values that might contain colons\n        if (name) varsMap[name] = value;\n      }\n    });\n    \n    // Format the value if it appears to need quotes\n    // For string values used in content properties (i18n text)\n    if (varName.includes('i18n') && \n        typeof varValue === 'string' && \n        !varValue.startsWith('\"') && \n        !varValue.startsWith(\"'\") && \n        !varValue.match(/^url\\(|^rgba?\\(|^hsla?\\(/)) {\n      varValue = `\"${varValue}\"`;\n    }\n    \n    // Update or add the new variable\n    varsMap[varName] = varValue;\n    \n    // Rebuild the rule content\n    const newRuleContent = Object.entries(varsMap)\n      .map(([name, value]) => `  ${name}: ${value};`)\n      .join('\\n');\n    \n    // Rebuild the entire CSS\n    const newCss = \n      cssText.substring(0, ruleStart) + \n      'body.crlngn-chat {\\n' + \n      newRuleContent + \n      '\\n}' + \n      cssText.substring(ruleEnd + 1);\n    \n    // Update the style element\n    bodyStyle.textContent = newCss;\n  };\n}\n","import { HOOKS_DND5E } from \"@/constants/Hooks.mjs\";\nimport { LogUtil } from \"./LogUtil.mjs\";\nimport { GeneralUtil } from \"./GeneralUtil.mjs\";\n\n/**\n * Utility class for handling roll-related functionality\n * More information on DnD5e hooks here:\n * https://github.com/foundryvtt/dnd5e/wiki/Hooks\n */\nexport class RollUtil {\n  \n  static init() {\n    // General Rolling Process\n    Hooks.on(HOOKS_DND5E.PRE_ROLL_V2, RollUtil.#onPreRollV2);\n    \n    // Ability Checks & Saving Throws\n    Hooks.on(HOOKS_DND5E.PRE_ROLL_ABILITY_CHECK, RollUtil.#onPreRollAbilityCheck);\n    Hooks.on(HOOKS_DND5E.PRE_ROLL_SAVING_THROW, RollUtil.#onPreRollSavingThrow);\n    \n    // Concentration\n    Hooks.on(HOOKS_DND5E.PRE_BEGIN_CONCENTRATING, RollUtil.#onPreBeginConcentrating);\n    Hooks.on(HOOKS_DND5E.PRE_END_CONCENTRATION, RollUtil.#onPreEndConcentration);\n    Hooks.on(HOOKS_DND5E.PRE_ROLL_CONCENTRATION_V2, RollUtil.#onPreRollConcentrationV2);\n    \n    // Death Saves\n    Hooks.on(HOOKS_DND5E.PRE_ROLL_DEATH_SAVE_V2, RollUtil.#onPreRollDeathSaveV2);\n    \n    // Skills & Tools\n    Hooks.on(HOOKS_DND5E.PRE_ROLL_SKILL_V2, RollUtil.#onPreRollSkillV2);\n    Hooks.on(HOOKS_DND5E.PRE_ROLL_TOOL_CHECK_V2, RollUtil.#onPreRollToolCheckV2);\n    \n    // Hit Dice\n    Hooks.on(HOOKS_DND5E.PRE_ROLL_HIT_DIE_V2, RollUtil.#onPreRollHitDieV2);\n    \n    // Hit Points\n    Hooks.on(HOOKS_DND5E.PRE_ROLL_CLASS_HIT_POINTS, RollUtil.#onPreRollClassHitPoints);\n    Hooks.on(HOOKS_DND5E.PRE_ROLL_NPC_HIT_POINTS, RollUtil.#onPreRollNPCHitPoints);\n    \n    // Initiative\n    Hooks.on(HOOKS_DND5E.PRE_ROLL_INITIATIVE_DIALOG, RollUtil.#onPreRollInitiativeDialog);\n    Hooks.on(HOOKS_DND5E.PRE_ROLL_INITIATIVE, RollUtil.#onPreRollInitiative);\n    \n    // Attacks\n    Hooks.on(HOOKS_DND5E.PRE_ROLL_ATTACK_V2, RollUtil.#onPreRollAttackV2);\n    \n    // Damage Rolls\n    Hooks.on(HOOKS_DND5E.PRE_ROLL_DAMAGE_V2, RollUtil.#onPreRollDamageV2);\n    \n    // Formula Rolls\n    Hooks.on(HOOKS_DND5E.PRE_ROLL_FORMULA_V2, RollUtil.#onPreRollFormulaV2);\n    \n    // Recharge Rolls\n    Hooks.on(HOOKS_DND5E.PRE_ROLL_RECHARGE_V2, RollUtil.#onPreRollRechargeV2);\n\n    // Roll Config\n    Hooks.on(HOOKS_DND5E.POST_ROLL_CONFIG, RollUtil.#onPostRollConfiguration);\n    \n    // Item Display\n    // Hooks.on(HOOKS_DND5E.PRE_DISPLAY_CARD_V2, RollUtil.#onPreDisplayCardV2);\n  }\n\n  /**\n   * Hook handler for dnd5e.preRollV2\n   * Fires before a roll is performed\n   * @param {Object} config - BasicRollProcessConfiguration for the roll\n   * @param {Object} dialog - BasicRollDialogConfiguration for the dialog\n   * @param {Object} message - BasicRollMessageConfiguration for the message\n   * @returns {boolean|void} Return false to prevent the normal rolling process\n   */\n  static #onPreRollV2(config, dialog, message) {\n    LogUtil.log(\"#onPreRollV2\", [config, dialog, message]);\n    const actor = config.subject;\n    if(!actor){ return; } // TODO: what to do if there's no actor for this roll, such as custom rolls\n\n    const playerOwner = actor.hasPlayerOwner ? GeneralUtil.findItemFromActor(actor.id) : null;\n    LogUtil.log(\"#onPreRollV2 - playerOwner\", [playerOwner]);\n  }\n\n  /**\n   * Get the player owner object for a given actor ID\n   * @param {string} actorId - Actor ID to get player owner for\n   * @returns {Object|null} Player owner object, or null if not found\n   */\n  static getPlayerOwner(actorId) {\n    return game.users.find(u => u.character?.id === actorId);\n\n  }\n\n  /**\n   * Hook handler for dnd5e.preRollAbilityCheck\n   * Fires before an ability check is rolled\n   * @param {Object} config - AbilityRollProcessConfiguration for the roll\n   * @returns {boolean|void} Return false to prevent the normal rolling process\n   */\n  static #onPreRollAbilityCheck(config) {\n    LogUtil.log(\"#onPreRollAbilityCheck\", [config]);\n  }\n\n  /**\n   * Hook handler for dnd5e.preRollSavingThrow\n   * Fires before a saving throw is rolled\n   * @param {Object} config - AbilityRollProcessConfiguration for the roll\n   * @returns {boolean|void} Return false to prevent the normal rolling process\n   */\n  static #onPreRollSavingThrow(config) {\n    LogUtil.log(\"#onPreRollSavingThrow\", [config]);\n  }\n\n  /**\n   * Hook handler for dnd5e.preBeginConcentrating\n   * Fires before a concentration effect is created\n   * @param {Actor5e} actor - The actor that will be concentrating\n   * @param {Item5e} item - The item that requires concentration\n   * @returns {boolean|void} Return false to prevent concentration effect from being created\n   */\n  static #onPreBeginConcentrating(actor, item) {\n    LogUtil.log(\"#onPreBeginConcentrating\", [actor, item]);\n  }\n\n  /**\n   * Hook handler for dnd5e.preEndConcentration\n   * Fires before a concentration effect is deleted\n   * @param {Actor5e} actor - The actor that is concentrating\n   * @param {ActiveEffect} effect - The concentration effect\n   * @returns {boolean|void} Return false to prevent concentration effect from being deleted\n   */\n  static #onPreEndConcentration(actor, effect) {\n    LogUtil.log(\"#onPreEndConcentration\", [actor, effect]);\n  }\n\n  /**\n   * Hook handler for dnd5e.preRollConcentrationV2\n   * Fires before a saving throw to maintain concentration is rolled\n   * @param {Object} config - D20RollProcessConfiguration for the roll\n   * @param {Object} dialog - D20RollDialogConfiguration for the dialog\n   * @param {Object} message - D20RollMessageConfiguration for the message\n   * @returns {boolean|void} Return false to prevent the normal rolling process\n   */\n  static #onPreRollConcentrationV2(config, dialog, message) {\n    LogUtil.log(\"#onPreRollConcentrationV2\", [config, dialog, message]);\n  }\n\n  /**\n   * Hook handler for dnd5e.preRollDeathSaveV2\n   * Fires before a death saving throw is rolled\n   * @param {Object} config - D20RollProcessConfiguration for the roll\n   * @param {Object} dialog - D20RollDialogConfiguration for the dialog\n   * @param {Object} message - D20RollMessageConfiguration for the message\n   * @returns {boolean|void} Return false to prevent the normal rolling process\n   */\n  static #onPreRollDeathSaveV2(config, dialog, message) {\n    LogUtil.log(\"#onPreRollDeathSaveV2\", [config, dialog, message]);\n  }\n\n  /**\n   * Hook handler for dnd5e.preRollSkillV2\n   * Fires before a skill check is rolled\n   * @param {Object} config - SkillToolRollProcessConfiguration for the roll\n   * @param {Object} dialog - SkillToolRollDialogConfiguration for the dialog\n   * @param {Object} message - SkillToolRollMessageConfiguration for the message\n   * @returns {boolean|void} Return false to prevent the normal rolling process\n   */\n  static #onPreRollSkillV2(config, dialog, message) {\n    LogUtil.log(\"#onPreRollSkillV2\", [config, dialog, message]);\n  }\n\n  /**\n   * Hook handler for dnd5e.preRollToolCheckV2\n   * Fires before a tool check is rolled\n   * @param {Object} config - SkillToolRollProcessConfiguration for the roll\n   * @param {Object} dialog - SkillToolRollDialogConfiguration for the dialog\n   * @param {Object} message - SkillToolRollMessageConfiguration for the message\n   * @returns {boolean|void} Return false to prevent the normal rolling process\n   */\n  static #onPreRollToolCheckV2(config, dialog, message) {\n    LogUtil.log(\"#onPreRollToolCheckV2\", [config, dialog, message]);\n  }\n\n  /**\n   * Hook handler for dnd5e.preRollHitDieV2\n   * Fires before a hit die is rolled\n   * @param {Object} config - HitDieRollProcessConfiguration for the roll\n   * @param {Object} dialog - HitDieRollDialogConfiguration for the dialog\n   * @param {Object} message - HitDieRollMessageConfiguration for the message\n   * @returns {boolean|void} Return false to prevent the normal rolling process\n   */\n  static #onPreRollHitDieV2(config, dialog, message) {\n    LogUtil.log(\"#onPreRollHitDieV2\", [config, dialog, message]);\n  }\n\n  /**\n   * Hook handler for dnd5e.preRollClassHitPoints\n   * Fires before hit points are rolled for a character's class\n   * @param {Actor5e} actor - The actor\n   * @param {Object} classItem - The class item\n   * @param {Object} formula - The formula to roll\n   * @returns {boolean|void} Return false to prevent the normal rolling process\n   */\n  static #onPreRollClassHitPoints(actor, classItem, formula) {\n    LogUtil.log(\"#onPreRollClassHitPoints\", [actor, classItem, formula]);\n  }\n\n  /**\n   * Hook handler for dnd5e.preRollNPCHitPoints\n   * Fires before hit points are rolled for an NPC\n   * @param {Actor5e} actor - The NPC actor\n   * @param {Object} formula - The formula to roll\n   * @returns {boolean|void} Return false to prevent the normal rolling process\n   */\n  static #onPreRollNPCHitPoints(actor, formula) {\n    LogUtil.log(\"#onPreRollNPCHitPoints\", [actor, formula]);\n  }\n\n  /**\n   * Hook handler for dnd5e.preRollInitiativeDialog\n   * Fires before the initiative dialog is shown\n   * @param {Object} config - Configuration for the roll\n   * @returns {boolean|void} Return false to prevent the normal rolling process\n   */\n  static #onPreRollInitiativeDialog(config) {\n    LogUtil.log(\"#onPreRollInitiativeDialog\", [config]);\n  }\n\n  /**\n   * Hook handler for dnd5e.preRollInitiative\n   * Fires before initiative is rolled for an Actor\n   * @param {Actor5e} actor - The actor rolling initiative\n   * @param {Object} options - Roll options\n   * @returns {boolean|void} Return false to prevent the normal rolling process\n   */\n  static #onPreRollInitiative(actor, options) {\n    LogUtil.log(\"#onPreRollInitiative\", [actor, options]);\n  }\n\n  /**\n   * Hook handler for dnd5e.preRollAttackV2\n   * Fires before an attack is rolled\n   * @param {Object} config - AttackRollProcessConfiguration for the roll\n   * @param {Object} dialog - AttackRollDialogConfiguration for the dialog\n   * @param {Object} message - AttackRollMessageConfiguration for the message\n   * @returns {boolean|void} Return false to prevent the normal rolling process\n   */\n  static #onPreRollAttackV2(config, dialog, message) {\n    LogUtil.log(\"#onPreRollAttackV2\", [config, dialog, message]);\n  }\n\n  /**\n   * Hook handler for dnd5e.preRollDamageV2\n   * Fires before damage is rolled\n   * @param {Object} config - DamageRollProcessConfiguration for the roll\n   * @param {Object} dialog - DamageRollDialogConfiguration for the dialog\n   * @param {Object} message - DamageRollMessageConfiguration for the message\n   * @returns {boolean|void} Return false to prevent the normal rolling process\n   */\n  static #onPreRollDamageV2(config, dialog, message) {\n    LogUtil.log(\"#onPreRollDamageV2\", [config, dialog, message]);\n  }\n\n  /**\n   * Hook handler for dnd5e.preRollFormulaV2\n   * Fires before a formula is rolled for a Utility activity\n   * @param {Object} config - FormulaRollProcessConfiguration for the roll\n   * @param {Object} dialog - FormulaRollDialogConfiguration for the dialog\n   * @param {Object} message - FormulaRollMessageConfiguration for the message\n   * @returns {boolean|void} Return false to prevent the normal rolling process\n   */\n  static #onPreRollFormulaV2(config, dialog, message) {\n    LogUtil.log(\"#onPreRollFormulaV2\", [config, dialog, message]);\n  }\n\n  /**\n   * Hook handler for dnd5e.preRollRechargeV2\n   * Fires before recharge is rolled for an Item or Activity\n   * @param {Item5e|Object} item - The item being recharged\n   * @returns {boolean|void} Return false to prevent the normal rolling process\n   */\n  static #onPreRollRechargeV2(item) {\n    LogUtil.log(\"#onPreRollRechargeV2\", [item]);\n  }\n\n\n  /**\n   * Hook handler for dnd5e.postRollConfiguration\n   * Fires after roll configuration is complete, but before the roll is evaluated\n   * @param {Array} rolls - BasicRoll[] array of rolls\n   * @param {Object} config - BasicRollProcessConfiguration for the roll\n   * @param {Object} dialog - BasicRollDialogConfiguration for the dialog\n   * @param {Object} message - BasicRollMessageConfiguration for the message\n   * @returns {boolean|void} Return false to prevent the normal rolling process\n   */\n  static #onPostRollConfiguration(rolls, config, dialog, message) {\n    LogUtil.log(\"#onPostRollConfiguration\", [rolls, config, dialog, message]);\n  }\n\n  // /**\n  //  * Hook handler for dnd5e.preDisplayCardV2\n  //  * Fires before an item chat card is created\n  //  * @param {Item5e} item - The item being displayed\n  //  * @param {Object} options - Display options\n  //  * @returns {boolean|void} Return false to prevent chat card from being created\n  //  */\n  // static #onPreDisplayCardV2(item, options) {\n  //   // Implementation\n  // }\n}","import { HOOKS_CORE } from \"../constants/Hooks.mjs\"; \nimport { LogUtil } from \"./LogUtil.mjs\"; \nimport { SettingsUtil } from \"./SettingsUtil.mjs\"; \nimport { getSettings } from \"../constants/Settings.mjs\";\nimport { MODULE_ID } from \"../constants/General.mjs\";\nimport { SocketUtil } from \"./SocketUtil.mjs\";\nimport { RollUtil } from \"./RollUtil.mjs\";\n\n/**\n * Main class handling core module initialization and setup\n * Manages module lifecycle, hooks, and core functionality\n */\nexport class Main {\n\n  /**\n   * Initialize the module and set up core hooks\n   * @static\n   */\n  static init(){\n    Hooks.once(HOOKS_CORE.INIT, () => { \n      const SETTINGS = getSettings();\n      LogUtil.log(\"Initiating module...\", [], true);\n\n      SettingsUtil.registerSettings();\n      RollUtil.init();\n      \n      // Initialize socketlib\n      if(game.modules.get(\"socketlib\")?.active) {\n        SocketUtil.initialize();\n      } else {\n        ui.notifications.error(game.i18n.localize(\"CRLNGN_ROLLS.notifications.socketlibMissing\"), {permanent: true});\n      }\n    });\n\n    Hooks.once(HOOKS_CORE.READY, () => {\n      LogUtil.log(\"Core Ready\", []);\n      const SETTINGS = getSettings();\n      \n      var isDebugOn = SettingsUtil.get(SETTINGS.debugMode.tag);\n      if(isDebugOn){CONFIG.debug.hooks = true};\n    });\n  }\n}\n","import \"./styles/vars.css\";\nimport \"./styles/main.css\";\n\nimport { Main } from \"./components/Main.mjs\";\n\nMain.init();\n"],"names":["HOOKS_CORE","HOOKS_SOCKET","HOOKS_DND5E","MODULE_ID","DEBUG_TAG","_LogUtil","ref","data","bypassSettings","debugSetting","strRef","options","_a","__publicField","LogUtil","SETTING_INPUT","SETTING_SCOPE","getSettings","SettingsUtil","SETTINGS","entry","setting","settingObj","value","settingName","moduleName","selectedSetting","newValue","_SocketUtil","r","result","callbackFunc","e","name","func","callback","handler","parameters","userId","resp","SocketUtil","GeneralUtil","user","gm","us","targetTokens","itemUuid","actorId","module","mode","item","removeTemplateSettingOn","templates","mt","i","owner","actor","pl","parent","selector","selectedTargets","target","_b","targets","token","img","system","uuid","statuses","ac","itemId","actionName","it","varName","varValue","bodyStyle","body","cssText","ruleStart","ruleEnd","declarations","decl","varsMap","parts","newRuleContent","newCss","_RollUtil_static","onPreRollV2_fn","onPreRollAbilityCheck_fn","onPreRollSavingThrow_fn","onPreBeginConcentrating_fn","onPreEndConcentration_fn","onPreRollConcentrationV2_fn","onPreRollDeathSaveV2_fn","onPreRollSkillV2_fn","onPreRollToolCheckV2_fn","onPreRollHitDieV2_fn","onPreRollClassHitPoints_fn","onPreRollNPCHitPoints_fn","onPreRollInitiativeDialog_fn","onPreRollInitiative_fn","onPreRollAttackV2_fn","onPreRollDamageV2_fn","onPreRollFormulaV2_fn","onPreRollRechargeV2_fn","onPostRollConfiguration_fn","_RollUtil","__privateMethod","u","config","dialog","message","playerOwner","effect","classItem","formula","rolls","__privateAdd","RollUtil","Main","isDebugOn"],"mappings":"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"}