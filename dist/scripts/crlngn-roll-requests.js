var ve=Object.defineProperty;var ie=p=>{throw TypeError(p)};var Ae=(p,e,t)=>e in p?ve(p,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):p[e]=t;var C=(p,e,t)=>Ae(p,typeof e!="symbol"?e+"":e,t),re=(p,e,t)=>e.has(p)||ie("Cannot "+t);var ee=(p,e,t)=>(re(p,e,"read from private field"),t?t.call(p):e.get(p)),$=(p,e,t)=>e.has(p)?ie("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(p):e.set(p,t);var F=(p,e,t)=>(re(p,e,"access private method"),t);const H={INIT:"init",READY:"ready",RENDER_CHAT_MESSAGE:"renderChatMessage",RENDER_ROLL_RESOLVER:"renderRollResolver",USER_CONNECTED:"userConnected",RENDER_ROLL_CONFIGURATION_DIALOG:"renderRollConfigurationDialog"},ke={READY:"socketlib.ready"},ce={PRE_ROLL_V2:"dnd5e.preRollV2",POST_ROLL_CONFIG:"dnd5e.postRollConfiguration"},v="crlngn-roll-requests",V=["%cRoll That For Me","color:rgb(47, 151, 161); font-weight: bold;","|"],I={ATTACK:{name:"attack",requestType:"attack"},DAMAGE:{name:"damage",requestType:"damage"},SAVE:{name:"save",requestType:"damage"},SAVING_THROW:{name:"savingthrow",requestType:"check"},ABILITY_CHECK:{name:"abilitycheck",requestType:"check"},CONCENTRATION:{name:"concentration",requestType:"check"},DEATH_SAVE:{name:"deathsave",requestType:"save"},SKILL:{name:"skill",requestType:"check"},TOOL:{name:"tool",requestType:"check"},HIT_DIE:{name:"hitdie",requestType:"formula"},INITIATIVE:{name:"initiative",requestType:"check"},FORMULA:{name:"formula",requestType:"formula"},RECHARGE:{name:"recharge",requestType:"formula"},D20_TEST:{name:"d20Test",requestType:"formula"},SHORT_REST:{name:"shortRest",requestType:"formula"},LONG_REST:{name:"longRest",requestType:"formula"}},le={ACTIVITY:"activity",CHECK:"check"},R={SKILL:{name:"skill",label:"Skill Check",subList:"skills",actorPath:"system.skills"},TOOL:{name:"tool",label:"Tool Check",subList:"tools",actorPath:"system.tools"},ABILITY_CHECK:{name:"abilityCheck",label:"Ability Check",subList:"abilities",actorPath:"system.abilities"},SAVING_THROW:{name:"savingThrow",label:"Saving Throw",subList:"abilities",actorPath:"system.savingThrows"},DEATH_SAVE:{name:"deathSave",label:"Death Save",subList:null,actorPath:""},CONCENTRATION:{name:"concentration",label:"Concentration Check",subList:null,actorPath:""},INITIATIVE:{name:"initiativeDialog",label:"Roll Initiative",subList:null,actorPath:""}},Y=class Y{static log(e="",t=[],s=!1){try{const a=game.settings.get(v,"debugMode")||Y.debugOn;if(!(s||a))return;console.log(...V,e,...t)}catch{console.log(...V,e,...t)}}static warn(e="",t=[]){console.warn(...V,e,...t)}static error(e,t={ui:!1,console:!0,permanent:!1}){var s;t.ui&&((s=ui.notifications)==null||s.error(e,{localize:!0,permanent:t.permanent})),t.console&&console.error(...V,e)}};C(Y,"debugOn",!1);let r=Y;const ue={checkbox:"checkbox"},ge={client:"client",world:"world"},x=()=>({debugMode:{tag:"debug-mode",label:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.hint"),propType:Boolean,inputType:ue.checkbox,default:!0,scope:ge.client,config:!0},rollRequestsEnabled:{tag:"roll-requests-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.hint"),propType:Boolean,inputType:ue.checkbox,default:!0,scope:ge.world,config:!0}});class N{static getTargets(e){let t=game.users.find(a=>a.isGM===!0),s=e.targets||t.targets;return new Set([...s])}static getActorFromItem(e){const t=e.split(".")[1];return game.actors.get(t)}static isModuleOn(e){var s;const t=(s=game.modules)==null?void 0:s.get(e);return!!(t!=null&&t.active)}static isPrivateRoll(e){return e===CONST.DICE_ROLL_MODES.BLIND||e===CONST.DICE_ROLL_MODES.PRIVATE}static removeTemplateForItem(e){r.log("removeTemplateForItem - A",[e]);const t=L.get("remove-template");if(r.log("removeTemplateForItem - B",[t]),!t)return;const s=canvas.templates.objects.children.filter(a=>a.document.flags.dnd5e.item===(e==null?void 0:e.uuid));canvas.scene.deleteEmbeddedDocuments("MeasuredTemplate",s.map(a=>a.id))}static getPlayerOwner(e){let t;if(!e)return null;const s=e?game.actors.get(e):null;return t=game.users.players.find(o=>o.active===!0&&o.character.id===e),t||game.users.players.forEach(o=>{o.active&&s.testUserPermission(o,foundry.CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER,{exact:!0})&&(t=o)}),t}static html(e,t){return e.querySelector(t)}static getActivityType(e){var t;return((t=Object.values(I).find(s=>s.name.toLowerCase()===e.toLowerCase()))==null?void 0:t.activityType)||""}static getPartsFromActivityUuid(e){const t=e.split(".");return{actorId:t[1],itemId:t[3],activityId:t[5]}}static getElement(e){return e&&typeof e.jquery<"u"?e[0]:e}static getSceneTargets(){var t;let e=((t=canvas.tokens)==null?void 0:t.controlled.filter(s=>s.actor))??[];return!e.length&&game.user.character&&(e=game.user.character.getActiveTokens()),e}static getAdvantageMode(e){return e.advantage?CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE:e.disadvantage?CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE:CONFIG.Dice.D20Roll.ADV_MODE.NORMAL}}C(N,"getClientTargets",()=>{if(!game.user)return[];const e=Array.from(game.user.targets);return r.log("Selected Targets",[game.user.id,e,e.filter(t=>t.actor)]),e}),C(N,"getTargetDescriptors",()=>{var t,s;const e=new Map;for(const a of game.user.targets){const{name:o}=a,{img:n,system:i,uuid:l,statuses:c}=a.actor??{};if(l){const u=c.has("coverTotal")?null:(s=(t=i.attributes)==null?void 0:t.ac)==null?void 0:s.value;e.set(l,{name:o,img:n,uuid:l,ac:u??null})}}return Array.from(e.values())}),C(N,"findItemFromActor",(e,t,s)=>{const a=game.actors.get(e);if(r.log("findItemFromActor",[t,s]),!a)return null;let o=t?a.items.find(n=>n.id===t):null;return o||(o=s?a.items.find(n=>n.name.toLowerCase()===s.toLowerCase()):null,o||(o=a.items.find(n=>n.name.toLowerCase()===(s+" (Legacy)").toLowerCase()))),o}),C(N,"addCSSVars",(e,t)=>{let s=document.querySelector("#crlngn-chat-vars");if(!s){const m=document.querySelector("body");s=document.createElement("style"),s.id="crlngn-chat-vars",s.textContent=`body.crlngn-chat {
}
`,m.prepend(s)}let a=s.textContent,o=a.indexOf("body.crlngn-chat {"),n=a.indexOf("}",o);o===-1&&(a=`body.crlngn-chat {
}
`,o=0,n=a.indexOf("}"));const l=a.substring(o+18,n).split(";").map(m=>m.trim()).filter(m=>m!==""),c={};l.forEach(m=>{const y=m.split(":");if(y.length>=2){const f=y[0].trim(),A=y.slice(1).join(":").trim();f&&(c[f]=A)}}),e.includes("i18n")&&typeof t=="string"&&!t.startsWith('"')&&!t.startsWith("'")&&!t.match(/^url\(|^rgba?\(|^hsla?\(/)&&(t=`"${t}"`),c[e]=t;const u=Object.entries(c).map(([m,y])=>`  ${m}: ${y};`).join(`
`),d=a.substring(0,o)+`body.crlngn-chat {
`+u+`
}`+a.substring(n+1);s.textContent=d});const T=class T{static serializeForTransport(e,t=!1){return e==null||(t&&e.rolls&&Array.isArray(e.rolls)&&(e.rolls=e.rolls.map(s=>s instanceof Roll?s.toJSON():s)),r.log("ROLLS DATA",[e,e.subject])),e}static deserializeFromTransport(e,t=!1){let s={...e};if(!e)return s;if(t&&e.rolls&&e.rolls.length>0){const a=s.rolls.map(o=>{let n=o;return typeof o=="string"?n=Roll.fromJSON(o):n=Roll.fromJSON(JSON.stringify(o)),r.log("ROLL",[n,o]),n});return s.rolls=[...a],s}return s}};C(T,"socket"),C(T,"_activeExecutions",new Map),C(T,"initialize",e=>{Hooks.once(ke.READY,()=>{if(r.log("Attempting to register module..."),typeof socketlib>"u"){r.error("SocketUtil Error: socketlib is not loaded. Ensure it is installed and enabled."),ui.notifications.error(game.i18n.localize("CRLNGN_ROLLS.notifications.socketlibMissing"),{permanent:!0});return}try{T.socket=socketlib.registerModule(v),e&&e(),r.log("SocketUtil | Module registered",[T.socket])}catch(t){r.log("Problem registering module",[t])}})}),C(T,"registerCall",(e,t)=>{T.socket?(T.socket.register(e,t),r.log("SocketUtil - Registered callback",[T.socket,e])):r.log("SocketUtil - Failed to register callback (socket not initialized)",[T.socket,e])}),C(T,"sendMessage",(e,t)=>{r.log("SocketUtil - sendMessage",[e]),t&&t()}),C(T,"execForGMs",async(e,...t)=>{if(!T.socket){r.log("SocketUtil - Socket not initialized. Cannot execute as GM.");return}return await T.socket.executeForAllGMs(e,...t)}),C(T,"execForAll",async(e,...t)=>{if(!T.socket){r.log("SocketUtil - Socket not initialized. Cannot execute for all clients.");return}return await T.socket.executeForEveryone(e,...t)}),C(T,"execForUser",async(e,t,...s)=>{if(!T.socket){r.log("SocketUtil - Socket not initialized. Cannot execute as user.");return}if(t===game.user.id)return r.log("SocketUtil - Preventing recursive call",[t]),null;const a=`${e}-${t}`;if(T._activeExecutions.has(a))return r.log("SocketUtil - Preventing recursive call",[a]),null;T._activeExecutions.set(a,!0);try{const o=await T.socket.executeAsUser(e,t,...s);return r.log("SocketUtil - Executed as user.",[o]),o}catch(o){return r.log("SocketUtil - Error executing as user",[o]),null}finally{T._activeExecutions.delete(a)}});let O=T;var J,me;const S=class S{static init(){Hooks.on(H.RENDER_CHAT_MESSAGE,F(S,J,me))}static testDamage(e){const{activity:t,config:s,message:a,dialog:o}=e;t.rollDamage()}static rollModifiedAttack(e,t,s){r.log("rollModifiedAttack",[e,t,s,this]);const{activity:a}=S.getDataFromUuid(t.dataset.activityUuid);a.rollAttack({event:e,advantage:t.dataset.advantage==="true",disadvantage:t.dataset.disadvantage==="true",attackMode:t.dataset.attackMode,ammunition:t.dataset.ammunition,situational:t.dataset.situational},{},s)}static getDataFromUuid(e){var n,i,l;const t=e.split("."),s=game.actors.get(t[1]),a=s==null?void 0:s.items.get(t[3]),o=((i=(n=a==null?void 0:a.system)==null?void 0:n.activities)==null?void 0:i.get(t[5]))||((l=a==null?void 0:a.activities)==null?void 0:l.get(t[5]));return{actor:s,item:a,activity:o}}};J=new WeakSet,me=function(e,t,s){var i,l,c;const a=((i=e.flags)==null?void 0:i[v])||((c=(l=s.message)==null?void 0:l.flags)==null?void 0:c[v]);if(r.log("#onRenderChatMessage",[e,t,s,a]),!(a!=null&&a.modifiedActions))return;const o=a.activityUuid;if(!o)return;const{activity:n}=S.getDataFromUuid(o);n&&(r.log("#onRenderChatMessage Activating button listeners",[n,e,t]),n.activateChatListeners(e,t[0]))},$(S,J),C(S,"triggerActivity",async e=>{var q,M,w,G;const{activityUuid:t,diceTypes:s,config:a,dialog:o,message:n}=e;r.log("triggerActivity #1",[s,a,o,n,e]),E.playerDiceConfigs[game.user.id];const i=a.situational?Number(a.situational):0,l=t.split("."),c=game.actors.get(l[1]),u=c==null?void 0:c.items.get(l[3]),d=((M=(q=u==null?void 0:u.system)==null?void 0:q.activities)==null?void 0:M.get(l[5]))||((w=u==null?void 0:u.activities)==null?void 0:w.get(l[5])),m=((G=a.hookNames)==null?void 0:G[0])||d.type,y=O.deserializeFromTransport(a,!0);if(r.log("triggerActivity #2",[m,y,e]),!c||!u||!d)return;const f={...y,subject:d,parts:y.parts||[]},A={...o},k={...n,flavor:y.flavor};switch(i&&!f.parts.includes("@situational")&&f.parts.push("@situational"),m){case I.ATTACK.name:{S.useAttack({activity:d,config:f,message:k,dialog:A}),r.log("triggerActivity attack",[f,A,k]);break}case I.DAMAGE.name:{r.log("triggerActivity damage",[d,f,A,k]),S.useDamage({activity:d,config:f,message:k,dialog:A});break}case I.SAVE.name:{r.log("triggerActivity save",[f]),k.create=!0,d.use(f,A,k);break}}r.log("triggerActivity #3",[t,a,e])}),C(S,"useAttack",async e=>{const{activity:t,config:s,message:a,dialog:o}=e,n=await t._usageChatContext(a);t.metadata.usage.actions;const i=n.buttons.find(m=>m.dataset.action==="rollAttack");r.log("useAttack #1",[e]);const l={situational:s.situational,attackMode:s.attackMode,advantage:s.advantage,disadvantage:s.disadvantage,ammunition:s.ammunition};i.dataset={...i==null?void 0:i.dataset,...l,action:"rollAttack",activityUuid:t.uuid||""},t.metadata.usage.actions={...t.metadata.usage.actions,rollAttack:S.rollModifiedAttack};const c=foundry.utils.mergeObject({rollMode:a.rollMode||game.settings.get("core","rollMode"),data:{content:await renderTemplate(t.metadata.usage.chatCard,n),speaker:ChatMessage.getSpeaker({actor:t.actor}),flags:{core:{canPopout:!0},[v]:{modifiedActions:!0,activityType:t.type,activityUuid:t.uuid}}}},a),u=["d20"],d=E.areDiceConfigured(u,game.user.id);o.configure=!d,r.log("useAttack",[t,n,c,e]),await ChatMessage.create(c.data),t.rollAttack(l,o,{create:!0})}),C(S,"useDamage",async e=>{var n,i,l;const{activity:t,config:s,message:a,dialog:o}=e;if(r.log("useDamage #1",[e,s.attackMode]),s.rolls&&s.rolls.length>0){s.rolls[0];const c={event:s.event,situational:s.situational||"",attackMode:s.attackMode,subject:t};r.log("useDamage - Using roll from config",[c]);const d=(((n=t==null?void 0:t.damage)==null?void 0:n.parts)||((l=(i=t==null?void 0:t.rolls)==null?void 0:i[0])==null?void 0:l.parts)||[]).map(y=>"d"+y.denomination),m=E.areDiceConfigured(d,game.user.id);o.configure=!m,r.log("useDamage #2",[c,o]),S.rollDamage({config:c,attackMode:c.attackMode});return}r.log("useDamage - No rolls in config, using direct roll"),t.rollDamage()}),C(S,"rollDamage",async e=>{let{activity:t,attackMode:s,config:a,formulas:o,damageTypes:n,rollType:i,scaling:l}=e;o=(o==null?void 0:o.split("&"))??[],n=(n==null?void 0:n.split("&"))??[];const c={...a,attackMode:s,hookNames:["damage"],rolls:o.map((m,y)=>{var A;const f=((A=n[y])==null?void 0:A.split("|"))??[];return{parts:[m],options:{type:f[0],types:f}}})},u={create:!0,data:{flags:{dnd5e:{messageType:"roll",roll:{type:i},targets:N.getTargetDescriptors()}},flavor:game.i18n.localize(`DND5E.${i==="healing"?"Healing":"Damage"}Roll`),speaker:ChatMessage.implementation.getSpeaker()}},d=await CONFIG.Dice.DamageRoll.build(c,{},u);d!=null&&d.length&&Hooks.callAll("dnd5e.rollDamageV2",d)});let B=S;var D,pe,ye,Ce,be,Te;const b=class b{static init(){r.log("RequestsUtil.init() - Registering hooks",[],!0),Hooks.on(ce.PRE_ROLL_V2,F(b,D,Te)),Hooks.on(H.RENDER_CHAT_MESSAGE,F(b,D,pe)),Hooks.on(H.RENDER_ROLL_RESOLVER,F(b,D,Ce)),Hooks.on(H.RENDER_ROLL_CONFIGURATION_DIALOG,F(b,D,be)),Hooks.on(ce.POST_ROLL_CONFIG,F(b,D,ye))}static registerSocketCalls(){Object.values(b.SOCKET_CALLS).forEach(e=>{e.type===le.ACTIVITY?O.registerCall(e.action,B[e.action]):O.registerCall(e.action,b[e.action])})}static sendRollRequest(e,t={config:{},dialog:{},message:{}}){var o,n,i,l,c,u,d,m;const s=N.getPlayerOwner(e.id),a={actorId:e.id,...t};if(s){r.log("sendRollRequest - found user",[s,a]),t.config={...t.config,flags:{...t.config.flags,[v]:{rollRequest:!0,triggerOnRender:!0,type:t.type}}};const y={...a};y.config.tool=((o=a.dataset)==null?void 0:o.type)===R.TOOL.name?(n=a.dataset)==null?void 0:n.abbreviation:null,y.config.skill=((i=a.dataset)==null?void 0:i.type)===R.SKILL.name?(l=a.dataset)==null?void 0:l.abbreviation:null,y.config.ability=((c=a.dataset)==null?void 0:c.abbreviation)||((u=a.dataset)==null?void 0:u.ability)||null,y.config.abilityId=((d=a.dataset)==null?void 0:d.abbreviation)||((m=a.dataset)==null?void 0:m.ability)||null,b.triggerRollRequest(y)}else r.log("sendRollRequest - no user",[a])}static triggerRollRequest(e){var m,y;let{actorId:t="",config:s={},dialog:a={},message:o={},rollOptions:n={}}=e;r.log("triggerRollRequest",[e]);const i=game.actors.get(t);if(!i){r.log("triggerRollRequest - actor not found",[t,i]);return}if(r.log("triggerRollRequest - options",[n,n.situational]),n){const f={advantage:n.advantage||!1,disadvantage:n.disadvantage||!1,situational:n.situational||"",target:n.target||null,type:n.rollType||""};s={...s,...f,rolls:[{parts:[],options:{target:f.target||null,rollType:f.rollType||""}}]};const A=b.getTypeFromHookNames(s.hookNames||[]);o.flags={...o.flags,[v]:{rollRequest:!0,rollOptions:n,type:A}};const k=Object.values(R).find(q=>q.name===A);o.flavor=k==null?void 0:k.label}b.areDiceConfigured(["d20"],game.user.id),r.log("triggerRollRequest - areDiceConfigured",[s,a,o]);const{itemId:l,activityId:c}=n.activityUuid?N.getPartsFromActivityUuid(n.activityUuid):{},u=l?i.items.get(l):null,d=c?(y=(m=u==null?void 0:u.system)==null?void 0:m.activities)==null?void 0:y.get(c):null;switch(!0){case s.hookNames[0]===R.SKILL.name:i.rollSkill(s,a,o),R.SKILL.name;break;case s.hookNames[0]===R.TOOL.name:i.rollToolCheck(s,a,o),R.TOOL.name;break;case s.hookNames[0]===R.ABILITY_CHECK.name:i.rollAbilityCheck(s,a,o),R.ABILITY_CHECK.name;break;case s.hookNames[0]===R.SAVING_THROW.name:i.rollSavingThrow(s,a,o),R.SAVING_THROW.name;break;case s.hookNames[0]===R.INITIATIVE.name:i.rollInitiativeDialog({situational:s.situational||"",advantage:s.advantage,disadvantage:s.disadvantage}),R.INITIATIVE.name;break;case s.hookNames[0]===R.DEATH_SAVE.name:i.rollDeathSave(s,a,o),R.DEATH_SAVE.name;break;case s.hookNames[0]===R.CONCENTRATION.name:i.rollConcentration(s,a,o),R.CONCENTRATION.name;break;case s.hookNames.includes(I.DAMAGE.name):r.log("triggerRollRequest - damage #1",[n.activityUuid]),d&&d.rollDamage(s,a,o),r.log("triggerRollRequest - damage #2",[u,d]);break;case s.hookNames.includes(I.ATTACK.name):r.log("triggerRollRequest - attack #1",[n.activityUuid]),d&&d.rollAttack(s,a,o),r.log("triggerRollRequest - attack #2",[u,d]);break}}static areDiceConfigured(e,t){const s=b.playerDiceConfigs[t];if(!s)return!1;const a=(e==null?void 0:e.map(n=>(s==null?void 0:s[n])!==""))||[],o=a.includes(!0)||!1;return r.log("areDiceConfigured",[a,e,s,o]),o}static allowsDC(e){return e[0].toLowerCase()===I.SKILL.name.toLowerCase()||e[0].toLowerCase()===I.TOOL.name.toLowerCase()||e[0].toLowerCase()===I.SAVING_THROW.name.toLowerCase()||e[0].toLowerCase()===I.ABILITY_CHECK.name.toLowerCase()}static getTypeFromHookNames(e){let t="";return Object.values(R).forEach(s=>{e.includes(s.name)&&(t=s.name)}),t}};D=new WeakSet,pe=function(e,t){const s=e.getFlag(v,"rollRequest"),a=e.getFlag(v,"type"),o=t[0]||t;r.log("#onRenderChatMessage",[e,t,a]),s&&o.querySelector(`button[data-type=${a}]`).addEventListener("click",i=>{const c=i.currentTarget.dataset,u=game.actors.get(c.actorId);u&&(r.log("onButtonClick",[i,u]),u.rollInitiativeDialog({event:i}))})},ye=function(e,t,s,a){var d,m,y,f,A,k,q,M,w,G,P,K,j;const o=((d=t.subject)==null?void 0:d.actor)||t.subject,n=o?N.getPlayerOwner(o.id):null,i=((m=t.flags)==null?void 0:m["ddb-game-log"])!==void 0&&((y=t.flags)==null?void 0:y["ddb-game-log"])!==null||!1;if(r.log("#onPostRollConfiguration #A",[i,e,t,s,a]),t.flags={...t.flags,[v]:{...(f=t.flags)==null?void 0:f[v],isDdbGl:i}},o.setFlag(v,"isDdbGl",i),!(n!=null&&n.active)||!b.requestsEnabled||!game.user.isGM){t.event=null;return}const l=b.SOCKET_CALLS.triggerRollRequest.action;b.areDiceConfigured(["d20"],n.id),s.configure=!0;//!areDiceConfigured;
a.flags={...a.flags,...((A=e[0])==null?void 0:A.data.flags)||{}};const c=t.subject instanceof dnd5e.dataModels.activity.BaseActivityData,u={actorId:o.id,config:t,dialog:s,message:a,rollOptions:{advantage:((k=e[0])==null?void 0:k.hasAdvantage)||!1,disadvantage:((q=e[0])==null?void 0:q.hasDisadvantage)||!1,situational:((w=(M=e[0])==null?void 0:M.data)==null?void 0:w.situational)||"",target:((P=(G=e[0])==null?void 0:G.options)==null?void 0:P.target)||null,rollType:((j=(K=e[0])==null?void 0:K.options)==null?void 0:j.rollType)||"",actorId:o.id,activityUuid:c?t.subject.uuid:null}};return O.execForUser(l,n.id,u),r.log("#onPostRollConfiguration #B !!!",[l,n.id,u]),!1},Ce=function(e,t){var a,o,n,i,l;const s=e.roll;if(r.log("#onRenderRollResolver",[(o=(a=s==null?void 0:s.data)==null?void 0:a.flags)==null?void 0:o[v],e,t]),(l=(i=(n=s==null?void 0:s.data)==null?void 0:n.flags)==null?void 0:i[v])!=null&&l.isDdbGl)return t.querySelector("button[type='submit']").click(),!1},be=async function(e,t){var y,f,A,k,q,M,w,G,P,K,j,se,ae;const s=((f=(y=e.config)==null?void 0:y.subject)==null?void 0:f.actor)||((A=e.config)==null?void 0:A.subject),a=s?N.getPlayerOwner(s.id):null;if(!(a!=null&&a.active)||!b.requestsEnabled||!game.user.isGM)return;r.log("#onRenderRollConfigurationDialog #1",[e]);const o=N.getElement((q=(k=e.config)==null?void 0:k.event)==null?void 0:q.target),n=(M=o==null?void 0:o.closest(".card-buttons"))==null?void 0:M.querySelector("button[data-action]");await b.handleRollDialogInputs(n,e,t);const i=`data-${v}-${game.user.id}-custom-event`;let l=t.querySelector('input[name="dc"]');const c=n?Number((w=n==null?void 0:n.dataset)==null?void 0:w.dc):((G=e.config)==null?void 0:G.dc)||void 0;l&&(l.value=c);const u=(j=(K=(P=e.message)==null?void 0:P.flags)==null?void 0:K[v])==null?void 0:j.rollOptions;if(!u||t.hasAttribute(i))return;const d=Number((se=n==null?void 0:n.dataset)==null?void 0:se.situational)||(u==null?void 0:u.situational)||"",m=t.querySelector('input[name="roll.0.situational"]');if(m&&(t.setAttribute(i,"true"),m.value=d||"",m.dispatchEvent(new Event("change",{bubbles:!0,cancelable:!1}))),t.setAttribute(i,"true"),!game.user.isGM){const Re=t.querySelector("button[autofocus]"),oe=e.config.subject;let Z=[];const _=oe?(ae=oe.damage)==null?void 0:ae.parts:null;Z=(_==null?void 0:_.map(he=>"d"+he.denomination))||["d20"];const ne=b.areDiceConfigured(Z,game.user.id);r.log("#onRenderRollConfigurationDialog ##diceTypes",[Z,ne]),ne&&setTimeout(()=>Re.click(),2e3)}},Te=function(e,t,s){r.log("#onPreRollV2",[e.hookNames,e,t,s])},$(b,D),C(b,"requestsEnabled",!1),C(b,"SOCKET_CALLS",{triggerRollRequest:{action:"triggerRollRequest",type:le.CHECK}}),C(b,"diceConfig",{}),C(b,"playerDiceConfigs",{}),C(b,"createRequestMessage",async(e,t,s=!1)=>{var c;r.log("createRequestMessage",[e,t,s]);const a=Object.values(R).find(u=>u.name===t.type);if(!a)return;const o={type:t.type,ability:t.config.ability,skill:t.config.skill,tool:t.config.tool,dc:t.config.target||"",actorId:e.id,action:t.action||"roll",visibility:(c=game.users.find(u=>e===u.character))==null?void 0:c.id,target:e.uuid},n=[],i={user:game.user.id,content:await renderTemplate("systems/dnd5e/templates/chat/request-card.hbs",{buttons:n}),flavor:"",speaker:ChatMessage.implementation.getSpeaker({alias:"Roll That For Me"}),content:`<button data-actor-id='${o.actorId}' data-action="roll" data-type="${o.type}">${a==null?void 0:a.label}</button>`,flags:{[v]:{rollRequest:!0,triggerOnRender:s,type:o.type}}},l=await ChatMessage.implementation.create(i);s&&e.id,r.log("createRequestMessage",[l])}),C(b,"handleRollDialogInputs",async(e,t,s)=>{var i,l;if(s.querySelector(".formulas.dc"))return;r.log("handleRollDialogInputs",[t,s]);const o=await renderTemplate(`modules/${v}/templates/roll-dc-field.hbs`,{label:game.i18n.localize("CRLNGN_ROLLS.ui.forms.dcFieldLabel"),dc:t.config.dc||""});if(b.allowsDC(t.config.hookNames)){const c=s.querySelector(".window-content .rolls .formulas");c==null||c.insertAdjacentHTML("beforebegin",o)}const n=s.querySelector('input[name="dc"]');game.user.isGM||((i=s.querySelector(".formulas.dc"))==null||i.classList.add("hidden"),n==null||n.setAttribute("hidden",!0)),r.log("handleRollDialogInputs",[s,e,t]),e&&n&&(n.value=(l=e==null?void 0:e.dataset)==null?void 0:l.dc),n&&(t.config.dc=Number(n.value)),n==null||n.addEventListener("change",()=>{t.config.dc=Number(n.value)||""})});let E=b;class L{static registerSettings(){const e=x();Object.entries(e).forEach(async s=>{const a=s[1];r.log("Registering... ",[s]);const o={name:a.label,hint:a.hint,default:a.default,type:a.propType,scope:a.scope,config:a.config,requiresReload:a.requiresReload||!1,onChange:n=>L.apply(a.tag,n)};a.choices&&(o.choices=a.choices),await game.settings.register(v,a.tag,o),L.get(a.tag)===void 0&&L.set(a.tag,a.default),r.log("registerSettings",[a.tag,L.get(a.tag)])})}static get(e,t=v){if(!e)return null;let s=!1;if(t===v)s=game.settings.get(t,e);else{let o=game.settings.storage.get("client")[`${t}.${e}`];o===void 0&&(o=game.settings.storage.get("world").getSetting(`${t}.${e}`),s=o==null?void 0:o.value),r.log("GET Setting",[o,s])}return s}static set(e,t,s=v){if(!e)return!1;let a=game.settings.storage.get("client")[`${s}.${e}`];a||(a=game.settings.storage.get("world").getSetting(`${s}.${e}`)),r.log("Setting",[e,a]);try{game.settings.set(s,e,t)}catch{r.log("Unable to change setting",[e,a])}return!0}static apply(e,t){const s=x();switch(e){case s.rollRequestsEnabled.tag:L.applyRollRequestsSetting(t);break}}static applyRollRequestsSetting(e){const t=x(),s=e!==void 0?e:L.get(t.rollRequestsEnabled.tag);E.requestsEnabled=s;const a=document.querySelector("#crlngn-request-toggle");if(!a)return;s===!1?a.classList.remove("active"):a.classList.add("active");const o=game.i18n.localize(a.classList.contains("active")?"CRLNGN_ROLLS.ui.buttons.rollRequestsToggleOn":"CRLNGN_ROLLS.ui.buttons.rollRequestsToggleOff");a.dataset.tooltip=o,game.tooltip&&game.tooltip.activate(a,{text:o}),r.log("Roll Requests Toggle",[s,a])}}var de,fe;const{MODIFIER_CODES:z,MODIFIER_KEYS:Oe}=((fe=(de=foundry.helpers)==null?void 0:de.interaction)==null?void 0:fe.KeyboardManager)??KeyboardManager;z.Alt,z.Control.filter(p=>p.startsWith("Control")),z.Control.filter(p=>!p.startsWith("Control")),z.Shift;const U={};function Ee(p,{indexOnly:e=!1,fullItem:t=!1}={}){const s=Se(p),{collection:a,documentId:o}=foundry.utils.parseUuid(s),n=a==null?void 0:a.metadata.id;if(t&&!e)return a==null?void 0:a.getDocument(o);const i=U[n],l=i instanceof Promise;if(e){const d=a==null?void 0:a.index.get(o);return l?d:(i==null?void 0:i[o])??d}if(l)return i.then(()=>U[n][o]);if(i)return i[o];if(!a)return;const c=Le(),u=a.getIndex({fields:c}).then(d=>{const m=d.reduce((y,f)=>(y[f._id]=f,y),{});return U[n]=m,m[o]});return U[n]=u,u}function Se(p){if(p.startsWith("Compendium."))return p;let e=CONFIG.DND5E.sourcePacks.ITEMS,[t,s,a]=p.split(".");return t&&s&&(e=`${t}.${s}`),a||(a=p),`Compendium.${e}.Item.${a}`}function Le(){const p=["system.type.value"];for(const e of Object.values(CONFIG.DND5E.traits))e.subtypes&&p.push(`system.${e.subtypes.keyPath}`);return p}var Q,X;const g=class g{static init(){g.preloadHandlebarsTemplates()}static getPlayerActors(){const e=game.actors.filter((t,s)=>t.type==="character");return r.log("RollRequestsMenu.getPlayerActors",[e]),g.playerActors=e,e}static preloadHandlebarsTemplates(){const e=["modules/crlngn-roll-requests/templates/requests-menus.hbs"];return loadTemplates(e)}static injectRollRequestsMenu(){const e=x();document.querySelector("#chat-controls").insertAdjacentHTML("afterbegin",'<label class="chat-control-icon active" id="crlngn-request-toggle" data-tooltip-direction="RIGHT"><i class="fas fa-bolt"></i></label>');const s=document.querySelector("#crlngn-request-toggle"),a=L.get(e.rollRequestsEnabled.tag);return L.applyRollRequestsSetting(a),s.addEventListener("click",o=>{o.target.classList.toggle("active");const n=o.target.classList.contains("active");L.set(e.rollRequestsEnabled.tag,n)}),s.addEventListener("mouseenter",g.showPCActorsMenu),s.addEventListener("mouseleave",g.hidePCActorsMenu),r.log("TEST",[game,CONFIG.DND5E]),s}static async showPCActorsMenu(e){const t=g.getPlayerActors(),s=document.querySelector("#crlngn-pc-actors-menu");s&&s.remove(),r.log("showPCActorsMenu",[R]);const a=Object.values(R).map(f=>({id:f.name,name:f.label,selected:!1,rollable:f.subList===null})),o=await renderTemplate("modules/crlngn-roll-requests/templates/requests-menus.hbs",{actors:t.map(f=>({id:f.id,name:f.name})),requestTypes:a});document.body.insertAdjacentHTML("beforeend",`<div id="crlngn-pc-actors-menu">${o}</div>`);const n=document.querySelector("#crlngn-pc-actors-menu");n.addEventListener("mouseleave",g.hidePCActorsMenu),n.style.zIndex=100;const i=e.target.getBoundingClientRect(),l=i.left,c=i.top;i.bottom,i.height;const u=200;n.style.left=`${l-u-5}px`,n.style.top=`${c}px`,setTimeout(()=>{const f=n.getBoundingClientRect(),A=window.innerHeight;f.bottom>A?(n.style.top="auto",n.classList.add("grow-up")):n.classList.remove("grow-up")},0);const d=n.querySelector("#crlngn-pc-actors-all");d.addEventListener("change",g.onAllActorsToggle),g.selectAllCheckbox=d,n.querySelectorAll('input[id^="crlngn-pc-"]').forEach(f=>{f.addEventListener("change",g.onActorToggle)}),n.querySelector("li.pc-actor").addEventListener("dblclick",g.onActorDblClick)}static hidePCActorsMenu(){const e=document.querySelector("#crlngn-pc-actors-menu");e&&setTimeout(()=>{e.matches(":hover")||(e.remove(),g.selectedActors=[],g.selectedRequestType=null)},250)}static showRequestTypes(){const e=document.querySelector("#crlngn-pc-actors-menu ul.request-types");e?(e.classList.add("visible"),e.querySelectorAll("li").forEach(s=>{s._hasClickListener||(s.addEventListener("click",ee(g,Q)),s._hasClickListener=!0)})):r.log("Request types menu not found",[])}static hideRequestTypes(){const e=document.querySelector("#crlngn-pc-actors-menu ul.request-types");e&&e.classList.remove("visible"),g.hideRollTypes()}static showOptionsForRequestType(e){var n;const t=g.selectedActors,s=Object.values(R).find(i=>i.name===e);if(r.log("showOptionsForRequestType",[t,s,e]),!s)return;if(s.subList===null){t.forEach(i=>{E.sendRollRequest(i,{config:{hookNames:[e]}}),r.log("showOptionsForRequestType - Sending roll request",[i,e])});return}const a=document.querySelector("#crlngn-pc-actors-menu ul.roll-types");if(!a)return;a.innerHTML="";const o=CONFIG.DND5E[s.subList];if(r.log("System list for request type",[e,o,CONFIG.DND5E]),!!o){for(const[i,l]of Object.entries(o)){const c=document.createElement("li");if(c.dataset.abbreviation=i,c.dataset.fullKey=l.fullKey||i,c.dataset.label=l.label||"",c.dataset.type=e,s.subList===R.TOOL.subList){const u=CONFIG.DND5E.enrichmentLookup.tools[i],d=u?(n=Ee(u.id,{indexOnly:!0}))==null?void 0:n.name:null;c.dataset.label=d}c.textContent=c.dataset.label,c.addEventListener("click",ee(g,X)),a.appendChild(c)}a.classList.add("visible")}}static hideRollTypes(){const e=document.querySelector("#crlngn-pc-actors-menu ul.roll-types");e&&(e.classList.remove("visible"),e.querySelectorAll(".selected").forEach(t=>t.classList.remove("selected")),g.selectedOptionType=null)}static onActorToggle(e){const t=document.querySelectorAll('input[id^="crlngn-pc-"]'),s=Array.from(t).every(o=>o.checked);g.selectAllCheckbox.checked=s;const a=Array.from(t).some(o=>o.checked);if(g.selectAllCheckbox.indeterminate=a&&!s,a){const n=Array.from(t).filter(i=>i.checked).map(i=>i.dataset.id);g.selectedActors=g.playerActors.filter(i=>n.includes(i.id)),g.showRequestTypes()}else g.hideRequestTypes(),g.selectedActors=[];r.log("actors",[g.selectedActors])}static onActorDblClick(e){const t=e.target.dataset.id,s=g.playerActors.find(a=>a.id===t);s&&s.sheet.render(!0)}static onAllActorsToggle(e){const t=e.target.checked;document.querySelectorAll('input[id^="crlngn-pc-"]').forEach(a=>{a.checked=t}),t?g.showRequestTypes():g.hideRequestTypes()}};Q=new WeakMap,X=new WeakMap,C(g,"playerActors",[]),C(g,"selectedActors",[]),C(g,"selectedRequestType",null),C(g,"selectedOptionType",null),C(g,"selectAllCheckbox",null),$(g,Q,e=>{const t=document.querySelector("#crlngn-pc-actors-menu ul.request-types");t&&(g.hideRollTypes(),t.querySelectorAll(".selected").forEach(s=>s.classList.remove("selected")),e.target.classList.add("selected"),g.selectedRequestType=e.target.dataset.id,g.showOptionsForRequestType(g.selectedRequestType),r.log("showRequestTypes - item clicked",[e.target.dataset,g.selectedRequestType]))}),$(g,X,e=>{const t=document.querySelector("#crlngn-pc-actors-menu ul.roll-types");if(!t)return;t.querySelectorAll(".selected").forEach(a=>a.classList.remove("selected")),e.target.classList.add("selected");const s=e.target.dataset.type;g.selectedOptionType={key:e.target.dataset.abbreviation,fullKey:e.target.dataset.fullKey,label:e.target.dataset.label},g.selectedActors.forEach(a=>{E.sendRollRequest(a,{config:{hookNames:[s]},dataset:e.target.dataset}),r.log("showOptionsForRequestType - Sending roll request",[a,s])}),r.log("Selected option",[g.selectedOptionType])});let W=g;const h=class h{static init(){O.initialize(h.registerSocketCalls),Hooks.once(H.INIT,()=>{x(),r.log("Initiating module...",[],!0),L.registerSettings(),E.init(),W.init(),h.setDiceConfig()}),Hooks.once(H.READY,()=>{r.log("Core Ready",[]);const e=x();var t=L.get(e.debugMode.tag);t&&(CONFIG.debug.hooks=!0),game.user.isGM&&(W.injectRollRequestsMenu(),Hooks.on(H.USER_CONNECTED,h.onUserConnected),game.users.forEach(s=>{h.onUserConnected(s)}))}),B.init()}static onUserConnected(e){e.active&&e.id!==game.user.id&&(r.log("onUserConnected",[e]),O.execForUser(h.SOCKET_CALLS.getDiceConfig,e.id))}static setDiceConfig(){if(!game.user)return;const e=game.settings.storage.get("client");return h.diceConfig=e["core.diceConfiguration"]||"",r.log("getDiceConfig",[h.diceConfig]),h.diceConfig}static getDiceConfig(){if(game.user)if(h.setDiceConfig(),game.user.isGM){E.playerDiceConfigs[game.user.id]=h.diceConfig,O.execForGMs(h.SOCKET_CALLS.receiveDiceConfig,game.user.id,h.diceConfig);return}else E.playerDiceConfigs[game.user.id]=h.diceConfig?JSON.parse(h.diceConfig):{}}static receiveDiceConfig(e,t){var s;((s=game.user)!=null&&s.isGM||e===game.user.id)&&(E.playerDiceConfigs||(E.playerDiceConfigs={}),E.playerDiceConfigs[e]=t?JSON.parse(t):{},r.log(`Received dice configuration from user ${e}`,[E.playerDiceConfigs]))}static registerSocketCalls(){O.registerCall(h.SOCKET_CALLS.getDiceConfig,h.getDiceConfig),O.registerCall(h.SOCKET_CALLS.receiveDiceConfig,h.receiveDiceConfig),E.registerSocketCalls()}};C(h,"diceConfig",{}),C(h,"SOCKET_CALLS",{receiveDiceConfig:"receiveDiceConfig",getDiceConfig:"getDiceConfig"});let te=h;te.init();
//# sourceMappingURL=crlngn-roll-requests.js.map
