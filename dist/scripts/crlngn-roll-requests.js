var Ee=Object.defineProperty;var fe=u=>{throw TypeError(u)};var Ie=(u,e,t)=>e in u?Ee(u,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):u[e]=t;var k=(u,e,t)=>Ie(u,typeof e!="symbol"?e+"":e,t),he=(u,e,t)=>e.has(u)||fe("Cannot "+t);var Y=(u,e,t)=>(he(u,e,"read from private field"),t?t.call(u):e.get(u)),me=(u,e,t)=>e.has(u)?fe("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(u):e.set(u,t),Re=(u,e,t,s)=>(he(u,e,"write to private field"),s?s.call(u,t):e.set(u,t),t);const K={checkbox:"checkbox"},J={client:"client",world:"world"},q=()=>({debugMode:{tag:"debug-mode",label:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.hint"),propType:Boolean,inputType:K.checkbox,default:!0,scope:J.client,config:!0},rollRequestsEnabled:{tag:"roll-requests-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.hint"),propType:Boolean,inputType:K.checkbox,default:!0,scope:J.world,config:!0},skipDialogs:{tag:"skip-dialogs",label:game.i18n.localize("CRLNGN_ROLLS.settings.skipDialogs.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.skipDialogs.hint"),propType:Boolean,inputType:K.checkbox,default:!1,scope:J.world,config:!0},useGMTargetTokens:{tag:"use-gm-target-tokens",label:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.hint"),propType:Boolean,inputType:K.checkbox,default:!1,scope:J.world,config:!0},rollInterceptionEnabled:{tag:"roll-interception-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollInterceptionEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollInterceptionEnabled.hint"),propType:Boolean,inputType:K.checkbox,default:!0,scope:J.world,config:!0},showOfflineNotifications:{tag:"show-offline-notifications",label:game.i18n.localize("CRLNGN_ROLLS.settings.showOfflineNotifications.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.showOfflineNotifications.hint"),propType:Boolean,inputType:K.checkbox,default:!0,scope:J.world,config:!0}}),G="crlngn-roll-requests",oe=["%cFlash Rolls 5e","color:rgb(47, 151, 161); font-weight: bold;","|"],ce={receiveDiceConfig:"receiveDiceConfig",getDiceConfig:"getDiceConfig",handleRollRequest:"handleRollRequest"},r={ABILITY:"ability",ABILITY_CHECK:"abilitycheck",ATTACK:"attack",CONCENTRATION:"concentration",CUSTOM:"custom",DEATH_SAVE:"deathsave",FORMULA:"formula",DAMAGE:"damage",HEALING:"healing",HIT_DIE:"hitdie",INITIATIVE:"initiative",INITIATIVE_DIALOG:"initiativedialog",ITEM_SAVE:"itemsave",SAVE:"save",SAVING_THROW:"savingthrow",SKILL:"skill",TOOL:"tool"},Ae={ABILITY_CHECK:{name:r.ABILITY_CHECK,label:"Ability Check",subList:"abilities",actorPath:"system.abilities"},SAVING_THROW:{name:r.SAVING_THROW,label:"Saving Throw",subList:"abilities",actorPath:"system.abilities"},SKILL:{name:r.SKILL,label:"Skill Check",subList:"skills",actorPath:"system.skills"},TOOL:{name:r.TOOL,label:"Tool Check",subList:"tools",actorPath:"system.tools"},CONCENTRATION:{name:r.CONCENTRATION,label:"Concentration Check",subList:null,actorPath:""},INITIATIVE:{name:r.INITIATIVE_DIALOG,label:"Initiative Roll",subList:null,actorPath:""},DEATH_SAVE:{name:r.DEATH_SAVE,label:"Death Save",subList:null,actorPath:""},HIT_DIE:{name:r.HIT_DIE,label:"Hit Die",subList:null,actorPath:""},CUSTOM:{name:r.CUSTOM,label:"Custom Roll",subList:null,actorPath:""}},$={ID:G,ROLL_REQUEST_OPTIONS:Ae},Z={INIT:"init",READY:"ready",RENDER_SIDEBAR_TAB:"renderSidebarTab",USER_CONNECTED:"userConnected",PRE_CREATE_CHAT_MESSAGE:"preCreateChatMessage"},ke={READY:"socketlib.ready"},M={PRE_USE_ACTIVITY:"dnd5e.preUseActivity",PRE_ROLL_ABILITY_CHECK:"dnd5e.preRollAbilityCheckV2",PRE_ROLL_SAVING_THROW:"dnd5e.preRollSavingThrowV2",PRE_ROLL_DEATH_SAVE_V2:"dnd5e.preRollDeathSaveV2",PRE_ROLL_SKILL_V2:"dnd5e.preRollSkillV2",PRE_ROLL_TOOL_V2:"dnd5e.preRollToolV2",PRE_ROLL_HIT_DIE_V2:"dnd5e.preRollHitDieV2",PRE_ROLL_INITIATIVE_DIALOG_V2:"dnd5e.preRollInitiativeDialogV2",PRE_ROLL_INITIATIVE:"dnd5e.preRollInitiative",PRE_ROLL_ATTACK_V2:"dnd5e.preRollAttackV2",PRE_ROLL_DAMAGE_V2:"dnd5e.preRollDamageV2",POST_ROLL_CONFIG:"dnd5e.postRollConfiguration",RENDER_ROLL_CONFIGURATION_DIALOG:"renderRollConfigurationDialog",RENDER_SKILL_TOOL_ROLL_DIALOG:"renderSkillToolRollConfigurationDialog"},se=class se{static log(e="",t=[],s=!1){try{const i=game.settings.get(G,"debug-mode")||se.debugOn;if(!(s||i))return;console.log(...oe,e,...t)}catch{(s||se.debugOn)&&console.log(...oe,e,...t)}}static warn(e="",t=[]){console.warn(...oe,e,...t)}static error(e,t={ui:!1,console:!0,permanent:!1}){var s;t.ui&&((s=ui.notifications)==null||s.error(e,{localize:!0,permanent:t.permanent})),t.console&&console.error(...oe,e)}};k(se,"debugOn",!1);let a=se;const O=class O{static serializeForTransport(e,t=!1){return a.log("serializeForTransport",[e,t]),e==null||t&&e.rolls&&Array.isArray(e.rolls)&&(e.rolls=e.rolls.map(s=>s instanceof Roll?s.toJSON():s)),e}static deserializeFromTransport(e,t=!1){a.log("deserializeFromTransport",[e,t]);let s={...e};if(!e)return s;if(t&&e.rolls&&e.rolls.length>0){const i=s.rolls.map(o=>{let n=o;return typeof o=="string"?n=Roll.fromJSON(o):n=Roll.fromJSON(JSON.stringify(o)),n});return s.rolls=[...i],s}return s}};k(O,"socket"),k(O,"_activeExecutions",new Map),k(O,"initialize",e=>{a.log("initialize",[e]),Hooks.once(ke.READY,()=>{if(typeof socketlib>"u"){a.error("SocketUtil Error: socketlib is not loaded. Ensure it is installed and enabled."),ui.notifications.error(game.i18n.localize("CRLNGN_ROLLS.notifications.socketlibMissing"),{permanent:!0});return}try{O.socket=socketlib.registerModule(G),e&&e()}catch{}})}),k(O,"registerCall",(e,t)=>{a.log("registerCall",[e]),O.socket&&O.socket.register(e,t)}),k(O,"sendMessage",(e,t)=>{a.log("sendMessage",[e]),t&&t()}),k(O,"execForGMs",async(e,...t)=>{if(a.log("execForGMs",[e,...t]),!!O.socket)return await O.socket.executeForAllGMs(e,...t)}),k(O,"execForAll",async(e,...t)=>{if(O.socket)return await O.socket.executeForEveryone(e,...t)}),k(O,"execForUser",async(e,t,...s)=>{if(a.log("execForUser",[e,t,...s]),!O.socket)return;if(t===game.user.id)return null;const i=`${e}-${t}`;if(O._activeExecutions.has(i))return null;O._activeExecutions.set(i,!0);try{return await O.socket.executeAsUser(e,t,...s)}catch{return null}finally{O._activeExecutions.delete(i)}});let U=O;class W{static initialize(){this.setDiceConfig()}static setDiceConfig(){if(!game.user)return{};const e=game.settings.storage.get("client");return this.diceConfig=e["core.diceConfiguration"]||"",this.diceConfig}static getDiceConfig(){return game.user?(this.setDiceConfig(),game.user.isGM&&this._sendDiceConfigToGMs(),this.diceConfig):{}}static _sendDiceConfigToGMs(){U.execForGMs("receiveDiceConfig",game.user.id,this.diceConfig)}static receiveDiceConfig(e,t){var s,i;((s=game.user)!=null&&s.isGM||e===((i=game.user)==null?void 0:i.id))&&(this.playerDiceConfigs[e]=t?JSON.parse(t):{})}static getUserDiceConfig(e){var t;return e===((t=game.user)==null?void 0:t.id)?this.diceConfig:this.playerDiceConfigs[e]||{}}static requestDiceConfigFromUser(e){U.execForUser("getDiceConfig",e)}static requestDiceConfigFromAllPlayers(){var e;(e=game.user)!=null&&e.isGM&&game.users.forEach(t=>{t.active&&!t.isGM&&t.id!==game.user.id&&this.requestDiceConfigFromUser(t.id)})}static clearPlayerConfigs(){this.playerDiceConfigs={}}static hasUserConfig(e){var t;return e===((t=game.user)==null?void 0:t.id)?!!this.diceConfig:!!this.playerDiceConfigs[e]}}k(W,"diceConfig",{}),k(W,"playerDiceConfigs",{});class A{static registerSettings(){const e=q();Object.entries(e).forEach(async s=>{const i=s[1],o={name:i.label,hint:i.hint,default:i.default,type:i.propType,scope:i.scope,config:i.config,requiresReload:i.requiresReload||!1,onChange:n=>A.apply(i.tag,n)};i.choices&&(o.choices=i.choices),await game.settings.register(G,i.tag,o),(A.get(i.tag)===void 0||A.get(i.tag)===null)&&A.set(i.tag,i.default)})}static get(e,t=G){if(!e)return null;let s=!1;if(t===G)s=game.settings.get(t,e);else{let o=game.settings.storage.get("client")[`${t}.${e}`];o===void 0&&(o=game.settings.storage.get("world").getSetting(`${t}.${e}`),s=o==null?void 0:o.value)}return s}static set(e,t,s=G){if(!e)return!1;let i=game.settings.storage.get("client")[`${s}.${e}`];i||(i=game.settings.storage.get("world").getSetting(`${s}.${e}`));try{game.settings.set(s,e,t)}catch{}return!0}static apply(e,t){const s=q();switch(e){case s.rollRequestsEnabled.tag:A.applyRollRequestsEnabled(t);break}}static applyRollRequestsEnabled(e){const t=document.querySelector("#chat-controls .chat-control-icon.roll-requests-icon");t&&(e?t.classList.add("active"):t.classList.remove("active"))}}class te{static isModuleActive(e){const t=game.modules.get(e);return t&&t.active}static getMidiQOL(){return this.isMidiQOLActive()&&typeof MidiQOL<"u"?MidiQOL:null}}class de{static findActivityForRoll(e,t){var o;if(!((o=e==null?void 0:e.system)!=null&&o.activities))return null;const s=e.system.activities;switch(t==null?void 0:t.toLowerCase()){case r.ATTACK:const n=s.getByType("attack");return(n==null?void 0:n[0])||null;case r.DAMAGE:const l=s.getByType("attack");if((l==null?void 0:l.length)>0)return l[0];const c=s.getByType("damage");if((c==null?void 0:c.length)>0)return c[0];const d=s.getByType("save");return(d==null?void 0:d.length)>0?d[0]:null;case r.ITEM_SAVE:const f=s.getByType("save");return(f==null?void 0:f[0])||null;default:return null}}static getActivitiesByType(e,t){var s;return(s=e==null?void 0:e.system)!=null&&s.activities?e.system.activities.getByType(t):[]}static hasActivityForRoll(e,t){return a.log("hasActivityForRoll",[e,t]),!!this.findActivityForRoll(e,t)}static async executeActivityRoll(e,t,s,i,o){var d,f,g,_,R,m,h,p,C,T;a.log("executeActivityRoll",[e,t,s,i,o]);const n=e.items.get(s);if(!n)throw new Error(`Item ${s} not found on actor ${e.name}`);let l=null;if(i&&(l=(d=n.system.activities)==null?void 0:d.get(i)),l=l||this.findActivityForRoll(n,t),!l)throw new Error(`Activity not found on item ${n.name}`);a.log("executeActivityRoll - activity",[l,t]);const c=t==null?void 0:t.toLowerCase();if(l)switch(c){case r.ATTACK:a.log("executeActivityRoll - is attack activity",[o]);const b={attackMode:o.usage.attackMode,ammunition:o.usage.ammunition,mastery:o.usage.mastery,situational:(_=(g=(f=o.usage.rolls)==null?void 0:f[0])==null?void 0:g.data)==null?void 0:_.situational,advantage:o.usage.advantage,disadvantage:o.usage.disadvantage};await l.item.setFlag(G,"tempAttackConfig",b),a.log("executeActivityRoll - stored temp config as flag",[b]);try{if(te.isModuleActive("midi-qol")&&te.getMidiQOL()){const S=await de.syntheticItemRoll(n,{...o});return}await l.use(o.usage,o.dialog,o.message)}finally{await l.item.unsetFlag(G,"tempAttackConfig")}return;case r.DAMAGE:if(te.isModuleActive("midi-qol")){const D=te.getMidiQOL();if(D){const S=(R=D.Workflow)==null?void 0:R.getWorkflow(l.uuid);await S.activity.rollDamage({...o,workflow:S});return}}a.log("executeActivityRoll - damage roll",[l,o]);const y={critical:o.usage.critical||!1,event:o.usage.event,rollMode:(m=o.message)==null?void 0:m.rollMode,create:((h=o.message)==null?void 0:h.create)!==!1};return(T=(C=(p=o.usage.rolls)==null?void 0:p[0])==null?void 0:C.data)!=null&&T.situational&&(y.data||(y.data={}),y.data.situational=o.usage.rolls[0].data.situational),a.log("executeActivityRoll - damage config with situational",[y]),l!=null&&l.previousAttack||l!=null&&l.damageOnly?await l.rollDamage(y,o.dialog,o.message):await l.rollDamage(y,o.dialog,o.message);case r.ITEM_SAVE:return await n.use({activity:l.id},{skipDialog:o.fastForward});default:a.log("executeActivityRoll - unknown roll type",[c]);return}throw new Error(`No suitable method found for ${c} on item ${n.name}`)}static getActivityDisplayInfo(e){return a.log("getActivityDisplayInfo",[e]),e?{name:e.name||e.constructor.metadata.label,type:e.type,icon:e.constructor.metadata.icon,canAttack:e.type==="attack",canDamage:["attack","damage","save"].includes(e.type),canSave:e.type==="save"}:null}static getDamageFormula(e){var s,i;if(a.log("getDamageFormula",[e]),!((i=(s=e==null?void 0:e.damage)==null?void 0:s.parts)!=null&&i.length))return null;const t=e.damage.parts.map(o=>o.formula).filter(o=>o);return t.length>0?t.join(" + "):null}static async syntheticItemRoll(e,t={}){a.log("syntheticItemRoll",[e,t]);const s=te.getMidiQOL();if(!s){a.warn("MidiQOL is not active");return}let i={consumeUsage:!1,consumeSpellSlot:!1},o={configureDialog:!0,workflowOptions:{autoRollAttack:!1,autoFastAttack:!1,autoRollDamage:"none",autoFastDamage:!1}};return t={...i,...t},await s.completeItemUse(e,t,o)}static async replaceDamage(e,t,{ignoreCrit:s=!1,damageType:i}={}){t=String(t),e.isCritical&&!s&&(t=await rollUtils.getCriticalFormula(t,e.item.getRollData()));let o=await new CONFIG.Dice.DamageRoll(t).evaluate();return await e.setDamageRolls([o]),o}}Hooks.once("ready",()=>{dnd5e.applications.dice.DamageRollConfigurationDialog||a.warn("DamageRollConfigurationDialog not found in dnd5e.applications.dice")});function ie(u){return class extends u{constructor(e={},t={},s={}){var i,o;super(e,t,s),this.actors=s.actors||[],this.sendRequest=s.defaultSendRequest??s.sendRequest??!0,this.showDC=s.showDC||!1,this.dcValue=s.dcValue||null,this.rollKey=s.rollKey||e.skill||e.ability||null,this.rollTypeString=s.rollTypeString||null,this.windowTitle=((i=s.window)==null?void 0:i.title)||"",this.windowSubtitle=((o=s.window)==null?void 0:o.subtitle)||""}_buildConfig(e,t,s){const i=t==null?void 0:t.get("ability"),o=t==null?void 0:t.get("dc"),n=t==null?void 0:t.get(`rolls.${s}.situational`);if(a.log("_buildConfig",[n,t,e]),n&&e.situational!==!1)e.parts||(e.parts=[]),e.parts.push("@situational"),e.data||(e.data={}),e.data.situational=n;else if(e.parts){const c=e.parts.indexOf("@situational");c!==-1&&e.parts.splice(c,1)}i&&(e.ability=i,this.config.ability=i);const l=super._buildConfig(e,t,s);if(o){const c=parseInt(o);isNaN(c)||(l.options=l.options||{},l.options.target=c)}else this.dcValue!==void 0&&this.dcValue!==null&&(l.options=l.options||{},l.options.target=this.dcValue);return a.log(`${this.constructor.name}._buildConfig`,[this.config,t,l]),l}_onChangeForm(e,t){super._onChangeForm(e,t);const s=this.element.querySelector('input[name="crlngn-send-request"]');s&&(this.sendRequest=s.checked);const i=this.element.querySelector('input[name="dc"]');i&&i.value&&(this.dcValue=parseInt(i.value)||null)}_finalizeRolls(e){const t=super._finalizeRolls(e);if(a.log("_finalizeRolls",[t]),this.dcValue!==void 0&&this.dcValue!==null)for(const s of t)s.options.target=this.dcValue;return this.config.sendRequest=this.sendRequest,t}async _onRender(e,t){var s,i,o;await super._onRender(e,t),((o=(i=(s=this.config.rolls)==null?void 0:s[0])==null?void 0:i.data)!=null&&o.situational||this.config.situational)&&(a.log(`${this.constructor.name}._onRender`,["Triggering rebuild for initial situational bonus"]),setTimeout(()=>{this.rebuild()},100))}}}class V extends ie(dnd5e.applications.dice.D20RollConfigurationDialog){constructor(e={},t={},s={}){s.rollType=s.rollType||CONFIG.Dice.D20Roll,super(e,t,s),a.log("constructor - initializing GM Dialog",[e,t,s])}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}get title(){return this.windowTitle||super.title}_prepareConfigurationData(e,t,s,i){a.log("_prepareConfigurationData",[e,t,s,i]);const o=super._prepareConfigurationData(e,t,s,i);return o.showDC=this.showDC,o.dcValue=this.dcValue,o.sendRequest=this.sendRequest,o.actorCount=this.actors.length,o}async _preparePartContext(e,t,s){return a.log("_preparePartContext",[e,t,s]),t=await super._preparePartContext(e,t,s),e==="configuration"&&(t.showDC=this.showDC,t.dcValue=this.dcValue,t.sendRequest=this.sendRequest,t.actorCount=this.actors.length),t}async _onRender(e,t){if(a.log("_onRender",[e,t]),super._onRender(e,t),this.element.querySelector(".gm-roll-config-fields"))return;let s=this.element.querySelector(".rolls .formulas");if(s&&(this.showDC||this.actors.length>0)){const i={showDC:this.showDC,dcValue:this.dcValue,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},o=await renderTemplate(`modules/${G}/templates/gm-roll-config-fields.hbs`,i),n=document.createElement("div");n.className="gm-roll-config-fields",n.innerHTML=o,s.parentNode.insertBefore(n,s)}this._attachButtonListeners()}_attachButtonListeners(){a.log("_attachButtonListeners",[this.element]),this.element.querySelectorAll('[data-action="advantage"], [data-action="normal"], [data-action="disadvantage"]').forEach(t=>{t.addEventListener("click",s=>{s.currentTarget.dataset.action})})}static async getConfiguration(e,t,s,i={}){var D,S,E,I,L,F,H;e.length>0&&typeof e[0]=="string"&&(e=e.map(N=>game.actors.get(N)).filter(N=>N)),a.log("GMRollConfigDialog.getConfiguration",[e,e.map(N=>N.name),t,s,i]);const o=t==null?void 0:t.toLowerCase(),n=[r.SAVE,r.SAVING_THROW,r.ABILITY,r.ABILITY_CHECK,r.CONCENTRATION].includes(o),l=e[0];if(!l)return null;let c=CONFIG.Dice.D20Roll;[r.DAMAGE,r.HEALING].includes(o)?c=CONFIG.Dice.DamageRoll||CONFIG.Dice.BasicRoll:[r.FORMULA,r.CUSTOM,r.HIT_DIE].includes(o)&&(c=CONFIG.Dice.BasicRoll);const d={data:l.getRollData(),subject:l,rolls:[{parts:[],data:l.getRollData(),options:{}}]};switch(o){case r.SKILL:d.skill=s;break;case r.SAVE:case r.SAVING_THROW:d.ability=s;break;case r.ABILITY:case r.ABILITY_CHECK:d.ability=s;break;case r.HIT_DIE:d.rolls[0].parts=[],d.rolls[0].options.flavor="Hit Die";break}const f={create:!1,data:{speaker:ChatMessage.getSpeaker({actor:l})}},g={options:{actors:e,sendRequest:e.some(N=>this._isPlayerOwned(N)),showDC:n,rollKey:s,rollType:c,rollTypeString:o,window:{title:V._getRollTitle(o,s,l),subtitle:V._getSubtitle(e)},...i}},_=new this(d,f,g.options),R=await new Promise(N=>{_.addEventListener("close",()=>{N({rolls:_.rolls,config:_.config,message:_.message,sendRequest:_.sendRequest})},{once:!0}),_.render({force:!0})});if(!R.rolls||R.rolls.length===0)return null;const m=R.rolls[0];let h=!1,p=!1;((D=m==null?void 0:m.options)==null?void 0:D.advantageMode)!==void 0&&(h=m.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE,p=m.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE);let C=((S=m==null?void 0:m.data)==null?void 0:S.situational)||"";m!=null&&m.parts;let T=(E=m==null?void 0:m.options)==null?void 0:E.target;const b={rolls:[{parts:[],data:C?{situational:C}:{},options:T?{target:T}:{}}],subject:l,advantage:h,disadvantage:p,target:T,sendRequest:R.sendRequest,isRollRequest:R.sendRequest,skipDialog:i.skipDialogs||!1,chatMessage:!0},y=game.settings.get("core","rollMode");if(R.message.rollMode&&R.message.rollMode!==y&&(b.rollMode=R.message.rollMode),R.config.ability&&[r.SKILL,r.TOOL].includes(o)){const N=((L=(I=l.system.skills)==null?void 0:I[s])==null?void 0:L.ability)||((H=(F=CONFIG.DND5E.skills)==null?void 0:F[s])==null?void 0:H.ability);R.config.ability!==N&&(b.ability=R.config.ability)}return b.rollTitle=g.options.window.title,b.rollType=o,b.rollKey=s,b}static _isPlayerOwned(e){return a.log("GMRollConfigDialog._isPlayerOwned",[e]),Object.entries(e.ownership).some(([t,s])=>{const i=game.users.get(t);return i&&!i.isGM&&s>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})}static _getRollTitle(e,t,s){var n,l,c,d,f,g,_,R,m,h,p,C,T;a.log("GMRollConfigDialog._getRollTitle",[e,t,s]),a.log("GMRollConfigDialog._getRollTitle - Detailed",{rollType:e,rollKey:t,actorName:s==null?void 0:s.name,actorAbilities:(n=s==null?void 0:s.system)!=null&&n.abilities?Object.keys(s.system.abilities):[],actorSkills:(l=s==null?void 0:s.system)!=null&&l.skills?Object.keys(s.system.skills):[],actorInitAbility:(f=(d=(c=s==null?void 0:s.system)==null?void 0:c.attributes)==null?void 0:d.init)==null?void 0:f.ability});let i="";const o=e==null?void 0:e.toLowerCase();switch([r.SAVE,r.ABILITY,r.ABILITY_CHECK].includes(o)&&!t&&a.warn("Missing rollKey for roll type",[o,t]),o){case r.SKILL:const b=((g=CONFIG.DND5E.skills[t])==null?void 0:g.label)||t,y=(_=s==null?void 0:s.system.skills)==null?void 0:_[t],D=(y==null?void 0:y.ability)||((R=CONFIG.DND5E.skills[t])==null?void 0:R.ability)||"int",S=((m=CONFIG.DND5E.abilities[D])==null?void 0:m.label)||D;i=game.i18n.format("DND5E.SkillPromptTitle",{skill:b,ability:S});break;case r.SAVE:case r.SAVING_THROW:const E=((h=CONFIG.DND5E.abilities[t])==null?void 0:h.label)||t;i=game.i18n.format("DND5E.SavePromptTitle",{ability:E});break;case r.ABILITY:case r.ABILITY_CHECK:const I=((p=CONFIG.DND5E.abilities[t])==null?void 0:p.label)||t;i=game.i18n.format("DND5E.AbilityPromptTitle",{ability:I});break;case r.CONCENTRATION:i=game.i18n.localize("DND5E.Concentration");break;case r.TOOL:const L=(T=(C=CONFIG.DND5E.enrichmentLookup)==null?void 0:C.tools)==null?void 0:T[t];let F=t;if(L!=null&&L.id){const H=dnd5e.documents.Trait.getBaseItem(L.id,{indexOnly:!0});F=(H==null?void 0:H.name)||t}i=game.i18n.format("DND5E.ToolPromptTitle",{tool:F});break;case r.DEATH_SAVE:i=game.i18n.localize("DND5E.DeathSave");break;case r.INITIATIVE:case r.INITIATIVE_DIALOG:i=game.i18n.localize("DND5E.Initiative");break;default:i=game.i18n.localize("DND5E.Roll")}return a.log("_getRollTitle",[o,i]),i}static _getSubtitle(e=[]){return e.length===1?e[0].name:e.length>1?game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.multipleActors"):""}}class Ce extends ie(dnd5e.applications.dice.RollConfigurationDialog){constructor(e={},t={},s={}){s.rollType=CONFIG.Dice.BasicRoll||Roll,s.showDC=!1,super(e,t,s),a.log("constructor",[e,t,s])}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config","hit-die-config"]})}_prepareConfigurationData(e,t,s,i){a.log("_prepareConfigurationData",[e,t,s,i]);const o=super._prepareConfigurationData(e,t,s,i);return o.formula="Hit Die (varies by actor)",o.sendRequest=this.sendRequest,o.actorCount=this.actors.length,o}async _preparePartContext(e,t,s){return t=await super._preparePartContext(e,t,s),e==="configuration"&&(t.sendRequest=this.sendRequest,t.actorCount=this.actors.length,t.formula="Hit Die (varies by actor)"),t}async _onRender(e,t){if(super._onRender(e,t),this.element.querySelector(".gm-roll-config-fields"))return;let s=this.element.querySelector(".rolls .formulas");if(s&&this.actors.length>0){const i={showDC:!1,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},o=await renderTemplate(`modules/${G}/templates/gm-roll-config-fields.hbs`,i),n=document.createElement("div");n.className="gm-roll-config-fields",n.innerHTML=o,s.parentNode.insertBefore(n,s)}}async _processSubmitData(e,t,s){await super._processSubmitData(e,t,s),this.sendRequest=s.get("crlngn-send-request")!=="false",a.log("_processSubmitData",[s,this.config])}_finalizeRolls(e){const t=super._finalizeRolls(e);return this.config.sendRequest=this.sendRequest,t}static async getConfiguration(e,t,s,i={}){var T,b,y;a.log("GMRollConfigDialog.getConfiguration",[e,t,s,i]);const o=e[0];if(!o)return null;const n={data:o.getRollData(),subject:o,rolls:[{parts:[],data:o.getRollData(),options:{flavor:"Hit Die Roll"}}]},l={create:!1,data:{speaker:ChatMessage.getSpeaker({actor:o})}},c={options:{actors:e,sendRequest:e.some(D=>V._isPlayerOwned(D)),rollKey:s,rollType:CONFIG.Dice.BasicRoll||Roll,window:{title:game.i18n.localize("DND5E.HitDice"),subtitle:V._getSubtitle(e)},...i}},d=new this(n,l,c.options),f=await new Promise(D=>{d.addEventListener("close",()=>{D({rolls:d.rolls,config:d.config,message:d.message,sendRequest:d.sendRequest})},{once:!0}),d.render({force:!0})});if(!f.rolls||f.rolls.length===0)return null;const g=f.rolls[0];let _=!1,R=!1;((T=g==null?void 0:g.options)==null?void 0:T.advantageMode)!==void 0&&(_=g.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE,R=g.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE);const m=((b=g==null?void 0:g.data)==null?void 0:b.situational)||"",h=(y=g==null?void 0:g.options)==null?void 0:y.target,p={rolls:[{parts:[],data:m?{situational:m}:{},options:h?{target:h}:{}}],subject:e[0],advantage:_,disadvantage:R,target:h,sendRequest:f.sendRequest,isRollRequest:f.sendRequest,skipDialog:i.skipDialogs||!1,chatMessage:!0},C=game.settings.get("core","rollMode");return f.message.rollMode&&f.message.rollMode!==C&&(p.rollMode=f.message.rollMode),f.config.ability&&(p.ability=f.config.ability),p}}class be extends ie(dnd5e.applications.dice.SkillToolRollConfigurationDialog){constructor(e={},t={},s={}){const i=foundry.utils.mergeObject(e,{chooseAbility:!0});s.rollType=s.rollType||CONFIG.Dice.D20Roll,super(i,t,s),a.log("constructor",[e,t,s])}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}_prepareConfigurationData(e,t,s,i){a.log("_prepareConfigurationData",[e,t,s,i]);const o=super._prepareConfigurationData(e,t,s,i);return o.showDC=this.showDC,o.dcValue=this.dcValue,o.sendRequest=this.sendRequest,o.actorCount=this.actors.length,o}async _preparePartContext(e,t,s){return a.log("_preparePartContext",[e,t,s]),t=await super._preparePartContext(e,t,s),e==="configuration"&&(t.showDC=this.showDC,t.dcValue=this.dcValue,t.sendRequest=this.sendRequest,t.actorCount=this.actors.length),t}async _onRender(e,t){if(a.log("_onRender",[e,t]),super._onRender(e,t),this.element.querySelector(".gm-roll-config-fields"))return;let s=this.element.querySelector(".rolls .formulas");if(s&&(this.showDC||this.actors.length>0)){const i={showDC:this.showDC,dcValue:this.dcValue,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},o=await renderTemplate(`modules/${G}/templates/gm-roll-config-fields.hbs`,i),n=document.createElement("div");n.className="gm-roll-config-fields",n.innerHTML=o,s.parentNode.insertBefore(n,s)}this._attachButtonListeners()}_attachButtonListeners(){a.log("_attachButtonListeners",[]),this.element.querySelectorAll('[data-action="advantage"], [data-action="normal"], [data-action="disadvantage"]').forEach(t=>{t.addEventListener("click",s=>{s.currentTarget.dataset.action})})}static async getConfiguration(e,t,s,i={}){var S,E,I,L,F,H,N,w;a.log("getConfiguration",[e,t,s,i]);const o=t==null?void 0:t.toLowerCase(),n=[r.SKILL,r.TOOL].includes(o),l=e[0];if(!l)return null;const c=CONFIG.Dice.D20Roll;let d=null;if(o===r.SKILL){const x=l.system.skills[s];d=(x==null?void 0:x.ability)||((S=CONFIG.DND5E.skills[s])==null?void 0:S.ability)||"int"}else if(o===r.TOOL){const x=(E=l.system.tools)==null?void 0:E[s];d=(x==null?void 0:x.ability)||((F=(L=(I=CONFIG.DND5E.enrichmentLookup)==null?void 0:I.tools)==null?void 0:L[s])==null?void 0:F.ability)||"int"}const f={data:l.getRollData(),subject:l,ability:d,chooseAbility:!0,rolls:[{parts:[],data:l.getRollData(),options:{}}]};o===r.SKILL?f.skill=s:o===r.TOOL&&(f.tool=s);const g={create:!1,data:{speaker:ChatMessage.getSpeaker({actor:l})}},_={options:{actors:e,sendRequest:e.some(x=>V._isPlayerOwned(x)),showDC:n,rollKey:s,rollType:c,window:{title:V._getRollTitle(o,s,l),subtitle:V._getSubtitle(e)},...i}},R=new this(f,g,_.options),m=await new Promise(x=>{R.addEventListener("close",()=>{x({rolls:R.rolls,config:R.config,message:R.message,sendRequest:R.sendRequest})},{once:!0}),R.render({force:!0})});if(!m.rolls||m.rolls.length===0)return null;const h=m.rolls[0];let p=!1,C=!1;((H=h==null?void 0:h.options)==null?void 0:H.advantageMode)!==void 0&&(p=h.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE,C=h.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE);const T=((N=h==null?void 0:h.data)==null?void 0:N.situational)||"",b=(w=h==null?void 0:h.options)==null?void 0:w.target,y={rolls:[{parts:[],data:T?{situational:T}:{},options:b?{target:b}:{}}],subject:e[0],advantage:p,disadvantage:C,target:b,sendRequest:m.sendRequest,isRollRequest:m.sendRequest,skipDialog:i.skipDialogs||!1,chatMessage:!0},D=game.settings.get("core","rollMode");return m.message.rollMode&&m.message.rollMode!==D&&(y.rollMode=m.message.rollMode),m.config.ability&&[r.SKILL,r.TOOL].includes(o)&&(y.ability=m.config.ability),y.rollTitle=_.options.window.title,y.rollType=o,y.rollKey=s,y}}class Oe extends ie(dnd5e.applications.dice.DamageRollConfigurationDialog){constructor(e={},t={},s={}){const i=foundry.utils.mergeObject({configure:!0},e);super(i,t,s),a.log("GMDamageConfigDialog.constructor",[i,t,s])}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","damage-roll","gm-roll-config"]})}_prepareConfigurationData(e,t,s,i){a.log("GMDamageConfigDialog._prepareConfigurationData",[e,t,s,i]);const o=super._prepareConfigurationData(e,t,s,i);return o.sendRequest=this.sendRequest,o.actorCount=this.actors.length,o}async _onRender(e,t){if(await super._onRender(e,t),this.actors.length>0){const s=this.element.querySelector(".rolls + .dialog-buttons");if(s&&!this.element.querySelector(".gm-roll-config-fields")){const i=document.createElement("div");i.className="gm-roll-config-fields",i.innerHTML=`
          <div class="form-group">
            <label class="checkbox">
              <input type="checkbox" name="crlngn-send-request" ${this.sendRequest?"checked":""}>
              ${game.i18n.localize("CRLNGN_ROLL_REQUESTS.ui.dialogs.sendRequestToPlayers")}
            </label>
          </div>
        `,s.insertAdjacentElement("beforebegin",i)}}}static async getConfiguration(e,t,s,i={},o={},n={}){var T;a.log("GMDamageConfigDialog.getConfiguration",[e,t,s,i,o,n]);const l=e[0];if(!l)return null;const c=t==null?void 0:t.toLowerCase(),d={subject:o.subject,data:l.getRollData(),critical:o.critical||!1,rolls:o.rolls||[{parts:[],data:l.getRollData(),options:{}}]},f={create:!1,data:{speaker:ChatMessage.getSpeaker({actor:l})}},{position:g,..._}=(n==null?void 0:n.options)||{},R={options:{actors:e,sendRequest:e.some(b=>V._isPlayerOwned(b)),rollKey:s,rollType:CONFIG.Dice.DamageRoll||CONFIG.Dice.BasicRoll,rollTypeString:c,window:{title:game.i18n.localize("DND5E.DamageRoll"),subtitle:V._getSubtitle(e)},..._,...i}},m=new this(d,f,R.options),h=await new Promise(b=>{m.addEventListener("close",()=>{var y;b({rolls:m.rolls,sendRequest:m.sendRequest,advantage:m.config.advantage,disadvantage:m.config.disadvantage,critical:m.config.critical,rollMode:(y=m.message)==null?void 0:y.rollMode})},{once:!0}),m.render(!0)});if(!((T=h.rolls)!=null&&T.length))return a.log("GMDamageConfigDialog.getConfiguration - cancelled"),null;a.log("GMDamageConfigDialog.getConfiguration - result",[h]);const p={rolls:h.rolls,sendRequest:h.sendRequest,critical:h.critical,skipDialog:i.skipDialogs||!1,chatMessage:!0},C=game.settings.get("core","rollMode");return h.rollMode&&h.rollMode!==C&&(p.rollMode=h.rollMode),p.rollTitle=R.options.window.title,p.rollType=c,p.rollKey=s,a.log("GMDamageConfigDialog.getConfiguration - final result",[p]),p}}class Se extends ie(dnd5e.applications.dice.AttackRollConfigurationDialog){constructor(e={},t={},s={}){super(e,t,s),a.log("GMAttackConfigDialog.constructor",[e,t,s])}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}_prepareConfigurationData(e,t,s,i){a.log("GMAttackConfigDialog._prepareConfigurationData",[e,t,s,i]);const o=super._prepareConfigurationData(e,t,s,i);return o.sendRequest=this.sendRequest,o.actorCount=this.actors.length,o}async _preparePartContext(e,t,s){return t=await super._preparePartContext(e,t,s),e==="configuration"&&(t.sendRequest=this.sendRequest,t.actorCount=this.actors.length),t}async _onRender(e,t){if(await super._onRender(e,t),this.element.querySelector(".gm-roll-config-fields"))return;let s=this.element.querySelector(".rolls .formulas");if(s&&this.actors.length>0){const i={showDC:!1,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},o=await renderTemplate(`modules/${G}/templates/gm-roll-config-fields.hbs`,i),n=document.createElement("div");n.className="gm-roll-config-fields",n.innerHTML=o,s.parentNode.insertBefore(n,s)}}_finalizeRolls(e){return this.config.sendRequest=this.sendRequest,!this.sendRequest&&this.config.isRollRequest&&(this.config.isRollRequest=!1),super._finalizeRolls(e)}static async getConfiguration(e,t,s,i={},o={},n={}){var E,I,L,F,H,N;a.log("GMAttackConfigDialog.getConfiguration",[e,t,s,i,o,n]);const l=e[0];if(!l)return null;const c=t==null?void 0:t.toLowerCase(),d={subject:o.subject||l,data:l.getRollData(),rollMode:CONST.DICE_ROLL_MODES.PUBLIC,rolls:[{parts:[],data:l.getRollData(),options:{}}]},f={create:!1,data:{speaker:ChatMessage.getSpeaker({actor:l})}},{position:g,..._}=(n==null?void 0:n.options)||{},R={options:{actors:e,sendRequest:e.some(w=>V._isPlayerOwned(w)),rollKey:s,rollType:CONFIG.Dice.D20Roll,rollTypeString:c,window:{title:game.i18n.localize("DND5E.Attack"),subtitle:V._getSubtitle(e)},..._,...i}},m=new this(d,f,R.options),h=await new Promise(w=>{m.addEventListener("close",()=>{w({rolls:m.rolls,config:m.config,message:m.message,sendRequest:m.sendRequest})},{once:!0}),m.render({force:!0})});if(a.log("GMAttackConfigDialog.getConfiguration",[m.sendRequest]),!h.rolls||h.rolls.length===0)return null;const p=h.rolls[0];let C=!1,T=!1;((E=p==null?void 0:p.options)==null?void 0:E.advantageMode)!==void 0&&(C=p.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE,T=p.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE);const b=((I=p==null?void 0:p.data)==null?void 0:I.situational)||"",y=(L=p==null?void 0:p.options)==null?void 0:L.target,D={rolls:[{parts:[],data:b?{situational:b}:{},options:{...y&&{target:y},...((F=p==null?void 0:p.options)==null?void 0:F.ammunition)&&{ammunition:p.options.ammunition},...((H=p==null?void 0:p.options)==null?void 0:H.attackMode)&&{attackMode:p.options.attackMode},...((N=p==null?void 0:p.options)==null?void 0:N.mastery)!==void 0&&{mastery:p.options.mastery}}}],subject:o.subject||l,advantage:C,disadvantage:T,target:y,sendRequest:h.sendRequest,isRollRequest:h.sendRequest,skipDialog:i.skipDialogs||!1,chatMessage:!0},S=game.settings.get("core","rollMode");return h.message.rollMode&&h.message.rollMode!==S&&(D.rollMode=h.message.rollMode),D.rollTitle=R.options.window.title,D.rollType=c,D.rollKey=s,a.log("GMAttackConfigDialog.getConfiguration - SIMPLIFIED result",[D]),D}}const Q={addSituationalBonus(u,e){var t,s,i;return a.log("Config before adding bonus:",[e,(t=u.rolls)==null?void 0:t[0]]),e&&((s=u.rolls)!=null&&s[0])&&(u.rolls[0].parts||(u.rolls[0].parts=[]),u.rolls[0].data||(u.rolls[0].data={}),u.rolls[0].data.situational=e,u.situational=!0,u.rolls[0].parts.push("@situational"),a.log("Config after adding bonus:",[(i=u.rolls)==null?void 0:i[0]])),u},buildRollConfig(u,e,t={}){const s={rolls:[{parts:e.parts||[],data:e.data||{},options:e.options||{}}],advantage:u.config.advantage||!1,disadvantage:u.config.disadvantage||!1,target:u.config.target,subject:null,chatMessage:!0,legacy:!1,...t},i=u.config.situational||e.data.situational||"";return i&&this.addSituationalBonus(s,i),this.ensureRollFlags(s,u)},ensureRollFlags(u,e){return u.isRollRequest=!game.user.isGM,u._showRequestedBy=!0,u._requestedBy=e.config.requestedBy||"GM",u}};class ne extends foundry.applications.api.HandlebarsApplicationMixin(foundry.applications.api.ApplicationV2){constructor(e={}){super(e),this.formula=e.formula||"",this.readonly=e.readonly||!1,this.actor=e.actor,this.callback=e.callback,this.diceCounts={}}_onClickAction(e,t){switch(t.dataset.action){case"rollDice":return this.rollDice(e,t);case"addDie":return this.addDie(e,t);case"cancel":return this.cancel(e,t)}}async _prepareContext(e={}){return{...await super._prepareContext(e),formula:this.formula,readonly:this.readonly}}_attachPartListeners(e,t,s){super._attachPartListeners(e,t,s);const i=t.querySelector("#custom-roll-formula"),o=t.querySelector("#formula-validation-message");i&&!this.readonly&&(i.addEventListener("input",n=>{this.formula=n.target.value.trim(),this.updateValidationMessage(o)}),this.formula&&this.updateValidationMessage(o))}updateValidationMessage(e){if(!e)return;if(!this.formula){e.textContent="&nbsp;",e.classList.remove("error","success");return}this.validateFormula(this.formula)?(e.textContent=game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.formulaValid"),e.classList.remove("error"),e.classList.add("success")):(e.textContent=game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.formulaInvalid"),e.classList.remove("success"),e.classList.add("error"))}addDie(e,t){const s=t.dataset.die,i=this.element.querySelector("#custom-roll-formula");if(!i)return;const o=i.value.trim();if(o){const n=/(\d*)d(\d+)/g,l=new Map;let c=o,d;for(;(d=n.exec(o))!==null;){const _=parseInt(d[1]||"1"),R=d[2];l.set(R,(l.get(R)||0)+_),c=c.replace(d[0],"").trim()}const f=s.substring(1);l.set(f,(l.get(f)||0)+1);const g=[];for(const[_,R]of l)g.push(`${R}d${_}`);c=c.replace(/^\+\s*|\s*\+\s*$|\s*\+\s*\+/g,"").trim(),c&&c!=="+"?this.formula=`${g.join(" + ")} + ${c}`:this.formula=g.join(" + ")}else this.formula=`1${s}`;i.value=this.formula,i.dispatchEvent(new Event("input"))}validateFormula(e){var t;if(!e||e.trim()==="")return!1;try{return Roll.validate(e)}catch{try{return new Roll(e,((t=this.actor)==null?void 0:t.getRollData())||{}),!0}catch{return!1}}}async rollDice(){if(a.log("rollDice"),!this.validateFormula(this.formula)){ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:this.formula||"empty"}));return}this.callback&&await this.callback(this.formula),this.close()}cancel(){this.close()}static async prompt(e={}){return new Promise(t=>{const s=new this({...e,callback:i=>t(i)});s.addEventListener("close",()=>{s._resolved||t(null)}),s.render(!0)})}async close(e={}){return this._resolved=!0,super.close(e)}}k(ne,"DEFAULT_OPTIONS",{id:"crlngn-custom-roll-dialog",classes:["crlngn-rolls-dialog","crlngn-custom-roll-dialog"],tag:"div",window:{title:"CRLNGN_ROLLS.ui.dialogs.customRollTitle",icon:"fas fa-dice-d20",resizable:!1,positioned:!0,frame:!0},position:{width:420,height:"auto"}}),k(ne,"PARTS",{main:{template:`modules/${$.ID}/templates/custom-roll-dialog.hbs`},footer:{template:`modules/${$.ID}/templates/custom-roll-dialog-footer.hbs`}});const B={ability:async(u,e,t,s,i)=>{var n;a.log("RollHandlers.ability #1",[t]);const o=Q.buildRollConfig(e,t,{ability:e.rollKey});a.log("RollHandlers.ability #2",[(n=o.rolls)==null?void 0:n[0]]),await u.rollAbilityCheck(o,s,i)},abilitycheck:async(u,e,t,s,i)=>B.ability(u,e,t,s,i),save:async(u,e,t,s,i)=>{const o=Q.buildRollConfig(e,t,{ability:e.rollKey});await u.rollSavingThrow(o,s,i)},savingthrow:async(u,e,t,s,i)=>B.save(u,e,t,s,i),skill:async(u,e,t,s,i)=>{const o=Q.buildRollConfig(e,t,{skill:e.rollKey,chooseAbility:!0,ability:e.config.ability||void 0});await u.rollSkill(o,s,i)},tool:async(u,e,t,s,i)=>{const o=Q.buildRollConfig(e,t,{tool:e.rollKey,chooseAbility:!0,ability:e.config.ability||void 0});await u.rollToolCheck(o,s,i)},concentration:async(u,e,t,s,i)=>{const o=Q.buildRollConfig(e,t);await u.rollConcentration(o,s,i)},attack:async(u,e,t,s,i)=>{await B.handleActivityRoll(u,r.ATTACK,e,t,s,i)},damage:async(u,e,t,s,i)=>{await B.handleActivityRoll(u,r.DAMAGE,e,t,s,i)},itemsave:async(u,e,t,s,i)=>{await B.handleActivityRoll(u,r.ITEM_SAVE,e,t,s,i)},initiative:async(u,e,t,s,i)=>{if(!game.combat){ui.notifications.warn(game.i18n.localize("COMBAT.NoneActive"));return}const o=Q.buildRollConfig(e,t);a.log("initiative #1",[e,t,o]);const n=e.config.situational||t.data.situational||"";n&&s.configure&&!game.user.isGM&&(u._initiativeSituationalBonus=n),s.configure&&!game.user.isGM?await u.rollInitiativeDialog(o):await u.rollInitiative({createCombatants:!0},o)},initiativedialog:async(u,e,t,s,i)=>B.initiative(u,e,t,s,i),deathsave:async(u,e,t,s,i)=>{const o=Q.buildRollConfig(e,t);await u.rollDeathSave(o,s,i)},hitdie:async(u,e,t,s,i)=>{s.configure=game.user.isGM?s.configure:!0;const o=Q.buildRollConfig(e,t,{denomination:e.rollKey});await u.rollHitDie(o,s,i)},custom:async(u,e,t,s,i)=>{await B.handleCustomRoll(u,e)},async handleActivityRoll(u,e,t,s,i,o){var n,l,c,d,f,g,_,R,m,h,p,C;if(a.log("RollHandlers.handleActivityRoll",[e,t,s]),t.rollKey){const T=Q.buildRollConfig(t,s),b=((l=(n=T.rolls)==null?void 0:n[0])==null?void 0:l.options)||{},y={usage:{...t.config,rolls:T.rolls,...b.attackMode&&{attackMode:b.attackMode},...b.ammunition&&{ammunition:b.ammunition},...b.mastery!==void 0&&{mastery:b.mastery}},dialog:i,message:o};a.log("handleActivityRoll - final activity config",[y,"situational:",(g=(f=(d=(c=y.usage)==null?void 0:c.rolls)==null?void 0:d[0])==null?void 0:f.data)==null?void 0:g.situational,"roll options:",(m=(R=(_=y.usage)==null?void 0:_.rolls)==null?void 0:R[0])==null?void 0:m.options,"top-level attack options:",{attackMode:(h=y.usage)==null?void 0:h.attackMode,ammunition:(p=y.usage)==null?void 0:p.ammunition,mastery:(C=y.usage)==null?void 0:C.mastery}]),await de.executeActivityRoll(u,e,t.rollKey,t.activityId,y)}},async handleCustomRoll(u,e){const t=e.rollKey;new ne({formula:t,readonly:!0,actor:u,callback:async i=>{try{const o=new Roll(i,u.getRollData());o.options=o.options||{},o.options.isRollRequest=!0,await o.evaluate({async:!0}),await o.toMessage({speaker:ChatMessage.getSpeaker({actor:u}),flavor:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${r.CUSTOM}`),rollMode:e.config.rollMode,isRollRequest:!0,_showRequestedBy:!0,_requestedBy:e.config.requestedBy||"GM"})}catch{ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:i}))}}}).render(!0)},async handleHitDieRecovery(u){const e=foundry.utils.mergeObject({type:"long",deltas:{hitDice:0},newDay:!1,rolls:[],updateData:{},updateItems:[]},{});"dhd"in e&&(e.deltas.hitDice=e.dhd),u._getRestHitDiceRecovery({maxHitDice:u.system.attributes.hd.max,type:"long"},e),e.dhd=e.deltas.hitDice,e.longRest=!0;try{if(e.updateData&&Object.keys(e.updateData).length>0){const t=await u.update(e.updateData,{isRest:!1})}else a.log("No actor updates to perform",[]);if(e.updateItems&&e.updateItems.length>0){const t=await u.updateEmbeddedDocuments("Item",e.updateItems,{isRest:!1})}else a.log("No item updates to perform",[])}catch(t){throw a.error("Error during updates in handleHitDieRecovery:",[t]),t}return a.log("handleHitDieRecovery #3",[e]),e}};class Te{static initialize(){a.log("RollInterceptor.initialize"),game.user.isGM&&this.registerHooks()}static registerHooks(){a.log("RollInterceptor.registerHooks"),this._registerHook(M.PRE_ROLL_ABILITY_CHECK,this._handlePreRoll.bind(this,r.ABILITY)),this._registerHook(M.PRE_ROLL_SAVING_THROW,this._handlePreRoll.bind(this,r.SAVE)),this._registerHook(M.PRE_ROLL_SKILL_V2,this._handlePreRoll.bind(this,r.SKILL)),this._registerHook(M.PRE_ROLL_TOOL_V2,this._handlePreRoll.bind(this,r.TOOL)),this._registerHook(M.PRE_ROLL_ATTACK_V2,this._handlePreRoll.bind(this,r.ATTACK)),this._registerHook(M.PRE_ROLL_DAMAGE_V2,this._handlePreRoll.bind(this,r.DAMAGE)),this._registerHook(M.PRE_ROLL_INITIATIVE,this._handlePreRoll.bind(this,r.INITIATIVE)),this._registerHook(M.PRE_ROLL_INITIATIVE_DIALOG_V2,this._handlePreRoll.bind(this,r.INITIATIVE)),this._registerHook(M.PRE_ROLL_DEATH_SAVE_V2,this._handlePreRoll.bind(this,r.DEATH_SAVE)),this._registerHook(M.PRE_ROLL_HIT_DIE_V2,this._handlePreRoll.bind(this,r.HIT_DIE))}static _registerHook(e,t){a.log("RollInterceptor._registerHook");const s=Hooks.on(e,t);this.registeredHooks.add({hookName:e,hookId:s})}static unregisterHooks(){a.log("RollInterceptor.unregisterHooks");for(const{hookName:e,hookId:t}of this.registeredHooks)Hooks.off(e,t);this.registeredHooks.clear()}static _handlePreRoll(e,t,s,i){var g,_,R,m,h,p,C,T;if(!game.user.isGM||t.isRollRequest===!1)return;const o=(t==null?void 0:t.hookNames)||(s==null?void 0:s.hookNames)||(i==null?void 0:i.hookNames)||[],n=o.includes("initiativeDialog")||o.includes("initiative");if(e===r.ATTACK){a.log("RollInterceptor._handlePreRoll - is Attack roll",[(g=t.subject)==null?void 0:g.item]);const b=(R=(_=t.subject)==null?void 0:_.item)==null?void 0:R.getFlag(G,"tempAttackConfig");if(b){a.log("RollInterceptor._handlePreRoll - found module flags, skipping interception",[b]);return}}if(e===r.DAMAGE){a.log("RollInterceptor._handlePreRoll - is Damage roll",[t]);const b=(h=(m=t.subject)==null?void 0:m.item)==null?void 0:h.getFlag(G,"tempDamageConfig");if(b){a.log("RollInterceptor._handlePreRoll - found module flags, skipping interception",[b]);return}}if(n&&e===r.ABILITY&&(a.log("RollInterceptor._handlePreRoll - Overriding ability to initiative",[o]),e=r.INITIATIVE),t!=null&&t.isRollRequest||s!=null&&s.isRollRequest||i!=null&&i.isRollRequest)return;let l;e===r.INITIATIVE&&t instanceof Actor?l=t:e===r.HIT_DIE?l=((p=s==null?void 0:s.subject)==null?void 0:p.actor)||(s==null?void 0:s.subject)||(s==null?void 0:s.actor):e===r.ATTACK||e===r.DAMAGE?l=(C=t.subject)==null?void 0:C.actor:l=((T=t.subject)==null?void 0:T.actor)||t.subject||t.actor;const c=q();if(!A.get(c.rollInterceptionEnabled.tag)||!l||l.documentName!=="Actor")return;a.log("_handlePreRoll",[t,i]);const f=this._getActorOwner(l);if(!(!f||f.id===game.user.id||s.configure===!1||t.isRollRequest===!1||t.skipDialog===!0||t.fastForward===!0))return a.log("_handlePreRoll - intercepting roll #1",[t,i]),e===r.ATTACK&&(i={...i,rollMode:CONST.DICE_ROLL_MODES.PUBLIC}),a.log("_handlePreRoll - intercepting roll #2",[t,i]),this._showGMConfigDialog(l,f,e,t,s,i),!1}static async _showGMConfigDialog(e,t,s,i,o,n){var d,f,g,_,R,m,h,p,C,T,b,y,D,S;a.log("_showGMConfigDialog - config",[s,i]);const l=q();A.get(l.rollInterceptionEnabled.tag);const c=A.get(l.rollRequestsEnabled.tag);try{const E=s==null?void 0:s.toLowerCase();let I;[r.SKILL,r.TOOL].includes(E)?I=be:E===r.HIT_DIE?I=Ce:E===r.ATTACK?I=Se:E===r.DAMAGE?(f=(d=dnd5e.applications)==null?void 0:d.dice)!=null&&f.DamageRollConfigurationDialog?I=Oe:(a.log("DamageRollConfigurationDialog not found, using GMRollConfigDialog"),I=V):I=V;let L={rolls:[{parts:[],data:{},options:{}}]};switch(E){case r.ABILITY:L.ability=i.ability||((g=i.subject)==null?void 0:g.ability);break;case r.SAVE:L.ability=i.ability||((_=i.subject)==null?void 0:_.ability),i.ability==="con"&&i.targetValue!==void 0&&(s=r.CONCENTRATION);break;case r.SKILL:L.skill=i.skill,L.ability=i.ability;break;case r.TOOL:L.tool=i.tool,L.ability=i.ability;break;case r.CONCENTRATION:L.ability="con";break;case r.INITIATIVE:break;case r.HIT_DIE:L.denomination=typeof i=="string"?i:i.denomination||((R=i.subject)==null?void 0:R.denomination);break;case r.ATTACK:o!=null&&o.options&&(L.ammunition=o.options.ammunition,L.attackMode=o.options.attackMode,L.mastery=o.options.mastery);break;case r.DAMAGE:L.item=(m=i.subject)==null?void 0:m.item,L.subject=i.subject,L.critical=i.critical||!1;break}const F=q(),H=A.get(F.skipDialogs.tag),N={actors:[e],rollType:E,showDC:!0,defaultSendRequest:!0,skipDialogs:H};let w;if(H)w={sendRequest:!0,advantage:!1,disadvantage:!1,situational:"",rollMode:game.settings.get("core","rollMode")};else{let z=null;switch(E){case r.SKILL:z=i.skill;break;case r.TOOL:z=i.tool;break;case r.ABILITY:case r.SAVE:z=i.ability||((h=i.subject)==null?void 0:h.ability);break;case r.CONCENTRATION:z="con";break;case r.INITIATIVE:z=((C=(p=e.system.attributes)==null?void 0:p.init)==null?void 0:C.ability)||"dex";break;case r.HIT_DIE:z=typeof i=="string"?i:i.denomination||((T=i.subject)==null?void 0:T.denomination);break;case r.ATTACK:z=(y=(b=i.subject)==null?void 0:b.item)==null?void 0:y.id;break;case r.DAMAGE:z=(S=(D=i.subject)==null?void 0:D.item)==null?void 0:S.id;break}if(!I.getConfiguration)throw a.error("DialogClass.getConfiguration not found",[I,I.name]),new Error(`DialogClass ${I.name} does not have getConfiguration method`);E===r.ATTACK||E===r.DAMAGE?w=await I.getConfiguration([e],E,z,{skipDialogs:!1,defaultSendRequest:!0},i,o):w=await I.getConfiguration([e],E,z,{skipDialogs:!1,defaultSendRequest:!0})}if(!w){a.log("_showGMConfigDialog - Dialog cancelled");return}if(a.log("_showGMConfigDialog - sending _executeLocalRoll",[s,i,w]),!w.sendRequest||!c){await this._executeLocalRoll(e,s,i,w);return}const{event:x,...Le}=i,re={...Le,...w,rolls:w.rolls,requestedBy:game.user.name,...s===r.ATTACK&&{chatMessage:!1}};a.log("_showGMConfigDialog - finalConfig for damage roll",["rollType:",s,"result:",w,"result.rolls:",w.rolls,"finalConfig:",re,"finalConfig.rolls:",re.rolls]),this._sendRollRequest(e,t,s,re)}catch{this._sendRollRequest(e,t,s,i)}}static async _executeLocalRoll(e,t,s,i){var g,_,R,m,h;a.log("RollInterceptor._executeLocalRoll",[e,t,s,i]);const o=t==null?void 0:t.toLowerCase(),n=((g=i.rolls)==null?void 0:g[0])||{},l=((_=n.data)==null?void 0:_.situational)||"",c={rollKey:s.ability||s.skill||s.tool||s.denomination,config:{advantage:i.advantage||s.advantage,disadvantage:i.disadvantage||s.disadvantage,target:i.target||i.dc||s.target,rollMode:i.rollMode||s.rollMode,situational:l,isRollRequest:!1}};a.log("RollInterceptor._executeLocalRoll - requestData",[c,s,i]);const d={configure:!1,isRollRequest:!1},f={rollMode:c.config.rollMode,create:!0,isRollRequest:!1};try{const p=r,C=B[o];a.log("RollInterceptor._executeLocalRoll - handler 1",[C,o,B[o]]),C?((o===r.ATTACK||o===r.DAMAGE||o===r.SAVE)&&(c.rollKey=(m=(R=s.subject)==null?void 0:R.item)==null?void 0:m.id,c.activityId=(h=s.subject)==null?void 0:h.id),a.log("RollInterceptor._executeLocalRoll - handler 2",[c,n,d,f]),await C(e,c,n,d,f)):a.warn(`No handler found for roll type: ${o}`)}catch(p){a.error("RollInterceptor._executeLocalRoll",[p])}}static async _showConfigurationDialog(e,t,s,i,o,n){a.log("RollInterceptor._showConfigurationDialog",[e,t,s,i,o,n]);try{const c={...i,_rollMethod:async _=>(this._sendRollRequest(e,t,s,_),new Roll("1d20").evaluate({async:!1})),configured:!1},d=o.cls,g=await new d(c,o.options).render(!0)}catch{this._sendRollRequest(e,t,s,i)}}static _getActorOwner(e){a.log("_getActorOwner",[e]);const t=e.ownership||{};for(const[s,i]of Object.entries(t))if(i>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const o=game.users.get(s);if(o&&!o.isGM)return o}return null}static _sendRollRequest(e,t,s,i){var g,_,R,m,h,p,C;a.log("_sendRollRequest",[e,t,s,i]),a.log("_sendRollRequest - config.rolls check",["config.rolls:",i.rolls,"config.rolls[0]:",(g=i.rolls)==null?void 0:g[0],"config.rolls[0].data:",(R=(_=i.rolls)==null?void 0:_[0])==null?void 0:R.data,"config.rolls[0].data.situational:",(p=(h=(m=i.rolls)==null?void 0:m[0])==null?void 0:h.data)==null?void 0:p.situational]);const o=q(),n=A.get(o.skipDialogs.tag);let l=s==null?void 0:s.toLowerCase();l===r.INITIATIVE&&(l=r.INITIATIVE_DIALOG);let c=null,d=null;switch(l){case r.ABILITY:case r.SAVE:c=i.ability;break;case r.SKILL:c=i.skill;break;case r.TOOL:c=i.tool;break;case r.ATTACK:case r.DAMAGE:a.log("_sendRollRequest - Attack/Damage roll config",[s,i]),c=(C=i.subject.item)==null?void 0:C.id,d=i.subject.id;break;case r.HIT_DIE:c=typeof i=="string"?i:i.denomination;break;case r.INITIATIVE_DIALOG:case r.INITIATIVE:c=null;break;case r.DEATH_SAVE:c=null;break;default:a.warn(`Unknown roll type: ${s}`);return}const f={type:"rollRequest",requestId:foundry.utils.randomID(),actorId:e.id,rollType:l,rollKey:c,activityId:d,rollProcessConfig:{...i,_requestedBy:game.user.name},skipDialog:n,targetTokenIds:Array.from(game.user.targets).map(T=>T.id),preserveTargets:A.get(o.useGMTargetTokens.tag)};U.execForUser("handleRollRequest",t.id,f),ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestSent",{player:t.name,actor:e.name}))}}k(Te,"registeredHooks",new Set);function Ne(u,e){var i,o,n,l,c;let t=game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${u}`)||u;const s=u==null?void 0:u.toLowerCase();if(e)switch(s){case r.SKILL:t+=` (${((i=CONFIG.DND5E.skills[e])==null?void 0:i.label)||e})`;break;case r.SAVE:t+=` (${((o=CONFIG.DND5E.abilities[e])==null?void 0:o.label)||e})`;break;case r.ABILITY:t+=` (${((n=CONFIG.DND5E.abilities[e])==null?void 0:n.label)||e})`;break;case r.TOOL:const d=(c=(l=CONFIG.DND5E.enrichmentLookup)==null?void 0:l.tools)==null?void 0:c[e];if(d!=null&&d.id){const f=dnd5e.documents.Trait.getBaseItem(d.id,{indexOnly:!0});t+=` (${(f==null?void 0:f.name)||e})`}else t+=` (${e})`;break;case r.CUSTOM:t=`${t}: ${e}`;break}return t}function we(u,e=Ne){if(u.length===0)return;const t={};for(const i of u){const o=`${i.rollType}_${i.rollKey||""}`;t[o]||(t[o]={rollType:i.rollType,rollKey:i.rollKey,actors:[],gm:i.gm}),t[o].actors.push(i.actor)}const s=Object.values(t);if(s.length===1&&s[0].actors.length===1){const i=s[0];ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestReceived",{gm:i.gm,rollType:e(i.rollType,i.rollKey)}))}else{const i=[];for(const o of s){const n=e(o.rollType,o.rollKey),l=o.actors.join(", ");i.push(`${n} (${l})`)}ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsReceivedMultiple",{gm:s[0].gm,requests:i.join("; ")}))}}function ve(u){const e=u.ownership||{};for(const[t,s]of Object.entries(e))if(s>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const i=game.users.get(t);if(i&&!i.isGM)return i}return null}function Me(u,e=game.user){if(!(u!=null&&u.length))return;u.map(s=>canvas.tokens.get(s)).filter(s=>s).forEach(s=>s.setTarget(!0,{user:e}))}function le(u){return u.type!=="character"&&u.type!=="npc"?!1:Object.entries(u.ownership).some(([e,t])=>{const s=game.users.get(e);return s&&!s.isGM&&t>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})}function pe(u){if(u.type!=="character"&&u.type!=="npc")return!1;const e=game.scenes.active;return e&&e.tokens.some(t=>t.actorId===u.id)}function ae(u,e){if(!game.scenes.active)return;const s=canvas.tokens.placeables.filter(i=>{var o;return((o=i.actor)==null?void 0:o.id)===u});for(const i of s)e?i.control({releaseOthers:!1}):i.release()}function _e(u){return new Promise(e=>setTimeout(e,u))}function qe(){var u;return!((u=ui==null?void 0:ui.sidebar)!=null&&u._collapsed)}function Ge(u){const e=document.querySelector("body");u?e.classList.add("sidebar-expanded"):e.classList.remove("sidebar-expanded")}function Pe(u,e){var n;const t=[];if(!u||e.size===0)return t;const s=$.ROLL_REQUEST_OPTIONS[u];if(!s||!s.subList)return t;const i=Array.from(e)[0],o=game.actors.get(i);if(s.subList==="tools"){const l=((n=CONFIG.DND5E.enrichmentLookup)==null?void 0:n.tools)||CONFIG.DND5E.tools||{};for(const[c,d]of Object.entries(l)){let f=c;if(d!=null&&d.id){const g=dnd5e.documents.Trait.getBaseItem(d.id,{indexOnly:!0});f=(g==null?void 0:g.name)||c}else f=c.replace(/([A-Z])/g," $1").replace(/^./,g=>g.toUpperCase()).trim();t.push({id:c,name:f,rollable:!0})}t.sort((c,d)=>c.name.localeCompare(d.name))}else if(o&&s.actorPath){const l=foundry.utils.getProperty(o,s.actorPath)||{},c=CONFIG.DND5E[s.subList];for(const[d,f]of Object.entries(l)){let g="";s.subList==="skills"&&(c!=null&&c[d])||s.subList==="abilities"&&(c!=null&&c[d])?g=c[d].label:g=f.label||game.i18n.localize(f.name||d)||d,t.push({id:d,name:g,rollable:!0})}s.subList==="skills"&&t.sort((d,f)=>d.name.localeCompare(f.name))}return t}const v=class v{static notify(e,t,s={}){if(!s.batch){ui.notifications[e](t);return}s.batchData&&(v.pendingNotifications.push(s.batchData),v.notificationTimer&&clearTimeout(v.notificationTimer),v.notificationTimer=setTimeout(()=>{we(v.pendingNotifications),v.pendingNotifications=[],v.notificationTimer=null},v.NOTIFICATION_BATCH_DELAY))}static notifyRollRequestsSent(e,t){const s=Object.entries(e);if(s.length!==0)if(s.length===1){const i=Object.values(e)[0],o=i.actors.map(n=>n.name).join(", ");ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsSentSingle",{rollType:t,actors:o,player:i.player.name}))}else{const i=s.map(([o,n])=>{const l=n.actors.map(c=>c.name).join(", ");return`${n.player.name} (${l})`});ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsSentMultiple",{rollType:t,count:s.length,players:i.join("; ")}))}}static clearPending(){v.notificationTimer&&(clearTimeout(v.notificationTimer),v.notificationTimer=null),v.pendingNotifications=[]}};k(v,"pendingNotifications",[]),k(v,"notificationTimer",null),k(v,"NOTIFICATION_BATCH_DELAY",500);let P=v;function He(u){var s;const e=[],t=[];for(const i of u){const o=((s=i.system.attributes.hp)==null?void 0:s.value)||0,n=i.system.attributes.death||{},l=n.success||0,c=n.failure||0;o<=0&&l<3&&c<3?e.push(i):t.push(i.name)}return t.length>0&&P.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.actorsSkippingDeathSave",{actors:t.join(", ")})),e}function Ve(u){const e=[],t=[];for(const s of u){const i=ve(s);i?e.push({actor:s,owner:i}):t.push(s)}return{pcActors:e,npcActors:t}}async function Fe(){return game.combat?!0:await Dialog.confirm({title:game.i18n.localize("COMBAT.Create"),content:"<p>"+game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.noCombatActive")+"</p>",yes:()=>!0,no:()=>!1,defaultYes:!0,options:{classes:["crlngn-rolls-dialog"]}})?(await(await game.combats.documentClass.create({scene:game.scenes.active.id})).activate(),P.notify("info",game.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.combatCreated")),!0):!1}async function xe(u,e){if(!e.combat)return u;const t=u.map(o=>e.actors.get(o)).filter(o=>o),s=[],i=new Set;for(const o of t){const n=e.combat.getCombatantByActor(o.id);n&&n.initiative!==null&&(s.push(o.name),i.add(o.id))}if(s.length>0)if(await Dialog.confirm({title:e.i18n.localize("CRLNGN_ROLLS.ui.dialogs.rerollInitiativeTitle"),content:"<p>"+e.i18n.format("CRLNGN_ROLLS.ui.dialogs.rerollInitiative",{actors:s.join(", ")})+"</p>",yes:()=>!0,no:()=>!1,defaultYes:!1,options:{classes:["crlngn-rolls-dialog"]}})){for(const n of i){const l=e.combat.getCombatantByActor(n);l&&await l.update({initiative:null})}return u}else{const n=u.filter(l=>!i.has(l));return n.length===0&&P.notify("info",e.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.allActorsHaveInitiative")),n}return u}var j;const ee=class ee extends foundry.applications.api.HandlebarsApplicationMixin(foundry.applications.api.ApplicationV2){constructor(t={}){a.log("RollRequestsMenu.constructor");super(t);k(this,"_onClickOutside",t=>{if(a.log("_onClickOutside"),this.isLocked)return;const s=this.element;s&&(t.target.closest(".roll-requests-menu")||s.contains(t.target)||t.target.closest("#crlngn-requests-icon")||t.target.closest(".dialog, .app, .notification")||this.close())});this.selectedActors=new Set,this.currentTab="pc",this.selectedRequestType=null,this.isLocked=!1,this.optionsExpanded=game.user.getFlag($.ID,"menuOptionsExpanded")??!1,this._initializeFromSelectedTokens()}async _prepareContext(t){a.log("_prepareContext");const s=await super._prepareContext(t),i=game.actors.contents,o=[],n=[],l=game.scenes.active;for(const h of i){if(h.type!=="character"&&h.type!=="npc")continue;const p={id:h.id,uuid:h.uuid,name:h.name,img:h.img,selected:this.selectedActors.has(h.id),crlngnStats:this._getActorStats(h)};Object.entries(h.ownership).some(([T,b])=>{const y=game.users.get(T);return y&&!y.isGM&&b>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})?o.push(p):l&&l.tokens.some(b=>b.actorId===h.id)&&n.push(p)}const c=q(),d=A.get(c.rollRequestsEnabled.tag),f=A.get(c.skipDialogs.tag),g=this.currentTab==="pc"?o:n,_=g.length>0&&g.every(h=>this.selectedActors.has(h.id)),R=[];if(this.selectedActors.size>0)for(const[h,p]of Object.entries($.ROLL_REQUEST_OPTIONS))R.push({id:h,name:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${p.name}`)||p.label,rollable:p.subList==null,hasSubList:!!p.subList,selected:this.selectedRequestType===h});const m=Pe(this.selectedRequestType,this.selectedActors);return{...s,actors:g,currentTab:this.currentTab,isPCTab:this.currentTab==="pc",isNPCTab:this.currentTab==="npc",selectedTab:this.currentTab,rollRequestsEnabled:d,skipDialogs:f,selectAllOn:_,hasSelectedActors:this.selectedActors.size>0,requestTypes:R,rollTypes:m,showNames:!0,actorsLocked:this.isLocked,optionsExpanded:this.optionsExpanded}}_getActorStats(t){var n,l,c,d,f,g;a.log("_getActorStats");const s=t.system,i=[];(n=s.attributes)!=null&&n.hp&&i.push({abbrev:"HP",value:s.attributes.hp.value}),(l=s.attributes)!=null&&l.ac&&i.push({abbrev:"AC",value:s.attributes.ac.value});const o=(d=(c=s.attributes)==null?void 0:c.spell)==null?void 0:d.dc;return o&&i.push({abbrev:"DC",value:o}),(g=(f=s.skills)==null?void 0:f.prc)!=null&&g.passive&&i.push({abbrev:"PRC",value:s.skills.prc.passive}),i}_onRender(t,s){if(a.log("_onRender"),super._onRender(t,s),this._attachListeners(),this.optionsExpanded){const i=this.element.querySelector(".options-toggle"),o=this.element.querySelector("li.options");i&&i.classList.add("expanded"),o&&o.classList.add("expanded")}setTimeout(()=>{document.addEventListener("click",this._onClickOutside,!0)},100),this._tokenControlHook=Hooks.on("controlToken",this._onTokenControlChange.bind(this))}_onTokenControlChange(t,s){a.log("_onTokenControlChange"),this.rendered&&(this._ignoreTokenControl||(this._tokenUpdateTimeout&&clearTimeout(this._tokenUpdateTimeout),this._tokenUpdateTimeout=setTimeout(()=>{this._initializeFromSelectedTokens(),this.render(),this._tokenUpdateTimeout=null},100)))}_attachListeners(){var n,l,c,d,f;a.log("_attachListeners");const t=this.element;(n=t.querySelector("#crlngn-requests-toggle"))==null||n.addEventListener("change",this._onToggleRollRequests.bind(this)),(l=t.querySelector("#crlngn-skip-dialogs"))==null||l.addEventListener("change",this._onToggleSkipDialogs.bind(this)),(c=t.querySelector("#crlngn-actors-all"))==null||c.addEventListener("change",this._onToggleSelectAll.bind(this)),(d=t.querySelector("#crlngn-actors-lock"))==null||d.addEventListener("click",this._onToggleLock.bind(this)),(f=t.querySelector(".options-toggle"))==null||f.addEventListener("click",this._onToggleOptions.bind(this)),t.querySelectorAll(".actor-tab").forEach(g=>{g.addEventListener("click",this._onTabClick.bind(this))}),t.querySelectorAll(".actor").forEach(g=>{g.addEventListener("click",this._onActorClick.bind(this))}),t.querySelectorAll(".actor-select").forEach(g=>{g.addEventListener("click",this._onActorSelectClick.bind(this))});const i=t.querySelector(".request-types");i&&i.addEventListener("click",g=>{const _=g.target.closest("li");if(_&&_.dataset.id){const R={...g,currentTarget:_};this._onRequestTypeClick(R)}});const o=t.querySelector(".roll-types");o&&o.addEventListener("click",g=>{const _=g.target.closest("li");if(_&&_.dataset.id){const R={...g,currentTarget:_};this._onRollTypeClick(R)}})}async _onToggleRollRequests(t){a.log("_onToggleRollRequests");const s=q(),i=t.target.checked;await A.set(s.rollRequestsEnabled.tag,i),ye.updateRollRequestsIcon(i)}async _onToggleSkipDialogs(t){a.log("_onToggleSkipDialogs");const s=q(),i=t.target.checked;await A.set(s.skipDialogs.tag,i)}_onToggleSelectAll(t){a.log("_onToggleSelectAll");const s=t.target.checked;this._ignoreTokenControl=!0,(this.currentTab==="pc"?game.actors.contents.filter(o=>le(o)):game.actors.contents.filter(o=>!le(o)&&pe(o))).forEach(o=>{s?(this.selectedActors.add(o.id),ae(o.id,!0)):(this.selectedActors.delete(o.id),ae(o.id,!1))}),setTimeout(()=>{this._ignoreTokenControl=!1},200),this.render(),this._updateRequestTypesVisibility()}_onToggleLock(t){a.log("_onToggleLock"),t.preventDefault(),this.isLocked=!this.isLocked;const s=t.currentTarget;s.classList.remove("fa-lock-keyhole","fa-lock-keyhole-open"),s.classList.add(this.isLocked?"fa-lock-keyhole":"fa-lock-keyhole-open")}async _onToggleOptions(t){a.log("_onToggleOptions"),t.preventDefault(),this.optionsExpanded=!this.optionsExpanded,await game.user.setFlag($.ID,"menuOptionsExpanded",this.optionsExpanded);const s=t.currentTarget||t.target.closest(".options-toggle");s&&s.classList.toggle("expanded",this.optionsExpanded);const i=this.element.querySelector("li.options");i&&i.classList.toggle("expanded",this.optionsExpanded)}_initializeFromSelectedTokens(){var s;a.log("_initializeFromSelectedTokens");const t=((s=canvas.tokens)==null?void 0:s.controlled)||[];this.selectedActors.clear();for(const i of t)if(i.actor&&(this.selectedActors.add(i.actor.id),this.selectedActors.size===1)){const o=le(i.actor);this.currentTab=o?"pc":"npc"}}async _onTabClick(t){var i;a.log("_onTabClick");const s=t.currentTarget.dataset.tab;s!==this.currentTab&&(this.selectedActors.clear(),(i=canvas.tokens)==null||i.releaseAll(),this.selectedRequestType=null,this.currentTab=s,await this.render())}_onActorClick(t){if(a.log("_onActorClick"),t.target.closest(".actor-select"))return;const i=t.currentTarget.dataset.id;this._toggleActorSelection(i)}_onActorSelectClick(t){a.log("_onActorSelectClick"),t.stopPropagation();const s=t.currentTarget.dataset.id;this._toggleActorSelection(s)}_toggleActorSelection(t){a.log("_toggleActorSelection"),this._ignoreTokenControl=!0,this.selectedActors.has(t)?(this.selectedActors.delete(t),ae(t,!1)):(this.selectedActors.add(t),ae(t,!0)),setTimeout(()=>{this._ignoreTokenControl=!1},100),this.render(),this._updateRequestTypesVisibility(),this._updateSelectAllState()}_updateRequestTypesVisibility(){a.log("_updateRequestTypesVisibility"),this.render()}_updateSelectAllState(){a.log("_updateSelectAllState");const t=this.element.querySelector("#crlngn-actors-all"),s=this.currentTab==="pc"?"pc":"npc",i=this.element.querySelectorAll(`.${s}-actors .actor-item input[type="checkbox"]`),o=Array.from(i).filter(n=>n.checked).length;t.checked=o>0&&o===i.length,t.indeterminate=o>0&&o<i.length}async _onRequestTypeClick(t){const s=t.currentTarget,i=s.dataset.id,o=$.ROLL_REQUEST_OPTIONS[i];if(a.log("_onRequestTypeClick",[i,s.dataset,o]),!o){a.error("Unknown request type:",i);return}this.selectedRequestType===i?this.selectedRequestType=null:this.selectedRequestType=i,o.subList?await this.render():this.selectedRequestType&&this._triggerRoll(i,null)}_onRollTypeClick(t){a.log("_onRollTypeClick");const s=t.currentTarget.dataset.id;this._triggerRoll(this.selectedRequestType,s)}_getValidActorIds(t){return t.filter(s=>{const i=game.actors.get(s);if(!i)return!1;const o=le(i),n=!o&&pe(i);return this.currentTab==="pc"&&o||this.currentTab==="npc"&&n})}async _handleCustomRoll(){return await this._showCustomRollDialog()}async _getRollConfiguration(t,s,i,o,n){var d,f,g,_,R,m;const l=q(),c=A.get(l.rollRequestsEnabled.tag);if(!o&&s!==r.CUSTOM){let h;[r.SKILL,r.TOOL].includes(s)?h=be:s===r.HIT_DIE?h=Ce:h=V;const p=await h.getConfiguration(t,s,i,{skipDialogs:o,defaultSendRequest:c});return a.log("_getRollConfiguration",[p]),p}else{const h={rolls:[{parts:[],data:{},options:{}}],advantage:!1,disadvantage:!1,rollMode:game.settings.get("core","rollMode"),chatMessage:!0,isRollRequest:!1,skipDialog:!0,sendRequest:c&&n.length>0};if(s===r.DEATH_SAVE&&(h.target=10),[r.SKILL,r.TOOL].includes(s)&&t.length>0){const p=t[0];let C=null;if(s===r.SKILL){const T=(d=p.system.skills)==null?void 0:d[i];C=(T==null?void 0:T.ability)||((f=CONFIG.DND5E.skills[i])==null?void 0:f.ability)||"int"}else if(s===r.TOOL){const T=(g=p.system.tools)==null?void 0:g[i];C=(T==null?void 0:T.ability)||((m=(R=(_=CONFIG.DND5E.enrichmentLookup)==null?void 0:_.tools)==null?void 0:R[i])==null?void 0:m.ability)||"int"}C&&(h.ability=C)}return h}}async _orchestrateRollsForActors(t,s,i,o,n){const l=q(),c=[],d=[];if(a.log("_orchestrateRollsForActors",[{config:t,rollMethodName:o,rollKey:n}]),t.sendRequest){for(const{actor:f,owner:g}of s){if(!g.active){A.get(l.showOfflineNotifications.tag)&&P.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.playerOffline",{player:g.name})),d.push(f);continue}await this._sendRollRequestToPlayer(f,g,o,n,t,!0),c.push({actor:f,owner:g}),await _e(100)}c.length>0&&this._showConsolidatedNotification(c,o,n)}else i.push(...s.map(({actor:f})=>f));if(d.length>0){const f={...t,skipDialog:!0};await this._handleGMRolls(d,o,n,f)}if(i.length>0){const f={...t};f.fastForward=!0,f.skipDialog=!0,await this._handleGMRolls(i,o,n,f)}}async _triggerRoll(t,s){var m;a.log("_triggerRoll",[t,s]);const i=q(),o=Array.from(this.selectedActors),n=A.get(i.skipDialogs.tag),l=this._getValidActorIds(o);let c=l.map(h=>game.actors.get(h)).filter(h=>h);const d=$.ROLL_REQUEST_OPTIONS[t],f=(m=(d==null?void 0:d.name)||t)==null?void 0:m.toLowerCase();switch(f){case r.CUSTOM:if(s=await this._handleCustomRoll(),!s)return;break;case r.INITIATIVE:case r.INITIATIVE_DIALOG:if(!await Fe())return;if(game.combat){const p=await xe(l,game);if(a.log("_triggerRoll filteredActorIds",[p]),!p.length)return;c=p.map(C=>game.actors.get(C)).filter(C=>C)}break;case r.DEATH_SAVE:c=await He(c);break}if(!c.length){P.notify("warn","No valid actors selected");return}const{pcActors:g,npcActors:_}=Ve(c),R=await this._getRollConfiguration(c,f,s,n,g);a.log("_triggerRoll config",[R]),R&&(await this._orchestrateRollsForActors(R,g,_,f,s),setTimeout(()=>this.close(),500))}async _sendRollRequestToPlayer(t,s,i,o,n,l=!1){a.log("_sendRollRequestToPlayer #A",[i,o]);const c=q();let d=i==null?void 0:i.toLowerCase();if(d===r.ABILITY_CHECK?d=r.ABILITY:d===r.SAVING_THROW?d=r.SAVE:d===r.INITIATIVE_DIALOG&&(d=r.INITIATIVE),d===r.HIT_DIE){const g=t.system.attributes.hd;if(g.value>0)o=g.largestAvailable;else if(await foundry.applications.api.DialogV2.confirm({window:{title:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.hitDie.refillTitle")||"No Hit Dice Available",classes:["crlngn-hit-die-dialog"]},position:{width:420},content:`<p>${game.i18n.format("CRLNGN_ROLLS.ui.dialogs.hitDie.refillMessage",{actor:t.name})||""}</p>`,modal:!0,rejectClose:!1,yes:{label:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.hitDie.refillAndSend")||"Refill & Send",icon:""},no:{label:game.i18n.localize("Cancel")||"Cancel",icon:""}})){try{a.log("About to call handleHitDieRecovery for",[t.name]);const R=await B.handleHitDieRecovery(t);a.log("handleHitDieRecovery completed",[R])}catch(R){a.error("Error calling handleHitDieRecovery:",[R])}o=t.system.attributes.hd.largestAvailable,a.log("_sendRollRequestToPlayer - Hit Die REFILL",[{hdData:t.system.attributes.hd}]),P.notify("info",game.i18n.format("CRLNGN_ROLLS.ui.dialogs.hitDie.refilled",{actor:t.name})||`Hit dice refilled for ${t.name}`)}else return}a.log("_sendRollRequestToPlayer - Hit Die Debug",[{rollType:d,rollKey:o,actor:t.name}]);const f={type:"rollRequest",requestId:foundry.utils.randomID(),actorId:t.id,rollType:d,rollKey:o,activityId:null,rollProcessConfig:{...n,_requestedBy:game.user.name},skipDialog:!1,targetTokenIds:Array.from(game.user.targets).map(g=>g.id),preserveTargets:A.get(c.useGMTargetTokens.tag)};U.execForUser("handleRollRequest",s.id,f),l||P.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestSent",{player:s.name,actor:t.name}))}_showConsolidatedNotification(t,s,i){var c,d,f,g,_;a.log("_showConsolidatedNotification");const o={};for(const{actor:R,owner:m}of t)o[m.id]||(o[m.id]={player:m,actors:[]}),o[m.id].actors.push(R);for(const[R,m]of Object.entries($.ROLL_REQUEST_OPTIONS))if(m.name===s)break;const n=s;let l=game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${n}`)||n;if(i){const R=n.toLowerCase();if(R===r.SKILL)l=`${l} (${((c=CONFIG.DND5E.skills[i])==null?void 0:c.label)||i})`;else if(R===r.SAVING_THROW)l=`${l} (${((d=CONFIG.DND5E.abilities[i])==null?void 0:d.label)||i})`;else if(R===r.ABILITY_CHECK)l=`${l} (${((f=CONFIG.DND5E.abilities[i])==null?void 0:f.label)||i})`;else if(R===r.TOOL){const m=(_=(g=CONFIG.DND5E.enrichmentLookup)==null?void 0:g.tools)==null?void 0:_[i];if(m!=null&&m.id){const h=dnd5e.documents.Trait.getBaseItem(m.id,{indexOnly:!0});l=`${l} (${(h==null?void 0:h.name)||i})`}else l=`${l} (${i})`}else R===r.CUSTOM&&(l=`${l}: ${i}`)}P.notifyRollRequestsSent(o,l)}async _handleGMRolls(t,s,i,o){a.log("_handleGMRolls",[t,s,i,o]);for(const n of t)await this._executeActorRoll(n,s,i,o),await _e(100)}async _executeActorRoll(t,s,i,o){var n,l,c,d,f;a.log("_executeActorRoll",[s,i,o]);try{const g=s.toLowerCase();let _=i;if(g===r.HIT_DIE){const b=t.system.attributes.hd;if(b){const y=["d6","d8","d10","d12","d20"];for(const D of y)if((((n=b[D])==null?void 0:n.value)||0)>0){_=D;break}}if(!_){a.log("_executeActorRoll - No hit dice available",[t.name]),P.notify("warn",game.i18n.format("DND5E.HitDiceWarn",{name:t.name}));return}}const R=((d=(c=(l=o.rolls)==null?void 0:l[0])==null?void 0:c.data)==null?void 0:d.situational)||"",m={rollKey:_,config:{...o,situational:R,rollMode:o.rollMode||game.settings.get("core","rollMode"),advantage:o.advantage||!1,disadvantage:o.disadvantage||!1,target:o.target}},h={configure:!o.fastForward&&!o.skipDialog},p={rollMode:o.rollMode||game.settings.get("core","rollMode"),create:o.chatMessage!==!1},C=((f=o.rolls)==null?void 0:f[0])||{};a.log("_executeActorRoll - rollConfig",[C,m]);const T=B[g];T?(a.log("_executeActorRoll - handler",[T]),await T(t,m,C,h,p)):P.notify("warn",`Unknown roll type: ${s}`)}catch(g){a.error("executeActorRoll",[g]),P.notify("error",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:t.name}))}}async _onClose(t){a.log("_onClose"),await super._onClose(t),this.selectedActors.clear(),this.selectedRequestType=null,document.removeEventListener("click",this._onClickOutside,!0),this._tokenControlHook&&(Hooks.off("controlToken",this._tokenControlHook),this._tokenControlHook=null),this._tokenUpdateTimeout&&(clearTimeout(this._tokenUpdateTimeout),this._tokenUpdateTimeout=null)}setPosition(t={}){return a.log("setPosition"),this}async _showCustomRollDialog(){return a.log("_showCustomRollDialog"),ne.prompt({formula:"",readonly:!1})}static toggle(){a.log("RollRequestsMenu.toggle"),Y(this,j)?Y(this,j).rendered?Y(this,j).close():(Y(this,j)._initializeFromSelectedTokens(),Y(this,j).render(!0)):(Re(this,j,new ee),Y(this,j).render(!0))}};j=new WeakMap,me(ee,j,null),k(ee,"DEFAULT_OPTIONS",{id:"crlngn-requests-menu",classes:["roll-requests-menu"],tag:"div",window:{frame:!1,resizable:!1,minimizable:!1},position:null}),k(ee,"PARTS",{main:{template:`modules/${$.ID}/templates/requests-menus.hbs`}});let ue=ee;class ye{static addSidebarControls(e,t,s){if(!game.user.isGM||e.id!=="chat")return;const o=(t[0]||t).querySelector("#chat-controls");if(!o||o.querySelector(".roll-requests-icon"))return;const n=q(),l=A.get(n.rollRequestsEnabled.tag),c=document.createElement("a");c.id="crlngn-requests-icon",c.setAttribute("data-tooltip-direction","RIGHT"),c.className=`chat-control-icon roll-requests-icon${l?" active":""}`,c.title=game.i18n.localize("CRLNGN_ROLLS.ui.menus.rollRequestsTitle"),c.innerHTML=`<i class="fas fa-bolt${l?"":"-slash"}"></i>`;const d=o.querySelector(".chat-control-icon");d?d.parentNode.insertBefore(c,d):o.insertBefore(c,o.firstChild),c.addEventListener("click",()=>{ue.toggle()})}static updateRollRequestsIcon(e){const t=document.querySelector("#crlngn-requests-icon i");t&&(t.className=`fas fa-bolt${e?"":"-slash"}`)}}class De{static initialize(){Hooks.once(Z.INIT,this._onInit.bind(this)),Hooks.once(Z.READY,this._onReady.bind(this))}static _onInit(){q(),document.body.classList.add("crlngn-rolls"),A.registerSettings(),W.initialize(),this._registerHook(Z.RENDER_SIDEBAR_TAB,this._onRenderSidebarTab.bind(this))}static _onReady(){const e=q();A.get(e.debugMode.tag)&&(CONFIG.debug.hooks=!0),Te.initialize(),this._registerDnd5eHooks(),game.user.isGM?this._registerGMHooks():(W.getDiceConfig(),this._registerPlayerHooks()),Ge(qe())}static _registerDnd5eHooks(){this._registerHook(M.POST_ROLL_CONFIG,this._onPostRollConfig.bind(this)),this._registerHook(Z.PRE_CREATE_CHAT_MESSAGE,this._onPreCreateChatMessage.bind(this)),this._registerHook(Z.PRE_CREATE_CHAT_MESSAGE,this._onPreCreateChatMessageFlavor.bind(this)),this._registerHook(M.RENDER_ROLL_CONFIGURATION_DIALOG,this._onRenderRollConfigDialog.bind(this)),this._registerHook(M.RENDER_SKILL_TOOL_ROLL_DIALOG,this._onRenderSkillToolDialog.bind(this)),this._registerHook(M.PRE_USE_ACTIVITY,this._onPreUseActivity.bind(this))}static _registerGMHooks(){this._registerHook(Z.USER_CONNECTED,this._onUserConnected.bind(this)),game.users.forEach(e=>{this._onUserConnected(e)})}static _registerPlayerHooks(){this._registerHook(M.PRE_ROLL_HIT_DIE_V2,this._onPreRollHitDieV2.bind(this)),this._registerHook(M.PRE_ROLL_INITIATIVE_DIALOG_V2,this._onPreRollInitiativeDialogV2.bind(this)),this._registerHook(M.PRE_ROLL_ATTACK_V2,this._onPreRollAttackV2.bind(this))}static _onPostRollConfig(e,t,s,i){t._showRequestedBy&&e.length>0&&(i.data=i.data||{},i.data._showRequestedBy=!0,i.data._requestedBy=t._requestedBy)}static _onPreCreateChatMessage(e,t,s,i){var o;if(t._showRequestedBy&&((o=t.rolls)==null?void 0:o.length)>0){const n=t._requestedBy||"GM",l=game.i18n.format("CRLNGN_ROLL_REQUESTS.chat.requestedBy",{gm:n}),c=t.flavor||"";t.flavor=c?`${c} ${l}`:l}}static _onPreCreateChatMessageFlavor(e,t,s,i){var o,n;if(((o=t.rolls)==null?void 0:o.length)>0&&t.rolls[0])try{const l=t.rolls[0];(n=l.options)!=null&&n._customFlavor&&(t.flavor=l.options._customFlavor)}catch{}}static _onRenderRollConfigDialog(e,t,s){var l;a.log("_onRenderRollConfigDialog triggered",[e,s]);const i=(l=t.querySelector(".window-title"))==null?void 0:l.textContent;if(i&&i.includes("Hit Die")){this._onRenderHitDieDialog(e,t,s);return}if(e._situationalTriggered)return;const o=t.querySelectorAll('input[name*="situational"]');a.log("Situational inputs:",[o.length]);let n=!1;o.forEach((c,d)=>{var f,g,_,R,m;!c.value&&((R=(_=(g=(f=e.config)==null?void 0:f.rolls)==null?void 0:g[0])==null?void 0:_.data)!=null&&R.situational)&&((m=e.config)!=null&&m.isConcentration)&&(c.value=e.config.rolls[0].data.situational,n=!0),c.value&&!n&&(e._situationalTriggered=!0,n=!0,setTimeout(()=>{var h,p,C;c.dispatchEvent(new Event("change",{bubbles:!0,cancelable:!1})),(C=(p=(h=e.config)==null?void 0:h.rolls)==null?void 0:p[0])!=null&&C.data&&delete e.config.rolls[0].data.situational},50))})}static _onUserConnected(e){e.active&&e.id!==game.user.id&&W.requestDiceConfigFromUser(e.id)}static _onRenderSidebarTab(e,t,s){ye.addSidebarControls(e,t,s)}static _registerHook(e,t){const s=Hooks.on(e,t);return this.registeredHooks.set(`${e}_${s}`,s),s}static unregisterAll(){this.registeredHooks.forEach((e,t)=>{const s=t.split("_")[0];Hooks.off(s,e)}),this.registeredHooks.clear()}static isRegistered(e){for(const t of this.registeredHooks.keys())if(t.startsWith(`${e}_`))return!0;return!1}static _onPreRollHitDieV2(e,t,s){if(a.log("_onPreRollHitDieV2 triggered",[e,t,s]),e.rolls&&e.rolls.length>1){const i=e.rolls[1];i&&i.data&&i.data.situational&&(e.rolls[0].data||(e.rolls[0].data={}),e.rolls[0].data.situational=i.data.situational),e.rolls=e.rolls.slice(0,1),a.log("Cleaned up hit die rolls",e.rolls)}}static _onPreRollInitiativeDialogV2(e,t,s){a.log("_onPreRollInitiativeDialogV2 triggered",[e,t,s]);const i=e.subject;if(i&&i._initiativeSituationalBonus){if(!e.rolls||e.rolls.length===0){const o=i.getInitiativeRollConfig({});e.rolls=o.rolls||[]}e.rolls.length>0&&(e.rolls[0].data||(e.rolls[0].data={}),e.rolls[0].data.situational=i._initiativeSituationalBonus,a.log("Added situational bonus to initiative dialog",[{bonus:i._initiativeSituationalBonus,rolls:e.rolls}]),delete i._initiativeSituationalBonus)}}static _onPreRollAttackV2(e,t,s){var o,n;a.log("_onPreRollAttackV2 triggered",[e,t,s]);const i=(n=(o=e.subject)==null?void 0:o.item)==null?void 0:n.getFlag(G,"tempAttackConfig");if(i){if(a.log("_onPreRollAttackV2 - Found stored request config from flag",[i]),i.isRollRequest===!1||i.skipDialog===!0||i.sendRequest===!1){a.log("_onPreRollAttackV2 - Not a roll request, skipping",[i]);return}i.attackMode&&(e.attackMode=i.attackMode),i.ammunition&&(e.ammunition=i.ammunition),i.mastery!==void 0&&(e.mastery=i.mastery),i.advantage&&(e.advantage=!0),i.disadvantage&&(e.disadvantage=!0),i.situational&&((!e.rolls||e.rolls.length===0)&&(e.rolls=[{parts:[],data:{},options:{}}]),e.rolls[0].data||(e.rolls[0].data={}),e.rolls[0].data.situational=i.situational),a.log("_onPreRollAttackV2 - Applied stored configuration to attack roll",[e])}}static _onPreUseActivity(e,t,s,i){if(a.log("_onPreUseActivity triggered",[e,t,s,i]),!game.user.isGM)return;e.item.unsetFlag(G,"tempAttackConfig");const o=q();if(!A.get(o.rollRequestsEnabled.tag))return;const l=e.actor;if(!l)return;Object.entries(l.ownership).some(([d,f])=>{const g=game.users.get(d);return g&&!g.isGM&&f>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})&&(a.log("Preventing usage message for player-owned actor",[l.name]),i.create=!1)}static _onRenderSkillToolDialog(e,t,s){var l,c;if(a.log("_onRenderSkillToolDialog triggered",[e]),!((l=e.config)!=null&&l.isRollRequest)||!((c=e.config)!=null&&c.ability)||e._abilityFlavorFixed)return;const i=t.querySelector('select[name="ability"]');if(!i)return;const o=i.value,n=e.config.ability;o===n&&(e._abilityFlavorFixed=!0,setTimeout(()=>{const d=new Event("change",{bubbles:!0,cancelable:!0});i.dispatchEvent(d)},50))}static _onRenderHitDieDialog(e,t,s){var c,d,f,g,_;const i=(c=t.querySelector(".window-title"))==null?void 0:c.textContent;if(!i||!i.includes("Hit Die"))return;const o=(d=e.config)==null?void 0:d.subject;if(!o)return;a.log("_onRenderHitDieDialog triggered",[{app:e,actor:o.name,hd:o.system.attributes.hd}]);const n=o.system.attributes.hd,l=[];for(const R of Object.values(o.classes||{})){const m=R.system.hitDice,h=R.system.levels,p=R.system.hitDiceUsed||0,C=h-p;if(C>0){const T=l.find(b=>b.denomination===m);T?(T.available+=C,T.classes.push(R.name)):l.push({denomination:m,available:C,max:h,classes:[R.name]})}}if(l.length>1){const R=t.querySelector(".formulas");if(!R)return;const m=((_=(g=(f=e.config.rolls)==null?void 0:f[0])==null?void 0:g.options)==null?void 0:_.denomination)||n.largestAvailable,h=`
        <div class="form-group">
          <label>${game.i18n.localize("DND5E.HitDice")}</label>
          <select name="hitDieSelector" class="hit-die-selector">
            ${l.map(C=>`
              <option value="${C.denomination}" ${C.denomination===m?"selected":""}>
                ${C.denomination} (${C.available} ${game.i18n.localize("DND5E.available")}) - ${C.classes.join(", ")}
              </option>
            `).join("")}
          </select>
        </div>
      `,p=R.querySelector(".form-group");if(p){p.insertAdjacentHTML("beforebegin",h);const C=t.querySelector(".hit-die-selector");C==null||C.addEventListener("change",async T=>{var S,E,I;const b=T.target.value;(E=(S=e.config.rolls)==null?void 0:S[0])!=null&&E.options&&(e.config.rolls[0].options.denomination=b);const y=o.system.abilities.con.mod,D=`max(0, 1${b} + ${y})`;if((I=e.config.rolls)!=null&&I[0]){e.config.rolls[0].formula=D;const L=new CONFIG.Dice.D20Roll(D,o.getRollData());await L.evaluate({async:!1}),e.config.rolls[0]=L}e.render(!0),a.log("Updated hit die denomination",[{newDenom:b,newFormula:D,conMod:y}])})}}}}k(De,"registeredHooks",new Map);class ge{static async handleRequest(e){var s;if(a.log("handleRequest",[e]),game.user.isGM)return;const t=game.actors.get(e.actorId);!t||!t.isOwner||(e.preserveTargets&&((s=e.targetTokenIds)==null?void 0:s.length)>0&&game.user.targets.size===0&&Me(e.targetTokenIds),P.notify("info","",{batch:!0,batchData:{actor:t.name,rollType:e.rollType,rollKey:e.rollKey,gm:e.rollProcessConfig._requestedBy||"GM"}}),ge.executePlayerRollRequest(t,e))}static async executePlayerRollRequest(e,t){var s,i,o,n,l;a.log("executePlayerRollRequest",[e,t]),a.log("executePlayerRollRequest - checking rolls",["rollProcessConfig:",t.rollProcessConfig,"rollProcessConfig.rolls:",t.rollProcessConfig.rolls,"rollProcessConfig.rolls[0]:",(s=t.rollProcessConfig.rolls)==null?void 0:s[0],"rollProcessConfig.rolls[0].data:",(o=(i=t.rollProcessConfig.rolls)==null?void 0:i[0])==null?void 0:o.data]);try{const c=(n=t.rollType)==null?void 0:n.toLowerCase(),d=((l=t.rollProcessConfig.rolls)==null?void 0:l[0])||{parts:[],data:{},options:{}},g={configure:!(game.user.isGM?t.skipDialog:!1)},_={rollMode:t.rollProcessConfig.rollMode||game.settings.get("core","rollMode"),create:!0},R={rollKey:t.rollKey,activityId:t.activityId,config:t.rollProcessConfig};a.log("executePlayerRollRequest",[R,d]);const m=B[c];m?await m(e,R,d,g,_):(a.warn(`No handler found for roll type: ${c}`),P.notify("warn",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:e.name||"Unknown Actor"})))}catch(c){a.error("Error executing roll request:",[c]),P.notify("error",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:e.name||"Unknown Actor"}))}}}class X{static init(){U.initialize(X.registerSocketCalls),De.initialize()}static getDiceConfig(){return W.getDiceConfig()}static receiveDiceConfig(e,t){W.receiveDiceConfig(e,t)}static async handleRollRequest(e){return ge.handleRequest(e)}static registerSocketCalls(){U.registerCall(ce.getDiceConfig,X.getDiceConfig),U.registerCall(ce.receiveDiceConfig,X.receiveDiceConfig),U.registerCall(ce.handleRollRequest,X.handleRollRequest)}}X.init();
//# sourceMappingURL=crlngn-roll-requests.js.map
