var F=Object.defineProperty;var B=(N,t,e)=>t in N?F(N,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):N[t]=e;var T=(N,t,e)=>B(N,typeof t!="symbol"?t+"":t,e);const x={INIT:"init",READY:"ready",RENDER_SIDEBAR_TAB:"renderSidebarTab",USER_CONNECTED:"userConnected"},$={READY:"socketlib.ready"},A={PRE_ROLL_ABILITY_CHECK:"dnd5e.preRollAbilityCheckV2",PRE_ROLL_SAVING_THROW:"dnd5e.preRollSavingThrowV2",PRE_ROLL_DEATH_SAVE_V2:"dnd5e.preRollDeathSaveV2",PRE_ROLL_SKILL_V2:"dnd5e.preRollSkillV2",PRE_ROLL_TOOL_V2:"dnd5e.preRollToolV2",PRE_ROLL_HIT_DIE_V2:"dnd5e.preRollHitDieV2",PRE_ROLL_INITIATIVE:"dnd5e.preRollInitiative",PRE_ROLL_ATTACK_V2:"dnd5e.preRollAttackV2",PRE_ROLL_DAMAGE_V2:"dnd5e.preRollDamageV2"},I="crlngn-roll-requests",z=["%cFlash Rolls 5e","color:rgb(47, 151, 161); font-weight: bold;","|"],j={ABILITY_CHECK:{name:"abilityCheck",label:"Ability Check",subList:"abilities",actorPath:"system.abilities"},SAVING_THROW:{name:"savingThrow",label:"Saving Throw",subList:"abilities",actorPath:"system.abilities"},SKILL:{name:"skill",label:"Skill Check",subList:"skills",actorPath:"system.skills"},TOOL:{name:"tool",label:"Tool Check",subList:"tools",actorPath:"system.tools"},CONCENTRATION:{name:"concentration",label:"Concentration Check",subList:null,actorPath:""},INITIATIVE:{name:"initiativeDialog",label:"Initiative Roll",subList:null,actorPath:""},DEATH_SAVE:{name:"deathSave",label:"Death Save",subList:null,actorPath:""},CUSTOM:{name:"custom",label:"Custom Roll",subList:null,actorPath:""}},D={ID:I,ROLL_REQUEST_OPTIONS:j},P=class P{static log(t="",e=[],l=!1){try{const s=game.settings.get(I,"debug-mode")||P.debugOn;if(!(l||s))return;console.log(...z,t,...e)}catch{(l||P.debugOn)&&console.log(...z,t,...e)}}static warn(t="",e=[]){console.warn(...z,t,...e)}static error(t,e={ui:!1,console:!0,permanent:!1}){var l;e.ui&&((l=ui.notifications)==null||l.error(t,{localize:!0,permanent:e.permanent})),e.console&&console.error(...z,t)}};T(P,"debugOn",!1);let i=P;const q={checkbox:"checkbox"},G={client:"client",world:"world"},C=()=>({debugMode:{tag:"debug-mode",label:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.hint"),propType:Boolean,inputType:q.checkbox,default:!0,scope:G.client,config:!0},rollRequestsEnabled:{tag:"roll-requests-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.hint"),propType:Boolean,inputType:q.checkbox,default:!0,scope:G.world,config:!0},skipDialogs:{tag:"skip-dialogs",label:game.i18n.localize("CRLNGN_ROLLS.settings.skipDialogs.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.skipDialogs.hint"),propType:Boolean,inputType:q.checkbox,default:!1,scope:G.world,config:!0},useGMTargetTokens:{tag:"use-gm-target-tokens",label:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.hint"),propType:Boolean,inputType:q.checkbox,default:!1,scope:G.world,config:!0},rollInterceptionEnabled:{tag:"roll-interception-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollInterceptionEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollInterceptionEnabled.hint"),propType:Boolean,inputType:q.checkbox,default:!0,scope:G.world,config:!0},showOfflineNotifications:{tag:"show-offline-notifications",label:game.i18n.localize("CRLNGN_ROLLS.settings.showOfflineNotifications.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.showOfflineNotifications.hint"),propType:Boolean,inputType:q.checkbox,default:!0,scope:G.world,config:!0}});class k{static registerSettings(){const t=C();Object.entries(t).forEach(async l=>{const s=l[1];i.log("Registering... ",[l]);const o={name:s.label,hint:s.hint,default:s.default,type:s.propType,scope:s.scope,config:s.config,requiresReload:s.requiresReload||!1,onChange:a=>k.apply(s.tag,a)};s.choices&&(o.choices=s.choices),await game.settings.register(I,s.tag,o),(k.get(s.tag)===void 0||k.get(s.tag)===null)&&k.set(s.tag,s.default),i.log("registerSettings",[s.tag,k.get(s.tag)])})}static get(t,e=I){if(!t)return null;let l=!1;if(e===I)l=game.settings.get(e,t);else{let o=game.settings.storage.get("client")[`${e}.${t}`];o===void 0&&(o=game.settings.storage.get("world").getSetting(`${e}.${t}`),l=o==null?void 0:o.value),i.log("GET Setting",[o,l])}return l}static set(t,e,l=I){if(!t)return!1;let s=game.settings.storage.get("client")[`${l}.${t}`];s||(s=game.settings.storage.get("world").getSetting(`${l}.${t}`)),i.log("Setting",[t,s]);try{game.settings.set(l,t,e)}catch{i.log("Unable to change setting",[t,s])}return!0}static apply(t,e){const l=C();switch(t){case l.rollRequestsEnabled.tag:k.applyRollRequestsEnabled(e);break}}static applyRollRequestsEnabled(t){const e=document.querySelector("#chat-controls .chat-control-icon.roll-requests-icon");e&&(t?e.classList.add("active"):e.classList.remove("active"))}}const f=class f{static serializeForTransport(t,e=!1){return t==null||(e&&t.rolls&&Array.isArray(t.rolls)&&(t.rolls=t.rolls.map(l=>l instanceof Roll?l.toJSON():l)),i.log("ROLLS DATA",[t,t.subject])),t}static deserializeFromTransport(t,e=!1){let l={...t};if(!t)return l;if(e&&t.rolls&&t.rolls.length>0){const s=l.rolls.map(o=>{let a=o;return typeof o=="string"?a=Roll.fromJSON(o):a=Roll.fromJSON(JSON.stringify(o)),a});return l.rolls=[...s],l}return l}};T(f,"socket"),T(f,"_activeExecutions",new Map),T(f,"initialize",t=>{Hooks.once($.READY,()=>{if(i.log("Attempting to register module...",[]),typeof socketlib>"u"){i.error("SocketUtil Error: socketlib is not loaded. Ensure it is installed and enabled."),ui.notifications.error(game.i18n.localize("CRLNGN_ROLLS.notifications.socketlibMissing"),{permanent:!0});return}try{f.socket=socketlib.registerModule(I),t&&t(),i.log("SocketUtil | Module registered",[f.socket])}catch(e){i.log("Problem registering module",[e])}})}),T(f,"registerCall",(t,e)=>{f.socket?(f.socket.register(t,e),i.log("SocketUtil - Registered callback",[f.socket,t])):i.log("SocketUtil - Failed to register callback (socket not initialized)",[f.socket,t])}),T(f,"sendMessage",(t,e)=>{i.log("SocketUtil - sendMessage",[t]),e&&e()}),T(f,"execForGMs",async(t,...e)=>{if(!f.socket){i.log("SocketUtil - Socket not initialized. Cannot execute as GM.",[]);return}return await f.socket.executeForAllGMs(t,...e)}),T(f,"execForAll",async(t,...e)=>{if(!f.socket){i.log("SocketUtil - Socket not initialized. Cannot execute for all clients.",[]);return}return await f.socket.executeForEveryone(t,...e)}),T(f,"execForUser",async(t,e,...l)=>{if(!f.socket){i.log("SocketUtil - Socket not initialized. Cannot execute as user.",[]);return}if(e===game.user.id)return i.log("SocketUtil - Preventing recursive call",[e]),null;const s=`${t}-${e}`;if(f._activeExecutions.has(s))return i.log("SocketUtil - Preventing recursive call",[s]),null;f._activeExecutions.set(s,!0);try{const o=await f.socket.executeAsUser(t,e,...l);return i.log("SocketUtil - Executed as user.",[o]),o}catch(o){return i.log("SocketUtil - Error executing as user",[o]),null}finally{f._activeExecutions.delete(s)}});let O=f;class M{static findActivityForRoll(t,e){var s;if(!((s=t==null?void 0:t.system)!=null&&s.activities))return null;const l=t.system.activities;switch(e){case"attack":const o=l.getByType("attack");return(o==null?void 0:o[0])||null;case"damage":const a=l.getByType("attack");if((a==null?void 0:a.length)>0)return a[0];const r=l.getByType("damage");if((r==null?void 0:r.length)>0)return r[0];const n=l.getByType("save");return(n==null?void 0:n.length)>0?n[0]:null;case"itemSave":const u=l.getByType("save");return(u==null?void 0:u[0])||null;default:return null}}static getActivitiesByType(t,e){var l;return(l=t==null?void 0:t.system)!=null&&l.activities?t.system.activities.getByType(e):[]}static hasActivityForRoll(t,e){return!!this.findActivityForRoll(t,e)}static async executeActivityRoll(t,e,l,s,o){var n,u,c,g;const a=t.items.get(l);if(!a)throw new Error(`Item ${l} not found on actor ${t.name}`);let r=null;if(s&&(r=(n=a.system.activities)==null?void 0:n.get(s),r||i.log("ActivityUtil.executeActivityRoll",["Activity not found by ID, falling back to search",{activityId:s,itemName:a.name,availableActivities:(u=a.system.activities)==null?void 0:u.map(R=>({id:R.id,type:R.type}))}])),r||(r=this.findActivityForRoll(a,e)),r)switch(i.log("ActivityUtil.executeActivityRoll",["Executing activity roll",{rollType:e,activityId:s,itemName:a.name,activityType:r.type}]),e){case"attack":i.log("ActivityUtil.executeActivityRoll",["Executing attack roll",{hasTargets:game.user.targets.size>0,targetCount:game.user.targets.size,skipDialog:o.fastForward,isRollRequest:o.isRollRequest,isGM:game.user.isGM}]);const R={configure:!0};if(MidiQOL){await M.syntheticItemRoll(a,{...o}),i.log("ActivityUtil.executeActivityRoll",["MidiQOL",MidiQOL,s,(c=MidiQOL==null?void 0:MidiQOL.Workflow)==null?void 0:c.getWorkflow(r.uuid)]);return}else return await r.use(usageConfig,R);case"damage":if(MidiQOL){const E=(g=MidiQOL==null?void 0:MidiQOL.Workflow)==null?void 0:g.getWorkflow(r.uuid),m=await E.activity.rollDamage({...o,workflow:E});i.log("ActivityUtil.executeActivityRoll",["MidiQOL / Damage",m]);return}else return await r.rollDamage(o);case"itemSave":return await a.use({activity:r.id},{skipDialog:o.fastForward});default:throw new Error(`Unknown roll type: ${e}`)}else{switch(i.log("ActivityUtil.executeActivityRoll",["No activity found, using legacy methods",{rollType:e,itemName:a.name,hasLegacyMethod:!!(a.rollAttack||a.rollDamage)}]),e){case"attack":if(a.rollAttack)return await a.rollAttack(o);break;case"damage":if(a.rollDamage)return await a.rollDamage(o);break;case"itemSave":return await a.use({},{skipDialog:o.fastForward})}throw new Error(`No suitable method found for ${e} on item ${a.name}`)}}static getActivityDisplayInfo(t){return t?{name:t.name||t.constructor.metadata.label,type:t.type,icon:t.constructor.metadata.icon,canAttack:t.type==="attack",canDamage:["attack","damage","save"].includes(t.type),canSave:t.type==="save"}:null}static getDamageFormula(t){var l,s;if(!((s=(l=t==null?void 0:t.damage)==null?void 0:l.parts)!=null&&s.length))return null;const e=t.damage.parts.map(o=>o.formula).filter(o=>o);return e.length>0?e.join(" + "):null}static async syntheticItemRoll(t,e={}){let l={consumeUsage:!1,consumeSpellSlot:!1},s={configureDialog:!0,workflowOptions:{autoRollAttack:!1,autoFastAttack:!1,autoRollDamage:"none",autoFastDamage:!1}};return e={...l,...e},i.log("ActivityUtil.syntheticItemRoll",["Executing synthetic item roll",t,e]),await MidiQOL.completeItemUse(t,e,s)}static async replaceDamage(t,e,{ignoreCrit:l=!1,damageType:s}={}){e=String(e),t.isCritical&&!l&&(e=await rollUtils.getCriticalFormula(e,t.item.getRollData()));let o=await new CONFIG.Dice.DamageRoll(e).evaluate();return await t.setDamageRolls([o]),i.log("ActivityUtil.replaceDamage",["Replaced damage",e,o,t.activity]),o}}class U extends foundry.applications.api.HandlebarsApplicationMixin(foundry.applications.api.ApplicationV2){constructor(e={}){super(e);T(this,"_onClickOutside",e=>{if(this.isLocked)return;const l=this.element;l&&(e.target.closest(".roll-requests-menu")||l.contains(e.target)||e.target.closest("#crlngn-requests-icon")||e.target.closest(".dialog, .app, .notification")||this.close())});this.selectedActors=new Set,this.currentTab="pc",this.selectedRequestType=null,this.isLocked=!1,this._initializeFromSelectedTokens()}async _prepareContext(e){var L;const l=await super._prepareContext(e),s=game.actors.contents,o=[],a=[],r=game.scenes.active;for(const h of s){if(h.type!=="character"&&h.type!=="npc")continue;const b={id:h.id,uuid:h.uuid,name:h.name,img:h.img,selected:this.selectedActors.has(h.id),crlngnStats:this._getActorStats(h)};Object.entries(h.ownership).some(([_,p])=>{const y=game.users.get(_);return y&&!y.isGM&&p>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})?o.push(b):r&&r.tokens.some(p=>p.actorId===h.id)&&a.push(b)}const n=C(),u=k.get(n.rollRequestsEnabled.tag),c=k.get(n.skipDialogs.tag),g=this.currentTab==="pc"?o:a,R=g.length>0&&g.every(h=>this.selectedActors.has(h.id)),E=[];if(this.selectedActors.size>0)for(const[h,b]of Object.entries(D.ROLL_REQUEST_OPTIONS))E.push({id:h,name:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${b.name}`)||b.label,rollable:b.subList==null,hasSubList:!!b.subList,selected:this.selectedRequestType===h});const m=[];if(this.selectedRequestType&&this.selectedActors.size>0){const h=D.ROLL_REQUEST_OPTIONS[this.selectedRequestType];if(h&&h.subList){const b=Array.from(this.selectedActors)[0],S=game.actors.get(b);if(h.subList==="tools"){const _=((L=CONFIG.DND5E.enrichmentLookup)==null?void 0:L.tools)||CONFIG.DND5E.tools||{};for(const[p,y]of Object.entries(_)){let w=p;if(y!=null&&y.id){const v=dnd5e.documents.Trait.getBaseItem(y.id,{indexOnly:!0});w=(v==null?void 0:v.name)||p}else w=p.replace(/([A-Z])/g," $1").replace(/^./,v=>v.toUpperCase()).trim();m.push({id:p,name:w,rollable:!0})}m.sort((p,y)=>p.name.localeCompare(y.name))}else if(S&&h.actorPath){const _=foundry.utils.getProperty(S,h.actorPath)||{},p=CONFIG.DND5E[h.subList];for(const[y,w]of Object.entries(_)){let v="";h.subList==="skills"&&(p!=null&&p[y])||h.subList==="abilities"&&(p!=null&&p[y])?v=p[y].label:v=w.label||game.i18n.localize(w.name||y)||y,m.push({id:y,name:v,rollable:!0})}h.subList==="skills"&&m.sort((y,w)=>y.name.localeCompare(w.name))}}}return{...l,actors:g,currentTab:this.currentTab,isPCTab:this.currentTab==="pc",isNPCTab:this.currentTab==="npc",selectedTab:this.currentTab,rollRequestsEnabled:u,skipDialogs:c,selectAllOn:R,hasSelectedActors:this.selectedActors.size>0,requestTypes:E,rollTypes:m,showNames:!0,actorsLocked:this.isLocked}}_getActorStats(e){var o,a,r,n,u;const l=e.system,s=[];return(o=l.attributes)!=null&&o.hp&&s.push({abbrev:"HP",value:l.attributes.hp.value}),(a=l.attributes)!=null&&a.ac&&s.push({abbrev:"AC",value:l.attributes.ac.value}),(r=l.attributes)!=null&&r.spelldc&&s.push({abbrev:"DC",value:l.attributes.spelldc}),(u=(n=l.skills)==null?void 0:n.prc)!=null&&u.passive&&s.push({abbrev:"PP",value:l.skills.prc.passive}),s}_onRender(e,l){super._onRender(e,l),this._attachListeners(),setTimeout(()=>{document.addEventListener("click",this._onClickOutside,!0)},100),this._tokenControlHook=Hooks.on("controlToken",this._onTokenControlChange.bind(this))}_onTokenControlChange(e,l){this.rendered&&(this._ignoreTokenControl||(this._tokenUpdateTimeout&&clearTimeout(this._tokenUpdateTimeout),this._tokenUpdateTimeout=setTimeout(()=>{this._initializeFromSelectedTokens(),this.render(),this._tokenUpdateTimeout=null},100)))}_attachListeners(){var a,r,n,u;i.log("Attaching listeners",[]);const e=this.element;(a=e.querySelector("#crlngn-requests-toggle"))==null||a.addEventListener("change",this._onToggleRollRequests.bind(this)),(r=e.querySelector("#crlngn-skip-dialogs"))==null||r.addEventListener("change",this._onToggleSkipDialogs.bind(this)),(n=e.querySelector("#crlngn-actors-all"))==null||n.addEventListener("change",this._onToggleSelectAll.bind(this)),(u=e.querySelector("#crlngn-actors-lock"))==null||u.addEventListener("click",this._onToggleLock.bind(this));const l=e.querySelectorAll(".actor-tab");i.log("Found tabs:",[l.length]),l.forEach(c=>{c.addEventListener("click",this._onTabClick.bind(this))}),e.querySelectorAll(".actor").forEach(c=>{c.addEventListener("click",this._onActorClick.bind(this))}),e.querySelectorAll(".actor-select").forEach(c=>{c.addEventListener("click",this._onActorSelectClick.bind(this))});const s=e.querySelector(".request-types");s&&s.addEventListener("click",c=>{const g=c.target.closest("li");if(g&&g.dataset.id){const R={...c,currentTarget:g};this._onRequestTypeClick(R)}});const o=e.querySelector(".roll-types");o&&o.addEventListener("click",c=>{const g=c.target.closest("li");if(g&&g.dataset.id){const R={...c,currentTarget:g};this._onRollTypeClick(R)}})}async _onToggleRollRequests(e){const l=C(),s=e.target.checked;await k.set(l.rollRequestsEnabled.tag,s),H.updateRollRequestsIcon(s),i.log("Roll requests enabled:",[s])}async _onToggleSkipDialogs(e){const l=C(),s=e.target.checked;await k.set(l.skipDialogs.tag,s),i.log("Skip dialogs:",[s])}_onToggleSelectAll(e){const l=e.target.checked;this._ignoreTokenControl=!0,(this.currentTab==="pc"?game.actors.contents.filter(o=>this._isPlayerOwned(o)):game.actors.contents.filter(o=>!this._isPlayerOwned(o)&&this._hasTokenInScene(o))).forEach(o=>{l?(this.selectedActors.add(o.id),this._updateCanvasTokenSelection(o.id,!0)):(this.selectedActors.delete(o.id),this._updateCanvasTokenSelection(o.id,!1))}),setTimeout(()=>{this._ignoreTokenControl=!1},200),this.render(),this._updateRequestTypesVisibility(),i.log("Select all:",[l,"for",this.currentTab])}_onToggleLock(e){e.preventDefault(),this.isLocked=!this.isLocked;const l=e.currentTarget;l.classList.remove("fa-lock-keyhole","fa-lock-keyhole-open"),l.classList.add(this.isLocked?"fa-lock-keyhole":"fa-lock-keyhole-open"),i.log("Lock toggled:",[this.isLocked])}_initializeFromSelectedTokens(){var l;const e=((l=canvas.tokens)==null?void 0:l.controlled)||[];this.selectedActors.clear();for(const s of e)if(s.actor&&(this.selectedActors.add(s.actor.id),this.selectedActors.size===1)){const o=this._isPlayerOwned(s.actor);this.currentTab=o?"pc":"npc"}i.log("Initialized with selected tokens:",[Array.from(this.selectedActors)])}_isPlayerOwned(e){return e.type!=="character"&&e.type!=="npc"?!1:Object.entries(e.ownership).some(([l,s])=>{const o=game.users.get(l);return o&&!o.isGM&&s>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})}_hasTokenInScene(e){if(e.type!=="character"&&e.type!=="npc")return!1;const l=game.scenes.active;return l&&l.tokens.some(s=>s.actorId===e.id)}async _onTabClick(e){var s;const l=e.currentTarget.dataset.tab;i.log("Tab clicked:",[l,this.currentTab]),l!==this.currentTab&&(this.selectedActors.clear(),(s=canvas.tokens)==null||s.releaseAll(),this.selectedRequestType=null,this.currentTab=l,await this.render(),i.log("Switched to tab:",[l]))}_onActorClick(e){if(e.target.closest(".actor-select"))return;const s=e.currentTarget.dataset.id;this._toggleActorSelection(s)}_onActorSelectClick(e){e.stopPropagation();const l=e.currentTarget.dataset.id;this._toggleActorSelection(l)}_toggleActorSelection(e){this._ignoreTokenControl=!0,this.selectedActors.has(e)?(this.selectedActors.delete(e),this._updateCanvasTokenSelection(e,!1)):(this.selectedActors.add(e),this._updateCanvasTokenSelection(e,!0)),setTimeout(()=>{this._ignoreTokenControl=!1},100),this.render(),this._updateRequestTypesVisibility(),this._updateSelectAllState(),i.log("Actor selected:",[e,this.selectedActors.has(e)])}_updateCanvasTokenSelection(e,l){if(!game.scenes.active)return;const o=canvas.tokens.placeables.filter(a=>{var r;return((r=a.actor)==null?void 0:r.id)===e});for(const a of o)l?a.control({releaseOthers:!1}):a.release()}_updateRequestTypesVisibility(){this.render()}_updateSelectAllState(){const e=this.element.querySelector("#crlngn-actors-all"),l=this.currentTab==="pc"?"pc":"npc",s=this.element.querySelectorAll(`.${l}-actors .actor-item input[type="checkbox"]`),o=Array.from(s).filter(a=>a.checked).length;e.checked=o>0&&o===s.length,e.indeterminate=o>0&&o<s.length}async _onRequestTypeClick(e){const s=e.currentTarget.dataset.id,o=D.ROLL_REQUEST_OPTIONS[s];if(!o){i.error("Unknown request type:",s);return}this.selectedRequestType===s?(this.selectedRequestType=null,i.log("Request type deselected:",[s])):(this.selectedRequestType=s,i.log("Request type selected:",[s])),o.subList?await this.render():this.selectedRequestType&&this._triggerRoll(s,null)}_onRollTypeClick(e){i.log("Roll type clicked!",[e.currentTarget]);const l=e.currentTarget.dataset.id;i.log("Roll type selected:",[l]),this._triggerRoll(this.selectedRequestType,l)}async _triggerRoll(e,l){var E;const s=C(),o=Array.from(this.selectedActors),a=k.get(s.skipDialogs.tag),r=D.ROLL_REQUEST_OPTIONS[e],n=(r==null?void 0:r.name)||e;if(n==="custom"){const m=await this._showCustomRollDialog();if(!m)return;l=m}if(n==="initiativeDialog"&&!game.combat)if(await Dialog.confirm({title:game.i18n.localize("COMBAT.Create"),content:"<p>"+game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.noCombatActive")+"</p>",yes:()=>!0,no:()=>!1,defaultYes:!0,options:{classes:["crlngn-rolls-dialog"]}}))await(await game.combats.documentClass.create({scene:game.scenes.active.id})).activate(),ui.notifications.info(game.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.combatCreated"));else return;let u=o;if(n==="initiativeDialog"&&game.combat){const m=o.map(b=>game.actors.get(b)).filter(b=>b),L=[],h=new Set;for(const b of m){const S=game.combat.getCombatantByActor(b.id);S&&S.initiative!==null&&(L.push(b.name),h.add(b.id))}if(L.length>0){if(await Dialog.confirm({title:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.rerollInitiativeTitle"),content:"<p>"+game.i18n.format("CRLNGN_ROLLS.ui.dialogs.rerollInitiative",{actors:L.join(", ")})+"</p>",yes:()=>!0,no:()=>!1,defaultYes:!1,options:{classes:["crlngn-rolls-dialog"]}}))for(const S of h){const _=game.combat.getCombatantByActor(S);_&&await _.update({initiative:null})}else if(u=o.filter(S=>!h.has(S)),u.length===0){ui.notifications.info(game.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.allActorsHaveInitiative"));return}}}let c=u.map(m=>game.actors.get(m)).filter(m=>m);if(n==="deathSave"){const m=[],L=[];for(const h of c){const b=((E=h.system.attributes.hp)==null?void 0:E.value)||0,S=h.system.attributes.death||{},_=S.success||0,p=S.failure||0;b<=0&&_<3&&p<3?m.push(h):L.push(h.name)}L.length>0&&ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.actorsSkippingDeathSave",{actors:L.join(", ")})),c=m}if(!c.length){ui.notifications.warn("No valid actors selected");return}const g=[],R=[];for(const m of c){const L=this._getActorOwner(m);L?g.push({actor:m,owner:L}):R.push(m)}for(const{actor:m,owner:L}of g){if(!L.active){k.get(s.showOfflineNotifications.tag)&&ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.playerOffline",{player:L.name})),R.push(m);continue}this._sendRollRequestToPlayer(m,L,n,l,a),await new Promise(h=>setTimeout(h,100))}R.length>0&&await this._handleNPCRolls(R,n,l,a),setTimeout(()=>this.close(),500)}_getActorOwner(e){const l=e.ownership||{};for(const[s,o]of Object.entries(l))if(o>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const a=game.users.get(s);if(a&&!a.isGM)return a}return null}_sendRollRequestToPlayer(e,l,s,o,a){const r=C(),u={abilityCheck:"ability",savingThrow:"save",skill:"skill",tool:"tool",concentration:"concentration",initiativeDialog:"initiative",deathSave:"deathsave",custom:"custom"}[s]||s,c={type:"rollRequest",requestId:foundry.utils.randomID(),actorId:e.id,rollType:u,rollKey:o,activityId:null,config:{rollMode:game.settings.get("core","rollMode"),advantage:!1,disadvantage:!1,situational:0,parts:[],chatMessage:!0},skipDialog:a,targetTokenIds:Array.from(game.user.targets).map(g=>g.id),preserveTargets:k.get(r.useGMTargetTokens.tag)};O.execForUser("handleRollRequest",l.id,c),ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestSent",{player:l.name,actor:e.name}))}async _handleNPCRolls(e,l,s,o){const a={advantage:!1,disadvantage:!1,situational:0,parts:[],rollMode:game.settings.get("core","rollMode"),fastForward:o,chatMessage:!0,isRollRequest:!0,targetValue:10};for(const r of e)await this._executeActorRoll(r,l,s,a),await new Promise(n=>setTimeout(n,200))}async _executeActorRoll(e,l,s,o){var a;try{switch(i.log("RollRequestsMenu._executeActorRoll",["Starting roll for actor",{actorName:e.name,actorType:e.type,actorId:e.id,requestType:l,normalizedType:l.toLowerCase(),config:o}]),l.toLowerCase()){case"abilitycheck":await e.rollAbilityCheck(s,o);break;case"savingthrow":await e.rollSavingThrow(s,o);break;case"skill":await e.rollSkill({...o,skill:s});break;case"tool":await e.rollToolCheck({...o,tool:s});break;case"concentration":await e.rollConcentration(o);break;case"initiativedialog":if(!game.combat){ui.notifications.warn(game.i18n.localize("COMBAT.NoneActive"));break}i.log("RollRequestsMenu._executeActorRoll",["About to roll initiative for",e.name,"with config",o]);const n=await e.rollInitiativeDialog(o);if(i.log("RollRequestsMenu._executeActorRoll",["Initiative roll result:",n]),!n){i.log("RollRequestsMenu._executeActorRoll",["No result from rollInitiativeDialog, trying direct combat update"]);let c=game.combat.getCombatantByActor(e.id);if(!c){const g=e.getActiveTokens();g.length&&(await game.combat.createEmbeddedDocuments("Combatant",[{tokenId:g[0].id,actorId:e.id}]),c=game.combat.getCombatantByActor(e.id))}if(c){const g=c.getInitiativeRoll();await g.evaluate({async:!0}),await c.update({initiative:g.total}),await g.toMessage({speaker:ChatMessage.getSpeaker({actor:e}),flavor:game.i18n.localize("DND5E.Initiative")})}}break;case"deathsave":i.log("RollRequestsMenu._executeActorRoll",["Actor death save state",{name:e.name,hp:(a=e.system.attributes.hp)==null?void 0:a.value,deathSaves:e.system.attributes.death,type:e.type}]);const u=await e.rollDeathSave();i.log("RollRequestsMenu._executeActorRoll",["Death save completed",u]);break;case"custom":try{const c=new Roll(s,e.getRollData());await c.evaluate({async:!0}),await c.toMessage({speaker:ChatMessage.getSpeaker({actor:e}),flavor:game.i18n.localize("CRLNGN_ROLLS.rollTypes.custom")})}catch(c){ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:s})),i.log("RollRequestsMenu._executeActorRoll",["Invalid custom formula",s,c])}break;default:ui.notifications.warn(`Unknown roll type: ${l}`);break}}catch(r){i.log("RollRequestsMenu._executeActorRoll",["Error executing roll",r]),ui.notifications.error(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:e.name}))}}async _onClose(e){await super._onClose(e),this.selectedActors.clear(),this.selectedRequestType=null,document.removeEventListener("click",this._onClickOutside,!0),this._tokenControlHook&&(Hooks.off("controlToken",this._tokenControlHook),this._tokenControlHook=null),this._tokenUpdateTimeout&&(clearTimeout(this._tokenUpdateTimeout),this._tokenUpdateTimeout=null)}setPosition(e={}){return this}async _showCustomRollDialog(){return new Promise(async e=>{const l=await renderTemplate(`modules/${D.ID}/templates/custom-roll-dialog.hbs`,{formula:"",readonly:!1});new Dialog({title:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.customRollTitle"),content:l,buttons:{roll:{icon:'<i class="fas fa-dice-d20"></i>',label:game.i18n.localize("Roll"),callback:o=>{const r=(o[0]||o).querySelector("#custom-roll-formula").value.trim();e(r||null)}},cancel:{icon:'<i class="fas fa-times"></i>',label:game.i18n.localize("Cancel"),callback:()=>e(null)}},default:"roll",render:o=>{const a=o[0]||o,r=a.querySelector("#custom-roll-formula"),n={};a.querySelectorAll(".dice-button").forEach(u=>{u.addEventListener("click",c=>{const g=c.currentTarget.dataset.die;n[g]=(n[g]||0)+1;const R=[];for(const[E,m]of Object.entries(n))m>0&&R.push(`${m}${E}`);r.value=R.join(" + ")})})}},{classes:["crlngn-rolls-dialog","crlngn-custom-roll-dialog"]}).render(!0)})}}T(U,"DEFAULT_OPTIONS",{id:"crlngn-requests-menu",classes:["roll-requests-menu"],tag:"div",window:{frame:!1,resizable:!1,minimizable:!1},position:null}),T(U,"PARTS",{main:{template:`modules/${D.ID}/templates/requests-menus.hbs`}});class V{static initialize(){i.log("RollInterceptor.initialize",["Called, checking if user is GM",game.user.isGM]),game.user.isGM&&(i.log("RollInterceptor.initialize",["Initializing roll interceptor for GM"]),this.registerHooks())}static registerHooks(){this._registerHook(A.PRE_ROLL_ABILITY_CHECK,this._handlePreRoll.bind(this,"ability")),this._registerHook(A.PRE_ROLL_SAVING_THROW,this._handlePreRoll.bind(this,"save")),this._registerHook(A.PRE_ROLL_SKILL_V2,this._handlePreRoll.bind(this,"skill")),this._registerHook(A.PRE_ROLL_TOOL_V2,this._handlePreRoll.bind(this,"tool")),this._registerHook(A.PRE_ROLL_ATTACK_V2,this._handlePreRoll.bind(this,"attack")),this._registerHook(A.PRE_ROLL_DAMAGE_V2,this._handlePreRoll.bind(this,"damage")),this._registerHook(A.PRE_ROLL_INITIATIVE,this._handlePreRoll.bind(this,"initiative")),this._registerHook(A.PRE_ROLL_DEATH_SAVE_V2,this._handlePreRoll.bind(this,"deathsave")),this._registerHook(A.PRE_ROLL_HIT_DIE_V2,this._handlePreRoll.bind(this,"hitDie")),i.log("RollInterceptor.registerHooks",["Registered roll interception hooks"])}static _registerHook(t,e){const l=Hooks.on(t,e);this.registeredHooks.add({hookName:t,hookId:l})}static unregisterHooks(){for(const{hookName:t,hookId:e}of this.registeredHooks)Hooks.off(t,e);this.registeredHooks.clear(),i.log("RollInterceptor.unregisterHooks",["Unregistered all hooks"])}static _handleGenericPreRoll(t,e){var u,c,g;if(!game.user.isGM||(i.log("RollInterceptor._handleGenericPreRoll",["Generic preRollV2 triggered",{configType:(u=t==null?void 0:t.constructor)==null?void 0:u.name,hasSubject:!!(t!=null&&t.subject),subjectName:(c=t==null?void 0:t.subject)==null?void 0:c.name,hasIsRollRequest:t==null?void 0:t.isRollRequest,optionsType:(g=e==null?void 0:e.constructor)==null?void 0:g.name}]),t!=null&&t.isRollRequest))return;const l=t==null?void 0:t.subject,s=C();if(!k.get(s.rollInterceptionEnabled.tag))return;if(i.log("RollInterceptor._handleGenericPreRoll",[l,l==null?void 0:l.documentName]),!l||l.documentName!=="Actor"){i.log("RollInterceptor._handleGenericPreRoll",["No valid Actor found in roll",t]);return}const a=this._getActorOwner(l);if(!a||a.id===game.user.id||!a.active)return;let r="unknown",n=null;return t!=null&&t.ability?(r=t.save?"save":"ability",n=t.ability):t!=null&&t.skill?(r="skill",n=t.skill):t!=null&&t.tool&&(r="tool",n=t.tool),i.log("RollInterceptor._handleGenericPreRoll",["Determined roll type",{rollType:r,rollKey:n,configKeys:Object.keys(t||{})}]),i.log("RollInterceptor._handleGenericPreRoll",["Intercepting generic roll",{rollType:r,actorName:l.name,ownerName:a.name}]),n&&t&&(t={...t,ability:n}),this._sendRollRequest(l,a,r,t),!1}static _handlePreRoll(t,e,l,s){var u,c;if(!game.user.isGM)return;i.log("RollInterceptor._handlePreRoll",["Hook triggered",{rollType:t,configType:(u=e==null?void 0:e.constructor)==null?void 0:u.name,hasIsRollRequest:e==null?void 0:e.isRollRequest,dialogIsRollRequest:l==null?void 0:l.isRollRequest,messageIsRollRequest:s==null?void 0:s.isRollRequest}]);let o;if(t==="initiative"&&e instanceof Actor){if(o=e,l!=null&&l.isRollRequest||s!=null&&s.isRollRequest)return}else{if(e.isRollRequest)return;o=((c=e.subject)==null?void 0:c.actor)||e.subject||e.actor}const a=C(),r=k.get(a.rollInterceptionEnabled.tag);if(i.log("RollInterceptor._handlePreRoll",["Roll interception enabled:",r]),!r)return;if(!o||o.documentName!=="Actor"){i.log("RollInterceptor._handlePreRoll",["No valid Actor found in roll config",e,t]);return}const n=this._getActorOwner(o);if(!n||n.id===game.user.id){i.log("RollInterceptor._handlePreRoll",["Actor is GM-owned or has no owner, allowing roll",{rollType:t,actorName:o.name,actorType:o.type,hasOwner:!!n}]);return}if(!n.active){i.log("RollInterceptor._handlePreRoll",["Player is offline, allowing GM roll",{rollType:t,actorName:o.name,ownerName:n.name}]);return}return i.log("RollInterceptor._handlePreRoll",["Intercepting GM roll for player character",{rollType:t,actorId:o.id,actorName:o.name,ownerId:n.id,ownerName:n.name}]),this._sendRollRequest(o,n,t,e),i.log("RollInterceptor._handlePreRoll",["PREVENTING ROLL - returning false"]),!1}static async _showConfigurationDialog(t,e,l,s,o,a){try{i.log("RollInterceptor._showConfigurationDialog",["Showing dialog",{rollType:l,dialog:o.cls.name}]);const n={...s,_rollMethod:async R=>(i.log("RollInterceptor._showConfigurationDialog",["Dialog submitted with config",R]),this._sendRollRequest(t,e,l,R),new Roll("1d20").evaluate({async:!1})),configured:!1},u=o.cls,g=await new u(n,o.options).render(!0)}catch(r){i.log("RollInterceptor._showConfigurationDialog",["Error showing configuration dialog",r]),this._sendRollRequest(t,e,l,s)}}static _getActorOwner(t){const e=t.ownership||{};for(const[l,s]of Object.entries(e))if(s>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const o=game.users.get(l);if(o&&!o.isGM)return o}return null}static _sendRollRequest(t,e,l,s){var g;const o=C(),a=k.get(o.skipDialogs.tag);let r=null,n=null;switch(l){case"ability":case"save":r=s.ability;break;case"skill":r=s.skill;break;case"tool":r=s.tool;break;case"attack":case"damage":if((g=s.subject)!=null&&g.item){r=s.subject.item.id;const R=M.findActivityForRoll(s.subject.item,l);R&&(n=R.id)}break;case"hitDie":r=s.denomination;break}const u={advantage:s.advantage||!1,disadvantage:s.disadvantage||!1,situational:s.situational||0,parts:s.parts||[],rollMode:s.rollMode||game.settings.get("core","rollMode"),elvenAccuracy:s.elvenAccuracy||!1,halflingLucky:s.halflingLucky||!1,reliableTalent:s.reliableTalent||!1,minimum:s.minimum,maximize:s.maximize,critical:s.critical,fumble:s.fumble,targetValue:s.targetValue,fastForward:s.fastForward||!1,chatMessage:s.chatMessage!==!1,flavor:s.flavor,title:s.title,dialogOptions:s.dialogOptions,messageData:s.messageData};Object.keys(u).forEach(R=>{u[R]===void 0&&delete u[R]});const c={type:"rollRequest",requestId:foundry.utils.randomID(),actorId:t.id,rollType:l,rollKey:r,activityId:n,config:u,skipDialog:a,targetTokenIds:Array.from(game.user.targets).map(R=>R.id),preserveTargets:k.get(o.useGMTargetTokens.tag)};O.execForUser("handleRollRequest",e.id,c),ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestSent",{player:e.name,actor:t.name}))}}T(V,"registeredHooks",new Set);const d=class d{static init(){O.initialize(d.registerSocketCalls),Hooks.once(x.INIT,()=>{C(),i.log("Initiating module...",[],!0),k.registerSettings(),document.body.classList.add("crlngn-rolls"),d.setDiceConfig(),Hooks.on(x.RENDER_SIDEBAR_TAB,d.addChatControl)}),Hooks.once(x.READY,()=>{var l,s;i.log("Core Ready!!",[ui==null?void 0:ui.sidebar,(l=ui==null?void 0:ui.sidebar)==null?void 0:l._collapsed],!0);const t=C();var e=k.get(t.debugMode.tag);e&&(CONFIG.debug.hooks=!0),V.initialize(),game.user.isGM?(Hooks.on(x.USER_CONNECTED,d.onUserConnected),game.users.forEach(o=>{d.onUserConnected(o)}),d.checkSideBar(!((s=ui==null?void 0:ui.sidebar)!=null&&s._collapsed))):d.getDiceConfig()})}static onUserConnected(t){t.active&&t.id!==game.user.id&&(i.log("onUserConnected",[t]),O.execForUser(d.SOCKET_CALLS.getDiceConfig,t.id))}static setDiceConfig(){if(!game.user)return;const t=game.settings.storage.get("client");return d.diceConfig=t["core.diceConfiguration"]||"",i.log("getDiceConfig",[d.diceConfig]),d.diceConfig}static getDiceConfig(){if(game.user&&(d.setDiceConfig(),game.user.isGM)){O.execForGMs(d.SOCKET_CALLS.receiveDiceConfig,game.user.id,d.diceConfig);return}}static receiveDiceConfig(t,e){var l;((l=game.user)!=null&&l.isGM||t===game.user.id)&&(d.playerDiceConfigs||(d.playerDiceConfigs={}),d.playerDiceConfigs[t]=e?JSON.parse(e):{},i.log(`Received dice configuration from user ${t}`,[d.playerDiceConfigs]))}static async handleRollRequest(t){var l;if(game.user.isGM)return;i.log("handleRollRequest",["Received roll request",t]);const e=game.actors.get(t.actorId);if(!e){i.log("handleRollRequest",["Actor not found",t.actorId]);return}if(!e.isOwner){i.log("handleRollRequest",["User does not own actor",t.actorId]);return}t.preserveTargets&&((l=t.targetTokenIds)==null?void 0:l.length)>0&&game.user.targets.size===0&&t.targetTokenIds.map(o=>canvas.tokens.get(o)).filter(o=>o).forEach(o=>o.setTarget(!0,{user:game.user})),ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestReceived",{gm:t.config.requestedBy||"GM",rollType:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${t.rollType}`)})),i.log("handleRequestedRoll",["sending roll request"]),d._executeRequestedRoll(e,t)}static async _executeRequestedRoll(t,e){try{const l={...e.config,isRollRequest:!0};switch(e.skipDialog&&(l.dialog={configure:!1}),i.log("_executeRequestedRoll",[t,e,l]),e.rollType){case"ability":await t.rollAbilityCheck(e.rollKey,l);break;case"save":await t.rollSavingThrow(e.rollKey,l);break;case"skill":await t.rollSkill(e.rollKey,l);break;case"tool":await t.rollToolCheck({...l,tool:e.rollKey});break;case"concentration":await t.rollConcentration(l);break;case"attack":e.rollKey&&await M.executeActivityRoll(t,"attack",e.rollKey,e.activityId,l);break;case"damage":e.rollKey&&await M.executeActivityRoll(t,"damage",e.rollKey,e.activityId,l);break;case"itemSave":e.rollKey&&await M.executeActivityRoll(t,"itemSave",e.rollKey,e.activityId,l);break;case"initiative":if(!game.combat){ui.notifications.warn(game.i18n.localize("COMBAT.NoneActive"));break}await t.rollInitiativeDialog(l);break;case"deathsave":await t.rollDeathSave(l);break;case"hitDie":await t.rollHitDie(e.rollKey,l);break;case"custom":await d._handleCustomRoll(t,e);break}}catch(l){i.log("_executeRequestedRoll",["Error executing roll",l]),ui.notifications.error(game.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.rollError"))}}static async _handleCustomRoll(t,e){const l=e.rollKey,s=await renderTemplate(`modules/${I}/templates/custom-roll-dialog.hbs`,{formula:l,readonly:!0});new Dialog({title:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.customRollTitle"),content:s,buttons:{roll:{icon:'<i class="fas fa-dice-d20"></i>',label:game.i18n.localize("Roll"),callback:async()=>{try{const a=new Roll(l,t.getRollData());await a.evaluate({async:!0}),await a.toMessage({speaker:ChatMessage.getSpeaker({actor:t}),flavor:game.i18n.localize("CRLNGN_ROLLS.rollTypes.custom")})}catch(a){ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:l})),i.log("_handleCustomRoll",["Invalid formula",l,a])}}},cancel:{icon:'<i class="fas fa-times"></i>',label:game.i18n.localize("Cancel")}},default:"roll"},{classes:["crlngn-rolls-dialog","crlngn-custom-roll-dialog"]}).render(!0)}static registerSocketCalls(){O.registerCall(d.SOCKET_CALLS.getDiceConfig,d.getDiceConfig),O.registerCall(d.SOCKET_CALLS.receiveDiceConfig,d.receiveDiceConfig),O.registerCall(d.SOCKET_CALLS.handleRollRequest,d.handleRollRequest)}static addChatControl(t,e,l){if(!game.user.isGM||t.id!=="chat")return;i.log("Adding chat control for chat tab");const o=(e[0]||e).querySelector("#chat-controls");if(!o){i.log("Could not find #chat-controls",[]);return}if(o.querySelector(".roll-requests-icon"))return;const a=C(),r=k.get(a.rollRequestsEnabled.tag),n=document.createElement("a");n.id="crlngn-requests-icon",n.setAttribute("data-tooltip-direction","RIGHT"),n.className=`chat-control-icon roll-requests-icon${r?" active":""}`,n.title=game.i18n.localize("CRLNGN_ROLLS.ui.menus.rollRequestsTitle"),n.innerHTML=`<i class="fas fa-bolt${r?"":"-slash"}"></i>`;const u=o.querySelector(".chat-control-icon");u?u.parentNode.insertBefore(n,u):o.appendChild(n),n.addEventListener("click",d.toggleRollRequestsMenu),i.log("Added roll requests icon to chat controls",[])}static toggleRollRequestsMenu(){d.rollRequestsMenu?d.rollRequestsMenu.rendered?(d.rollRequestsMenu.close(),i.log("Closed roll requests menu",[])):(d.rollRequestsMenu._initializeFromSelectedTokens(),d.rollRequestsMenu.render(!0),i.log("Opened roll requests menu",[])):(d.rollRequestsMenu=new U,d.rollRequestsMenu.render(!0))}static updateRollRequestsIcon(t){const e=document.querySelector("#crlngn-requests-icon i");e&&(e.className=`fas fa-bolt${t?"":"-slash"}`)}};T(d,"diceConfig",{}),T(d,"playerDiceConfigs",{}),T(d,"rollRequestsMenu",null),T(d,"SOCKET_CALLS",{receiveDiceConfig:"receiveDiceConfig",getDiceConfig:"getDiceConfig",handleRollRequest:"handleRollRequest"}),T(d,"checkSideBar",t=>{const e=document.querySelector("body");t?e.classList.add("sidebar-expanded"):e.classList.remove("sidebar-expanded")});let H=d;H.init();
//# sourceMappingURL=crlngn-roll-requests.js.map
