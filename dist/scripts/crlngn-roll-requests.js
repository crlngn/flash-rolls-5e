var Se=Object.defineProperty;var pe=n=>{throw TypeError(n)};var Oe=(n,t,e)=>t in n?Se(n,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[t]=e;var T=(n,t,e)=>Oe(n,typeof t!="symbol"?t+"":t,e),Re=(n,t,e)=>t.has(n)||pe("Cannot "+e);var $=(n,t,e)=>(Re(n,t,"read from private field"),e?e.call(n):t.get(n)),be=(n,t,e)=>t.has(n)?pe("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(n):t.set(n,e),Ce=(n,t,e,s)=>(Re(n,t,"write to private field"),s?s.call(n,e):t.set(n,e),e);const j={checkbox:"checkbox"},Y={client:"client",world:"world"},S=()=>({debugMode:{tag:"debug-mode",label:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.hint"),propType:Boolean,inputType:j.checkbox,default:!0,scope:Y.client,config:!0},rollRequestsEnabled:{tag:"roll-requests-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.hint"),propType:Boolean,inputType:j.checkbox,default:!0,scope:Y.world,config:!0},skipDialogs:{tag:"skip-dialogs",label:game.i18n.localize("CRLNGN_ROLLS.settings.skipDialogs.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.skipDialogs.hint"),propType:Boolean,inputType:j.checkbox,default:!1,scope:Y.world,config:!0},useGMTargetTokens:{tag:"use-gm-target-tokens",label:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.hint"),propType:Boolean,inputType:j.checkbox,default:!1,scope:Y.world,config:!0},rollInterceptionEnabled:{tag:"roll-interception-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollInterceptionEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollInterceptionEnabled.hint"),propType:Boolean,inputType:j.checkbox,default:!0,scope:Y.world,config:!0},showOfflineNotifications:{tag:"show-offline-notifications",label:game.i18n.localize("CRLNGN_ROLLS.settings.showOfflineNotifications.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.showOfflineNotifications.hint"),propType:Boolean,inputType:j.checkbox,default:!0,scope:Y.world,config:!0}}),P="crlngn-roll-requests",ne=["%cFlash Rolls 5e","color:rgb(47, 151, 161); font-weight: bold;","|"],ge={receiveDiceConfig:"receiveDiceConfig",getDiceConfig:"getDiceConfig",handleRollRequest:"handleRollRequest"},c={ABILITY:"ability",ABILITY_CHECK:"abilitycheck",SAVE:"save",SAVING_THROW:"savingthrow",SKILL:"skill",TOOL:"tool",CONCENTRATION:"concentration",ATTACK:"attack",DAMAGE:"damage",INITIATIVE:"initiative",INITIATIVE_DIALOG:"initiativedialog",DEATH_SAVE:"deathsave",HIT_DIE:"hitDie",ITEM_SAVE:"itemSave",CUSTOM:"custom",HEALING:"healing",FORMULA:"formula"},Ie={ABILITY_CHECK:{name:c.ABILITY_CHECK,label:"Ability Check",subList:"abilities",actorPath:"system.abilities"},SAVING_THROW:{name:c.SAVING_THROW,label:"Saving Throw",subList:"abilities",actorPath:"system.abilities"},SKILL:{name:c.SKILL,label:"Skill Check",subList:"skills",actorPath:"system.skills"},TOOL:{name:c.TOOL,label:"Tool Check",subList:"tools",actorPath:"system.tools"},CONCENTRATION:{name:c.CONCENTRATION,label:"Concentration Check",subList:null,actorPath:""},INITIATIVE:{name:c.INITIATIVE_DIALOG,label:"Initiative Roll",subList:null,actorPath:""},DEATH_SAVE:{name:c.DEATH_SAVE,label:"Death Save",subList:null,actorPath:""},CUSTOM:{name:c.CUSTOM,label:"Custom Roll",subList:null,actorPath:""}},q={ID:P,ROLL_REQUEST_OPTIONS:Ie},W={INIT:"init",READY:"ready",RENDER_SIDEBAR_TAB:"renderSidebarTab",USER_CONNECTED:"userConnected",PRE_CREATE_CHAT_MESSAGE:"preCreateChatMessage"},Ae={READY:"socketlib.ready"},v={PRE_ROLL_ABILITY_CHECK:"dnd5e.preRollAbilityCheckV2",PRE_ROLL_SAVING_THROW:"dnd5e.preRollSavingThrowV2",PRE_ROLL_DEATH_SAVE_V2:"dnd5e.preRollDeathSaveV2",PRE_ROLL_SKILL_V2:"dnd5e.preRollSkillV2",PRE_ROLL_TOOL_V2:"dnd5e.preRollToolV2",PRE_ROLL_HIT_DIE_V2:"dnd5e.preRollHitDieV2",PRE_ROLL_INITIATIVE:"dnd5e.preRollInitiative",PRE_ROLL_ATTACK_V2:"dnd5e.preRollAttackV2",PRE_ROLL_DAMAGE_V2:"dnd5e.preRollDamageV2",POST_ROLL_CONFIG:"dnd5e.postRollConfiguration",RENDER_ROLL_CONFIGURATION_DIALOG:"renderRollConfigurationDialog"},K=class K{static log(t="",e=[],s=!1){try{const i=game.settings.get(P,"debug-mode")||K.debugOn;if(!(s||i))return;console.log(...ne,t,...e)}catch{(s||K.debugOn)&&console.log(...ne,t,...e)}}static warn(t="",e=[]){console.warn(...ne,t,...e)}static error(t,e={ui:!1,console:!0,permanent:!1}){var s;e.ui&&((s=ui.notifications)==null||s.error(t,{localize:!0,permanent:e.permanent})),e.console&&console.error(...ne,t)}static method(t,e){var o;const i=`${((o=t.constructor)==null?void 0:o.name)||t.name||"Unknown"}.${e}`;return(a="",l=[],r=!1)=>{const u=a?`${i} - ${a}`:i;this.log(u,l,r)}}static traced(t,e,s){return function(...i){return K.log(`${e}.${s}`,["called with args:",i]),t.apply(this,i)}}};T(K,"debugOn",!1);let g=K;const C=class C{static serializeForTransport(t,e=!1){return g.method(C,"serializeForTransport")("serializing for transport",[t,e]),t==null||e&&t.rolls&&Array.isArray(t.rolls)&&(t.rolls=t.rolls.map(i=>i instanceof Roll?i.toJSON():i)),t}static deserializeFromTransport(t,e=!1){g.method(C,"deserializeFromTransport")("deserializing from transport",[t,e]);let i={...t};if(!t)return i;if(e&&t.rolls&&t.rolls.length>0){const o=i.rolls.map(a=>{let l=a;return typeof a=="string"?l=Roll.fromJSON(a):l=Roll.fromJSON(JSON.stringify(a)),l});return i.rolls=[...o],i}return i}};T(C,"socket"),T(C,"_activeExecutions",new Map),T(C,"initialize",t=>{g.method(C,"initialize")("initializing socket",[t]),Hooks.once(Ae.READY,()=>{if(typeof socketlib>"u"){g.error("SocketUtil Error: socketlib is not loaded. Ensure it is installed and enabled."),ui.notifications.error(game.i18n.localize("CRLNGN_ROLLS.notifications.socketlibMissing"),{permanent:!0});return}try{C.socket=socketlib.registerModule(P),t&&t()}catch{}})}),T(C,"registerCall",(t,e)=>{g.method(C,"registerCall")("registering call",[t]),C.socket&&C.socket.register(t,e)}),T(C,"sendMessage",(t,e)=>{g.method(C,"sendMessage")("sending message",[t]),e&&e()}),T(C,"execForGMs",async(t,...e)=>{if(g.method(C,"execForGMs")("executing for GMs",[t,...e]),!!C.socket)return await C.socket.executeForAllGMs(t,...e)}),T(C,"execForAll",async(t,...e)=>{if(C.socket)return await C.socket.executeForEveryone(t,...e)}),T(C,"execForUser",async(t,e,...s)=>{if(g.method(C,"execForUser")("executing for user",[t,e,...s]),!C.socket)return;if(e===game.user.id)return null;const o=`${t}-${e}`;if(C._activeExecutions.has(o))return null;C._activeExecutions.set(o,!0);try{return await C.socket.executeAsUser(t,e,...s)}catch{return null}finally{C._activeExecutions.delete(o)}});let G=C;class U{static initialize(){this.setDiceConfig()}static setDiceConfig(){if(!game.user)return{};const t=game.settings.storage.get("client");return this.diceConfig=t["core.diceConfiguration"]||"",this.diceConfig}static getDiceConfig(){return game.user?(this.setDiceConfig(),game.user.isGM&&this._sendDiceConfigToGMs(),this.diceConfig):{}}static _sendDiceConfigToGMs(){G.execForGMs("receiveDiceConfig",game.user.id,this.diceConfig)}static receiveDiceConfig(t,e){var s,i;((s=game.user)!=null&&s.isGM||t===((i=game.user)==null?void 0:i.id))&&(this.playerDiceConfigs[t]=e?JSON.parse(e):{})}static getUserDiceConfig(t){var e;return t===((e=game.user)==null?void 0:e.id)?this.diceConfig:this.playerDiceConfigs[t]||{}}static requestDiceConfigFromUser(t){G.execForUser("getDiceConfig",t)}static requestDiceConfigFromAllPlayers(){var t;(t=game.user)!=null&&t.isGM&&game.users.forEach(e=>{e.active&&!e.isGM&&e.id!==game.user.id&&this.requestDiceConfigFromUser(e.id)})}static clearPlayerConfigs(){this.playerDiceConfigs={}}static hasUserConfig(t){var e;return t===((e=game.user)==null?void 0:e.id)?!!this.diceConfig:!!this.playerDiceConfigs[t]}}T(U,"diceConfig",{}),T(U,"playerDiceConfigs",{});class L{static registerSettings(){const t=S();Object.entries(t).forEach(async s=>{const i=s[1],o={name:i.label,hint:i.hint,default:i.default,type:i.propType,scope:i.scope,config:i.config,requiresReload:i.requiresReload||!1,onChange:a=>L.apply(i.tag,a)};i.choices&&(o.choices=i.choices),await game.settings.register(P,i.tag,o),(L.get(i.tag)===void 0||L.get(i.tag)===null)&&L.set(i.tag,i.default)})}static get(t,e=P){if(!t)return null;let s=!1;if(e===P)s=game.settings.get(e,t);else{let o=game.settings.storage.get("client")[`${e}.${t}`];o===void 0&&(o=game.settings.storage.get("world").getSetting(`${e}.${t}`),s=o==null?void 0:o.value)}return s}static set(t,e,s=P){if(!t)return!1;let i=game.settings.storage.get("client")[`${s}.${t}`];i||(i=game.settings.storage.get("world").getSetting(`${s}.${t}`));try{game.settings.set(s,t,e)}catch{}return!0}static apply(t,e){const s=S();switch(t){case s.rollRequestsEnabled.tag:L.applyRollRequestsEnabled(e);break}}static applyRollRequestsEnabled(t){const e=document.querySelector("#chat-controls .chat-control-icon.roll-requests-icon");e&&(t?e.classList.add("active"):e.classList.remove("active"))}}class F{static findActivityForRoll(t,e){var o;if(!((o=t==null?void 0:t.system)!=null&&o.activities))return null;const s=t.system.activities;switch(e==null?void 0:e.toLowerCase()){case c.ATTACK:const a=s.getByType("attack");return(a==null?void 0:a[0])||null;case c.DAMAGE:const l=s.getByType("attack");if((l==null?void 0:l.length)>0)return l[0];const r=s.getByType("damage");if((r==null?void 0:r.length)>0)return r[0];const u=s.getByType("save");return(u==null?void 0:u.length)>0?u[0]:null;case c.ITEM_SAVE:const d=s.getByType("save");return(d==null?void 0:d[0])||null;default:return null}}static getActivitiesByType(t,e){var s;return(s=t==null?void 0:t.system)!=null&&s.activities?t.system.activities.getByType(e):[]}static hasActivityForRoll(t,e){return g.method(F,"hasActivityForRoll")("checking activity",[t,e]),!!this.findActivityForRoll(t,e)}static async executeActivityRoll(t,e,s,i,o){var d,h;g.method(F,"executeActivityRoll")("executing activity roll",[t,e,s,i,o]);const l=t.items.get(s);if(!l)throw new Error(`Item ${s} not found on actor ${t.name}`);let r=null;i&&(r=(d=l.system.activities)==null?void 0:d.get(i)),r||(r=this.findActivityForRoll(l,e));const u=e==null?void 0:e.toLowerCase();if(r)switch(u){case c.ATTACK:const R={configure:!0};if(MidiQOL){await F.syntheticItemRoll(l,{...o});return}else return await r.use(usageConfig,R);case c.DAMAGE:if(MidiQOL){const p=(h=MidiQOL==null?void 0:MidiQOL.Workflow)==null?void 0:h.getWorkflow(r.uuid);await p.activity.rollDamage({...o,workflow:p});return}else return await r.rollDamage(o);case c.ITEM_SAVE:return await l.use({activity:r.id},{skipDialog:o.fastForward});default:throw new Error(`Unknown roll type: ${u}`)}else{switch(u){case c.ATTACK:if(l.rollAttack)return await l.rollAttack(o);break;case c.DAMAGE:if(l.rollDamage)return await l.rollDamage(o);break;case c.ITEM_SAVE:return await l.use({},{skipDialog:o.fastForward})}throw new Error(`No suitable method found for ${u} on item ${l.name}`)}}static getActivityDisplayInfo(t){return g.method(F,"getActivityDisplayInfo")("getting activity display info",[t]),t?{name:t.name||t.constructor.metadata.label,type:t.type,icon:t.constructor.metadata.icon,canAttack:t.type==="attack",canDamage:["attack","damage","save"].includes(t.type),canSave:t.type==="save"}:null}static getDamageFormula(t){var i,o;if(g.method(F,"getDamageFormula")("getting damage formula",[t]),!((o=(i=t==null?void 0:t.damage)==null?void 0:i.parts)!=null&&o.length))return null;const s=t.damage.parts.map(a=>a.formula).filter(a=>a);return s.length>0?s.join(" + "):null}static async syntheticItemRoll(t,e={}){g.method(F,"syntheticItemRoll")("performing synthetic item roll",[t,e]);let i={consumeUsage:!1,consumeSpellSlot:!1},o={configureDialog:!0,workflowOptions:{autoRollAttack:!1,autoFastAttack:!1,autoRollDamage:"none",autoFastDamage:!1}};return e={...i,...e},await MidiQOL.completeItemUse(t,e,o)}static async replaceDamage(t,e,{ignoreCrit:s=!1,damageType:i}={}){e=String(e),t.isCritical&&!s&&(e=await rollUtils.getCriticalFormula(e,t.item.getRollData()));let o=await new CONFIG.Dice.DamageRoll(e).evaluate();return await t.setDamageRolls([o]),o}}class H extends dnd5e.applications.dice.D20RollConfigurationDialog{constructor(t={},e={},s={}){s.rollType=s.rollType||CONFIG.Dice.D20Roll,super(t,e,s),g.method(this,"constructor")("initializing GM Dialog",[t,e,s]),this.actors=s.actors||[],this.sendRequest=s.defaultSendRequest??s.sendRequest??!0,this.showDC=s.showDC||!1,this.dcValue=s.dcValue||null}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}_prepareConfigurationData(t,e,s,i){g.method(this,"_prepareConfigurationData")("preparing",[t,e,s,i]);const a=super._prepareConfigurationData(t,e,s,i);return a.showDC=this.showDC,a.dcValue=this.dcValue,a.sendRequest=this.sendRequest,a.actorCount=this.actors.length,a}async _preparePartContext(t,e,s){return g.method(this,"_preparePartContext")("preparing part context",[t,e,s]),e=await super._preparePartContext(t,e,s),t==="configuration"&&(e.showDC=this.showDC,e.dcValue=this.dcValue,e.sendRequest=this.sendRequest,e.actorCount=this.actors.length),e}async _onRender(t,e){var o,a,l;if(g.method(this,"_onRender")("rendering dialog",[t,e]),super._onRender(t,e),this.element.querySelector(".gm-roll-config-fields"))return;let i=this.element.querySelector(".rolls .formulas");if(i&&(this.showDC||this.actors.length>0)){const r={showDC:this.showDC,dcValue:this.dcValue,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},u=await renderTemplate(`modules/${P}/templates/gm-roll-config-fields.hbs`,r),d=document.createElement("div");d.className="gm-roll-config-fields",d.innerHTML=u,i.parentNode.insertBefore(d,i)}this._attachButtonListeners(),((l=(a=(o=this.config.rolls)==null?void 0:o[0])==null?void 0:a.data)!=null&&l.situational||this.config.situational)&&(g.log("GMRollConfigDialog._onRender",["Triggering rebuild for initial situational bonus"]),setTimeout(()=>{this.rebuild()},100))}_attachButtonListeners(){g.method(this,"_attachButtonListeners")("attaching button listeners"),this.element.querySelectorAll('[data-action="advantage"], [data-action="normal"], [data-action="disadvantage"]').forEach(s=>{s.addEventListener("click",i=>{i.currentTarget.dataset.action})})}_onChangeForm(t,e){g.method(this,"_onChangeForm")("form changed",[t,e]),super._onChangeForm(t,e);const i=this.element.querySelector('input[name="crlngn-send-request"]');i&&(this.sendRequest=i.checked);const o=this.element.querySelector('input[name="dc"]');o&&o.value&&(this.dcValue=parseInt(o.value)||null)}_buildConfig(t,e,s){g.method(this,"_buildConfig")("building config",[t,e,s]);const o=e==null?void 0:e.get("ability"),a=e==null?void 0:e.get("dc");o&&(t.ability=o,this.config.ability=o);const l=super._buildConfig(t,e,s);if(a){const r=parseInt(a);isNaN(r)||(l.options=l.options||{},l.options.target=r)}else this.dcValue!==void 0&&this.dcValue!==null&&(l.options=l.options||{},l.options.target=this.dcValue);return l}async _processSubmitData(t,e,s){if(g.method(this,"_processSubmitData")("processing submit",[t,e,s]),await super._processSubmitData(t,e,s),s.has("dc")&&s.get("dc")!==""){const o=parseInt(s.get("dc"));if(!isNaN(o)&&(this.dcValue=o,this.config.rolls&&this.config.rolls.length>0))for(const a of this.config.rolls)a.options.target=o}this.sendRequest=s.get("crlngn-send-request")!=="false"}_finalizeRolls(t){g.method(this,"_finalizeRolls")("finalizing rolls",[t]);const s=super._finalizeRolls(t);if(this.dcValue!==void 0&&this.dcValue!==null)for(const i of s)i.options.target=this.dcValue;return this.config.sendRequest=this.sendRequest,s}static async getConfiguration(t,e,s,i={}){var w,B,V,J,Z,X,ee,te,se,ie,k,me;g.method(H,"getConfiguration")("getting configuration",[t,e,s,i]);const a=e==null?void 0:e.toLowerCase(),l=[c.SAVE,c.SAVING_THROW,c.ABILITY,c.ABILITY_CHECK,c.CONCENTRATION].includes(a),r=t[0];if(!r)return null;let u=CONFIG.Dice.D20Roll;[c.DAMAGE,c.HEALING].includes(a)?u=CONFIG.Dice.DamageRoll||CONFIG.Dice.BasicRoll:[c.FORMULA,c.CUSTOM].includes(a)&&(u=CONFIG.Dice.BasicRoll),u||(u=CONFIG.Dice.D20Roll);const d={data:r.getRollData(),subject:r,rolls:[{parts:[],data:r.getRollData(),options:{}}]};switch(a){case c.SKILL:d.skill=s;break;case c.SAVE:case c.SAVING_THROW:d.ability=s;break;case c.ABILITY:case c.ABILITY_CHECK:d.ability=s;break}const h={create:!1,data:{speaker:ChatMessage.getSpeaker({actor:r})}},R={options:{actors:t,sendRequest:t.some(z=>this._isPlayerOwned(z)),showDC:l,rollKey:s,rollType:u,window:{title:H._getRollTitle(a,s,r),subtitle:t.map(z=>z.name).join(", ")},...i}},p=new this(d,h,R.options),m=await new Promise(z=>{p.addEventListener("close",()=>{z({rolls:p.rolls,config:p.config,message:p.message,sendRequest:p.sendRequest})},{once:!0}),p.render({force:!0})});if(!m.rolls||m.rolls.length===0)return null;const f=m.rolls[0];let b=!1,N=!1;((w=f==null?void 0:f.options)==null?void 0:w.advantageMode)!==void 0&&(b=f.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE,N=f.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE);const y={chatMessage:!0,isRollRequest:m.sendRequest,skipDialog:i.skipDialogs||!1,sendRequest:m.sendRequest};b&&(y.advantage=!0),N&&(y.disadvantage=!0);const _=game.settings.get("core","rollMode");m.message.rollMode&&m.message.rollMode!==_&&(y.rollMode=m.message.rollMode);let D=((B=f==null?void 0:f.options)==null?void 0:B.situational)||((V=f==null?void 0:f.data)==null?void 0:V.situational)||((Z=(J=m.config)==null?void 0:J.data)==null?void 0:Z.situational)||"";if(!D&&((X=f==null?void 0:f.parts)==null?void 0:X.length)>0&&f.parts.find(ke=>ke.includes("@situational"))&&(ee=f.data)!=null&&ee.situational&&(D=f.data.situational),D&&(y.situational=D,y.parts=["@situational"]),(te=f==null?void 0:f.options)!=null&&te.target&&(y.target=f.options.target),m.config.ability&&[c.SKILL,c.TOOL].includes(a)){const z=((ie=(se=r.system.skills)==null?void 0:se[s])==null?void 0:ie.ability)||((me=(k=CONFIG.DND5E.skills)==null?void 0:k[s])==null?void 0:me.ability);m.config.ability!==z&&(y.ability=m.config.ability)}return y.rollTitle=R.options.window.title,y}static _isPlayerOwned(t){return g.method(H,"_isPlayerOwned")("checking ownership",[t]),Object.entries(t.ownership).some(([s,i])=>{const o=game.users.get(s);return o&&!o.isGM&&i>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})}static _getRollTitle(t,e,s){var l,r,u,d,h,R,p,m;g.method(H,"_getRollTitle")("getting title",[t,e,s]);let o="";const a=t==null?void 0:t.toLowerCase();switch(a){case c.SKILL:const f=((l=CONFIG.DND5E.skills[e])==null?void 0:l.label)||e,b=(r=s==null?void 0:s.system.skills)==null?void 0:r[e],N=(b==null?void 0:b.ability)||((u=CONFIG.DND5E.skills[e])==null?void 0:u.ability)||"int",y=((d=CONFIG.DND5E.abilities[N])==null?void 0:d.label)||N;o=game.i18n.format("DND5E.SkillPromptTitle",{skill:f,ability:y});break;case c.SAVE:case c.SAVING_THROW:const _=((h=CONFIG.DND5E.abilities[e])==null?void 0:h.label)||e;o=game.i18n.format("DND5E.SavePromptTitle",{ability:_});break;case c.ABILITY:case c.ABILITY_CHECK:const D=((R=CONFIG.DND5E.abilities[e])==null?void 0:R.label)||e;o=game.i18n.format("DND5E.AbilityPromptTitle",{ability:D});break;case c.CONCENTRATION:o=game.i18n.localize("DND5E.Concentration");break;case c.TOOL:const w=(m=(p=CONFIG.DND5E.enrichmentLookup)==null?void 0:p.tools)==null?void 0:m[e];let B=e;if(w!=null&&w.id){const V=dnd5e.documents.Trait.getBaseItem(w.id,{indexOnly:!0});B=(V==null?void 0:V.name)||e}o=game.i18n.format("DND5E.ToolPromptTitle",{tool:B});break;case c.DEATH_SAVE:o=game.i18n.localize("DND5E.DeathSave");break;case c.INITIATIVE:case c.INITIATIVE_DIALOG:o=game.i18n.localize("DND5E.Initiative");break;default:o=game.i18n.localize("DND5E.Roll")}return g.log("_getRollTitle",[a,o]),o}}class de extends dnd5e.applications.dice.SkillToolRollConfigurationDialog{constructor(t={},e={},s={}){const i=foundry.utils.mergeObject(t,{chooseAbility:!0});s.rollType=s.rollType||CONFIG.Dice.D20Roll,super(i,e,s),g.method(this,"constructor")("initializing skill/tool dialog",[t,e,s]),this.actors=s.actors||[],this.sendRequest=s.defaultSendRequest??s.sendRequest??!0,this.showDC=s.showDC||!1,this.dcValue=s.dcValue||null}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}_prepareConfigurationData(t,e,s,i){g.method(this,"_prepareConfigurationData")("preparing skill/tool config data",[t,e,s,i]);const a=super._prepareConfigurationData(t,e,s,i);return a.showDC=this.showDC,a.dcValue=this.dcValue,a.sendRequest=this.sendRequest,a.actorCount=this.actors.length,a}async _preparePartContext(t,e,s){return g.method(this,"_preparePartContext")("preparing part context",[t,e,s]),e=await super._preparePartContext(t,e,s),t==="configuration"&&(e.showDC=this.showDC,e.dcValue=this.dcValue,e.sendRequest=this.sendRequest,e.actorCount=this.actors.length),e}async _onRender(t,e){var o,a,l;if(g.method(this,"_onRender")("rendering dialog",[t,e]),super._onRender(t,e),this.element.querySelector(".gm-roll-config-fields"))return;let i=this.element.querySelector(".rolls .formulas");if(i&&(this.showDC||this.actors.length>0)){const r={showDC:this.showDC,dcValue:this.dcValue,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},u=await renderTemplate(`modules/${P}/templates/gm-roll-config-fields.hbs`,r),d=document.createElement("div");d.className="gm-roll-config-fields",d.innerHTML=u,i.parentNode.insertBefore(d,i)}this._attachButtonListeners(),((l=(a=(o=this.config.rolls)==null?void 0:o[0])==null?void 0:a.data)!=null&&l.situational||this.config.situational)&&setTimeout(()=>{this.rebuild()},100)}_attachButtonListeners(){g.method(this,"_attachButtonListeners")("attaching button listeners"),this.element.querySelectorAll('[data-action="advantage"], [data-action="normal"], [data-action="disadvantage"]').forEach(s=>{s.addEventListener("click",i=>{i.currentTarget.dataset.action})})}_onChangeForm(t,e){var a,l;g.method(this,"_onChangeForm")("skill/tool form changed",[t,e]),super._onChangeForm(t,e);const i=this.element.querySelector('input[name="crlngn-send-request"]');i&&(this.sendRequest=i.checked);const o=this.element.querySelector('input[name="dc"]');o&&o.value&&(this.dcValue=parseInt(o.value)||null),((a=e.target)==null?void 0:a.name)==="ability"&&((l=e.target)!=null&&l.value)&&(this.config.ability=e.target.value)}_buildConfig(t,e,s){g.method(this,"_buildConfig")("building skill/tool config",[t,e,s]);const o=e==null?void 0:e.get("ability"),a=e==null?void 0:e.get("dc");o&&(t.ability=o,this.config.ability=o);const l=super._buildConfig(t,e,s);if(a){const r=parseInt(a);isNaN(r)||(l.options=l.options||{},l.options.target=r)}else this.dcValue!==void 0&&this.dcValue!==null&&(l.options=l.options||{},l.options.target=this.dcValue);return l}async _processSubmitData(t,e,s){if(g.method(this,"_processSubmitData")("processing skill/tool submit",[t,e,s]),await super._processSubmitData(t,e,s),s.has("dc")&&s.get("dc")!==""){const o=parseInt(s.get("dc"));if(!isNaN(o)&&(this.dcValue=o,this.config.rolls&&this.config.rolls.length>0))for(const a of this.config.rolls)a.options.target=o}this.sendRequest=s.get("crlngn-send-request")!=="false"}_finalizeRolls(t){g.method(this,"_finalizeRolls")("finalizing skill/tool rolls",[t]);const s=super._finalizeRolls(t);if(this.dcValue!==void 0&&this.dcValue!==null)for(const i of s)i.options.target=this.dcValue;return this.config.sendRequest=this.sendRequest,s}static async getConfiguration(t,e,s,i={}){var B,V,J,Z,X,ee,te,se,ie;g.method(de,"getConfiguration")("getting skill/tool configuration",[t,e,s,i]);const a=e==null?void 0:e.toLowerCase(),l=[c.SKILL,c.TOOL].includes(a),r=t[0];if(!r)return null;const u=CONFIG.Dice.D20Roll;let d=null;if(a===c.SKILL){const k=r.system.skills[s];d=(k==null?void 0:k.ability)||((B=CONFIG.DND5E.skills[s])==null?void 0:B.ability)||"int"}else if(a===c.TOOL){const k=(V=r.system.tools)==null?void 0:V[s];d=(k==null?void 0:k.ability)||((X=(Z=(J=CONFIG.DND5E.enrichmentLookup)==null?void 0:J.tools)==null?void 0:Z[s])==null?void 0:X.ability)||"int"}const h={data:r.getRollData(),subject:r,ability:d,chooseAbility:!0,rolls:[{parts:[],data:r.getRollData(),options:{}}]};a===c.SKILL?h.skill=s:a===c.TOOL&&(h.tool=s);const R={create:!1,data:{speaker:ChatMessage.getSpeaker({actor:r})}},p={options:{actors:t,sendRequest:t.some(k=>H._isPlayerOwned(k)),showDC:l,rollKey:s,rollType:u,window:{title:H._getRollTitle(a,s,r),subtitle:t.map(k=>k.name).join(", ")},...i}},m=new this(h,R,p.options),f=await new Promise(k=>{m.addEventListener("close",()=>{k({rolls:m.rolls,config:m.config,message:m.message,sendRequest:m.sendRequest})},{once:!0}),m.render({force:!0})});if(!f.rolls||f.rolls.length===0)return null;const b=f.rolls[0];let N=!1,y=!1;((ee=b==null?void 0:b.options)==null?void 0:ee.advantageMode)!==void 0&&(N=b.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE,y=b.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE);const _={chatMessage:!0,isRollRequest:f.sendRequest,skipDialog:i.skipDialogs||!1,sendRequest:f.sendRequest};N&&(_.advantage=!0),y&&(_.disadvantage=!0);const D=game.settings.get("core","rollMode");f.message.rollMode&&f.message.rollMode!==D&&(_.rollMode=f.message.rollMode);const w=((te=b==null?void 0:b.options)==null?void 0:te.situational)||((se=b==null?void 0:b.data)==null?void 0:se.situational)||"";return w&&(_.situational=w,_.parts=[w]),(ie=b==null?void 0:b.options)!=null&&ie.target&&(_.target=b.options.target),f.config.ability&&[c.SKILL,c.TOOL].includes(a)&&(_.ability=f.config.ability),_.rollTitle=p.options.window.title,_}}const A=class A{static initialize(){g.method(A,"initialize")("initializing"),game.user.isGM&&this.registerHooks()}static registerHooks(){g.method(A,"registerHooks")("registering hooks"),this._registerHook(v.PRE_ROLL_ABILITY_CHECK,this._handlePreRoll.bind(this,c.ABILITY)),this._registerHook(v.PRE_ROLL_SAVING_THROW,this._handlePreRoll.bind(this,c.SAVE)),this._registerHook(v.PRE_ROLL_SKILL_V2,this._handlePreRoll.bind(this,c.SKILL)),this._registerHook(v.PRE_ROLL_TOOL_V2,this._handlePreRoll.bind(this,c.TOOL)),this._registerHook(v.PRE_ROLL_ATTACK_V2,this._handlePreRoll.bind(this,c.ATTACK)),this._registerHook(v.PRE_ROLL_DAMAGE_V2,this._handlePreRoll.bind(this,c.DAMAGE)),this._registerHook(v.PRE_ROLL_INITIATIVE,this._handlePreRoll.bind(this,c.INITIATIVE)),this._registerHook(v.PRE_ROLL_DEATH_SAVE_V2,this._handlePreRoll.bind(this,c.DEATH_SAVE)),this._registerHook(v.PRE_ROLL_HIT_DIE_V2,this._handlePreRoll.bind(this,c.HIT_DIE))}static _registerHook(t,e){g.method(A,"_registerHook")("registering hook",[t]);const i=Hooks.on(t,e);this.registeredHooks.add({hookName:t,hookId:i})}static unregisterHooks(){g.method(A,"unregisterHooks")("unregistering all hooks");for(const{hookName:e,hookId:s}of this.registeredHooks)Hooks.off(e,s);this.registeredHooks.clear()}static _handlePreRoll(t,e,s,i){var h;if(g.method(A,"_handlePreRoll")("handling pre-roll",[t,e,s,i]),!game.user.isGM)return;let a;if(t===c.INITIATIVE&&e instanceof Actor)a=e;else{if(e!=null&&e.isRollRequest||s!=null&&s.isRollRequest||i!=null&&i.isRollRequest)return;a=((h=e.subject)==null?void 0:h.actor)||e.subject||e.actor}const l=S(),r=L.get(l.rollInterceptionEnabled.tag),u=L.get(l.rollRequestsEnabled.tag);if(!r||!u||!a||a.documentName!=="Actor")return;const d=this._getActorOwner(a);if(!(!d||d.id===game.user.id)&&d.active)return this._showGMConfigDialog(a,d,t,e,s,i),!1}static async _showGMConfigDialog(t,e,s,i,o,a){var r,u;g.method(A,"_showGMConfigDialog")("showing GM config dialog",[t,e,s,i,o,a]);try{const d=s==null?void 0:s.toLowerCase(),h=[c.SKILL,c.TOOL].includes(d)?de:H;let R={rolls:[{parts:[],data:{},options:{}}]};switch(d){case c.ABILITY:R.ability=i.ability||((r=i.subject)==null?void 0:r.ability);break;case c.SAVE:R.ability=i.ability||((u=i.subject)==null?void 0:u.ability),i.ability==="con"&&i.targetValue!==void 0&&(s=c.CONCENTRATION);break;case c.SKILL:R.skill=i.skill,R.ability=i.ability;break;case c.TOOL:R.tool=i.tool,R.ability=i.ability;break;case c.CONCENTRATION:R.ability="con";break}const p={actors:[t],rollType:d,showDC:!0,defaultSendRequest:!0,skipDialogs:!1},f=await new h(R,{},p).render(!0);if(!f||!f.sendRequest){await this._executeLocalRoll(t,s,i,f||{});return}const b={...i,...f,requestedBy:game.user.name};this._sendRollRequest(t,e,s,b)}catch{this._sendRollRequest(t,e,s,i)}}static async _executeLocalRoll(t,e,s,i){g.method(A,"_executeLocalRoll")("executing local roll",[t,e,s,i]);const a=e==null?void 0:e.toLowerCase(),l={...s,advantage:i.advantage||s.advantage,disadvantage:i.disadvantage||s.disadvantage,target:i.dc||s.target,rollMode:i.rollMode||s.rollMode,isRollRequest:!1},r={configure:!1,isRollRequest:!1},u={rollMode:l.rollMode,create:!0,isRollRequest:!1};try{switch(a){case c.SAVE:await t.rollSavingThrow(s.ability,l,r,u);break;case c.ABILITY:await t.rollAbilityCheck(s.ability,l,r,u);break;case c.SKILL:await t.rollSkill(s.skill,l,r,u);break;case c.TOOL:await t.rollToolCheck(s.tool,l,r,u);break;case c.CONCENTRATION:await t.rollConcentration(l,r,u);break}}catch{}}static async _showConfigurationDialog(t,e,s,i,o,a){g.method(A,"_showConfigurationDialog")("showing configuration dialog",[t,e,s,i,o,a]);try{const u={...i,_rollMethod:async p=>(this._sendRollRequest(t,e,s,p),new Roll("1d20").evaluate({async:!1})),configured:!1},d=o.cls,R=await new d(u,o.options).render(!0)}catch{this._sendRollRequest(t,e,s,i)}}static _getActorOwner(t){g.method(A,"_getActorOwner")("getting actor owner",[t]);const s=t.ownership||{};for(const[i,o]of Object.entries(s))if(o>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const a=game.users.get(i);if(a&&!a.isGM)return a}return null}static _sendRollRequest(t,e,s,i){var p;g.method(A,"_sendRollRequest")("sending roll request",[t,e,s,i]);const a=S(),l=L.get(a.skipDialogs.tag),r=s==null?void 0:s.toLowerCase();let u=null,d=null;switch(r){case c.ABILITY:case c.SAVE:u=i.ability;break;case c.SKILL:u=i.skill;break;case c.TOOL:u=i.tool;break;case c.ATTACK:case c.DAMAGE:if((p=i.subject)!=null&&p.item){u=i.subject.item.id;const m=F.findActivityForRoll(i.subject.item,s);m&&(d=m.id)}break;case c.HIT_DIE:u=i.denomination;break;default:g.warn(`Unknown roll type: ${s}`);return}const h={advantage:i.advantage||!1,disadvantage:i.disadvantage||!1,situational:i.situational||0,parts:i.parts||[],rollMode:i.rollMode||game.settings.get("core","rollMode"),elvenAccuracy:i.elvenAccuracy||!1,halflingLucky:i.halflingLucky||!1,reliableTalent:i.reliableTalent||!1,minimum:i.minimum,maximize:i.maximize,critical:i.critical,fumble:i.fumble,targetValue:i.targetValue,fastForward:i.fastForward||!1,chatMessage:i.chatMessage!==!1,flavor:i.flavor,title:i.title,dialogOptions:i.dialogOptions,messageData:i.messageData};Object.keys(h).forEach(m=>{h[m]===void 0&&delete h[m]});const R={type:"rollRequest",requestId:foundry.utils.randomID(),actorId:t.id,rollType:r,rollKey:u,activityId:d,config:h,skipDialog:l,targetTokenIds:Array.from(game.user.targets).map(m=>m.id),preserveTargets:L.get(a.useGMTargetTokens.tag)};G.execForUser("handleRollRequest",e.id,R),ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestSent",{player:e.name,actor:t.name}))}};T(A,"registeredHooks",new Set);let he=A;function ye(n,t){var i,o,a,l,r;let e=game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${n}`)||n;const s=n==null?void 0:n.toLowerCase();if(t)switch(s){case c.SKILL:e+=` (${((i=CONFIG.DND5E.skills[t])==null?void 0:i.label)||t})`;break;case c.SAVE:e+=` (${((o=CONFIG.DND5E.abilities[t])==null?void 0:o.label)||t})`;break;case c.ABILITY:e+=` (${((a=CONFIG.DND5E.abilities[t])==null?void 0:a.label)||t})`;break;case c.TOOL:const u=(r=(l=CONFIG.DND5E.enrichmentLookup)==null?void 0:l.tools)==null?void 0:r[t];if(u!=null&&u.id){const d=dnd5e.documents.Trait.getBaseItem(u.id,{indexOnly:!0});e+=` (${(d==null?void 0:d.name)||t})`}else e+=` (${t})`;break;case c.CUSTOM:e=`${e}: ${t}`;break}return e}function Ne(n,t=ye){if(n.length===0)return;const e={};for(const i of n){const o=`${i.rollType}_${i.rollKey||""}`;e[o]||(e[o]={rollType:i.rollType,rollKey:i.rollKey,actors:[],gm:i.gm}),e[o].actors.push(i.actor)}const s=Object.values(e);if(s.length===1&&s[0].actors.length===1){const i=s[0];ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestReceived",{gm:i.gm,rollType:t(i.rollType,i.rollKey)}))}else{const i=[];for(const o of s){const a=t(o.rollType,o.rollKey),l=o.actors.join(", ");i.push(`${a} (${l})`)}ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsReceivedMultiple",{gm:s[0].gm,requests:i.join("; ")}))}}function De(n){const t=n.ownership||{};for(const[e,s]of Object.entries(t))if(s>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const i=game.users.get(e);if(i&&!i.isGM)return i}return null}function we(n,t=game.user){if(!(n!=null&&n.length))return;n.map(s=>canvas.tokens.get(s)).filter(s=>s).forEach(s=>s.setTarget(!0,{user:t}))}function le(n){return n.type!=="character"&&n.type!=="npc"?!1:Object.entries(n.ownership).some(([t,e])=>{const s=game.users.get(t);return s&&!s.isGM&&e>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})}function Te(n){if(n.type!=="character"&&n.type!=="npc")return!1;const t=game.scenes.active;return t&&t.tokens.some(e=>e.actorId===n.id)}function re(n,t){if(!game.scenes.active)return;const s=canvas.tokens.placeables.filter(i=>{var o;return((o=i.actor)==null?void 0:o.id)===n});for(const i of s)t?i.control({releaseOthers:!1}):i.release()}function Le(n){return new Promise(t=>setTimeout(t,n))}function ve(){var n;return!((n=ui==null?void 0:ui.sidebar)!=null&&n._collapsed)}function qe(n){const t=document.querySelector("body");n?t.classList.add("sidebar-expanded"):t.classList.remove("sidebar-expanded")}function Me(n,t){var a;const e=[];if(!n||t.size===0)return e;const s=q.ROLL_REQUEST_OPTIONS[n];if(!s||!s.subList)return e;const i=Array.from(t)[0],o=game.actors.get(i);if(s.subList==="tools"){const l=((a=CONFIG.DND5E.enrichmentLookup)==null?void 0:a.tools)||CONFIG.DND5E.tools||{};for(const[r,u]of Object.entries(l)){let d=r;if(u!=null&&u.id){const h=dnd5e.documents.Trait.getBaseItem(u.id,{indexOnly:!0});d=(h==null?void 0:h.name)||r}else d=r.replace(/([A-Z])/g," $1").replace(/^./,h=>h.toUpperCase()).trim();e.push({id:r,name:d,rollable:!0})}e.sort((r,u)=>r.name.localeCompare(u.name))}else if(o&&s.actorPath){const l=foundry.utils.getProperty(o,s.actorPath)||{},r=CONFIG.DND5E[s.subList];for(const[u,d]of Object.entries(l)){let h="";s.subList==="skills"&&(r!=null&&r[u])||s.subList==="abilities"&&(r!=null&&r[u])?h=r[u].label:h=d.label||game.i18n.localize(d.name||u)||u,e.push({id:u,name:h,rollable:!0})}s.subList==="skills"&&e.sort((u,d)=>u.name.localeCompare(d.name))}return e}const E=class E{static notify(t,e,s={}){if(!s.batch){ui.notifications[t](e);return}s.batchData&&(E.pendingNotifications.push(s.batchData),E.notificationTimer&&clearTimeout(E.notificationTimer),E.notificationTimer=setTimeout(()=>{Ne(E.pendingNotifications),E.pendingNotifications=[],E.notificationTimer=null},E.NOTIFICATION_BATCH_DELAY))}static notifyRollRequestsSent(t,e){const s=Object.entries(t);if(s.length!==0)if(s.length===1){const i=Object.values(t)[0],o=i.actors.map(a=>a.name).join(", ");ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsSentSingle",{rollType:e,actors:o,player:i.player.name}))}else{const i=s.map(([o,a])=>{const l=a.actors.map(r=>r.name).join(", ");return`${a.player.name} (${l})`});ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsSentMultiple",{rollType:e,count:s.length,players:i.join("; ")}))}}static clearPending(){E.notificationTimer&&(clearTimeout(E.notificationTimer),E.notificationTimer=null),E.pendingNotifications=[]}};T(E,"pendingNotifications",[]),T(E,"notificationTimer",null),T(E,"NOTIFICATION_BATCH_DELAY",500);let O=E;function Ge(n){var s;const t=[],e=[];for(const i of n){const o=((s=i.system.attributes.hp)==null?void 0:s.value)||0,a=i.system.attributes.death||{},l=a.success||0,r=a.failure||0;o<=0&&l<3&&r<3?t.push(i):e.push(i.name)}return e.length>0&&O.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.actorsSkippingDeathSave",{actors:e.join(", ")})),t}function Ve(n){const t=[],e=[];for(const s of n){const i=De(s);i?t.push({actor:s,owner:i}):e.push(s)}return{pcActors:t,npcActors:e}}const oe={async ensureActorInCombat(n){if(!game.combat)return null;let t=game.combat.getCombatantByActor(n.id);if(t)return t;const e=n.getActiveTokens();try{return e.length?(await game.combat.createEmbeddedDocuments("Combatant",[{tokenId:e[0].id,actorId:n.id}]))[0]:(await game.combat.createEmbeddedDocuments("Combatant",[{actorId:n.id}]))[0]}catch(s){return console.error(`Failed to add actor ${n.name} to combat:`,s),null}},buildAbilityCheckConfig(n,t){const e={ability:n,advantage:t.advantage,disadvantage:t.disadvantage,target:t.target,isRollRequest:t.isRollRequest};t.situational&&(e.rolls=[{parts:["@situational"],data:{situational:t.situational},options:{},situational:!0}]);const s={configure:!t.fastForward},i={rollMode:t.rollMode,create:t.chatMessage!==!1};return[e,s,i]},buildSkillCheckConfig(n,t){var o,a;const e={skill:n,advantage:t.advantage,disadvantage:t.disadvantage,ability:t.ability,chooseAbility:!!t.ability};t.target&&(e.target=t.target);const s={configure:!t.fastForward},i={rollMode:t.rollMode,create:t.chatMessage!==!1,data:{}};if(t.rollTitle)i.data.flavor=t.rollTitle;else if(t.ability){const l=((o=CONFIG.DND5E.skills[n])==null?void 0:o.label)||n,r=((a=CONFIG.DND5E.abilities[t.ability])==null?void 0:a.label)||t.ability;i.data.flavor=game.i18n.format("DND5E.SkillPromptTitle",{skill:l,ability:r})}return[e,s,i]},buildToolCheckConfig(n,t){var o,a,l;const e={tool:n,advantage:t.advantage,disadvantage:t.disadvantage,ability:t.ability,chooseAbility:!t.ability};t.target&&(e.target=t.target);const s={configure:!t.fastForward},i={rollMode:t.rollMode,create:t.chatMessage!==!1,data:{}};if(t.rollTitle)i.data.flavor=t.rollTitle;else if(t.ability){let r=n;const u=(a=(o=CONFIG.DND5E.enrichmentLookup)==null?void 0:o.tools)==null?void 0:a[n];if(u!=null&&u.id){const h=dnd5e.documents.Trait.getBaseItem(u.id,{indexOnly:!0});r=(h==null?void 0:h.name)||n}const d=((l=CONFIG.DND5E.abilities[t.ability])==null?void 0:l.label)||t.ability;i.data.flavor=`${d} (${r}) ${game.i18n.localize("DND5E.Check")}`}return[e,s,i]}},Fe={[c.ABILITY_CHECK]:async(n,t,e)=>{const[s,i,o]=oe.buildAbilityCheckConfig(t,e);await n.rollAbilityCheck(s,i,o)},[c.SAVING_THROW]:async(n,t,e)=>{const[s,i,o]=oe.buildAbilityCheckConfig(t,e);await n.rollSavingThrow(s,i,o)},[c.SKILL]:async(n,t,e)=>{const[s,i,o]=oe.buildSkillCheckConfig(t,e);await n.rollSkill(s,i,o)},[c.TOOL]:async(n,t,e)=>{const[s,i,o]=oe.buildToolCheckConfig(t,e);await n.rollToolCheck(s,i,o)},[c.CONCENTRATION]:async(n,t,e)=>{const s={advantage:e.advantage,disadvantage:e.disadvantage,target:e.target},i={configure:!e.fastForward&&!e.skipDialog},o={rollMode:e.rollMode,create:e.chatMessage!==!1};await n.rollConcentration(s,i,o)},[c.INITIATIVE_DIALOG]:async(n,t,e)=>{if(!game.combat){ui.notifications.warn(game.i18n.localize("COMBAT.NoneActive"));return}if(!await oe.ensureActorInCombat(n)){ui.notifications.warn(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.actorNotInCombat",{actor:n.name}));return}const i={advantage:e.advantage,disadvantage:e.disadvantage},o={configure:!e.fastForward&&!e.skipDialog},a={rollMode:e.rollMode,create:e.chatMessage!==!1};await(e.skipDialog||e.fastForward?n.rollInitiative(i,o,a):n.rollInitiativeDialog(i,o,a))},[c.DEATH_SAVE]:async(n,t,e)=>{const s={advantage:e.advantage,disadvantage:e.disadvantage,target:e.target},i={configure:!e.fastForward&&!e.skipDialog},o={rollMode:e.rollMode,create:e.chatMessage!==!1};await n.rollDeathSave(s,i,o)},[c.CUSTOM]:async(n,t,e)=>{try{const s=n.getRollData(),i=new Roll(t,s);i.options=i.options||{},i.options.isRollRequest=!0,await i.evaluate({async:!0}),await i.toMessage({speaker:ChatMessage.getSpeaker({actor:n}),flavor:e.rollTitle||game.i18n.localize("CRLNGN_ROLLS.rollTypes.custom"),rollMode:e.rollMode})}catch{ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:t}))}}};class ue extends foundry.applications.api.HandlebarsApplicationMixin(foundry.applications.api.ApplicationV2){constructor(t={}){super(t),this.formula=t.formula||"",this.readonly=t.readonly||!1,this.actor=t.actor,this.callback=t.callback,this.diceCounts={}}_onClickAction(t,e){switch(e.dataset.action){case"rollDice":return this.rollDice(t,e);case"addDie":return this.addDie(t,e);case"cancel":return this.cancel(t,e)}}async _prepareContext(t={}){return{...await super._prepareContext(t),formula:this.formula,readonly:this.readonly}}_attachPartListeners(t,e,s){super._attachPartListeners(t,e,s);const i=e.querySelector("#custom-roll-formula"),o=e.querySelector("#formula-validation-message");i&&!this.readonly&&(i.addEventListener("input",a=>{this.formula=a.target.value.trim(),this.updateValidationMessage(o)}),this.formula&&this.updateValidationMessage(o))}updateValidationMessage(t){if(!t)return;if(!this.formula){t.textContent="&nbsp;",t.classList.remove("error","success");return}this.validateFormula(this.formula)?(t.textContent=game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.formulaValid"),t.classList.remove("error"),t.classList.add("success")):(t.textContent=game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.formulaInvalid"),t.classList.remove("success"),t.classList.add("error"))}addDie(t,e){const s=e.dataset.die,i=this.element.querySelector("#custom-roll-formula");if(!i)return;const o=i.value.trim();if(o){const a=/(\d*)d(\d+)/g,l=new Map;let r=o,u;for(;(u=a.exec(o))!==null;){const R=parseInt(u[1]||"1"),p=u[2];l.set(p,(l.get(p)||0)+R),r=r.replace(u[0],"").trim()}const d=s.substring(1);l.set(d,(l.get(d)||0)+1);const h=[];for(const[R,p]of l)h.push(`${p}d${R}`);r=r.replace(/^\+\s*|\s*\+\s*$|\s*\+\s*\+/g,"").trim(),r&&r!=="+"?this.formula=`${h.join(" + ")} + ${r}`:this.formula=h.join(" + ")}else this.formula=`1${s}`;i.value=this.formula,i.dispatchEvent(new Event("input"))}validateFormula(t){var e;if(!t||t.trim()==="")return!1;try{return Roll.validate(t)}catch{try{return new Roll(t,((e=this.actor)==null?void 0:e.getRollData())||{}),!0}catch{return!1}}}async rollDice(){if(g.method(this,"rollDice"),!this.validateFormula(this.formula)){ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:this.formula||"empty"}));return}this.callback&&await this.callback(this.formula),this.close()}cancel(){this.close()}static async prompt(t={}){return new Promise(e=>{const s=new this({...t,callback:i=>e(i)});s.addEventListener("close",()=>{s._resolved||e(null)}),s.render(!0)})}async close(t={}){return this._resolved=!0,super.close(t)}}T(ue,"DEFAULT_OPTIONS",{id:"crlngn-custom-roll-dialog",classes:["crlngn-rolls-dialog","crlngn-custom-roll-dialog"],tag:"div",window:{title:"CRLNGN_ROLLS.ui.dialogs.customRollTitle",icon:"fas fa-dice-d20",resizable:!1,positioned:!0,frame:!0},position:{width:400,height:"auto"}}),T(ue,"PARTS",{main:{template:`modules/${q.ID}/templates/custom-roll-dialog.hbs`},footer:{template:`modules/${q.ID}/templates/custom-roll-dialog-footer.hbs`}});async function Pe(){return game.combat?!0:await Dialog.confirm({title:game.i18n.localize("COMBAT.Create"),content:"<p>"+game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.noCombatActive")+"</p>",yes:()=>!0,no:()=>!1,defaultYes:!0,options:{classes:["crlngn-rolls-dialog"]}})?(await(await game.combats.documentClass.create({scene:game.scenes.active.id})).activate(),O.notify("info",game.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.combatCreated")),!0):!1}async function He(n,t){if(!t.combat)return n;const e=n.map(o=>t.actors.get(o)).filter(o=>o),s=[],i=new Set;for(const o of e){const a=t.combat.getCombatantByActor(o.id);a&&a.initiative!==null&&(s.push(o.name),i.add(o.id))}if(s.length>0)if(await Dialog.confirm({title:t.i18n.localize("CRLNGN_ROLLS.ui.dialogs.rerollInitiativeTitle"),content:"<p>"+t.i18n.format("CRLNGN_ROLLS.ui.dialogs.rerollInitiative",{actors:s.join(", ")})+"</p>",yes:()=>!0,no:()=>!1,defaultYes:!1,options:{classes:["crlngn-rolls-dialog"]}})){for(const a of i){const l=t.combat.getCombatantByActor(a);l&&await l.update({initiative:null})}return n}else{const a=n.filter(l=>!i.has(l));return a.length===0&&O.notify("info",t.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.allActorsHaveInitiative")),a}return n}var M;const x=class x extends foundry.applications.api.HandlebarsApplicationMixin(foundry.applications.api.ApplicationV2){constructor(e={}){g.method(x,"constructor");super(e);T(this,"_onClickOutside",e=>{if(g.method(this,"_onClickOutside"),this.isLocked)return;const s=this.element;s&&(e.target.closest(".roll-requests-menu")||s.contains(e.target)||e.target.closest("#crlngn-requests-icon")||e.target.closest(".dialog, .app, .notification")||this.close())});this.selectedActors=new Set,this.currentTab="pc",this.selectedRequestType=null,this.isLocked=!1,this.optionsExpanded=game.user.getFlag(q.ID,"menuOptionsExpanded")??!1,this._initializeFromSelectedTokens()}async _prepareContext(e){g.method(this,"_prepareContext");const s=await super._prepareContext(e),i=game.actors.contents,o=[],a=[],l=game.scenes.active;for(const f of i){if(f.type!=="character"&&f.type!=="npc")continue;const b={id:f.id,uuid:f.uuid,name:f.name,img:f.img,selected:this.selectedActors.has(f.id),crlngnStats:this._getActorStats(f)};Object.entries(f.ownership).some(([y,_])=>{const D=game.users.get(y);return D&&!D.isGM&&_>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})?o.push(b):l&&l.tokens.some(_=>_.actorId===f.id)&&a.push(b)}const r=S(),u=L.get(r.rollRequestsEnabled.tag),d=L.get(r.skipDialogs.tag),h=this.currentTab==="pc"?o:a,R=h.length>0&&h.every(f=>this.selectedActors.has(f.id)),p=[];if(this.selectedActors.size>0)for(const[f,b]of Object.entries(q.ROLL_REQUEST_OPTIONS))p.push({id:f,name:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${b.name}`)||b.label,rollable:b.subList==null,hasSubList:!!b.subList,selected:this.selectedRequestType===f});const m=Me(this.selectedRequestType,this.selectedActors);return{...s,actors:h,currentTab:this.currentTab,isPCTab:this.currentTab==="pc",isNPCTab:this.currentTab==="npc",selectedTab:this.currentTab,rollRequestsEnabled:u,skipDialogs:d,selectAllOn:R,hasSelectedActors:this.selectedActors.size>0,requestTypes:p,rollTypes:m,showNames:!0,actorsLocked:this.isLocked,optionsExpanded:this.optionsExpanded}}_getActorStats(e){var o,a,l,r,u;g.method(this,"_getActorStats");const s=e.system,i=[];return(o=s.attributes)!=null&&o.hp&&i.push({abbrev:"HP",value:s.attributes.hp.value}),(a=s.attributes)!=null&&a.ac&&i.push({abbrev:"AC",value:s.attributes.ac.value}),(l=s.attributes)!=null&&l.spelldc&&i.push({abbrev:"DC",value:s.attributes.spelldc}),(u=(r=s.skills)==null?void 0:r.prc)!=null&&u.passive&&i.push({abbrev:"PP",value:s.skills.prc.passive}),i}_onRender(e,s){if(g.method(this,"_onRender"),super._onRender(e,s),this._attachListeners(),this.optionsExpanded){const i=this.element.querySelector(".options-toggle"),o=this.element.querySelector("li.options");i&&i.classList.add("expanded"),o&&o.classList.add("expanded")}setTimeout(()=>{document.addEventListener("click",this._onClickOutside,!0)},100),this._tokenControlHook=Hooks.on("controlToken",this._onTokenControlChange.bind(this))}_onTokenControlChange(e,s){g.method(this,"_onTokenControlChange"),this.rendered&&(this._ignoreTokenControl||(this._tokenUpdateTimeout&&clearTimeout(this._tokenUpdateTimeout),this._tokenUpdateTimeout=setTimeout(()=>{this._initializeFromSelectedTokens(),this.render(),this._tokenUpdateTimeout=null},100)))}_attachListeners(){var a,l,r,u,d;g.method(this,"_attachListeners");const e=this.element;(a=e.querySelector("#crlngn-requests-toggle"))==null||a.addEventListener("change",this._onToggleRollRequests.bind(this)),(l=e.querySelector("#crlngn-skip-dialogs"))==null||l.addEventListener("change",this._onToggleSkipDialogs.bind(this)),(r=e.querySelector("#crlngn-actors-all"))==null||r.addEventListener("change",this._onToggleSelectAll.bind(this)),(u=e.querySelector("#crlngn-actors-lock"))==null||u.addEventListener("click",this._onToggleLock.bind(this)),(d=e.querySelector(".options-toggle"))==null||d.addEventListener("click",this._onToggleOptions.bind(this)),e.querySelectorAll(".actor-tab").forEach(h=>{h.addEventListener("click",this._onTabClick.bind(this))}),e.querySelectorAll(".actor").forEach(h=>{h.addEventListener("click",this._onActorClick.bind(this))}),e.querySelectorAll(".actor-select").forEach(h=>{h.addEventListener("click",this._onActorSelectClick.bind(this))});const i=e.querySelector(".request-types");i&&i.addEventListener("click",h=>{const R=h.target.closest("li");if(R&&R.dataset.id){const p={...h,currentTarget:R};this._onRequestTypeClick(p)}});const o=e.querySelector(".roll-types");o&&o.addEventListener("click",h=>{const R=h.target.closest("li");if(R&&R.dataset.id){const p={...h,currentTarget:R};this._onRollTypeClick(p)}})}async _onToggleRollRequests(e){g.method(this,"_onToggleRollRequests");const s=S(),i=e.target.checked;await L.set(s.rollRequestsEnabled.tag,i),_e.updateRollRequestsIcon(i)}async _onToggleSkipDialogs(e){g.method(this,"_onToggleSkipDialogs");const s=S(),i=e.target.checked;await L.set(s.skipDialogs.tag,i)}_onToggleSelectAll(e){g.method(this,"_onToggleSelectAll");const s=e.target.checked;this._ignoreTokenControl=!0,(this.currentTab==="pc"?game.actors.contents.filter(o=>le(o)):game.actors.contents.filter(o=>!le(o)&&Te(o))).forEach(o=>{s?(this.selectedActors.add(o.id),re(o.id,!0)):(this.selectedActors.delete(o.id),re(o.id,!1))}),setTimeout(()=>{this._ignoreTokenControl=!1},200),this.render(),this._updateRequestTypesVisibility()}_onToggleLock(e){g.method(this,"_onToggleLock"),e.preventDefault(),this.isLocked=!this.isLocked;const s=e.currentTarget;s.classList.remove("fa-lock-keyhole","fa-lock-keyhole-open"),s.classList.add(this.isLocked?"fa-lock-keyhole":"fa-lock-keyhole-open")}async _onToggleOptions(e){g.method(this,"_onToggleOptions"),e.preventDefault(),this.optionsExpanded=!this.optionsExpanded,await game.user.setFlag(q.ID,"menuOptionsExpanded",this.optionsExpanded);const s=e.currentTarget||e.target.closest(".options-toggle");s&&s.classList.toggle("expanded",this.optionsExpanded);const i=this.element.querySelector("li.options");i&&i.classList.toggle("expanded",this.optionsExpanded)}_initializeFromSelectedTokens(){var s;g.method(this,"_initializeFromSelectedTokens");const e=((s=canvas.tokens)==null?void 0:s.controlled)||[];this.selectedActors.clear();for(const i of e)if(i.actor&&(this.selectedActors.add(i.actor.id),this.selectedActors.size===1)){const o=le(i.actor);this.currentTab=o?"pc":"npc"}}async _onTabClick(e){var i;g.method(this,"_onTabClick");const s=e.currentTarget.dataset.tab;s!==this.currentTab&&(this.selectedActors.clear(),(i=canvas.tokens)==null||i.releaseAll(),this.selectedRequestType=null,this.currentTab=s,await this.render())}_onActorClick(e){if(g.method(this,"_onActorClick"),e.target.closest(".actor-select"))return;const i=e.currentTarget.dataset.id;this._toggleActorSelection(i)}_onActorSelectClick(e){g.method(this,"_onActorSelectClick"),e.stopPropagation();const s=e.currentTarget.dataset.id;this._toggleActorSelection(s)}_toggleActorSelection(e){g.method(this,"_toggleActorSelection"),this._ignoreTokenControl=!0,this.selectedActors.has(e)?(this.selectedActors.delete(e),re(e,!1)):(this.selectedActors.add(e),re(e,!0)),setTimeout(()=>{this._ignoreTokenControl=!1},100),this.render(),this._updateRequestTypesVisibility(),this._updateSelectAllState()}_updateRequestTypesVisibility(){g.method(this,"_updateRequestTypesVisibility"),this.render()}_updateSelectAllState(){g.method(this,"_updateSelectAllState");const e=this.element.querySelector("#crlngn-actors-all"),s=this.currentTab==="pc"?"pc":"npc",i=this.element.querySelectorAll(`.${s}-actors .actor-item input[type="checkbox"]`),o=Array.from(i).filter(a=>a.checked).length;e.checked=o>0&&o===i.length,e.indeterminate=o>0&&o<i.length}async _onRequestTypeClick(e){g.method(this,"_onRequestTypeClick");const i=e.currentTarget.dataset.id,o=q.ROLL_REQUEST_OPTIONS[i];if(!o){g.error("Unknown request type:",i);return}this.selectedRequestType===i?this.selectedRequestType=null:this.selectedRequestType=i,o.subList?await this.render():this.selectedRequestType&&this._triggerRoll(i,null)}_onRollTypeClick(e){g.method(this,"_onRollTypeClick");const s=e.currentTarget.dataset.id;this._triggerRoll(this.selectedRequestType,s)}_getValidActorIds(e){return e.filter(s=>{const i=game.actors.get(s);if(!i)return!1;const o=le(i),a=!o&&Te(i);return this.currentTab==="pc"&&o||this.currentTab==="npc"&&a})}async _handleCustomRoll(){return await this._showCustomRollDialog()}async _getRollConfiguration(e,s,i,o,a){const l=S(),r=L.get(l.rollRequestsEnabled.tag);if(!o&&s!==c.CUSTOM)return await([c.SKILL,c.TOOL].includes(s)?de:H).getConfiguration(e,s,i,{skipDialogs:o,defaultSendRequest:r});{const u={advantage:!1,disadvantage:!1,situational:"",parts:[],rollMode:game.settings.get("core","rollMode"),chatMessage:!0,isRollRequest:!1,skipDialog:!0,sendRequest:r&&a.length>0};return s===c.DEATH_SAVE&&(u.target=10),u}}async _executeRollRequests(e,s,i,o,a){const l=S(),r=[],u=[];if(e.sendRequest){for(const{actor:d,owner:h}of s){if(!h.active){L.get(l.showOfflineNotifications.tag)&&O.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.playerOffline",{player:h.name})),u.push(d);continue}this._sendRollRequestToPlayer(d,h,o,a,e,!0),r.push({actor:d,owner:h}),await Le(100)}r.length>0&&this._sendConsolidatedNotification(r,o,a)}else i.push(...s.map(({actor:d})=>d));if(u.length>0){const d={...e,skipDialog:!0};await this._handleNPCRolls(u,o,a,d)}if(i.length>0){const d={...e};d.fastForward=!0,d.skipDialog=!0,await this._handleNPCRolls(i,o,a,d)}}async _triggerRoll(e,s){var f;g.method(this,"_triggerRoll");const i=S(),o=Array.from(this.selectedActors),a=L.get(i.skipDialogs.tag),l=this._getValidActorIds(o),r=q.ROLL_REQUEST_OPTIONS[e],u=(f=(r==null?void 0:r.name)||e)==null?void 0:f.toLowerCase();if(u===c.CUSTOM&&(s=await this._handleCustomRoll(),!s)||u===c.INITIATIVE_DIALOG&&!await Pe())return;let d=l;if(u===c.INITIATIVE_DIALOG&&game.combat&&(d=await He(l,game),!d.length))return;let h=d.map(b=>game.actors.get(b)).filter(b=>b);if(u===c.DEATH_SAVE&&(h=await Ge(h)),!h.length){O.notify("warn","No valid actors selected");return}const{pcActors:R,npcActors:p}=Ve(h),m=await this._getRollConfiguration(h,u,s,a,R);m&&(await this._executeRollRequests(m,R,p,u,s),setTimeout(()=>this.close(),500))}_sendRollRequestToPlayer(e,s,i,o,a,l=!1){g.method(this,"_sendRollRequestToPlayer");const r=S(),u=i==null?void 0:i.toLowerCase();let d=u;u===c.ABILITY_CHECK?d=c.ABILITY:u===c.SAVING_THROW?d=c.SAVE:u===c.INITIATIVE_DIALOG&&(d=c.INITIATIVE);const h={type:"rollRequest",requestId:foundry.utils.randomID(),actorId:e.id,rollType:d,rollKey:o,activityId:null,config:{rollMode:a.rollMode||game.settings.get("core","rollMode"),advantage:a.advantage||!1,disadvantage:a.disadvantage||!1,situational:a.situational||"",parts:a.parts||[],chatMessage:a.chatMessage!==!1,target:a.target,ability:a.ability,attackMode:a.attackMode,rollTitle:a.rollTitle},skipDialog:a.skipDialog||!1,targetTokenIds:Array.from(game.user.targets).map(R=>R.id),preserveTargets:L.get(r.useGMTargetTokens.tag)};G.execForUser("handleRollRequest",s.id,h),l||O.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestSent",{player:s.name,actor:e.name}))}_sendConsolidatedNotification(e,s,i){var r,u,d,h,R;g.method(this,"_sendConsolidatedNotification");const o={};for(const{actor:p,owner:m}of e)o[m.id]||(o[m.id]={player:m,actors:[]}),o[m.id].actors.push(p);for(const[p,m]of Object.entries(q.ROLL_REQUEST_OPTIONS))if(m.name===s)break;const a=s;let l=game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${a}`)||a;if(i){const p=a.toLowerCase();if(p===c.SKILL)l=`${l} (${((r=CONFIG.DND5E.skills[i])==null?void 0:r.label)||i})`;else if(p===c.SAVING_THROW)l=`${l} (${((u=CONFIG.DND5E.abilities[i])==null?void 0:u.label)||i})`;else if(p===c.ABILITY_CHECK)l=`${l} (${((d=CONFIG.DND5E.abilities[i])==null?void 0:d.label)||i})`;else if(p===c.TOOL){const m=(R=(h=CONFIG.DND5E.enrichmentLookup)==null?void 0:h.tools)==null?void 0:R[i];if(m!=null&&m.id){const f=dnd5e.documents.Trait.getBaseItem(m.id,{indexOnly:!0});l=`${l} (${(f==null?void 0:f.name)||i})`}else l=`${l} (${i})`}else p===c.CUSTOM&&(l=`${l}: ${i}`)}O.notifyRollRequestsSent(o,l)}async _handleNPCRolls(e,s,i,o){g.method(this,"_handleNPCRolls");const a={advantage:o.advantage||!1,disadvantage:o.disadvantage||!1,situational:o.situational||"",parts:o.parts||[],rollMode:o.rollMode||game.settings.get("core","rollMode"),fastForward:o.skipDialog||!1,skipDialog:o.skipDialog||!1,chatMessage:o.chatMessage!==!1,isRollRequest:!1,target:o.target,ability:o.ability,attackMode:o.attackMode};for(const l of e)await this._executeActorRoll(l,s,i,a),await Le(100)}async _executeActorRoll(e,s,i,o){g.method(this,"_executeActorRoll");try{const a=s.toLowerCase(),l=Fe[a];l?await l(e,i,o):O.notify("warn",`Unknown roll type: ${s}`)}catch{O.notify("error",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:e.name}))}}async _onClose(e){g.method(this,"_onClose"),await super._onClose(e),this.selectedActors.clear(),this.selectedRequestType=null,document.removeEventListener("click",this._onClickOutside,!0),this._tokenControlHook&&(Hooks.off("controlToken",this._tokenControlHook),this._tokenControlHook=null),this._tokenUpdateTimeout&&(clearTimeout(this._tokenUpdateTimeout),this._tokenUpdateTimeout=null)}setPosition(e={}){return g.method(this,"setPosition"),this}async _showCustomRollDialog(){return g.method(this,"_showCustomRollDialog"),ue.prompt({formula:"",readonly:!1})}static toggle(){g.method(x,"toggle"),$(this,M)?$(this,M).rendered?$(this,M).close():($(this,M)._initializeFromSelectedTokens(),$(this,M).render(!0)):(Ce(this,M,new x),$(this,M).render(!0))}};M=new WeakMap,be(x,M,null),T(x,"DEFAULT_OPTIONS",{id:"crlngn-requests-menu",classes:["roll-requests-menu"],tag:"div",window:{frame:!1,resizable:!1,minimizable:!1},position:null}),T(x,"PARTS",{main:{template:`modules/${q.ID}/templates/requests-menus.hbs`}});let fe=x;class _e{static addSidebarControls(t,e,s){if(!game.user.isGM||t.id!=="chat")return;const o=(e[0]||e).querySelector("#chat-controls");if(!o||o.querySelector(".roll-requests-icon"))return;const a=S(),l=L.get(a.rollRequestsEnabled.tag),r=document.createElement("a");r.id="crlngn-requests-icon",r.setAttribute("data-tooltip-direction","RIGHT"),r.className=`chat-control-icon roll-requests-icon${l?" active":""}`,r.title=game.i18n.localize("CRLNGN_ROLLS.ui.menus.rollRequestsTitle"),r.innerHTML=`<i class="fas fa-bolt${l?"":"-slash"}"></i>`;const u=o.querySelector(".chat-control-icon");u?u.parentNode.insertBefore(r,u):o.insertBefore(r,o.firstChild),r.addEventListener("click",()=>{fe.toggle()})}static updateRollRequestsIcon(t){const e=document.querySelector("#crlngn-requests-icon i");e&&(e.className=`fas fa-bolt${t?"":"-slash"}`)}}class Ee{static initialize(){Hooks.once(W.INIT,this._onInit.bind(this)),Hooks.once(W.READY,this._onReady.bind(this))}static _onInit(){S(),document.body.classList.add("crlngn-rolls"),L.registerSettings(),U.initialize(),this._registerHook(W.RENDER_SIDEBAR_TAB,this._onRenderSidebarTab.bind(this))}static _onReady(){const t=S();L.get(t.debugMode.tag)&&(CONFIG.debug.hooks=!0),he.initialize(),this._registerDnd5eHooks(),game.user.isGM?this._registerGMHooks():U.getDiceConfig(),qe(ve())}static _registerDnd5eHooks(){this._registerHook(v.POST_ROLL_CONFIG,this._onPostRollConfig.bind(this)),this._registerHook(W.PRE_CREATE_CHAT_MESSAGE,this._onPreCreateChatMessage.bind(this)),this._registerHook(W.PRE_CREATE_CHAT_MESSAGE,this._onPreCreateChatMessageFlavor.bind(this)),this._registerHook(v.RENDER_ROLL_CONFIGURATION_DIALOG,this._onRenderRollConfigDialog.bind(this))}static _registerGMHooks(){this._registerHook(W.USER_CONNECTED,this._onUserConnected.bind(this)),game.users.forEach(t=>{this._onUserConnected(t)})}static _onPostRollConfig(t,e,s,i){e._showRequestedBy&&t.length>0&&(i.data=i.data||{},i.data._showRequestedBy=!0,i.data._requestedBy=e._requestedBy)}static _onPreCreateChatMessage(t,e,s,i){var o;if(e._showRequestedBy&&((o=e.rolls)==null?void 0:o.length)>0){const a=e._requestedBy||"GM",l=game.i18n.format("CRLNGN_ROLL_REQUESTS.chat.requestedBy",{gm:a}),r=e.flavor||"";e.flavor=r?`${r} ${l}`:l}}static _onPreCreateChatMessageFlavor(t,e,s,i){var o,a;if(((o=e.rolls)==null?void 0:o.length)>0&&e.rolls[0])try{const l=e.rolls[0];(a=l.options)!=null&&a._customFlavor&&(e.flavor=l.options._customFlavor)}catch{}}static _onRenderRollConfigDialog(t,e,s){var a,l;if(g.log("_onRenderRollConfigDialog triggered",[{app:t,config:t.config,rolls:(a=t.config)==null?void 0:a.rolls,situational:(l=t.config)==null?void 0:l.situational,data:s}]),t._situationalTriggered)return;const i=e.querySelectorAll('input[name*="situational"]');g.log("Found situational inputs:",[i.length]);let o=!1;i.forEach((r,u)=>{var d,h,R,p,m;g.log(`Situational input ${u}:`,[{name:r.name,value:r.value,type:r.type}]),!r.value&&((p=(R=(h=(d=t.config)==null?void 0:d.rolls)==null?void 0:h[0])==null?void 0:R.data)!=null&&p.situational)&&((m=t.config)!=null&&m.isConcentration)&&(g.log("Populating concentration situational bonus:",t.config.bonus),r.value=t.config.rolls[0].data.situational,o=!0),r.value&&!o&&(t._situationalTriggered=!0,o=!0,setTimeout(()=>{var f,b,N;r.dispatchEvent(new Event("change",{bubbles:!0,cancelable:!1})),(N=(b=(f=t.config)==null?void 0:f.rolls)==null?void 0:b[0])!=null&&N.data&&delete t.config.rolls[0].data.situational},50))})}static _onUserConnected(t){t.active&&t.id!==game.user.id&&U.requestDiceConfigFromUser(t.id)}static _onRenderSidebarTab(t,e,s){_e.addSidebarControls(t,e,s)}static _onPreConfigureInitiative(t,e){t._initiativeSituationalBonus&&(g.log("Adding situational bonus to initiative:",["actor:",t.name,"situational:",t._initiativeSituationalBonus,"config before:",e]),(!e.rolls||e.rolls.length===0)&&(e.rolls=[{parts:[],data:{},options:{}}]),e.rolls[0].data.situational=t._initiativeSituationalBonus,g.log("Flash Rolls 5e | Initiative config after adding situational:",e))}static _registerHook(t,e){const s=Hooks.on(t,e);return this.registeredHooks.set(`${t}_${s}`,s),s}static unregisterAll(){this.registeredHooks.forEach((t,e)=>{const s=e.split("_")[0];Hooks.off(s,t)}),this.registeredHooks.clear()}static isRegistered(t){for(const e of this.registeredHooks.keys())if(e.startsWith(`${t}_`))return!0;return!1}}T(Ee,"registeredHooks",new Map);const I={addSituationalBonus(n,t){return t&&(g.log("Flash Rolls 5e | Adding situational bonus:",[t,"to config:",n]),n.situational=t,(!n.rolls||n.rolls.length===0)&&(n.rolls=[{parts:[],data:{},options:{}}],n.rolls[0].data.situational=t),g.log("Flash Rolls 5e | Config after adding bonus:",[n])),n},buildAbilityConfig(n,t){return{ability:n.rollKey,advantage:n.config.advantage||!1,disadvantage:n.config.disadvantage||!1,target:n.config.target,isRollRequest:!0,_showRequestedBy:!0,_requestedBy:n.config.requestedBy||"GM"}},async executeActivityRoll(n,t,e,s,i,o){e.rollKey&&await F.executeActivityRoll(n,t,e.rollKey,e.activityId,{...s,dialog:i,message:o})},async handleCustomRoll(n,t){const e=t.rollKey;new ue({formula:e,readonly:!0,actor:n,callback:async i=>{try{const o=new Roll(i,n.getRollData());o.options=o.options||{},o.options.isRollRequest=!0,await o.evaluate({async:!0}),await o.toMessage({speaker:ChatMessage.getSpeaker({actor:n}),flavor:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${c.CUSTOM}`),rollMode:t.config.rollMode,isRollRequest:!0,_showRequestedBy:!0,_requestedBy:t.config.requestedBy||"GM"})}catch{ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:i}))}}}).render(!0)}},ce={[c.ABILITY]:async(n,t,e,s,i)=>{const o=I.buildAbilityConfig(t,e);I.addSituationalBonus(o,t.config.situational),await n.rollAbilityCheck(o,s,i)},[c.ABILITY_CHECK]:async(n,t,e,s,i)=>ce[c.ABILITY](n,t,e,s,i),[c.SAVE]:async(n,t,e,s,i)=>{const o=I.buildAbilityConfig(t,e);I.addSituationalBonus(o,t.config.situational),await n.rollSavingThrow(o,s,i)},[c.SAVING_THROW]:async(n,t,e,s,i)=>ce[c.SAVE](n,t,e,s,i),[c.SKILL]:async(n,t,e,s,i)=>{e.legacy=!1,e.skill=t.rollKey,e.chooseAbility=!0,t.config.ability&&(e.ability=t.config.ability),I.addSituationalBonus(e,t.config.situational),g.log("TEST",[e]),await n.rollSkill(e,s,i)},[c.TOOL]:async(n,t,e,s,i)=>{e.legacy=!1,e.tool=t.rollKey,e.chooseAbility=!0,t.config.ability&&(e.ability=t.config.ability),I.addSituationalBonus(e,t.config.situational),g.log("TEST",[e]),await n.rollToolCheck(e,s,i)},[c.CONCENTRATION]:async(n,t,e,s,i)=>{e.legacy=!1,I.addSituationalBonus(e,t.config.situational),await n.rollConcentration(e,s,i)},[c.ATTACK]:async(n,t,e,s,i)=>{await I.executeActivityRoll(n,c.ATTACK,t,e,s,i)},[c.DAMAGE]:async(n,t,e,s,i)=>{await I.executeActivityRoll(n,c.DAMAGE,t,e,s,i)},[c.ITEM_SAVE]:async(n,t,e,s,i)=>{await I.executeActivityRoll(n,c.ITEM_SAVE,t,e,s,i)},[c.INITIATIVE]:async(n,t,e,s,i)=>{if(!game.combat){ui.notifications.warn(game.i18n.localize("COMBAT.NoneActive"));return}const o=n.getInitiativeRollConfig(e);I.addSituationalBonus(o,t.config.situational),await n.rollInitiativeDialog(o)},[c.INITIATIVE_DIALOG]:async(n,t,e,s,i)=>ce[c.INITIATIVE](n,t,e,s,i),[c.DEATH_SAVE]:async(n,t,e,s,i)=>{e.legacy=!1,I.addSituationalBonus(e,t.config.situational),await n.rollDeathSave(e,s,i)},[c.HIT_DIE]:async(n,t,e,s,i)=>{e.denomination=t.rollKey,await n.rollHitDie(e,s,i)},[c.CUSTOM]:async(n,t,e,s,i)=>{await I.handleCustomRoll(n,t)}};class ae{static async handleRequest(t){var i;if(g.method(ae,"handleRequest")("handling roll request",[t]),game.user.isGM)return;const s=game.actors.get(t.actorId);!s||!s.isOwner||(t.preserveTargets&&((i=t.targetTokenIds)==null?void 0:i.length)>0&&game.user.targets.size===0&&we(t.targetTokenIds),O.notify("info","",{batch:!0,batchData:{actor:s.name,rollType:t.rollType,rollKey:t.rollKey,gm:t.config.requestedBy||"GM"}}),ae.executeRequest(s,t))}static async executeRequest(t,e){var i;g.method(ae,"executeRequest")("executing roll request",[t,e]);try{const o=(i=e.rollType)==null?void 0:i.toLowerCase(),a={advantage:e.config.advantage||!1,disadvantage:e.config.disadvantage||!1,isRollRequest:!0,target:e.config.target,_showRequestedBy:!0,_requestedBy:e.config.requestedBy||"GM"};e.config.ability&&[c.SKILL,c.TOOL].includes(o)&&(a.ability=e.config.ability);const r={configure:!(e.skipDialog||o===c.CUSTOM),options:{defaultButton:e.config.advantage?"advantage":e.config.disadvantage?"disadvantage":"normal",window:{title:e.config.rollTitle||ye(o,e.rollKey),subtitle:t.name}}},u={rollMode:e.config.rollMode||game.settings.get("core","rollMode"),create:e.config.chatMessage!==!1},d=ce[o];d?await d(t,e,a,r,u):(g.warn(`No handler found for roll type: ${o}`),O.notify("warn",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:t.name||"Unknown Actor"})))}catch(o){g.error("Error executing roll request:",o),O.notify("error",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:t.name||"Unknown Actor"}))}}}class Q{static init(){G.initialize(Q.registerSocketCalls),Ee.initialize()}static getDiceConfig(){return U.getDiceConfig()}static receiveDiceConfig(t,e){U.receiveDiceConfig(t,e)}static async handleRollRequest(t){return ae.handleRequest(t)}static registerSocketCalls(){G.registerCall(ge.getDiceConfig,Q.getDiceConfig),G.registerCall(ge.receiveDiceConfig,Q.receiveDiceConfig),G.registerCall(ge.handleRollRequest,Q.handleRollRequest)}}Q.init();
//# sourceMappingURL=crlngn-roll-requests.js.map
