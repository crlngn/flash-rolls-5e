var w=Object.defineProperty;var G=(T,e,t)=>e in T?w(T,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):T[e]=t;var u=(T,e,t)=>G(T,typeof e!="symbol"?e+"":e,t);const C={INIT:"init",READY:"ready",RENDER_SIDEBAR_TAB:"renderSidebarTab",USER_CONNECTED:"userConnected"},M={READY:"socketlib.ready"},S="crlngn-roll-requests",R=["%cRoll That For Me","color:rgb(47, 151, 161); font-weight: bold;","|"],P={ABILITY_CHECK:{name:"abilityCheck",label:"Ability Check",subList:"abilities",actorPath:"system.abilities"},SAVING_THROW:{name:"savingThrow",label:"Saving Throw",subList:"abilities",actorPath:"system.savingThrows"},SKILL:{name:"skill",label:"Skill Check",subList:"skills",actorPath:"system.skills"},TOOL:{name:"tool",label:"Tool Check",subList:"tools",actorPath:"system.tools"},CONCENTRATION:{name:"concentration",label:"Concentration Check",subList:null,actorPath:""},INITIATIVE:{name:"initiativeDialog",label:"Initiative Roll",subList:null,actorPath:""},DEATH_SAVE:{name:"deathSave",label:"Death Save",subList:null,actorPath:""},CUSTOM:{name:"custom",label:"Custom Roll",subList:null,actorPath:""}},q={ID:S,ROLL_REQUEST_OPTIONS:P},y=class y{static log(e="",t=[],s=!1){try{const i=game.settings.get(S,"debugMode")||y.debugOn;if(!(s||i))return;console.log(...R,e,...t)}catch{(s||y.debugOn)&&console.log(...R,e,...t)}}static warn(e="",t=[]){console.warn(...R,e,...t)}static error(e,t={ui:!1,console:!0,permanent:!1}){var s;t.ui&&((s=ui.notifications)==null||s.error(e,{localize:!0,permanent:t.permanent})),t.console&&console.error(...R,e)}};u(y,"debugOn",!1);let o=y;const m={checkbox:"checkbox"},k={client:"client",world:"world"},p=()=>({debugMode:{tag:"debug-mode",label:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.hint"),propType:Boolean,inputType:m.checkbox,default:!0,scope:k.client,config:!0},rollRequestsEnabled:{tag:"roll-requests-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.hint"),propType:Boolean,inputType:m.checkbox,default:!0,scope:k.world,config:!0},skipDialogs:{tag:"skip-dialogs",label:game.i18n.localize("CRLNGN_ROLLS.settings.skipDialogs.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.skipDialogs.hint"),propType:Boolean,inputType:m.checkbox,default:!1,scope:k.world,config:!0},useGMTargetTokens:{tag:"use-gm-target-tokens",label:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.hint"),propType:Boolean,inputType:m.checkbox,default:!1,scope:k.world,config:!0}});class g{static registerSettings(){const e=p();Object.entries(e).forEach(async s=>{const i=s[1];o.log("Registering... ",[s]);const l={name:i.label,hint:i.hint,default:i.default,type:i.propType,scope:i.scope,config:i.config,requiresReload:i.requiresReload||!1,onChange:n=>g.apply(i.tag,n)};i.choices&&(l.choices=i.choices),await game.settings.register(S,i.tag,l),g.get(i.tag)===void 0&&g.set(i.tag,i.default),o.log("registerSettings",[i.tag,g.get(i.tag)])})}static get(e,t=S){if(!e)return null;let s=!1;if(t===S)s=game.settings.get(t,e);else{let l=game.settings.storage.get("client")[`${t}.${e}`];l===void 0&&(l=game.settings.storage.get("world").getSetting(`${t}.${e}`),s=l==null?void 0:l.value),o.log("GET Setting",[l,s])}return s}static set(e,t,s=S){if(!e)return!1;let i=game.settings.storage.get("client")[`${s}.${e}`];i||(i=game.settings.storage.get("world").getSetting(`${s}.${e}`)),o.log("Setting",[e,i]);try{game.settings.set(s,e,t)}catch{o.log("Unable to change setting",[e,i])}return!0}static apply(e,t){const s=p();switch(e){case s.rollRequestsEnabled.tag:g.applyRollRequestsEnabled(t);break}}static applyRollRequestsEnabled(e){const t=document.querySelector("#chat-controls .chat-control-icon.roll-requests-icon");t&&(e?t.classList.add("active"):t.classList.remove("active"))}}const c=class c{static serializeForTransport(e,t=!1){return e==null||(t&&e.rolls&&Array.isArray(e.rolls)&&(e.rolls=e.rolls.map(s=>s instanceof Roll?s.toJSON():s)),o.log("ROLLS DATA",[e,e.subject])),e}static deserializeFromTransport(e,t=!1){let s={...e};if(!e)return s;if(t&&e.rolls&&e.rolls.length>0){const i=s.rolls.map(l=>{let n=l;return typeof l=="string"?n=Roll.fromJSON(l):n=Roll.fromJSON(JSON.stringify(l)),n});return s.rolls=[...i],s}return s}};u(c,"socket"),u(c,"_activeExecutions",new Map),u(c,"initialize",e=>{Hooks.once(M.READY,()=>{if(o.log("Attempting to register module..."),typeof socketlib>"u"){o.error("SocketUtil Error: socketlib is not loaded. Ensure it is installed and enabled."),ui.notifications.error(game.i18n.localize("CRLNGN_ROLLS.notifications.socketlibMissing"),{permanent:!0});return}try{c.socket=socketlib.registerModule(S),e&&e(),o.log("SocketUtil | Module registered",[c.socket])}catch(t){o.log("Problem registering module",[t])}})}),u(c,"registerCall",(e,t)=>{c.socket?(c.socket.register(e,t),o.log("SocketUtil - Registered callback",[c.socket,e])):o.log("SocketUtil - Failed to register callback (socket not initialized)",[c.socket,e])}),u(c,"sendMessage",(e,t)=>{o.log("SocketUtil - sendMessage",[e]),t&&t()}),u(c,"execForGMs",async(e,...t)=>{if(!c.socket){o.log("SocketUtil - Socket not initialized. Cannot execute as GM.");return}return await c.socket.executeForAllGMs(e,...t)}),u(c,"execForAll",async(e,...t)=>{if(!c.socket){o.log("SocketUtil - Socket not initialized. Cannot execute for all clients.");return}return await c.socket.executeForEveryone(e,...t)}),u(c,"execForUser",async(e,t,...s)=>{if(!c.socket){o.log("SocketUtil - Socket not initialized. Cannot execute as user.");return}if(t===game.user.id)return o.log("SocketUtil - Preventing recursive call",[t]),null;const i=`${e}-${t}`;if(c._activeExecutions.has(i))return o.log("SocketUtil - Preventing recursive call",[i]),null;c._activeExecutions.set(i,!0);try{const l=await c.socket.executeAsUser(e,t,...s);return o.log("SocketUtil - Executed as user.",[l]),l}catch(l){return o.log("SocketUtil - Error executing as user",[l]),null}finally{c._activeExecutions.delete(i)}});let b=c;class O extends foundry.applications.api.HandlebarsApplicationMixin(foundry.applications.api.ApplicationV2){constructor(e={}){super(e),this.selectedActors=new Set,this.currentTab="pc",this.selectedRequestType=null}async _prepareContext(e){const t=await super._prepareContext(e),s=game.actors.contents,i=[],l=[],n=game.scenes.active;for(const d of s){if(d.type!=="character"&&d.type!=="npc")continue;const D={id:d.id,uuid:d.uuid,name:d.name,img:d.img,selected:this.selectedActors.has(d.id),crlngnStats:this._getActorStats(d)};Object.entries(d.ownership).some(([v,A])=>{const N=game.users.get(v);return N&&!N.isGM&&A>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})?i.push(D):n&&n.tokens.some(A=>A.actorId===d.id)&&l.push(D)}const h=p(),a=g.get(h.rollRequestsEnabled.tag),f=g.get(h.skipDialogs.tag),L=this.currentTab==="pc"?i:l,I=L.length>0&&L.every(d=>this.selectedActors.has(d.id));return{...t,actors:L,currentTab:this.currentTab,isPCTab:this.currentTab==="pc",isNPCTab:this.currentTab==="npc",selectedTab:this.currentTab,rollRequestsEnabled:a,skipDialogs:f,selectAllOn:I,hasSelectedActors:this.selectedActors.size>0,rollOptions:q.ROLL_REQUEST_OPTIONS,showNames:!0}}_getActorStats(e){var i,l,n,h,a;const t=e.system,s=[];return(i=t.attributes)!=null&&i.hp&&s.push({abbrev:"HP",value:t.attributes.hp.value}),(l=t.attributes)!=null&&l.ac&&s.push({abbrev:"AC",value:t.attributes.ac.value}),(n=t.attributes)!=null&&n.spelldc&&s.push({abbrev:"DC",value:t.attributes.spelldc}),(a=(h=t.skills)==null?void 0:h.prc)!=null&&a.passive&&s.push({abbrev:"PP",value:t.skills.prc.passive}),s}_onRender(e,t){super._onRender(e,t),this._attachListeners()}_attachListeners(){var s,i,l;o.log("Attaching listeners");const e=this.element;(s=e.querySelector("#crlngn-requests-toggle"))==null||s.addEventListener("change",this._onToggleRollRequests.bind(this)),(i=e.querySelector("#crlngn-skip-dialogs"))==null||i.addEventListener("change",this._onToggleSkipDialogs.bind(this)),(l=e.querySelector("#crlngn-actors-all"))==null||l.addEventListener("change",this._onToggleSelectAll.bind(this));const t=e.querySelectorAll(".actor-tab");o.log("Found tabs:",[t.length]),t.forEach(n=>{n.addEventListener("click",this._onTabClick.bind(this))}),e.querySelectorAll(".actor").forEach(n=>{n.addEventListener("click",this._onActorClick.bind(this))}),e.querySelectorAll(".actor-select").forEach(n=>{n.addEventListener("click",this._onActorSelectClick.bind(this))}),e.querySelectorAll(".request-type-item").forEach(n=>{n.addEventListener("click",this._onRequestTypeClick.bind(this))}),e.querySelectorAll(".roll-type-item").forEach(n=>{n.addEventListener("click",this._onRollTypeClick.bind(this))})}async _onToggleRollRequests(e){const t=p(),s=e.target.checked;await g.set(t.rollRequestsEnabled.tag,s),E.updateRollRequestsIcon(s),o.log("Roll requests enabled:",[s])}async _onToggleSkipDialogs(e){const t=p(),s=e.target.checked;await g.set(t.skipDialogs.tag,s),o.log("Skip dialogs:",[s])}_onToggleSelectAll(e){const t=e.target.checked;(this.currentTab==="pc"?game.actors.contents.filter(i=>this._isPlayerOwned(i)):game.actors.contents.filter(i=>!this._isPlayerOwned(i)&&this._hasTokenInScene(i))).forEach(i=>{t?this.selectedActors.add(i.id):this.selectedActors.delete(i.id)}),this.render(),this._updateRequestTypesVisibility(),o.log("Select all:",[t,"for",this.currentTab])}_isPlayerOwned(e){return e.type!=="character"&&e.type!=="npc"?!1:Object.entries(e.ownership).some(([t,s])=>{const i=game.users.get(t);return i&&!i.isGM&&s>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})}_hasTokenInScene(e){if(e.type!=="character"&&e.type!=="npc")return!1;const t=game.scenes.active;return t&&t.tokens.some(s=>s.actorId===e.id)}async _onTabClick(e){const t=e.currentTarget.dataset.tab;o.log("Tab clicked:",[t,this.currentTab]),t!==this.currentTab&&(this.currentTab=t,await this.render(),o.log("Switched to tab:",[t]))}_onActorClick(e){if(e.target.closest(".actor-select"))return;const s=e.currentTarget.dataset.id;this._toggleActorSelection(s)}_onActorSelectClick(e){e.stopPropagation();const t=e.currentTarget.dataset.id;this._toggleActorSelection(t)}_toggleActorSelection(e){this.selectedActors.has(e)?this.selectedActors.delete(e):this.selectedActors.add(e),this.render(),this._updateRequestTypesVisibility(),this._updateSelectAllState(),o.log("Actor selected:",[e,this.selectedActors.has(e)])}_updateRequestTypesVisibility(){const e=this.element.querySelector(".request-types");this.selectedActors.size>0?e.classList.remove("hidden"):(e.classList.add("hidden"),this.element.querySelector(".roll-types").classList.add("hidden"))}_updateSelectAllState(){const e=this.element.querySelector("#crlngn-actors-all"),t=this.currentTab==="pc"?"pc":"npc",s=this.element.querySelectorAll(`.${t}-actors .actor-item input[type="checkbox"]`),i=Array.from(s).filter(l=>l.checked).length;e.checked=i>0&&i===s.length,e.indeterminate=i>0&&i<s.length}async _onRequestTypeClick(e){const s=e.currentTarget.dataset.requestType,i=q.ROLL_REQUEST_OPTIONS[s];if(!i){o.error("Unknown request type:",s);return}this.selectedRequestType=s,i.subList?(await this._populateRollTypes(i),this.element.querySelector(".roll-types").classList.remove("hidden")):this._triggerRoll(s,null),o.log("Request type selected:",s)}async _populateRollTypes(e){const t=this.element.querySelector(".roll-types-list");t.innerHTML="";const s=Array.from(this.selectedActors)[0],i=game.actors.get(s);if(!i)return;const l=foundry.utils.getProperty(i,e.actorPath)||{};for(const[n,h]of Object.entries(l)){const a=document.createElement("li");a.className="roll-type-item",a.dataset.rollKey=n;const f=h.label||game.i18n.localize(h.name||n);a.innerHTML=`<span>${f}</span>`,t.appendChild(a)}t.querySelectorAll(".roll-type-item").forEach(n=>{n.addEventListener("click",this._onRollTypeClick.bind(this))})}_onRollTypeClick(e){const t=e.currentTarget.dataset.rollKey;this._triggerRoll(this.selectedRequestType,t),o.log("Roll type selected:",t)}_triggerRoll(e,t){const s=p(),i=Array.from(this.selectedActors);o.log("Roll triggered!",{actors:i,requestType:e,rollKey:t,skipDialogs:g.get(s.skipDialogs.tag)}),this.close()}async _onClose(e){await super._onClose(e),this.selectedActors.clear(),this.selectedRequestType=null}setPosition(e={}){return this}}u(O,"DEFAULT_OPTIONS",{id:"crlngn-requests-menu",classes:["roll-requests-menu"],tag:"div",window:{frame:!1,resizable:!1,minimizable:!1},position:null}),u(O,"PARTS",{main:{template:`modules/${q.ID}/templates/requests-menus.hbs`}});const r=class r{static init(){b.initialize(r.registerSocketCalls),Hooks.once(C.INIT,()=>{p(),o.log("Initiating module...",[],!0),g.registerSettings(),r.setDiceConfig(),Hooks.on(C.RENDER_SIDEBAR_TAB,r.addChatControl)}),Hooks.once(C.READY,()=>{var s,i;o.log("Core Ready",[ui==null?void 0:ui.sidebar,(s=ui==null?void 0:ui.sidebar)==null?void 0:s._collapsed]);const e=p();var t=g.get(e.debugMode.tag);t&&(CONFIG.debug.hooks=!0),game.user.isGM?(Hooks.on(C.USER_CONNECTED,r.onUserConnected),game.users.forEach(l=>{r.onUserConnected(l)}),r.checkSideBar(!((i=ui==null?void 0:ui.sidebar)!=null&&i._collapsed))):r.getDiceConfig()})}static onUserConnected(e){e.active&&e.id!==game.user.id&&(o.log("onUserConnected",[e]),b.execForUser(r.SOCKET_CALLS.getDiceConfig,e.id))}static setDiceConfig(){if(!game.user)return;const e=game.settings.storage.get("client");return r.diceConfig=e["core.diceConfiguration"]||"",o.log("getDiceConfig",[r.diceConfig]),r.diceConfig}static getDiceConfig(){if(game.user&&(r.setDiceConfig(),game.user.isGM)){b.execForGMs(r.SOCKET_CALLS.receiveDiceConfig,game.user.id,r.diceConfig);return}}static receiveDiceConfig(e,t){var s;((s=game.user)!=null&&s.isGM||e===game.user.id)&&(r.playerDiceConfigs||(r.playerDiceConfigs={}),r.playerDiceConfigs[e]=t?JSON.parse(t):{},o.log(`Received dice configuration from user ${e}`,[r.playerDiceConfigs]))}static registerSocketCalls(){b.registerCall(r.SOCKET_CALLS.getDiceConfig,r.getDiceConfig),b.registerCall(r.SOCKET_CALLS.receiveDiceConfig,r.receiveDiceConfig)}static addChatControl(e,t,s){if(!game.user.isGM||e.id!=="chat")return;o.log("Adding chat control for chat tab");const l=(t[0]||t).querySelector("#chat-controls");if(!l){o.log("Could not find #chat-controls");return}if(l.querySelector(".roll-requests-icon"))return;const n=p(),h=g.get(n.rollRequestsEnabled.tag),a=document.createElement("a");a.id="crlngn-requests-icon",a.setAttribute("data-tooltip-direction","RIGHT"),a.className=`chat-control-icon roll-requests-icon${h?" active":""}`,a.title=game.i18n.localize("CRLNGN_ROLLS.ui.menus.rollRequestsTitle"),a.innerHTML=`<i class="fas fa-bolt${h?"":"-slash"}"></i>`;const f=l.querySelector(".chat-control-icon");f?f.parentNode.insertBefore(a,f):l.appendChild(a),a.addEventListener("click",r.toggleRollRequestsMenu),o.log("Added roll requests icon to chat controls")}static toggleRollRequestsMenu(){r.rollRequestsMenu?r.rollRequestsMenu.rendered?(r.rollRequestsMenu.close(),o.log("Closed roll requests menu")):(r.rollRequestsMenu.render(!0),o.log("Opened roll requests menu")):(r.rollRequestsMenu=new O,r.rollRequestsMenu.render(!0))}static updateRollRequestsIcon(e){const t=document.querySelector("#crlngn-requests-icon i");t&&(t.className=`fas fa-bolt${e?"":"-slash"}`)}};u(r,"diceConfig",{}),u(r,"playerDiceConfigs",{}),u(r,"rollRequestsMenu",null),u(r,"SOCKET_CALLS",{receiveDiceConfig:"receiveDiceConfig",getDiceConfig:"getDiceConfig"}),u(r,"checkSideBar",e=>{const t=document.querySelector("body");e?t.classList.add("sidebar-expanded"):t.classList.remove("sidebar-expanded")});let E=r;E.init();
//# sourceMappingURL=crlngn-roll-requests.js.map
