var qe=Object.defineProperty;var pe=p=>{throw TypeError(p)};var Ne=(p,e,t)=>e in p?qe(p,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):p[e]=t;var T=(p,e,t)=>Ne(p,typeof e!="symbol"?e+"":e,t),Te=(p,e,t)=>e.has(p)||pe("Cannot "+t);var le=(p,e,t)=>(Te(p,e,"read from private field"),t?t.call(p):e.get(p)),z=(p,e,t)=>e.has(p)?pe("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(p):e.set(p,t);var F=(p,e,t)=>(Te(p,e,"access private method"),t);const K={INIT:"init",READY:"ready",RENDER_CHAT_MESSAGE:"renderChatMessage",RENDER_ROLL_RESOLVER:"renderRollResolver",USER_CONNECTED:"userConnected"},Me={READY:"socketlib.ready"},Q={PRE_ROLL_V2:"dnd5e.preRollV2",PRE_USE_ACTIVITY:"dnd5e.preUseActivity",POST_ROLL_CONFIG:"dnd5e.postRollConfiguration",RENDER_ROLL_CONFIGURATION_DIALOG:"renderRollConfigurationDialog"},A="crlngn-roll-requests",X=["%cRoll That For Me","color:rgb(47, 151, 161); font-weight: bold;","|"],G={ATTACK:{name:"attack",requestType:"attack"},DAMAGE:{name:"damage",requestType:"damage"},SAVE:{name:"save",requestType:"damage"},SAVING_THROW:{name:"savingthrow",requestType:"check"},ABILITY_CHECK:{name:"abilitycheck",requestType:"check"},CONCENTRATION:{name:"concentration",requestType:"check"},DEATH_SAVE:{name:"deathsave",requestType:"save"},SKILL:{name:"skill",requestType:"check"},TOOL:{name:"tool",requestType:"check"},HIT_DIE:{name:"hitdie",requestType:"formula"},INITIATIVE:{name:"initiative",requestType:"check"},FORMULA:{name:"formula",requestType:"formula"},RECHARGE:{name:"recharge",requestType:"formula"},D20_TEST:{name:"d20Test",requestType:"formula"},SHORT_REST:{name:"shortRest",requestType:"formula"},LONG_REST:{name:"longRest",requestType:"formula"}},we={SAVE:"save"},be={ACTIVITY:"activity",CHECK:"check"},C={ABILITY_CHECK:{name:"abilityCheck",label:"Ability Check",subList:"abilities",actorPath:"system.abilities"},SAVING_THROW:{name:"savingThrow",label:"Saving Throw",subList:"abilities",actorPath:"system.savingThrows"},SKILL:{name:"skill",label:"Skill Check",subList:"skills",actorPath:"system.skills"},TOOL:{name:"tool",label:"Tool Check",subList:"tools",actorPath:"system.tools"},CONCENTRATION:{name:"concentration",label:"Concentration Check",subList:null,actorPath:""},INITIATIVE:{name:"initiativeDialog",label:"Initiative Roll",subList:null,actorPath:""},DEATH_SAVE:{name:"deathSave",label:"Death Save",subList:null,actorPath:""}},se=class se{static log(e="",t=[],s=!1){try{const a=game.settings.get(A,"debugMode")||se.debugOn;if(!(s||a))return;console.log(...X,e,...t)}catch{console.log(...X,e,...t)}}static warn(e="",t=[]){console.warn(...X,e,...t)}static error(e,t={ui:!1,console:!0,permanent:!1}){var s;t.ui&&((s=ui.notifications)==null||s.error(e,{localize:!0,permanent:t.permanent})),t.console&&console.error(...X,e)}};T(se,"debugOn",!1);let n=se;const Ce={checkbox:"checkbox"},Re={client:"client",world:"world"},V=()=>({debugMode:{tag:"debug-mode",label:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.hint"),propType:Boolean,inputType:Ce.checkbox,default:!0,scope:Re.client,config:!0},rollRequestsEnabled:{tag:"roll-requests-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.hint"),propType:Boolean,inputType:Ce.checkbox,default:!0,scope:Re.world,config:!0}});class w{static getTargets(e){let t=game.users.find(a=>a.isGM===!0),s=e.targets||t.targets;return new Set([...s])}static getActorFromItem(e){const t=e.split(".")[1];return game.actors.get(t)}static isModuleOn(e){var s;const t=(s=game.modules)==null?void 0:s.get(e);return!!(t!=null&&t.active)}static isPrivateRoll(e){return e===CONST.DICE_ROLL_MODES.BLIND||e===CONST.DICE_ROLL_MODES.PRIVATE}static removeTemplateForItem(e){n.log("removeTemplateForItem - A",[e]);const t=M.get("remove-template");if(n.log("removeTemplateForItem - B",[t]),!t)return;const s=canvas.templates.objects.children.filter(a=>a.document.flags.dnd5e.item===(e==null?void 0:e.uuid));canvas.scene.deleteEmbeddedDocuments("MeasuredTemplate",s.map(a=>a.id))}static getPlayerOwner(e){let t;if(!e)return null;const s=e?game.actors.get(e):null;return t=game.users.players.find(o=>o.active===!0&&o.character.id===e),t||game.users.players.forEach(o=>{o.active&&s.testUserPermission(o,foundry.CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER,{exact:!0})&&(t=o)}),t}static html(e,t){return e.querySelector(t)}static getActivityType(e){var t;return((t=Object.values(G).find(s=>s.name.toLowerCase()===e.toLowerCase()))==null?void 0:t.activityType)||""}static getPartsFromActivityUuid(e){const t=e.split(".");return{actorId:t[1],itemId:t[3],activityId:t[5]}}static getElement(e){return(e==null?void 0:e[0])||e}static getSceneTargets(){var t;let e=((t=canvas.tokens)==null?void 0:t.controlled.filter(s=>s.actor))??[];return!e.length&&game.user.character&&(e=game.user.character.getActiveTokens()),e}static getAdvantageMode(e){return e.advantage?CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE:e.disadvantage?CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE:CONFIG.Dice.D20Roll.ADV_MODE.NORMAL}}T(w,"getClientTargets",()=>{if(!game.user)return[];const e=Array.from(game.user.targets);return n.log("Selected Targets",[game.user.id,e,e.filter(t=>t.actor)]),e}),T(w,"getTargetDescriptors",()=>{var t,s;const e=new Map;for(const a of game.user.targets){const{name:o}=a,{img:i,system:r,uuid:c,statuses:u}=a.actor??{};if(c){const g=u.has("coverTotal")?null:(s=(t=r.attributes)==null?void 0:t.ac)==null?void 0:s.value;e.set(c,{name:o,img:i,uuid:c,ac:g??null})}}return Array.from(e.values())}),T(w,"findItemFromActor",(e,t,s)=>{const a=game.actors.get(e);if(n.log("findItemFromActor",[t,s]),!a)return null;let o=t?a.items.find(i=>i.id===t):null;return o||(o=s?a.items.find(i=>i.name.toLowerCase()===s.toLowerCase()):null,o||(o=a.items.find(i=>i.name.toLowerCase()===(s+" (Legacy)").toLowerCase()))),o}),T(w,"addCSSVars",(e,t)=>{let s=document.querySelector("#crlngn-chat-vars");if(!s){const d=document.querySelector("body");s=document.createElement("style"),s.id="crlngn-chat-vars",s.textContent=`body.crlngn-chat {
}
`,d.prepend(s)}let a=s.textContent,o=a.indexOf("body.crlngn-chat {"),i=a.indexOf("}",o);o===-1&&(a=`body.crlngn-chat {
}
`,o=0,i=a.indexOf("}"));const c=a.substring(o+18,i).split(";").map(d=>d.trim()).filter(d=>d!==""),u={};c.forEach(d=>{const y=d.split(":");if(y.length>=2){const b=y[0].trim(),v=y.slice(1).join(":").trim();b&&(u[b]=v)}}),e.includes("i18n")&&typeof t=="string"&&!t.startsWith('"')&&!t.startsWith("'")&&!t.match(/^url\(|^rgba?\(|^hsla?\(/)&&(t=`"${t}"`),u[e]=t;const g=Object.entries(u).map(([d,y])=>`  ${d}: ${y};`).join(`
`),f=a.substring(0,o)+`body.crlngn-chat {
`+g+`
}`+a.substring(i+1);s.textContent=f});const R=class R{static serializeForTransport(e,t=!1){return e==null||(t&&e.rolls&&Array.isArray(e.rolls)&&(e.rolls=e.rolls.map(s=>s instanceof Roll?s.toJSON():s)),n.log("ROLLS DATA",[e,e.subject])),e}static deserializeFromTransport(e,t=!1){let s={...e};if(!e)return s;if(t&&e.rolls&&e.rolls.length>0){const a=s.rolls.map(o=>{let i=o;return typeof o=="string"?i=Roll.fromJSON(o):i=Roll.fromJSON(JSON.stringify(o)),n.log("ROLL",[i,o]),i});return s.rolls=[...a],s}return s}};T(R,"socket"),T(R,"_activeExecutions",new Map),T(R,"initialize",e=>{Hooks.once(Me.READY,()=>{if(n.log("Attempting to register module..."),typeof socketlib>"u"){n.error("SocketUtil Error: socketlib is not loaded. Ensure it is installed and enabled."),ui.notifications.error(game.i18n.localize("CRLNGN_ROLLS.notifications.socketlibMissing"),{permanent:!0});return}try{R.socket=socketlib.registerModule(A),e&&e(),n.log("SocketUtil | Module registered",[R.socket])}catch(t){n.log("Problem registering module",[t])}})}),T(R,"registerCall",(e,t)=>{R.socket?(R.socket.register(e,t),n.log("SocketUtil - Registered callback",[R.socket,e])):n.log("SocketUtil - Failed to register callback (socket not initialized)",[R.socket,e])}),T(R,"sendMessage",(e,t)=>{n.log("SocketUtil - sendMessage",[e]),t&&t()}),T(R,"execForGMs",async(e,...t)=>{if(!R.socket){n.log("SocketUtil - Socket not initialized. Cannot execute as GM.");return}return await R.socket.executeForAllGMs(e,...t)}),T(R,"execForAll",async(e,...t)=>{if(!R.socket){n.log("SocketUtil - Socket not initialized. Cannot execute for all clients.");return}return await R.socket.executeForEveryone(e,...t)}),T(R,"execForUser",async(e,t,...s)=>{if(!R.socket){n.log("SocketUtil - Socket not initialized. Cannot execute as user.");return}if(t===game.user.id)return n.log("SocketUtil - Preventing recursive call",[t]),null;const a=`${e}-${t}`;if(R._activeExecutions.has(a))return n.log("SocketUtil - Preventing recursive call",[a]),null;R._activeExecutions.set(a,!0);try{const o=await R.socket.executeAsUser(e,t,...s);return n.log("SocketUtil - Executed as user.",[o]),o}catch(o){return n.log("SocketUtil - Error executing as user",[o]),null}finally{R._activeExecutions.delete(a)}});let H=R;var ae,ke;const N=class N{static init(){Hooks.on(K.RENDER_CHAT_MESSAGE,F(N,ae,ke))}static testDamage(e){const{activity:t,config:s,message:a,dialog:o}=e;t.rollDamage()}static rollModifiedAttack(e,t,s){n.log("rollModifiedAttack",[e,t,s,this]);const{activity:a}=N.getDataFromUuid(t.dataset.activityUuid);a.rollAttack({event:e,advantage:t.dataset.advantage==="true",disadvantage:t.dataset.disadvantage==="true",attackMode:t.dataset.attackMode,ammunition:t.dataset.ammunition,situational:t.dataset.situational},{},s)}static getDataFromUuid(e){var i,r,c;const t=e.split("."),s=game.actors.get(t[1]),a=s==null?void 0:s.items.get(t[3]),o=((r=(i=a==null?void 0:a.system)==null?void 0:i.activities)==null?void 0:r.get(t[5]))||((c=a==null?void 0:a.activities)==null?void 0:c.get(t[5]));return{actor:s,item:a,activity:o}}};ae=new WeakSet,ke=function(e,t,s){var r,c,u;const a=((r=e.flags)==null?void 0:r[A])||((u=(c=s.message)==null?void 0:c.flags)==null?void 0:u[A]);if(n.log("#onRenderChatMessage",[e,t,s,a]),!(a!=null&&a.modifiedActions))return;const o=a.activityUuid;if(!o)return;const{activity:i}=N.getDataFromUuid(o);i&&(n.log("#onRenderChatMessage Activating button listeners",[i,e,t]),i.activateChatListeners(e,t[0]))},z(N,ae),T(N,"triggerActivity",async e=>{var D,L,E,P;const{activityUuid:t,diceTypes:s,config:a,dialog:o,message:i}=e;n.log("triggerActivity #1",[s,a,o,i,e]),I.playerDiceConfigs[game.user.id];const r=a.situational?Number(a.situational):0,c=t.split("."),u=game.actors.get(c[1]),g=u==null?void 0:u.items.get(c[3]),f=((L=(D=g==null?void 0:g.system)==null?void 0:D.activities)==null?void 0:L.get(c[5]))||((E=g==null?void 0:g.activities)==null?void 0:E.get(c[5])),d=((P=a.hookNames)==null?void 0:P[0])||f.type,y=H.deserializeFromTransport(a,!0);if(n.log("triggerActivity #2",[d,y,e]),!u||!g||!f)return;const b={...y,subject:f,parts:y.parts||[]},v={...o},h={...i,flavor:y.flavor};switch(r&&!b.parts.includes("@situational")&&b.parts.push("@situational"),d){case G.ATTACK.name:{N.useAttack({activity:f,config:b,message:h,dialog:v}),n.log("triggerActivity attack",[b,v,h]);break}case G.DAMAGE.name:{n.log("triggerActivity damage",[f,b,v,h]),N.useDamage({activity:f,config:b,message:h,dialog:v});break}case G.SAVE.name:{n.log("triggerActivity save",[b]),h.create=!0,f.use(b,v,h);break}}n.log("triggerActivity #3",[t,a,e])}),T(N,"useAttack",async e=>{const{activity:t,config:s,message:a,dialog:o}=e,i=await t._usageChatContext(a);t.metadata.usage.actions;const r=i.buttons.find(d=>d.dataset.action==="rollAttack");n.log("useAttack #1",[e]);const c={situational:s.situational,attackMode:s.attackMode,advantage:s.advantage,disadvantage:s.disadvantage,ammunition:s.ammunition};r.dataset={...r==null?void 0:r.dataset,...c,action:"rollAttack",activityUuid:t.uuid||""},t.metadata.usage.actions={...t.metadata.usage.actions,rollAttack:N.rollModifiedAttack};const u=foundry.utils.mergeObject({rollMode:a.rollMode||game.settings.get("core","rollMode"),data:{content:await renderTemplate(t.metadata.usage.chatCard,i),speaker:ChatMessage.getSpeaker({actor:t.actor}),flags:{core:{canPopout:!0},[A]:{modifiedActions:!0,activityType:t.type,activityUuid:t.uuid}}}},a),g=["d20"],f=I.areDiceConfigured(g,game.user.id);o.configure=!f,n.log("useAttack",[t,i,u,e]),await ChatMessage.create(u.data),t.rollAttack(c,o,{create:!0})}),T(N,"useDamage",async e=>{var i,r,c;const{activity:t,config:s,message:a,dialog:o}=e;if(n.log("useDamage #1",[e,s.attackMode]),s.rolls&&s.rolls.length>0){s.rolls[0];const u={event:s.event,situational:s.situational||"",attackMode:s.attackMode,subject:t};n.log("useDamage - Using roll from config",[u]);const f=(((i=t==null?void 0:t.damage)==null?void 0:i.parts)||((c=(r=t==null?void 0:t.rolls)==null?void 0:r[0])==null?void 0:c.parts)||[]).map(y=>"d"+y.denomination),d=I.areDiceConfigured(f,game.user.id);o.configure=!d,n.log("useDamage #2",[u,o]),N.rollDamage({config:u,attackMode:u.attackMode});return}n.log("useDamage - No rolls in config, using direct roll"),t.rollDamage()}),T(N,"rollDamage",async e=>{let{activity:t,attackMode:s,config:a,formulas:o,damageTypes:i,rollType:r,scaling:c}=e;o=(o==null?void 0:o.split("&"))??[],i=(i==null?void 0:i.split("&"))??[];const u={...a,attackMode:s,hookNames:["damage"],rolls:o.map((d,y)=>{var v;const b=((v=i[y])==null?void 0:v.split("|"))??[];return{parts:[d],options:{type:b[0],types:b}}})},g={create:!0,data:{flags:{dnd5e:{messageType:"roll",roll:{type:r},targets:w.getTargetDescriptors()}},flavor:game.i18n.localize(`DND5E.${r==="healing"?"Healing":"Damage"}Roll`),speaker:ChatMessage.implementation.getSpeaker()}},f=await CONFIG.Dice.DamageRoll.build(u,{},g);f!=null&&f.length&&Hooks.callAll("dnd5e.rollDamageV2",f)});let ee=N;var O,re,he,Ee,Le,Se,Pe,De;const m=class m{static init(){n.log("RequestsUtil.init() - Registering hooks",[],!0),Hooks.on(Q.PRE_ROLL_V2,F(m,O,De)),Hooks.on(K.RENDER_CHAT_MESSAGE,F(m,O,re)),Hooks.on(Q.PRE_USE_ACTIVITY,F(m,O,Se)),Hooks.on(Q.RENDER_ROLL_CONFIGURATION_DIALOG,F(m,O,he)),Hooks.on(Q.POST_ROLL_CONFIG,F(m,O,Ee)),Hooks.on(K.RENDER_ROLL_RESOLVER,F(m,O,Le)),Hooks.on(K.RENDER_CHAT_MESSAGE,F(m,O,re))}static registerSocketCalls(){Object.values(m.SOCKET_CALLS).forEach(e=>{e.type===be.ACTIVITY?H.registerCall(e.action,ee[e.action]):H.registerCall(e.action,m[e.action])})}static sendRollRequest(e,t={config:{},dialog:{configure:!0},message:{},actors:[],activityUuid:null}){var r,c,u,g,f,d,y,b,v,h,D,L,E,P,q,x,$,j,B;m.SOCKET_CALLS.triggerRollRequest.action,w.getPlayerOwner(e.id);const s={actorId:e.id,...t};n.log("sendRollRequest #A",[s]),t.config={...t.config,flags:{...t.config.flags,[A]:{rollRequest:!0,triggerOnRender:!0,type:t.type}}};const a={...s,message:{...t.message},actors:t.actors.map(Y=>Y.id)};m.forcePublicRoll&&(a.message.rollMode=CONST.DICE_ROLL_MODES.PUBLIC),a.config.tool=((r=s.dataset)==null?void 0:r.type)===C.TOOL.name?(c=s.dataset)==null?void 0:c.abbreviation:"",a.config.skill=((u=s.dataset)==null?void 0:u.type)===C.SKILL.name?(g=s.dataset)==null?void 0:g.abbreviation:"";const o=(f=s.dataset)==null?void 0:f.abbreviation;let i="";((d=s.dataset)==null?void 0:d.type)===C.TOOL.name?i=((v=(b=(y=e.system)==null?void 0:y.tools)==null?void 0:b[o])==null?void 0:v.ability)||((h=CONFIG.DND5E.tools[o])==null?void 0:h.ability):((D=s.dataset)==null?void 0:D.type)===C.SKILL.name?i=((P=(E=(L=e.system)==null?void 0:L.skills)==null?void 0:E[o])==null?void 0:P.ability)||((q=CONFIG.DND5E.skills[o])==null?void 0:q.ability):((x=s.dataset)==null?void 0:x.type)===C.SAVING_THROW.name||(($=a.dataset)==null?void 0:$.type)===C.ABILITY_CHECK.name?i=o:((j=s.dataset)==null?void 0:j.type)===G.ATTACK.name&&(a.rollOptions={actorId:e.id,activityUuid:s.activityUuid,attackMode:"",hookNames:((B=s.config)==null?void 0:B.hookNames)||[]}),a.config.ability=i,a.config.abilityId=i,n.log("sendRollRequest #B",[o,a]),m.triggerRollRequest(a)}static triggerRollRequest(e){var b,v,h,D,L,E,P;let{actorId:t="",config:s={},dialog:a={},message:o={},rollOptions:i=null,actors:r=[]}=e,c=null,u=null;const g=game.actors.get(t);if(n.log("triggerRollRequest #A",[g.name,e]),!g){n.log("triggerRollRequest - actor not found",[t,g]);return}if(i!=null&&i.targetTokens){(b=canvas.tokens.placeables[0])==null||b.setTarget(!1,{releaseOthers:!0});for(let q of canvas.tokens.placeables)i.targetTokens.includes(q.id)&&q.setTarget(!0,{releaseOthers:!1})}let f={};if(i){f={actorId:t,ability:i.ability,abilityId:i.ability,tool:i.tool,skill:i.skill,advantage:i.advantage||!1,disadvantage:i.disadvantage||!1,situational:i.situational||"",attackMode:i.attackMode||"",target:i.target||null,dc:i.dc||null,type:i.rollType||"",flavor:((v=o==null?void 0:o.data)==null?void 0:v.flavor)||"",hookNames:s.hookNames||[]},s={...f,event:null,rolls:[{parts:[],options:{dc:f.dc||null,rollType:f.rollType||""}}]};const{itemId:q,activityId:x}=i.activityUuid?w.getPartsFromActivityUuid(i.activityUuid):{};c=q?g.items.get(q):null,u=x?(D=(h=c==null?void 0:c.system)==null?void 0:h.activities)==null?void 0:D.get(x):null}a={...a,options:{...a.options,window:{...(L=a.options)==null?void 0:L.window,subtitle:g.name}}},((E=o==null?void 0:o.data)!=null&&E.flavor||s!=null&&s.flavor)&&(a.options.window.title=((P=o==null?void 0:o.data)==null?void 0:P.flavor)||(s==null?void 0:s.flavor));let d=m.getTypeFromHookNames(s.hookNames||[]);o={flags:{[A]:{rollRequest:!0,rollOptions:i,type:d,actors:game.user.isGM?r.filter(q=>q.id!==g.id):[]}}},m.forcePublicRoll&&(o.rollMode=CONST.DICE_ROLL_MODES.PUBLIC);const y=Object.values(C).find(q=>q.name===d);switch(o.flavor=y==null?void 0:y.label,n.log("triggerRollRequest #C",[s,a,o]),!0){case s.hookNames[0]===C.SKILL.name:g.rollSkill(s,a,o),d=C.SKILL.name;break;case s.hookNames[0]===C.TOOL.name:g.rollToolCheck(s,a,o),d=C.TOOL.name;break;case s.hookNames[0]===C.ABILITY_CHECK.name:g.rollAbilityCheck(s,a,o),d=C.ABILITY_CHECK.name;break;case s.hookNames[0]===C.SAVING_THROW.name:g.rollSavingThrow(s,a,o),d=C.SAVING_THROW.name;break;case s.hookNames[0]===C.INITIATIVE.name:g.rollInitiativeDialog({situational:s.situational||"",advantage:s.advantage,disadvantage:s.disadvantage}),d=C.INITIATIVE.name;break;case s.hookNames[0]===C.DEATH_SAVE.name:g.rollDeathSave(s,a,o),d=C.DEATH_SAVE.name;break;case s.hookNames[0]===C.CONCENTRATION.name:g.rollConcentration(s,a,o),d=C.CONCENTRATION.name;break;case s.hookNames[0]===G.DAMAGE.name:n.log("triggerRollRequest - damage #1",[u,s,a,o]),u&&(s.rolls=[],u.rollDamage(s,a,o));break;case s.hookNames[0]===G.ATTACK.name:n.log("triggerRollRequest - attack #1",[u,s,a,o]),u&&(o.flavor="",o.content="",n.log("triggerRollRequest - use",[o]),u.use({},{},o));break}}static areDiceConfigured(e,t){const s=m.playerDiceConfigs[t];if(!s)return!1;const a=(e==null?void 0:e.map(i=>(s==null?void 0:s[i])!==""&&(s==null?void 0:s[i])!==void 0&&(s==null?void 0:s[i])!==null))||[],o=a.includes(!0)||!1;return n.log("areDiceConfigured",[a,e,s,o]),o}static allowsDC(e){return e[0].toLowerCase()===G.SKILL.name.toLowerCase()||e[0].toLowerCase()===G.TOOL.name.toLowerCase()||e[0].toLowerCase()===G.SAVING_THROW.name.toLowerCase()||e[0].toLowerCase()===G.ABILITY_CHECK.name.toLowerCase()}static getTypeFromHookNames(e){let t="";return Object.values(C).forEach(s=>{e.includes(s.name)&&(t=s.name)}),t}};O=new WeakSet,re=function(e,t){const s=e.getFlag(A,"rollRequest"),a=e.getFlag(A,"type"),o=t[0]||t;n.log("#onRenderChatMessage",[e,t,a]),s&&o.querySelector(`button[data-type=${a}]`).addEventListener("click",r=>{const u=r.currentTarget.dataset,g=game.actors.get(u.actorId);g&&(n.log("onButtonClick",[r,g]),g.rollInitiativeDialog({event:r}))})},he=function(e,t){var c,u,g,f,d,y,b;const s=e.config;e.message;const a=((c=s==null?void 0:s.subject)==null?void 0:c.actor)||(s==null?void 0:s.subject),o=a?w.getPlayerOwner(a.id):null;if(n.log("#onRenderRollConfigurationDialog #1",[o,m.requestsEnabled]),!(o!=null&&o.active)||!m.requestsEnabled)return;let i=w.getElement((u=s==null?void 0:s.event)==null?void 0:u.target);const r=i?(g=i.closest(".card-buttons"))==null?void 0:g.querySelector("button[data-action]"):null;if(n.log("#onRenderRollConfigurationDialog #2",[]),m.handleRollDialogInputs(r,e,t),!!m.requestsEnabled){if(!game.user.isGM){const v=t.querySelector("button[autofocus]"),h=s.subject;h&&((f=h.damage)==null||f.parts);const D=((b=(y=(d=s.rolls)==null?void 0:d[0])==null?void 0:y.dice)==null?void 0:b.map(E=>E.denomination))||["d20"],L=m.areDiceConfigured(D,o.id);n.log("#onRenderRollConfigurationDialog #3",[e,s,L,D]),L&&setTimeout(()=>v.click(),500)}n.log("#onRenderRollConfigurationDialog #4",[])}},Ee=function(e,t,s,a){var g,f,d,y,b,v,h,D,L;const o=((f=(g=a.flags)==null?void 0:g[A])==null?void 0:f.actors)||[],i=((d=t.flags)==null?void 0:d["ddb-game-log"])||((b=(y=a.data)==null?void 0:y.flags)==null?void 0:b["ddb-game-log"]),r=i!=null;if(n.log("#onPostRollConfiguration #A",[o,e,t,s,a]),!(o!=null&&o.length))return;(h=(v=e==null?void 0:e[0])==null?void 0:v.data)!=null&&h.flags&&(e[0].data.flags={...e[0].data.flags,[A]:{isDdbGl:r}});const c=((L=(D=e==null?void 0:e[0])==null?void 0:D.dice)==null?void 0:L.map(E=>E.denomination))||[];let u=!1;return(async()=>{var E,P,q,x,$,j,B,Y,ue,de,ge,fe;for(let W=1;W<o.length;W++){const U=o[W],J=game.actors.get(U),S=U?w.getPlayerOwner(U):null;if(n.log("#onPostRollConfiguration #B",[r,J.name,S==null?void 0:S.name,e,t,s,a]),game.user.isGM&&(S!=null&&S.active)&&m.requestsEnabled){const Ie=m.SOCKET_CALLS.triggerRollRequest.action;m.areDiceConfigured(["d20"],S.id),s.configure=!0;const me=t.subject instanceof dnd5e.dataModels.activity.BaseActivityData,Oe=(w.getClientTargets()||[]).map(ne=>ne.id),ye={actorId:U,config:t,dialog:s,message:a,rollOptions:{ability:((P=(E=e[0])==null?void 0:E.data)==null?void 0:P.abilityId)||t.ability,abilityId:((x=(q=e[0])==null?void 0:q.data)==null?void 0:x.abilityId)||t.ability,tool:t==null?void 0:t.tool,skill:t==null?void 0:t.skill,advantage:(($=e[0])==null?void 0:$.hasAdvantage)||!1,disadvantage:((j=e[0])==null?void 0:j.hasDisadvantage)||!1,situational:((Y=(B=e[0])==null?void 0:B.data)==null?void 0:Y.situational)||"",target:t.target||t.dc||null,dc:t.dc||t.target||null,rollType:((de=(ue=e[0])==null?void 0:ue.options)==null?void 0:de.rollType)||"",attackMode:((fe=(ge=e[0])==null?void 0:ge.options)==null?void 0:fe.attackMode)||t.attackMode||"",diceTypes:c,actorId:U,activityUuid:me?t.subject.uuid:null,targetTokens:me?Oe:null,playerOwner:(S==null?void 0:S.id)||""}};ui.notifications.info(`Roll Request sent to ${S.name}`),u=!0,await H.execForUser(Ie,S.id,ye),n.log("#onPostRollConfiguration - sending to...",[J.name,S==null?void 0:S.name,ye]),W<o.length-1&&await new Promise(ne=>setTimeout(ne,750))}else u=!1,t.event=null,s={...s,window:{...s.window,subtitle:J.name}},m.triggerRollRequest({actorId:U,config:t,dialog:s}),n.log("#onPostRollConfiguration - rolling for...",[J.name,S==null?void 0:S.name,t,s,a])}})(),u?!1:void 0},Le=function(e,t){var a,o,i;const s=e.roll;if(n.log("#onRenderRollResolver AAA",[s==null?void 0:s.data,e,t]),(i=(o=(a=s==null?void 0:s.data)==null?void 0:a.flags)==null?void 0:o[A])!=null&&i.isDdbGl)return e.close(),!1},Se=function(e,t,s,a){var c,u,g,f,d,y;n.log("#onPreUseActivity #A",[e,t,s,a]);const o=e==null?void 0:e.actor,i=o?w.getPlayerOwner(o.id):null,r=((g=(u=(c=a.data)==null?void 0:c.flags)==null?void 0:u[A])==null?void 0:g.rollRequest)||!1;if(n.log("#onPreUseActivity #B",[(i==null?void 0:i.active)&&m.requestsEnabled&&!r]),i!=null&&i.active&&m.requestsEnabled&&!r)return a.create=!1,a.data={...a.data,flags:{...(f=a.data)==null?void 0:f.flags,[A]:{...(y=(d=a.data)==null?void 0:d.flags)==null?void 0:y[A],playerOwner:(i==null?void 0:i.id)||""}}},n.log("#onPreUseActivity #C",[i]),m.sendRollRequest(o,{dataset:{type:e.type},config:{hookNames:[e.type]},dialog:{configure:!0},activityUuid:e.uuid,actors:[o]}),!1},Pe=function(e,t,s,a){var i,r,c;n.log("#onPostUseActivity",[e.type,we.SAVE,e,t,s,a]);const o=m.getPlayerOwner(e.actor.id);if(n.log("#onPostUseActivity #2",[o,m.requestsEnabled]),o!=null&&o.active&&m.requestsEnabled){a.create=!1,a.data={...a.data,flags:{...(i=a.data)==null?void 0:i.flags,[A]:{...(c=(r=a.data)==null?void 0:r.flags)==null?void 0:c[A],playerOwner:(o==null?void 0:o.id)||""}}},n.log("#onPostUseActivity #3",[o]);return}},De=function(e,t,s){n.log("#onPreRollV2",[e.flags,e,t,s])},z(m,O),T(m,"forcePublicRoll",!1),T(m,"requestsEnabled",!1),T(m,"SOCKET_CALLS",{triggerRollRequest:{action:"triggerRollRequest",type:be.CHECK}}),T(m,"diceConfig",{}),T(m,"playerDiceConfigs",{}),T(m,"createRequestMessage",async(e,t,s=!1)=>{var r;n.log("createRequestMessage",[e,t,s]);const a=Object.values(C).find(c=>c.name===t.type);if(!a)return;const o={type:t.type,ability:t.config.ability,abilityId:t.config.ability,skill:t.config.skill,tool:t.config.tool,dc:t.config.target||"",actorId:e.id,action:t.action||"roll",visibility:(r=game.users.find(c=>e===c.character))==null?void 0:r.id,target:e.uuid},i=[];game.user.id,await renderTemplate("systems/dnd5e/templates/chat/request-card.hbs",{buttons:i}),ChatMessage.implementation.getSpeaker({alias:"Roll That For Me"}),`${o.actorId}${o.type}${a==null?void 0:a.label}`,s&&e.id,n.log("createRequestMessage",[chatMessage])}),T(m,"handleRollDialogInputs",async(e,t,s)=>{var g,f,d,y,b,v,h,D;const a=((d=(f=(g=t.message)==null?void 0:g.flags)==null?void 0:f[A])==null?void 0:d.rollOptions)||{};s.querySelector(".formulas.dc");let o=s.querySelector('input[name="dc"]');const i=e?Number((y=e==null?void 0:e.dataset)==null?void 0:y.dc):(a==null?void 0:a.dc)||t.config.dc||void 0;if(o&&(o.value=i),(b=t==null?void 0:t.config)!=null&&b.flavor){const L=s.querySelector(".window-title");L.textContent=t.config.flavor}if(!o){const L=await renderTemplate(`modules/${A}/templates/roll-dc-field.hbs`,{label:game.i18n.localize("CRLNGN_ROLLS.ui.forms.dcFieldLabel"),dc:i});if(m.allowsDC(t.config.hookNames)){const E=s.querySelector(".window-content .rolls .formulas");E==null||E.insertAdjacentHTML("beforebegin",L)}}o=s.querySelector('input[name="dc"]'),game.user.isGM||((v=s.querySelector(".formulas.dc"))==null||v.classList.add("hidden"),o==null||o.setAttribute("hidden",!0)),n.log("handleRollDialogInputs",[s,e,t]),e&&o&&(o.value=(h=e==null?void 0:e.dataset)==null?void 0:h.dc),o&&(a.dc=Number(o.value),t.config.dc=Number(o.value)),o==null||o.addEventListener("change",()=>{a.dc=Number(o.value),t.config.dc=Number(o.value)||""}),n.log("handleRollDialogInputs",[t.config,a]);const r=`data-${A}-${game.user.id}-custom-event`,c=s.querySelector('input[name="roll.0.situational"]'),u=Number((D=e==null?void 0:e.dataset)==null?void 0:D.situational)||(a==null?void 0:a.situational)||"";!s.hasAttribute(r)&&c&&(s.setAttribute(r,"true"),c.value=u||"",c.dispatchEvent(new Event("change",{bubbles:!0,cancelable:!1}))),s.setAttribute(r,"true")});let I=m;class M{static registerSettings(){const e=V();Object.entries(e).forEach(async s=>{const a=s[1];n.log("Registering... ",[s]);const o={name:a.label,hint:a.hint,default:a.default,type:a.propType,scope:a.scope,config:a.config,requiresReload:a.requiresReload||!1,onChange:i=>M.apply(a.tag,i)};a.choices&&(o.choices=a.choices),await game.settings.register(A,a.tag,o),M.get(a.tag)===void 0&&M.set(a.tag,a.default),n.log("registerSettings",[a.tag,M.get(a.tag)])}),M.applyRollRequestsSetting()}static get(e,t=A){if(!e)return null;let s=!1;if(t===A)s=game.settings.get(t,e);else{let o=game.settings.storage.get("client")[`${t}.${e}`];o===void 0&&(o=game.settings.storage.get("world").getSetting(`${t}.${e}`),s=o==null?void 0:o.value),n.log("GET Setting",[o,s])}return s}static set(e,t,s=A){if(!e)return!1;let a=game.settings.storage.get("client")[`${s}.${e}`];a||(a=game.settings.storage.get("world").getSetting(`${s}.${e}`)),n.log("Setting",[e,a]);try{game.settings.set(s,e,t)}catch{n.log("Unable to change setting",[e,a])}return!0}static apply(e,t){const s=V();switch(e){case s.rollRequestsEnabled.tag:M.applyRollRequestsSetting(t);break}}static applyRollRequestsSetting(e){const t=V();n.log("applyRollRequestsSetting",[e]);const s=e||M.get(t.rollRequestsEnabled.tag);I.requestsEnabled=s;const a=document.querySelector("#crlngn-request-toggle");if(!a)return;s===!1?a.classList.remove("active"):a.classList.add("active");const o=game.i18n.localize(a.classList.contains("active")?"CRLNGN_ROLLS.ui.buttons.rollRequestsToggleOn":"CRLNGN_ROLLS.ui.buttons.rollRequestsToggleOff");a.dataset.tooltip=o,game.user.isGM&&game.tooltip&&game.tooltip.activate(a,{text:o}),n.log("Roll Requests Toggle",[s,a])}}var ve,Ae;const{MODIFIER_CODES:Z,MODIFIER_KEYS:Ue}=((Ae=(ve=foundry.helpers)==null?void 0:ve.interaction)==null?void 0:Ae.KeyboardManager)??KeyboardManager;Z.Alt,Z.Control.filter(p=>p.startsWith("Control")),Z.Control.filter(p=>!p.startsWith("Control")),Z.Shift;const _={};function Ge(p,{indexOnly:e=!1,fullItem:t=!1}={}){const s=He(p),{collection:a,documentId:o}=foundry.utils.parseUuid(s),i=a==null?void 0:a.metadata.id;if(t&&!e)return a==null?void 0:a.getDocument(o);const r=_[i],c=r instanceof Promise;if(e){const f=a==null?void 0:a.index.get(o);return c?f:(r==null?void 0:r[o])??f}if(c)return r.then(()=>_[i][o]);if(r)return r[o];if(!a)return;const u=Fe(),g=a.getIndex({fields:u}).then(f=>{const d=f.reduce((y,b)=>(y[b._id]=b,y),{});return _[i]=d,d[o]});return _[i]=g,g}function He(p){if(p.startsWith("Compendium."))return p;let e=CONFIG.DND5E.sourcePacks.ITEMS,[t,s,a]=p.split(".");return t&&s&&(e=`${t}.${s}`),a||(a=p),`Compendium.${e}.Item.${a}`}function Fe(){const p=["system.type.value"];for(const e of Object.values(CONFIG.DND5E.traits))e.subtypes&&p.push(`system.${e.subtypes.keyPath}`);return p}var oe,ie;const l=class l{static init(){l.preloadHandlebarsTemplates()}static getPlayerActors(){const e=game.actors.filter((t,s)=>t.type==="character");return n.log("RollRequestsMenu.getPlayerActors",[e]),l.playerActors=e,e}static preloadHandlebarsTemplates(){const e=["modules/crlngn-roll-requests/templates/requests-menus.hbs"];return loadTemplates(e)}static injectRollRequestsMenu(){const e=V();document.querySelector("#chat-controls").insertAdjacentHTML("afterbegin",'<label class="chat-control-icon active" id="crlngn-request-toggle" data-tooltip-direction="RIGHT"><i class="fas fa-bolt"></i></label>');const s=document.querySelector("#crlngn-request-toggle"),a=M.get(e.rollRequestsEnabled.tag);return M.applyRollRequestsSetting(a),s.addEventListener("click",o=>{o.target.classList.toggle("active");const i=o.target.classList.contains("active");M.set(e.rollRequestsEnabled.tag,i)}),s.addEventListener("mouseenter",l.showPCActorsMenu),s.addEventListener("mouseleave",l.hidePCActorsMenu),n.log("TEST",[game,CONFIG.DND5E]),s}static async showPCActorsMenu(e){const t=l.getPlayerActors(),s=document.querySelector("#crlngn-pc-actors-menu");s&&s.remove(),n.log("showPCActorsMenu",[C]);const a=Object.values(C).map(d=>({id:d.name,name:d.label,selected:!1,rollable:d.subList===null})),o=await renderTemplate("modules/crlngn-roll-requests/templates/requests-menus.hbs",{actors:t.map(d=>({id:d.id,name:d.name,crlngnStats:[{abbrev:"AC",value:d.system.attributes.ac.value},{abbrev:"HP",value:d.system.attributes.hp.value},{abbrev:"DC",value:d.system.attributes.spelldc},{abbrev:"PRC",value:d.system.skills.prc.passive}],...d})),requestTypes:a,actorsLocked:l.actorsLocked});document.body.insertAdjacentHTML("beforeend",`<div id="crlngn-pc-actors-menu">${o}</div>`),l.actorsMenu=document.querySelector("#crlngn-pc-actors-menu");const i=l.actorsMenu;i.addEventListener("mouseleave",l.hidePCActorsMenu),i.style.zIndex=100;const r=e.target.getBoundingClientRect();r.left;const c=r.top;r.bottom,r.height,i.style.right="var(--current-sidebar-width, 0px)",i.style.top=`${c}px`,setTimeout(()=>{const d=i.getBoundingClientRect(),y=window.innerHeight;d.bottom>y?(i.style.top="auto",i.classList.add("grow-up")):i.classList.remove("grow-up")},0);const u=i.querySelector("#crlngn-pc-actors-all");u.addEventListener("change",l.onAllActorsToggle),l.selectAllCheckbox=u,i.querySelector("#crlngn-actors-lock").addEventListener("click",l.onActorLockClick),i.querySelectorAll(".pc-actor .actor-select").forEach(d=>{d.addEventListener("click",l.onActorToggle)}),l.markSelectedActors()}static hidePCActorsMenu(){const e=l.actorsMenu;l.actorsLocked||e&&setTimeout(()=>{e.matches(":hover")||(e.remove(),l.selectedActors=[],l.selectedRequestType=null)},750)}static showRequestTypes(){const e=l.actorsMenu.querySelector("ul.request-types");e?(e.classList.add("visible"),e.querySelectorAll("li").forEach(s=>{s._hasClickListener||(s.addEventListener("click",le(l,oe)),s._hasClickListener=!0)})):n.log("Request types menu not found",[])}static hideRequestTypes(){const e=l.actorsMenu.querySelector("ul.request-types");e&&e.classList.remove("visible"),l.hideRollTypes()}static showOptionsForRequestType(e){var i;const t=l.selectedActors,s=Object.values(C).find(r=>r.name===e);if(n.log("showOptionsForRequestType",[t,s,e]),!s)return;if(s.subList===null&&t.length>0){I.sendRollRequest(t[0],{config:{hookNames:[e]},actors:t||[]}),n.log("showOptionsForRequestType - Sending roll request",[t,e]);return}const a=l.actorsMenu.querySelector("ul.roll-types");if(!a)return;a.innerHTML="";const o=CONFIG.DND5E[s.subList];if(n.log("System list for request type",[e,o,CONFIG.DND5E]),!!o){for(const[r,c]of Object.entries(o)){const u=document.createElement("li");if(u.dataset.abbreviation=r,u.dataset.fullKey=c.fullKey||r,u.dataset.label=c.label||"",u.dataset.type=e,s.subList===C.TOOL.subList){const g=CONFIG.DND5E.enrichmentLookup.tools[r],f=g?(i=Ge(g.id,{indexOnly:!0}))==null?void 0:i.name:null;u.dataset.label=f}u.innerHTML=`<i class="icon fas fa-dice-d20"></i>${u.dataset.label}`,u.addEventListener("click",le(l,ie)),a.appendChild(u)}a.classList.add("visible")}}static hideRollTypes(){const e=l.actorsMenu.querySelector("ul.roll-types");e&&(e.classList.remove("visible"),e.querySelectorAll(".selected").forEach(t=>t.classList.remove("selected")),l.selectedOptionType=null)}static onActorLockClick(e){const t=e.target;l.actorsLocked=!l.actorsLocked,l.actorsLocked?(t.classList.add("fa-lock-keyhole"),t.classList.remove("fa-lock-keyhole-open")):(t.classList.add("fa-lock-keyhole-open"),t.classList.remove("fa-lock-keyhole"))}static setItemSelection(e,t){e.dataset.selected=t?"true":"false";const s=e.querySelector(".actor-select i");n.log("setItemSelection",[e,t]),t?(e.classList.add("selected"),s.classList.add("fa-circle-dot"),s.classList.remove("fa-circle")):(e.classList.remove("selected"),s.classList.remove("fa-circle-dot"),s.classList.add("fa-circle"))}static onActorToggle(e){const t=e.currentTarget.parentElement;l.setItemSelection(t,t.dataset.selected!="true");const s=l.actorsMenu.querySelectorAll(".pc-actor"),a=Array.from(s).every(c=>c.dataset.selected==="true"),o=Array.from(s).some(c=>c.dataset.selected==="true");n.log("onActorToggle",[a,o,e.currentTarget.parentElement.dataset.selected]);const r=Array.from(s).filter(c=>c.dataset.selected==="true").map(c=>c.dataset.id);o?(l.selectedActors=l.playerActors.filter(c=>r.includes(c.id)),l.showRequestTypes()):(l.selectedActors=[],l.hideRequestTypes()),n.log("actors",[r,l.selectedActors])}static onActorDblClick(e){const t=e.target.dataset.id,s=l.playerActors.find(a=>a.id===t);s&&s.sheet.render(!0)}static onAllActorsToggle(e){const t=e.target.checked,s=l.actorsMenu.querySelectorAll(".pc-actor");l.selectedActors=[],s.forEach(a=>{l.setItemSelection(a,t),l.selectedActors.push(l.playerActors.find(o=>o.id===a.dataset.id))}),t?l.showRequestTypes():l.hideRequestTypes()}static markSelectedActors(){l.actorsMenu.querySelectorAll(".pc-actor").forEach(t=>{l.selectedActors.includes(t.dataset.id)?l.setItemSelection(t,!0):l.setItemSelection(t,!1)})}};oe=new WeakMap,ie=new WeakMap,T(l,"actorsMenu",null),T(l,"playerActors",[]),T(l,"selectedActors",[]),T(l,"selectedRequestType",null),T(l,"selectedOptionType",null),T(l,"selectAllCheckbox",null),T(l,"actorsLocked",!1),z(l,oe,e=>{const t=l.actorsMenu.querySelector("ul.request-types");t&&(l.hideRollTypes(),t.querySelectorAll(".selected").forEach(s=>{s!==e.target&&s.classList.remove("selected")}),e.target.classList.toggle("selected"),e.target.classList.contains("selected")?(l.selectedRequestType=e.target.dataset.id,l.showOptionsForRequestType(l.selectedRequestType)):(l.selectedRequestType=null,l.hideRollTypes()),n.log("showRequestTypes - item clicked",[e.target.dataset,l.selectedRequestType]))}),z(l,ie,e=>{const t=l.actorsMenu.querySelector("ul.roll-types");if(!t)return;t.querySelectorAll(".selected").forEach(a=>a.classList.remove("selected")),e.target.classList.add("selected");const s=e.target.dataset.type;l.selectedOptionType={key:e.target.dataset.abbreviation,fullKey:e.target.dataset.fullKey,label:e.target.dataset.label},I.sendRollRequest(l.selectedActors[0],{config:{hookNames:[s]},dataset:e.target.dataset,actors:l.selectedActors}),n.log("Selected option",[l.selectedOptionType])});let te=l;const k=class k{static init(){H.initialize(k.registerSocketCalls),Hooks.once(K.INIT,()=>{V(),n.log("Initiating module...",[],!0),M.registerSettings(),I.init(),te.init(),k.setDiceConfig()}),Hooks.once(K.READY,()=>{n.log("Core Ready",[]);const e=V();var t=M.get(e.debugMode.tag);t&&(CONFIG.debug.hooks=!0),game.user.isGM?(te.injectRollRequestsMenu(),Hooks.on(K.USER_CONNECTED,k.onUserConnected),game.users.forEach(s=>{k.onUserConnected(s)})):k.getDiceConfig()}),ee.init()}static onUserConnected(e){e.active&&e.id!==game.user.id&&(n.log("onUserConnected",[e]),H.execForUser(k.SOCKET_CALLS.getDiceConfig,e.id))}static setDiceConfig(){if(!game.user)return;const e=game.settings.storage.get("client");return k.diceConfig=e["core.diceConfiguration"]||"",n.log("getDiceConfig",[k.diceConfig]),k.diceConfig}static getDiceConfig(){if(game.user)if(k.setDiceConfig(),game.user.isGM){I.playerDiceConfigs[game.user.id]=k.diceConfig,H.execForGMs(k.SOCKET_CALLS.receiveDiceConfig,game.user.id,k.diceConfig);return}else I.playerDiceConfigs[game.user.id]=k.diceConfig?JSON.parse(k.diceConfig):{}}static receiveDiceConfig(e,t){var s;((s=game.user)!=null&&s.isGM||e===game.user.id)&&(I.playerDiceConfigs||(I.playerDiceConfigs={}),I.playerDiceConfigs[e]=t?JSON.parse(t):{},n.log(`Received dice configuration from user ${e}`,[I.playerDiceConfigs]))}static registerSocketCalls(){H.registerCall(k.SOCKET_CALLS.getDiceConfig,k.getDiceConfig),H.registerCall(k.SOCKET_CALLS.receiveDiceConfig,k.receiveDiceConfig),I.registerSocketCalls()}};T(k,"diceConfig",{}),T(k,"SOCKET_CALLS",{receiveDiceConfig:"receiveDiceConfig",getDiceConfig:"getDiceConfig"});let ce=k;ce.init();
//# sourceMappingURL=crlngn-roll-requests.js.map
