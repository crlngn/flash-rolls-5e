var Re=Object.defineProperty;var re=r=>{throw TypeError(r)};var ye=(r,t,e)=>t in r?Re(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var S=(r,t,e)=>ye(r,typeof t!="symbol"?t+"":t,e),ce=(r,t,e)=>t.has(r)||re("Cannot "+e);var x=(r,t,e)=>(ce(r,t,"read from private field"),e?e.call(r):t.get(r)),ue=(r,t,e)=>t.has(r)?re("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(r):t.set(r,e),de=(r,t,e,s)=>(ce(r,t,"write to private field"),s?s.call(r,e):t.set(r,e),e);const Q={checkbox:"checkbox"},W={client:"client",world:"world"},A=()=>({debugMode:{tag:"debug-mode",label:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.hint"),propType:Boolean,inputType:Q.checkbox,default:!0,scope:W.client,config:!0},rollRequestsEnabled:{tag:"roll-requests-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.hint"),propType:Boolean,inputType:Q.checkbox,default:!0,scope:W.world,config:!0},skipDialogs:{tag:"skip-dialogs",label:game.i18n.localize("CRLNGN_ROLLS.settings.skipDialogs.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.skipDialogs.hint"),propType:Boolean,inputType:Q.checkbox,default:!1,scope:W.world,config:!0},useGMTargetTokens:{tag:"use-gm-target-tokens",label:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.hint"),propType:Boolean,inputType:Q.checkbox,default:!1,scope:W.world,config:!0},rollInterceptionEnabled:{tag:"roll-interception-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollInterceptionEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollInterceptionEnabled.hint"),propType:Boolean,inputType:Q.checkbox,default:!0,scope:W.world,config:!0},showOfflineNotifications:{tag:"show-offline-notifications",label:game.i18n.localize("CRLNGN_ROLLS.settings.showOfflineNotifications.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.showOfflineNotifications.hint"),propType:Boolean,inputType:Q.checkbox,default:!0,scope:W.world,config:!0}}),P="crlngn-roll-requests",se=["%cFlash Rolls 5e","color:rgb(47, 151, 161); font-weight: bold;","|"],oe={receiveDiceConfig:"receiveDiceConfig",getDiceConfig:"getDiceConfig",handleRollRequest:"handleRollRequest"},y={ABILITY:"ability",SAVE:"save",SKILL:"skill",TOOL:"tool",CONCENTRATION:"concentration",ATTACK:"attack",DAMAGE:"damage",INITIATIVE:"initiative",DEATH_SAVE:"deathsave",HIT_DIE:"hitDie",ITEM_SAVE:"itemSave",CUSTOM:"custom"},Te={ABILITY_CHECK:{name:"abilityCheck",label:"Ability Check",subList:"abilities",actorPath:"system.abilities"},SAVING_THROW:{name:"savingThrow",label:"Saving Throw",subList:"abilities",actorPath:"system.abilities"},SKILL:{name:"skill",label:"Skill Check",subList:"skills",actorPath:"system.skills"},TOOL:{name:"tool",label:"Tool Check",subList:"tools",actorPath:"system.tools"},CONCENTRATION:{name:"concentration",label:"Concentration Check",subList:null,actorPath:""},INITIATIVE:{name:"initiativeDialog",label:"Initiative Roll",subList:null,actorPath:""},DEATH_SAVE:{name:"deathSave",label:"Death Save",subList:null,actorPath:""},CUSTOM:{name:"custom",label:"Custom Roll",subList:null,actorPath:""}},z={ID:P,ROLL_REQUEST_OPTIONS:Te},Y={INIT:"init",READY:"ready",RENDER_SIDEBAR_TAB:"renderSidebarTab",USER_CONNECTED:"userConnected",PRE_CREATE_CHAT_MESSAGE:"preCreateChatMessage"},Ce={READY:"socketlib.ready"},M={PRE_ROLL_ABILITY_CHECK:"dnd5e.preRollAbilityCheckV2",PRE_ROLL_SAVING_THROW:"dnd5e.preRollSavingThrowV2",PRE_ROLL_DEATH_SAVE_V2:"dnd5e.preRollDeathSaveV2",PRE_ROLL_SKILL_V2:"dnd5e.preRollSkillV2",PRE_ROLL_TOOL_V2:"dnd5e.preRollToolV2",PRE_ROLL_HIT_DIE_V2:"dnd5e.preRollHitDieV2",PRE_ROLL_INITIATIVE:"dnd5e.preRollInitiative",PRE_ROLL_ATTACK_V2:"dnd5e.preRollAttackV2",PRE_ROLL_DAMAGE_V2:"dnd5e.preRollDamageV2",POST_ROLL_CONFIG:"dnd5e.postRollConfiguration",RENDER_ROLL_CONFIGURATION_DIALOG:"renderRollConfigurationDialog"},ee=class ee{static log(t="",e=[],s=!1){try{const i=game.settings.get(P,"debug-mode")||ee.debugOn;if(!(s||i))return;console.log(...se,t,...e)}catch{(s||ee.debugOn)&&console.log(...se,t,...e)}}static warn(t="",e=[]){console.warn(...se,t,...e)}static error(t,e={ui:!1,console:!0,permanent:!1}){var s;e.ui&&((s=ui.notifications)==null||s.error(t,{localize:!0,permanent:e.permanent})),e.console&&console.error(...se,t)}};S(ee,"debugOn",!1);let X=ee;const E=class E{static serializeForTransport(t,e=!1){return t==null||e&&t.rolls&&Array.isArray(t.rolls)&&(t.rolls=t.rolls.map(s=>s instanceof Roll?s.toJSON():s)),t}static deserializeFromTransport(t,e=!1){let s={...t};if(!t)return s;if(e&&t.rolls&&t.rolls.length>0){const i=s.rolls.map(a=>{let o=a;return typeof a=="string"?o=Roll.fromJSON(a):o=Roll.fromJSON(JSON.stringify(a)),o});return s.rolls=[...i],s}return s}};S(E,"socket"),S(E,"_activeExecutions",new Map),S(E,"initialize",t=>{Hooks.once(Ce.READY,()=>{if(typeof socketlib>"u"){X.error("SocketUtil Error: socketlib is not loaded. Ensure it is installed and enabled."),ui.notifications.error(game.i18n.localize("CRLNGN_ROLLS.notifications.socketlibMissing"),{permanent:!0});return}try{E.socket=socketlib.registerModule(P),t&&t()}catch{}})}),S(E,"registerCall",(t,e)=>{E.socket&&E.socket.register(t,e)}),S(E,"sendMessage",(t,e)=>{e&&e()}),S(E,"execForGMs",async(t,...e)=>{if(E.socket)return await E.socket.executeForAllGMs(t,...e)}),S(E,"execForAll",async(t,...e)=>{if(E.socket)return await E.socket.executeForEveryone(t,...e)}),S(E,"execForUser",async(t,e,...s)=>{if(!E.socket)return;if(e===game.user.id)return null;const i=`${t}-${e}`;if(E._activeExecutions.has(i))return null;E._activeExecutions.set(i,!0);try{return await E.socket.executeAsUser(t,e,...s)}catch{return null}finally{E._activeExecutions.delete(i)}});let F=E;class U{static initialize(){this.setDiceConfig()}static setDiceConfig(){if(!game.user)return{};const t=game.settings.storage.get("client");return this.diceConfig=t["core.diceConfiguration"]||"",this.diceConfig}static getDiceConfig(){return game.user?(this.setDiceConfig(),game.user.isGM&&this._sendDiceConfigToGMs(),this.diceConfig):{}}static _sendDiceConfigToGMs(){F.execForGMs("receiveDiceConfig",game.user.id,this.diceConfig)}static receiveDiceConfig(t,e){var s,i;((s=game.user)!=null&&s.isGM||t===((i=game.user)==null?void 0:i.id))&&(this.playerDiceConfigs[t]=e?JSON.parse(e):{})}static getUserDiceConfig(t){var e;return t===((e=game.user)==null?void 0:e.id)?this.diceConfig:this.playerDiceConfigs[t]||{}}static requestDiceConfigFromUser(t){F.execForUser("getDiceConfig",t)}static requestDiceConfigFromAllPlayers(){var t;(t=game.user)!=null&&t.isGM&&game.users.forEach(e=>{e.active&&!e.isGM&&e.id!==game.user.id&&this.requestDiceConfigFromUser(e.id)})}static clearPlayerConfigs(){this.playerDiceConfigs={}}static hasUserConfig(t){var e;return t===((e=game.user)==null?void 0:e.id)?!!this.diceConfig:!!this.playerDiceConfigs[t]}}S(U,"diceConfig",{}),S(U,"playerDiceConfigs",{});class L{static registerSettings(){const t=A();Object.entries(t).forEach(async s=>{const i=s[1],a={name:i.label,hint:i.hint,default:i.default,type:i.propType,scope:i.scope,config:i.config,requiresReload:i.requiresReload||!1,onChange:o=>L.apply(i.tag,o)};i.choices&&(a.choices=i.choices),await game.settings.register(P,i.tag,a),(L.get(i.tag)===void 0||L.get(i.tag)===null)&&L.set(i.tag,i.default)})}static get(t,e=P){if(!t)return null;let s=!1;if(e===P)s=game.settings.get(e,t);else{let a=game.settings.storage.get("client")[`${e}.${t}`];a===void 0&&(a=game.settings.storage.get("world").getSetting(`${e}.${t}`),s=a==null?void 0:a.value)}return s}static set(t,e,s=P){if(!t)return!1;let i=game.settings.storage.get("client")[`${s}.${t}`];i||(i=game.settings.storage.get("world").getSetting(`${s}.${t}`));try{game.settings.set(s,t,e)}catch{}return!0}static apply(t,e){const s=A();switch(t){case s.rollRequestsEnabled.tag:L.applyRollRequestsEnabled(e);break}}static applyRollRequestsEnabled(t){const e=document.querySelector("#chat-controls .chat-control-icon.roll-requests-icon");e&&(t?e.classList.add("active"):e.classList.remove("active"))}}class ie{static findActivityForRoll(t,e){var i;if(!((i=t==null?void 0:t.system)!=null&&i.activities))return null;const s=t.system.activities;switch(e){case y.ATTACK:const a=s.getByType("attack");return(a==null?void 0:a[0])||null;case y.DAMAGE:const o=s.getByType("attack");if((o==null?void 0:o.length)>0)return o[0];const l=s.getByType("damage");if((l==null?void 0:l.length)>0)return l[0];const n=s.getByType("save");return(n==null?void 0:n.length)>0?n[0]:null;case y.ITEM_SAVE:const c=s.getByType("save");return(c==null?void 0:c[0])||null;default:return null}}static getActivitiesByType(t,e){var s;return(s=t==null?void 0:t.system)!=null&&s.activities?t.system.activities.getByType(e):[]}static hasActivityForRoll(t,e){return!!this.findActivityForRoll(t,e)}static async executeActivityRoll(t,e,s,i,a){var n,c;const o=t.items.get(s);if(!o)throw new Error(`Item ${s} not found on actor ${t.name}`);let l=null;if(i&&(l=(n=o.system.activities)==null?void 0:n.get(i)),l||(l=this.findActivityForRoll(o,e)),l)switch(e){case y.ATTACK:const R={configure:!0};if(MidiQOL){await ie.syntheticItemRoll(o,{...a});return}else return await l.use(usageConfig,R);case y.DAMAGE:if(MidiQOL){const h=(c=MidiQOL==null?void 0:MidiQOL.Workflow)==null?void 0:c.getWorkflow(l.uuid);await h.activity.rollDamage({...a,workflow:h});return}else return await l.rollDamage(a);case y.ITEM_SAVE:return await o.use({activity:l.id},{skipDialog:a.fastForward});default:throw new Error(`Unknown roll type: ${e}`)}else{switch(e){case y.ATTACK:if(o.rollAttack)return await o.rollAttack(a);break;case y.DAMAGE:if(o.rollDamage)return await o.rollDamage(a);break;case y.ITEM_SAVE:return await o.use({},{skipDialog:a.fastForward})}throw new Error(`No suitable method found for ${e} on item ${o.name}`)}}static getActivityDisplayInfo(t){return t?{name:t.name||t.constructor.metadata.label,type:t.type,icon:t.constructor.metadata.icon,canAttack:t.type==="attack",canDamage:["attack","damage","save"].includes(t.type),canSave:t.type==="save"}:null}static getDamageFormula(t){var s,i;if(!((i=(s=t==null?void 0:t.damage)==null?void 0:s.parts)!=null&&i.length))return null;const e=t.damage.parts.map(a=>a.formula).filter(a=>a);return e.length>0?e.join(" + "):null}static async syntheticItemRoll(t,e={}){let s={consumeUsage:!1,consumeSpellSlot:!1},i={configureDialog:!0,workflowOptions:{autoRollAttack:!1,autoFastAttack:!1,autoRollDamage:"none",autoFastDamage:!1}};return e={...s,...e},await MidiQOL.completeItemUse(t,e,i)}static async replaceDamage(t,e,{ignoreCrit:s=!1,damageType:i}={}){e=String(e),t.isCritical&&!s&&(e=await rollUtils.getCriticalFormula(e,t.item.getRollData()));let a=await new CONFIG.Dice.DamageRoll(e).evaluate();return await t.setDamageRolls([a]),a}}class K extends dnd5e.applications.dice.D20RollConfigurationDialog{constructor(t={},e={},s={}){s.rollType=s.rollType||CONFIG.Dice.D20Roll,super(t,e,s),this.actors=s.actors||[],this.sendRequest=s.defaultSendRequest??s.sendRequest??!0,this.showDC=s.showDC||!1,this.dcValue=s.dcValue||null}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}_prepareConfigurationData(t,e,s,i){const a=super._prepareConfigurationData(t,e,s,i);return a.showDC=this.showDC,a.dcValue=this.dcValue,a.sendRequest=this.sendRequest,a.actorCount=this.actors.length,a}async _preparePartContext(t,e,s){return e=await super._preparePartContext(t,e,s),t==="configuration"&&(e.showDC=this.showDC,e.dcValue=this.dcValue,e.sendRequest=this.sendRequest,e.actorCount=this.actors.length),e}async _onRender(t,e){var i,a,o;if(super._onRender(t,e),this.element.querySelector(".gm-roll-config-fields"))return;let s=this.element.querySelector(".rolls .formulas");if(s&&(this.showDC||this.actors.length>0)){const l={showDC:this.showDC,dcValue:this.dcValue,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},n=await renderTemplate(`modules/${P}/templates/gm-roll-config-fields.hbs`,l),c=document.createElement("div");c.className="gm-roll-config-fields",c.innerHTML=n,s.parentNode.insertBefore(c,s)}this._attachButtonListeners(),((o=(a=(i=this.config.rolls)==null?void 0:i[0])==null?void 0:a.data)!=null&&o.situational||this.config.situational)&&(X.log("GMRollConfigDialog._onRender",["Triggering rebuild for initial situational bonus"]),setTimeout(()=>{this.rebuild()},100))}_attachButtonListeners(){this.element.querySelectorAll('[data-action="advantage"], [data-action="normal"], [data-action="disadvantage"]').forEach(e=>{e.addEventListener("click",s=>{s.currentTarget.dataset.action})})}_onChangeForm(t,e){super._onChangeForm(t,e);const s=this.element.querySelector('input[name="crlngn-send-request"]');s&&(this.sendRequest=s.checked);const i=this.element.querySelector('input[name="dc"]');i&&i.value&&(this.dcValue=parseInt(i.value)||null)}_buildConfig(t,e,s){const i=e==null?void 0:e.get("ability"),a=e==null?void 0:e.get("dc");i&&(t.ability=i,this.config.ability=i);const o=super._buildConfig(t,e,s);if(a){const l=parseInt(a);isNaN(l)||(o.options=o.options||{},o.options.target=l)}else this.dcValue!==void 0&&this.dcValue!==null&&(o.options=o.options||{},o.options.target=this.dcValue);return o}async _processSubmitData(t,e,s){if(await super._processSubmitData(t,e,s),s.has("dc")&&s.get("dc")!==""){const i=parseInt(s.get("dc"));if(!isNaN(i)&&(this.dcValue=i,this.config.rolls&&this.config.rolls.length>0))for(const a of this.config.rolls)a.options.target=i}this.sendRequest=s.get("crlngn-send-request")!=="false"}_finalizeRolls(t){const e=super._finalizeRolls(t);if(this.dcValue!==void 0&&this.dcValue!==null)for(const s of e)s.options.target=this.dcValue;return this.config.sendRequest=this.sendRequest,e}static async getConfiguration(t,e,s,i={}){var p,f,b,k,T,I,V,B,$,j,N,te;const a=["skill","save","savingThrow","ability","abilityCheck","concentration"].includes(e),o=t[0];if(!o)return null;let l=CONFIG.Dice.D20Roll;["damage","healing"].includes(e)?l=CONFIG.Dice.DamageRoll||CONFIG.Dice.BasicRoll:["formula","custom"].includes(e)&&(l=CONFIG.Dice.BasicRoll),l||(l=CONFIG.Dice.D20Roll);const n={data:o.getRollData(),subject:o,rolls:[{parts:[],data:o.getRollData(),options:{}}]};switch(e){case"skill":n.skill=s;break;case"save":case"savingThrow":n.ability=s;break;case"ability":case"abilityCheck":n.ability=s;break}const c={create:!1,data:{speaker:ChatMessage.getSpeaker({actor:o})}},R={options:{actors:t,sendRequest:t.some(H=>this._isPlayerOwned(H)),showDC:a,rollKey:s,rollType:l,window:{title:K._getRollTitle(e,s,o),subtitle:t.map(H=>H.name).join(", ")},...i}},h=new this(n,c,R.options),d=await new Promise(H=>{h.addEventListener("close",()=>{H({rolls:h.rolls,config:h.config,message:h.message,sendRequest:h.sendRequest})},{once:!0}),h.render({force:!0})});if(!d.rolls||d.rolls.length===0)return null;const u=d.rolls[0];let g=!1,_=!1;((p=u==null?void 0:u.options)==null?void 0:p.advantageMode)!==void 0&&(g=u.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE,_=u.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE);const m={chatMessage:!0,isRollRequest:d.sendRequest,skipDialog:i.skipDialogs||!1,sendRequest:d.sendRequest};g&&(m.advantage=!0),_&&(m.disadvantage=!0);const C=game.settings.get("core","rollMode");d.message.rollMode&&d.message.rollMode!==C&&(m.rollMode=d.message.rollMode);let O=((f=u==null?void 0:u.options)==null?void 0:f.situational)||((b=u==null?void 0:u.data)==null?void 0:b.situational)||((T=(k=d.config)==null?void 0:k.data)==null?void 0:T.situational)||"";if(!O&&((I=u==null?void 0:u.parts)==null?void 0:I.length)>0&&u.parts.find(v=>v.includes("@situational"))&&(V=u.data)!=null&&V.situational&&(O=u.data.situational),O&&(m.situational=O,m.parts=["@situational"]),(B=u==null?void 0:u.options)!=null&&B.target&&(m.target=u.options.target),d.config.ability&&["skill","tool"].includes(e)){const H=((j=($=o.system.skills)==null?void 0:$[s])==null?void 0:j.ability)||((te=(N=CONFIG.DND5E.skills)==null?void 0:N[s])==null?void 0:te.ability);d.config.ability!==H&&(m.ability=d.config.ability)}return m.rollTitle=R.options.window.title,m}static _isPlayerOwned(t){return Object.entries(t.ownership).some(([e,s])=>{const i=game.users.get(e);return i&&!i.isGM&&s>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})}static _getRollTitle(t,e,s){var a,o,l,n,c,R,h,d;let i="";switch(t){case"skill":const u=((a=CONFIG.DND5E.skills[e])==null?void 0:a.label)||e,g=(o=s==null?void 0:s.system.skills)==null?void 0:o[e],_=(g==null?void 0:g.ability)||((l=CONFIG.DND5E.skills[e])==null?void 0:l.ability)||"int",m=((n=CONFIG.DND5E.abilities[_])==null?void 0:n.label)||_;i=game.i18n.format("DND5E.SkillPromptTitle",{skill:u,ability:m});break;case"save":case"savingThrow":const C=((c=CONFIG.DND5E.abilities[e])==null?void 0:c.label)||e;i=game.i18n.format("DND5E.SavePromptTitle",{ability:C});break;case"ability":case"abilityCheck":const O=((R=CONFIG.DND5E.abilities[e])==null?void 0:R.label)||e;i=game.i18n.format("DND5E.AbilityPromptTitle",{ability:O});break;case"concentration":i=game.i18n.localize("DND5E.Concentration");break;case"tool":const p=(d=(h=CONFIG.DND5E.enrichmentLookup)==null?void 0:h.tools)==null?void 0:d[e];let f=e;if(p!=null&&p.id){const b=dnd5e.documents.Trait.getBaseItem(p.id,{indexOnly:!0});f=(b==null?void 0:b.name)||e}i=game.i18n.format("DND5E.ToolPromptTitle",{tool:f});break;case"deathsave":case"deathSave":i=game.i18n.localize("DND5E.DeathSave");break;case"initiative":case"initiativeDialog":i=game.i18n.localize("DND5E.Initiative");break;default:i=game.i18n.localize("DND5E.Roll")}return i}}class ge extends dnd5e.applications.dice.SkillToolRollConfigurationDialog{constructor(t={},e={},s={}){const i=foundry.utils.mergeObject(t,{chooseAbility:!0});s.rollType=s.rollType||CONFIG.Dice.D20Roll,super(i,e,s),this.actors=s.actors||[],this.sendRequest=s.defaultSendRequest??s.sendRequest??!0,this.showDC=s.showDC||!1,this.dcValue=s.dcValue||null}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}_prepareConfigurationData(t,e,s,i){const a=super._prepareConfigurationData(t,e,s,i);return a.showDC=this.showDC,a.dcValue=this.dcValue,a.sendRequest=this.sendRequest,a.actorCount=this.actors.length,a}async _preparePartContext(t,e,s){return e=await super._preparePartContext(t,e,s),t==="configuration"&&(e.showDC=this.showDC,e.dcValue=this.dcValue,e.sendRequest=this.sendRequest,e.actorCount=this.actors.length),e}async _onRender(t,e){var i,a,o;if(super._onRender(t,e),this.element.querySelector(".gm-roll-config-fields"))return;let s=this.element.querySelector(".rolls .formulas");if(s&&(this.showDC||this.actors.length>0)){const l={showDC:this.showDC,dcValue:this.dcValue,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},n=await renderTemplate(`modules/${P}/templates/gm-roll-config-fields.hbs`,l),c=document.createElement("div");c.className="gm-roll-config-fields",c.innerHTML=n,s.parentNode.insertBefore(c,s)}this._attachButtonListeners(),((o=(a=(i=this.config.rolls)==null?void 0:i[0])==null?void 0:a.data)!=null&&o.situational||this.config.situational)&&setTimeout(()=>{this.rebuild()},100)}_attachButtonListeners(){this.element.querySelectorAll('[data-action="advantage"], [data-action="normal"], [data-action="disadvantage"]').forEach(e=>{e.addEventListener("click",s=>{s.currentTarget.dataset.action})})}_onChangeForm(t,e){var a,o;super._onChangeForm(t,e);const s=this.element.querySelector('input[name="crlngn-send-request"]');s&&(this.sendRequest=s.checked);const i=this.element.querySelector('input[name="dc"]');i&&i.value&&(this.dcValue=parseInt(i.value)||null),((a=e.target)==null?void 0:a.name)==="ability"&&((o=e.target)!=null&&o.value)&&(this.config.ability=e.target.value)}_buildConfig(t,e,s){const i=e==null?void 0:e.get("ability"),a=e==null?void 0:e.get("dc");i&&(t.ability=i,this.config.ability=i);const o=super._buildConfig(t,e,s);if(a){const l=parseInt(a);isNaN(l)||(o.options=o.options||{},o.options.target=l)}else this.dcValue!==void 0&&this.dcValue!==null&&(o.options=o.options||{},o.options.target=this.dcValue);return o}async _processSubmitData(t,e,s){if(await super._processSubmitData(t,e,s),s.has("dc")&&s.get("dc")!==""){const i=parseInt(s.get("dc"));if(!isNaN(i)&&(this.dcValue=i,this.config.rolls&&this.config.rolls.length>0))for(const a of this.config.rolls)a.options.target=i}this.sendRequest=s.get("crlngn-send-request")!=="false"}_finalizeRolls(t){const e=super._finalizeRolls(t);if(this.dcValue!==void 0&&this.dcValue!==null)for(const s of e)s.options.target=this.dcValue;return this.config.sendRequest=this.sendRequest,e}static async getConfiguration(t,e,s,i={}){var f,b,k,T,I,V,B,$,j;const a=["skill","tool"].includes(e),o=t[0];if(!o)return null;const l=CONFIG.Dice.D20Roll;let n=null;if(e==="skill"){const N=o.system.skills[s];n=(N==null?void 0:N.ability)||((f=CONFIG.DND5E.skills[s])==null?void 0:f.ability)||"int"}else if(e==="tool"){const N=(b=o.system.tools)==null?void 0:b[s];n=(N==null?void 0:N.ability)||((I=(T=(k=CONFIG.DND5E.enrichmentLookup)==null?void 0:k.tools)==null?void 0:T[s])==null?void 0:I.ability)||"int"}const c={data:o.getRollData(),subject:o,ability:n,chooseAbility:!0,rolls:[{parts:[],data:o.getRollData(),options:{}}]};e==="skill"?c.skill=s:e==="tool"&&(c.tool=s);const R={create:!1,data:{speaker:ChatMessage.getSpeaker({actor:o})}},h={options:{actors:t,sendRequest:t.some(N=>K._isPlayerOwned(N)),showDC:a,rollKey:s,rollType:l,window:{title:K._getRollTitle(e,s,o),subtitle:t.map(N=>N.name).join(", ")},...i}},d=new this(c,R,h.options),u=await new Promise(N=>{d.addEventListener("close",()=>{N({rolls:d.rolls,config:d.config,message:d.message,sendRequest:d.sendRequest})},{once:!0}),d.render({force:!0})});if(!u.rolls||u.rolls.length===0)return null;const g=u.rolls[0];let _=!1,m=!1;((V=g==null?void 0:g.options)==null?void 0:V.advantageMode)!==void 0&&(_=g.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE,m=g.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE);const C={chatMessage:!0,isRollRequest:u.sendRequest,skipDialog:i.skipDialogs||!1,sendRequest:u.sendRequest};_&&(C.advantage=!0),m&&(C.disadvantage=!0);const O=game.settings.get("core","rollMode");u.message.rollMode&&u.message.rollMode!==O&&(C.rollMode=u.message.rollMode);const p=((B=g==null?void 0:g.options)==null?void 0:B.situational)||(($=g==null?void 0:g.data)==null?void 0:$.situational)||"";return p&&(C.situational=p,C.parts=[p]),(j=g==null?void 0:g.options)!=null&&j.target&&(C.target=g.options.target),u.config.ability&&["skill","tool"].includes(e)&&(C.ability=u.config.ability),C.rollTitle=h.options.window.title,C}}class he{static initialize(){game.user.isGM&&this.registerHooks()}static registerHooks(){this._registerHook(M.PRE_ROLL_ABILITY_CHECK,this._handlePreRoll.bind(this,"ability")),this._registerHook(M.PRE_ROLL_SAVING_THROW,this._handlePreRoll.bind(this,"save")),this._registerHook(M.PRE_ROLL_SKILL_V2,this._handlePreRoll.bind(this,"skill")),this._registerHook(M.PRE_ROLL_TOOL_V2,this._handlePreRoll.bind(this,"tool")),this._registerHook(M.PRE_ROLL_ATTACK_V2,this._handlePreRoll.bind(this,"attack")),this._registerHook(M.PRE_ROLL_DAMAGE_V2,this._handlePreRoll.bind(this,"damage")),this._registerHook(M.PRE_ROLL_INITIATIVE,this._handlePreRoll.bind(this,"initiative")),this._registerHook(M.PRE_ROLL_DEATH_SAVE_V2,this._handlePreRoll.bind(this,"deathsave")),this._registerHook(M.PRE_ROLL_HIT_DIE_V2,this._handlePreRoll.bind(this,"hitDie"))}static _registerHook(t,e){const s=Hooks.on(t,e);this.registeredHooks.add({hookName:t,hookId:s})}static unregisterHooks(){for(const{hookName:t,hookId:e}of this.registeredHooks)Hooks.off(t,e);this.registeredHooks.clear()}static _handleGenericPreRoll(t,e){if(!game.user.isGM||t!=null&&t.isRollRequest)return;const s=t==null?void 0:t.subject,i=A();if(!L.get(i.rollInterceptionEnabled.tag)||!s||s.documentName!=="Actor")return;const o=this._getActorOwner(s);if(!o||o.id===game.user.id||!o.active)return;let l="unknown",n=null;return t!=null&&t.ability?(l=t.save?"save":"ability",n=t.ability):t!=null&&t.skill?(l="skill",n=t.skill):t!=null&&t.tool&&(l="tool",n=t.tool),n&&t&&(t={...t,ability:n}),this._sendRollRequest(s,o,l,t),!1}static _handlePreRoll(t,e,s,i){var c;if(!game.user.isGM)return;let a;if(t==="initiative"&&e instanceof Actor){if(a=e,s!=null&&s.isRollRequest||i!=null&&i.isRollRequest)return}else{if(e!=null&&e.isRollRequest||s!=null&&s.isRollRequest||i!=null&&i.isRollRequest)return;a=((c=e.subject)==null?void 0:c.actor)||e.subject||e.actor}const o=A();if(!L.get(o.rollInterceptionEnabled.tag)||!a||a.documentName!=="Actor")return;const n=this._getActorOwner(a);if(!(!n||n.id===game.user.id)&&n.active)return this._showGMConfigDialog(a,n,t,e,s,i),!1}static async _showGMConfigDialog(t,e,s,i,a,o){var l,n;try{const c=["skill","tool"].includes(s)?ge:K;let R={rolls:[{parts:[],data:{},options:{}}]};switch(s){case"ability":R.ability=i.ability||((l=i.subject)==null?void 0:l.ability);break;case"save":R.ability=i.ability||((n=i.subject)==null?void 0:n.ability),i.ability==="con"&&i.targetValue!==void 0&&(s="concentration");break;case"skill":R.skill=i.skill,R.ability=i.ability;break;case"tool":R.tool=i.tool,R.ability=i.ability;break;case"concentration":R.ability="con";break}const h={actors:[t],rollType:s,showDC:!0,defaultSendRequest:!0,skipDialogs:!1},u=await new c(R,{},h).render(!0);if(!u||!u.sendRequest){await this._executeLocalRoll(t,s,i,u||{});return}const g={...i,...u,requestedBy:game.user.name};this._sendRollRequest(t,e,s,g)}catch{this._sendRollRequest(t,e,s,i)}}static async _executeLocalRoll(t,e,s,i){const a={...s,advantage:i.advantage||s.advantage,disadvantage:i.disadvantage||s.disadvantage,bonus:i.situational||s.bonus,target:i.dc||s.target,rollMode:i.rollMode||s.rollMode,isRollRequest:!1},o={configure:!1,isRollRequest:!1},l={rollMode:a.rollMode,create:!0,isRollRequest:!1};try{switch(e){case"save":await t.rollSavingThrow(s.ability,a,o,l);break;case"ability":await t.rollAbilityCheck(s.ability,a,o,l);break;case"skill":await t.rollSkill(s.skill,a,o,l);break;case"tool":await t.rollToolCheck(s.tool,a,o,l);break;case"concentration":await t.rollConcentration(a,o,l);break}}catch{}}static async _showConfigurationDialog(t,e,s,i,a,o){try{const n={...i,_rollMethod:async d=>(this._sendRollRequest(t,e,s,d),new Roll("1d20").evaluate({async:!1})),configured:!1},c=a.cls,h=await new c(n,a.options).render(!0)}catch{this._sendRollRequest(t,e,s,i)}}static _getActorOwner(t){const e=t.ownership||{};for(const[s,i]of Object.entries(e))if(i>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const a=game.users.get(s);if(a&&!a.isGM)return a}return null}static _sendRollRequest(t,e,s,i){var h;const a=A(),o=L.get(a.skipDialogs.tag);let l=null,n=null;switch(s){case"ability":case"save":l=i.ability;break;case"skill":l=i.skill;break;case"tool":l=i.tool;break;case"attack":case"damage":if((h=i.subject)!=null&&h.item){l=i.subject.item.id;const d=ie.findActivityForRoll(i.subject.item,s);d&&(n=d.id)}break;case"hitDie":l=i.denomination;break}const c={advantage:i.advantage||!1,disadvantage:i.disadvantage||!1,situational:i.situational||0,parts:i.parts||[],rollMode:i.rollMode||game.settings.get("core","rollMode"),elvenAccuracy:i.elvenAccuracy||!1,halflingLucky:i.halflingLucky||!1,reliableTalent:i.reliableTalent||!1,minimum:i.minimum,maximize:i.maximize,critical:i.critical,fumble:i.fumble,targetValue:i.targetValue,fastForward:i.fastForward||!1,chatMessage:i.chatMessage!==!1,flavor:i.flavor,title:i.title,dialogOptions:i.dialogOptions,messageData:i.messageData};Object.keys(c).forEach(d=>{c[d]===void 0&&delete c[d]});const R={type:"rollRequest",requestId:foundry.utils.randomID(),actorId:t.id,rollType:s,rollKey:l,activityId:n,config:c,skipDialog:o,targetTokenIds:Array.from(game.user.targets).map(d=>d.id),preserveTargets:L.get(a.useGMTargetTokens.tag)};F.execForUser("handleRollRequest",e.id,R),ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestSent",{player:e.name,actor:t.name}))}}S(he,"registeredHooks",new Set);function fe(r,t){var s,i,a,o,l;let e=game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${r}`)||r;if(t)switch(r){case y.SKILL:e+=` (${((s=CONFIG.DND5E.skills[t])==null?void 0:s.label)||t})`;break;case y.SAVE:e+=` (${((i=CONFIG.DND5E.abilities[t])==null?void 0:i.label)||t})`;break;case y.ABILITY:e+=` (${((a=CONFIG.DND5E.abilities[t])==null?void 0:a.label)||t})`;break;case y.TOOL:const n=(l=(o=CONFIG.DND5E.enrichmentLookup)==null?void 0:o.tools)==null?void 0:l[t];if(n!=null&&n.id){const c=dnd5e.documents.Trait.getBaseItem(n.id,{indexOnly:!0});e+=` (${(c==null?void 0:c.name)||t})`}else e+=` (${t})`;break;case y.CUSTOM:e=`${e}: ${t}`;break}return e}function ke(r,t=fe){if(r.length===0)return;const e={};for(const i of r){const a=`${i.rollType}_${i.rollKey||""}`;e[a]||(e[a]={rollType:i.rollType,rollKey:i.rollKey,actors:[],gm:i.gm}),e[a].actors.push(i.actor)}const s=Object.values(e);if(s.length===1&&s[0].actors.length===1){const i=s[0];ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestReceived",{gm:i.gm,rollType:t(i.rollType,i.rollKey)}))}else{const i=[];for(const a of s){const o=t(a.rollType,a.rollKey),l=a.actors.join(", ");i.push(`${o} (${l})`)}ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsReceivedMultiple",{gm:s[0].gm,requests:i.join("; ")}))}}function _e(r,t=game.user){if(!(r!=null&&r.length))return;r.map(s=>canvas.tokens.get(s)).filter(s=>s).forEach(s=>s.setTarget(!0,{user:t}))}function Ee(){var r;return!((r=ui==null?void 0:ui.sidebar)!=null&&r._collapsed)}function Le(r){const t=document.querySelector("body");r?t.classList.add("sidebar-expanded"):t.classList.remove("sidebar-expanded")}var G;const Z=class Z extends foundry.applications.api.HandlebarsApplicationMixin(foundry.applications.api.ApplicationV2){constructor(e={}){super(e);S(this,"_onClickOutside",e=>{if(this.isLocked)return;const s=this.element;s&&(e.target.closest(".roll-requests-menu")||s.contains(e.target)||e.target.closest("#crlngn-requests-icon")||e.target.closest(".dialog, .app, .notification")||this.close())});this.selectedActors=new Set,this.currentTab="pc",this.selectedRequestType=null,this.isLocked=!1,this.optionsExpanded=game.user.getFlag(z.ID,"menuOptionsExpanded")??!1,this._initializeFromSelectedTokens()}async _prepareContext(e){var _;const s=await super._prepareContext(e),i=game.actors.contents,a=[],o=[],l=game.scenes.active;for(const m of i){if(m.type!=="character"&&m.type!=="npc")continue;const C={id:m.id,uuid:m.uuid,name:m.name,img:m.img,selected:this.selectedActors.has(m.id),crlngnStats:this._getActorStats(m)};Object.entries(m.ownership).some(([p,f])=>{const b=game.users.get(p);return b&&!b.isGM&&f>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})?a.push(C):l&&l.tokens.some(f=>f.actorId===m.id)&&o.push(C)}const n=A(),c=L.get(n.rollRequestsEnabled.tag),R=L.get(n.skipDialogs.tag),h=this.currentTab==="pc"?a:o,d=h.length>0&&h.every(m=>this.selectedActors.has(m.id)),u=[];if(this.selectedActors.size>0)for(const[m,C]of Object.entries(z.ROLL_REQUEST_OPTIONS))u.push({id:m,name:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${C.name}`)||C.label,rollable:C.subList==null,hasSubList:!!C.subList,selected:this.selectedRequestType===m});const g=[];if(this.selectedRequestType&&this.selectedActors.size>0){const m=z.ROLL_REQUEST_OPTIONS[this.selectedRequestType];if(m&&m.subList){const C=Array.from(this.selectedActors)[0],O=game.actors.get(C);if(m.subList==="tools"){const p=((_=CONFIG.DND5E.enrichmentLookup)==null?void 0:_.tools)||CONFIG.DND5E.tools||{};for(const[f,b]of Object.entries(p)){let k=f;if(b!=null&&b.id){const T=dnd5e.documents.Trait.getBaseItem(b.id,{indexOnly:!0});k=(T==null?void 0:T.name)||f}else k=f.replace(/([A-Z])/g," $1").replace(/^./,T=>T.toUpperCase()).trim();g.push({id:f,name:k,rollable:!0})}g.sort((f,b)=>f.name.localeCompare(b.name))}else if(O&&m.actorPath){const p=foundry.utils.getProperty(O,m.actorPath)||{},f=CONFIG.DND5E[m.subList];for(const[b,k]of Object.entries(p)){let T="";m.subList==="skills"&&(f!=null&&f[b])||m.subList==="abilities"&&(f!=null&&f[b])?T=f[b].label:T=k.label||game.i18n.localize(k.name||b)||b,g.push({id:b,name:T,rollable:!0})}m.subList==="skills"&&g.sort((b,k)=>b.name.localeCompare(k.name))}}}return{...s,actors:h,currentTab:this.currentTab,isPCTab:this.currentTab==="pc",isNPCTab:this.currentTab==="npc",selectedTab:this.currentTab,rollRequestsEnabled:c,skipDialogs:R,selectAllOn:d,hasSelectedActors:this.selectedActors.size>0,requestTypes:u,rollTypes:g,showNames:!0,actorsLocked:this.isLocked,optionsExpanded:this.optionsExpanded}}_getActorStats(e){var a,o,l,n,c;const s=e.system,i=[];return(a=s.attributes)!=null&&a.hp&&i.push({abbrev:"HP",value:s.attributes.hp.value}),(o=s.attributes)!=null&&o.ac&&i.push({abbrev:"AC",value:s.attributes.ac.value}),(l=s.attributes)!=null&&l.spelldc&&i.push({abbrev:"DC",value:s.attributes.spelldc}),(c=(n=s.skills)==null?void 0:n.prc)!=null&&c.passive&&i.push({abbrev:"PP",value:s.skills.prc.passive}),i}_onRender(e,s){if(super._onRender(e,s),this._attachListeners(),this.optionsExpanded){const i=this.element.querySelector(".options-toggle"),a=this.element.querySelector("li.options");i&&i.classList.add("expanded"),a&&a.classList.add("expanded")}setTimeout(()=>{document.addEventListener("click",this._onClickOutside,!0)},100),this._tokenControlHook=Hooks.on("controlToken",this._onTokenControlChange.bind(this))}_onTokenControlChange(e,s){this.rendered&&(this._ignoreTokenControl||(this._tokenUpdateTimeout&&clearTimeout(this._tokenUpdateTimeout),this._tokenUpdateTimeout=setTimeout(()=>{this._initializeFromSelectedTokens(),this.render(),this._tokenUpdateTimeout=null},100)))}_attachListeners(){var o,l,n,c,R;const e=this.element;(o=e.querySelector("#crlngn-requests-toggle"))==null||o.addEventListener("change",this._onToggleRollRequests.bind(this)),(l=e.querySelector("#crlngn-skip-dialogs"))==null||l.addEventListener("change",this._onToggleSkipDialogs.bind(this)),(n=e.querySelector("#crlngn-actors-all"))==null||n.addEventListener("change",this._onToggleSelectAll.bind(this)),(c=e.querySelector("#crlngn-actors-lock"))==null||c.addEventListener("click",this._onToggleLock.bind(this)),(R=e.querySelector(".options-toggle"))==null||R.addEventListener("click",this._onToggleOptions.bind(this)),e.querySelectorAll(".actor-tab").forEach(h=>{h.addEventListener("click",this._onTabClick.bind(this))}),e.querySelectorAll(".actor").forEach(h=>{h.addEventListener("click",this._onActorClick.bind(this))}),e.querySelectorAll(".actor-select").forEach(h=>{h.addEventListener("click",this._onActorSelectClick.bind(this))});const i=e.querySelector(".request-types");i&&i.addEventListener("click",h=>{const d=h.target.closest("li");if(d&&d.dataset.id){const u={...h,currentTarget:d};this._onRequestTypeClick(u)}});const a=e.querySelector(".roll-types");a&&a.addEventListener("click",h=>{const d=h.target.closest("li");if(d&&d.dataset.id){const u={...h,currentTarget:d};this._onRollTypeClick(u)}})}async _onToggleRollRequests(e){const s=A(),i=e.target.checked;await L.set(s.rollRequestsEnabled.tag,i),pe.updateRollRequestsIcon(i)}async _onToggleSkipDialogs(e){const s=A(),i=e.target.checked;await L.set(s.skipDialogs.tag,i)}_onToggleSelectAll(e){const s=e.target.checked;this._ignoreTokenControl=!0,(this.currentTab==="pc"?game.actors.contents.filter(a=>this._isPlayerOwned(a)):game.actors.contents.filter(a=>!this._isPlayerOwned(a)&&this._hasTokenInScene(a))).forEach(a=>{s?(this.selectedActors.add(a.id),this._updateCanvasTokenSelection(a.id,!0)):(this.selectedActors.delete(a.id),this._updateCanvasTokenSelection(a.id,!1))}),setTimeout(()=>{this._ignoreTokenControl=!1},200),this.render(),this._updateRequestTypesVisibility()}_onToggleLock(e){e.preventDefault(),this.isLocked=!this.isLocked;const s=e.currentTarget;s.classList.remove("fa-lock-keyhole","fa-lock-keyhole-open"),s.classList.add(this.isLocked?"fa-lock-keyhole":"fa-lock-keyhole-open")}async _onToggleOptions(e){e.preventDefault(),this.optionsExpanded=!this.optionsExpanded,await game.user.setFlag(z.ID,"menuOptionsExpanded",this.optionsExpanded);const s=e.currentTarget||e.target.closest(".options-toggle");s&&s.classList.toggle("expanded",this.optionsExpanded);const i=this.element.querySelector("li.options");i&&i.classList.toggle("expanded",this.optionsExpanded)}_initializeFromSelectedTokens(){var s;const e=((s=canvas.tokens)==null?void 0:s.controlled)||[];this.selectedActors.clear();for(const i of e)if(i.actor&&(this.selectedActors.add(i.actor.id),this.selectedActors.size===1)){const a=this._isPlayerOwned(i.actor);this.currentTab=a?"pc":"npc"}}_isPlayerOwned(e){return e.type!=="character"&&e.type!=="npc"?!1:Object.entries(e.ownership).some(([s,i])=>{const a=game.users.get(s);return a&&!a.isGM&&i>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})}_hasTokenInScene(e){if(e.type!=="character"&&e.type!=="npc")return!1;const s=game.scenes.active;return s&&s.tokens.some(i=>i.actorId===e.id)}async _onTabClick(e){var i;const s=e.currentTarget.dataset.tab;s!==this.currentTab&&(this.selectedActors.clear(),(i=canvas.tokens)==null||i.releaseAll(),this.selectedRequestType=null,this.currentTab=s,await this.render())}_onActorClick(e){if(e.target.closest(".actor-select"))return;const i=e.currentTarget.dataset.id;this._toggleActorSelection(i)}_onActorSelectClick(e){e.stopPropagation();const s=e.currentTarget.dataset.id;this._toggleActorSelection(s)}_toggleActorSelection(e){this._ignoreTokenControl=!0,this.selectedActors.has(e)?(this.selectedActors.delete(e),this._updateCanvasTokenSelection(e,!1)):(this.selectedActors.add(e),this._updateCanvasTokenSelection(e,!0)),setTimeout(()=>{this._ignoreTokenControl=!1},100),this.render(),this._updateRequestTypesVisibility(),this._updateSelectAllState()}_updateCanvasTokenSelection(e,s){if(!game.scenes.active)return;const a=canvas.tokens.placeables.filter(o=>{var l;return((l=o.actor)==null?void 0:l.id)===e});for(const o of a)s?o.control({releaseOthers:!1}):o.release()}_updateRequestTypesVisibility(){this.render()}_updateSelectAllState(){const e=this.element.querySelector("#crlngn-actors-all"),s=this.currentTab==="pc"?"pc":"npc",i=this.element.querySelectorAll(`.${s}-actors .actor-item input[type="checkbox"]`),a=Array.from(i).filter(o=>o.checked).length;e.checked=a>0&&a===i.length,e.indeterminate=a>0&&a<i.length}async _onRequestTypeClick(e){const i=e.currentTarget.dataset.id,a=z.ROLL_REQUEST_OPTIONS[i];if(!a){X.error("Unknown request type:",i);return}this.selectedRequestType===i?this.selectedRequestType=null:this.selectedRequestType=i,a.subList?await this.render():this.selectedRequestType&&this._triggerRoll(i,null)}_onRollTypeClick(e){const s=e.currentTarget.dataset.id;this._triggerRoll(this.selectedRequestType,s)}async _triggerRoll(e,s){var O;const i=A(),a=Array.from(this.selectedActors),o=L.get(i.skipDialogs.tag),l=a.filter(p=>{const f=game.actors.get(p);if(!f)return!1;const b=this._isPlayerOwned(f),k=!b&&this._hasTokenInScene(f);return this.currentTab==="pc"&&b||this.currentTab==="npc"&&k}),n=z.ROLL_REQUEST_OPTIONS[e],c=(n==null?void 0:n.name)||e;if(c==="custom"){const p=await this._showCustomRollDialog();if(!p)return;s=p}if(c==="initiativeDialog"&&!game.combat)if(await Dialog.confirm({title:game.i18n.localize("COMBAT.Create"),content:"<p>"+game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.noCombatActive")+"</p>",yes:()=>!0,no:()=>!1,defaultYes:!0,options:{classes:["crlngn-rolls-dialog"]}}))await(await game.combats.documentClass.create({scene:game.scenes.active.id})).activate(),ui.notifications.info(game.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.combatCreated"));else return;let R=l;if(c==="initiativeDialog"&&game.combat){const p=l.map(k=>game.actors.get(k)).filter(k=>k),f=[],b=new Set;for(const k of p){const T=game.combat.getCombatantByActor(k.id);T&&T.initiative!==null&&(f.push(k.name),b.add(k.id))}if(f.length>0){if(await Dialog.confirm({title:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.rerollInitiativeTitle"),content:"<p>"+game.i18n.format("CRLNGN_ROLLS.ui.dialogs.rerollInitiative",{actors:f.join(", ")})+"</p>",yes:()=>!0,no:()=>!1,defaultYes:!1,options:{classes:["crlngn-rolls-dialog"]}}))for(const T of b){const I=game.combat.getCombatantByActor(T);I&&await I.update({initiative:null})}else if(R=l.filter(T=>!b.has(T)),R.length===0){ui.notifications.info(game.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.allActorsHaveInitiative"));return}}}let h=R.map(p=>game.actors.get(p)).filter(p=>p);if(c==="deathSave"){const p=[],f=[];for(const b of h){const k=((O=b.system.attributes.hp)==null?void 0:O.value)||0,T=b.system.attributes.death||{},I=T.success||0,V=T.failure||0;k<=0&&I<3&&V<3?p.push(b):f.push(b.name)}f.length>0&&ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.actorsSkippingDeathSave",{actors:f.join(", ")})),h=p}if(!h.length){ui.notifications.warn("No valid actors selected");return}const d=[],u=[];for(const p of h){const f=this._getActorOwner(p);f?d.push({actor:p,owner:f}):u.push(p)}const g=L.get(i.rollRequestsEnabled.tag);let _=null;if(o)_={advantage:!1,disadvantage:!1,situational:"",parts:[],rollMode:game.settings.get("core","rollMode"),chatMessage:!0,isRollRequest:!1,skipDialog:!0,sendRequest:g&&d.length>0},c==="deathSave"&&(_.target=10);else if(_=await(["skill","tool"].includes(c)?ge:K).getConfiguration(h,c,s,{skipDialogs:o,defaultSendRequest:g}),!_)return;const m=[],C=[];if(_.sendRequest){for(const{actor:p,owner:f}of d){if(!f.active){L.get(i.showOfflineNotifications.tag)&&ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.playerOffline",{player:f.name})),C.push(p);continue}this._sendRollRequestToPlayer(p,f,c,s,_,!0),m.push({actor:p,owner:f}),await new Promise(b=>setTimeout(b,100))}m.length>0&&this._sendConsolidatedNotification(m,c,s)}else u.push(...d.map(({actor:p})=>p));if(C.length>0){const p={..._,skipDialog:!0};await this._handleNPCRolls(C,c,s,p)}if(u.length>0){const p={..._};p.fastForward=!0,p.skipDialog=!0,await this._handleNPCRolls(u,c,s,p)}setTimeout(()=>this.close(),500)}_getActorOwner(e){const s=e.ownership||{};for(const[i,a]of Object.entries(s))if(a>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const o=game.users.get(i);if(o&&!o.isGM)return o}return null}_sendRollRequestToPlayer(e,s,i,a,o,l=!1){const n=A(),R={abilityCheck:"ability",savingThrow:"save",skill:"skill",tool:"tool",concentration:"concentration",initiativeDialog:"initiative",deathSave:"deathsave",custom:"custom"}[i]||i,h={type:"rollRequest",requestId:foundry.utils.randomID(),actorId:e.id,rollType:R,rollKey:a,activityId:null,config:{rollMode:o.rollMode||game.settings.get("core","rollMode"),advantage:o.advantage||!1,disadvantage:o.disadvantage||!1,situational:o.situational||"",parts:o.parts||[],chatMessage:o.chatMessage!==!1,target:o.target,ability:o.ability,attackMode:o.attackMode,rollTitle:o.rollTitle},skipDialog:o.skipDialog||!1,targetTokenIds:Array.from(game.user.targets).map(d=>d.id),preserveTargets:L.get(n.useGMTargetTokens.tag)};F.execForUser("handleRollRequest",s.id,h),l||ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestSent",{player:s.name,actor:e.name}))}_sendConsolidatedNotification(e,s,i){var n,c,R,h,d;const a={};for(const{actor:u,owner:g}of e)a[g.id]||(a[g.id]={player:g,actors:[]}),a[g.id].actors.push(u);for(const[u,g]of Object.entries(z.ROLL_REQUEST_OPTIONS))if(g.name===s)break;const o=s;let l=game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${o}`)||o;if(i)if(o==="skill")l=`${l} (${((n=CONFIG.DND5E.skills[i])==null?void 0:n.label)||i})`;else if(o==="savingThrow")l=`${l} (${((c=CONFIG.DND5E.abilities[i])==null?void 0:c.label)||i})`;else if(o==="abilityCheck")l=`${l} (${((R=CONFIG.DND5E.abilities[i])==null?void 0:R.label)||i})`;else if(o==="tool"){const u=(d=(h=CONFIG.DND5E.enrichmentLookup)==null?void 0:h.tools)==null?void 0:d[i];if(u!=null&&u.id){const g=dnd5e.documents.Trait.getBaseItem(u.id,{indexOnly:!0});l=`${l} (${(g==null?void 0:g.name)||i})`}else l=`${l} (${i})`}else o==="custom"&&(l=`${l}: ${i}`);if(Object.keys(a).length===1){const u=Object.values(a)[0],g=u.actors.map(_=>_.name).join(", ");ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsSentSingle",{rollType:l,actors:g,player:u.player.name}))}else{const u=Object.values(a).map(g=>{const _=g.actors.map(m=>m.name).join(", ");return`${g.player.name} (${_})`});ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsSentMultiple",{rollType:l,count:e.length,players:u.join("; ")}))}}async _handleNPCRolls(e,s,i,a){const o={advantage:a.advantage||!1,disadvantage:a.disadvantage||!1,situational:a.situational||"",parts:a.parts||[],rollMode:a.rollMode||game.settings.get("core","rollMode"),fastForward:a.skipDialog||!1,chatMessage:a.chatMessage!==!1,isRollRequest:a.isRollRequest||!1,target:a.target,ability:a.ability,attackMode:a.attackMode};for(const l of e)await this._executeActorRoll(l,s,i,o),await new Promise(n=>setTimeout(n,100))}async _executeActorRoll(e,s,i,a){var o,l,n,c,R;try{switch(s.toLowerCase()){case"abilitycheck":const d={ability:i,advantage:a.advantage,disadvantage:a.disadvantage,target:a.target,isRollRequest:a.isRollRequest},u={configure:!a.fastForward},g={rollMode:a.rollMode,create:a.chatMessage!==!1};a.situational&&(d.rolls=[{parts:[],data:{situational:a.situational},options:{},situational:a.situational}]),await e.rollAbilityCheck(d,u,g);break;case"savingthrow":const _={ability:i,advantage:a.advantage,disadvantage:a.disadvantage,target:a.target,isRollRequest:a.isRollRequest},m={configure:!a.fastForward},C={rollMode:a.rollMode,create:a.chatMessage!==!1};a.situational&&(_.rolls=[{parts:[],data:{situational:a.situational},options:{},situational:a.situational}]),await e.rollSavingThrow(_,m,C);break;case"skill":const O={skill:i,advantage:a.advantage,disadvantage:a.disadvantage,ability:a.ability,chooseAbility:!a.ability},p={configure:!a.fastForward},f={rollMode:a.rollMode,create:a.chatMessage!==!1,data:{}};if(a.rollTitle)f.data.flavor=a.rollTitle;else if(a.ability){const v=((o=CONFIG.DND5E.skills[i])==null?void 0:o.label)||i,w=((l=CONFIG.DND5E.abilities[a.ability])==null?void 0:l.label)||a.ability;f.data.flavor=game.i18n.format("DND5E.SkillPromptTitle",{skill:v,ability:w})}a.situational&&(O.bonus=a.situational),a.target&&(O.target=a.target),await e.rollSkill(O,p,f);break;case"tool":const b={tool:i,advantage:a.advantage,disadvantage:a.disadvantage,ability:a.ability,chooseAbility:!a.ability},k={configure:!a.fastForward},T={rollMode:a.rollMode,create:a.chatMessage!==!1,data:{}};if(a.rollTitle)T.data.flavor=a.rollTitle;else if(a.ability){let v=i;const w=(c=(n=CONFIG.DND5E.enrichmentLookup)==null?void 0:n.tools)==null?void 0:c[i];if(w!=null&&w.id){const ae=dnd5e.documents.Trait.getBaseItem(w.id,{indexOnly:!0});v=(ae==null?void 0:ae.name)||i}const be=((R=CONFIG.DND5E.abilities[a.ability])==null?void 0:R.label)||a.ability;T.data.flavor=`${be} (${v}) ${game.i18n.localize("DND5E.Check")}`}a.situational&&(b.bonus=a.situational),a.target&&(b.target=a.target),await e.rollToolCheck(b,k,T);break;case"concentration":const I={configure:!a.fastForward&&!a.skipDialog},V={rollMode:a.rollMode,create:a.chatMessage!==!1};await e.rollConcentration(a,I,V);break;case"initiativedialog":if(!game.combat){ui.notifications.warn(game.i18n.localize("COMBAT.NoneActive"));break}const B={configure:!a.fastForward&&!a.skipDialog},$={rollMode:a.rollMode,create:a.chatMessage!==!1};if(!await e.rollInitiativeDialog(a,B,$)){let v=game.combat.getCombatantByActor(e.id);if(!v){const w=e.getActiveTokens();w.length&&(await game.combat.createEmbeddedDocuments("Combatant",[{tokenId:w[0].id,actorId:e.id}]),v=game.combat.getCombatantByActor(e.id))}if(v){const w=v.getInitiativeRoll();await w.evaluate({async:!0}),await v.update({initiative:w.total}),await w.toMessage({speaker:ChatMessage.getSpeaker({actor:e}),flavor:game.i18n.localize("DND5E.Initiative")})}}break;case"deathsave":const N={configure:!a.fastForward&&!a.skipDialog},te={rollMode:a.rollMode,create:a.chatMessage!==!1},H=await e.rollDeathSave(a,N,te);break;case"custom":try{const v=new Roll(i,e.getRollData());await v.evaluate({async:!0}),await v.toMessage({speaker:ChatMessage.getSpeaker({actor:e}),flavor:game.i18n.localize("CRLNGN_ROLLS.rollTypes.custom")})}catch{ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:i}))}break;default:ui.notifications.warn(`Unknown roll type: ${s}`);break}}catch{ui.notifications.error(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:e.name}))}}async _onClose(e){await super._onClose(e),this.selectedActors.clear(),this.selectedRequestType=null,document.removeEventListener("click",this._onClickOutside,!0),this._tokenControlHook&&(Hooks.off("controlToken",this._tokenControlHook),this._tokenControlHook=null),this._tokenUpdateTimeout&&(clearTimeout(this._tokenUpdateTimeout),this._tokenUpdateTimeout=null)}setPosition(e={}){return this}async _showCustomRollDialog(){return new Promise(async e=>{const s=await renderTemplate(`modules/${z.ID}/templates/custom-roll-dialog.hbs`,{formula:"",readonly:!1});new Dialog({title:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.customRollTitle"),content:s,buttons:{roll:{icon:'<i class="fas fa-dice-d20"></i>',label:game.i18n.localize("Roll"),callback:a=>{const l=(a[0]||a).querySelector("#custom-roll-formula").value.trim();e(l||null)}},cancel:{icon:'<i class="fas fa-times"></i>',label:game.i18n.localize("Cancel"),callback:()=>e(null)}},default:"roll",render:a=>{const o=a[0]||a,l=o.querySelector("#custom-roll-formula"),n={};o.querySelectorAll(".dice-button").forEach(c=>{c.addEventListener("click",R=>{const h=R.currentTarget.dataset.die;n[h]=(n[h]||0)+1;const d=[];for(const[u,g]of Object.entries(n))g>0&&d.push(`${g}${u}`);l.value=d.join(" + ")})})}},{classes:["crlngn-rolls-dialog","crlngn-custom-roll-dialog"]}).render(!0)})}static toggle(){x(this,G)?x(this,G).rendered?x(this,G).close():(x(this,G)._initializeFromSelectedTokens(),x(this,G).render(!0)):(de(this,G,new Z),x(this,G).render(!0))}};G=new WeakMap,ue(Z,G,null),S(Z,"DEFAULT_OPTIONS",{id:"crlngn-requests-menu",classes:["roll-requests-menu"],tag:"div",window:{frame:!1,resizable:!1,minimizable:!1},position:null}),S(Z,"PARTS",{main:{template:`modules/${z.ID}/templates/requests-menus.hbs`}});let le=Z;class pe{static addSidebarControls(t,e,s){if(!game.user.isGM||t.id!=="chat")return;const a=(e[0]||e).querySelector("#chat-controls");if(!a||a.querySelector(".roll-requests-icon"))return;const o=A(),l=L.get(o.rollRequestsEnabled.tag),n=document.createElement("a");n.id="crlngn-requests-icon",n.setAttribute("data-tooltip-direction","RIGHT"),n.className=`chat-control-icon roll-requests-icon${l?" active":""}`,n.title=game.i18n.localize("CRLNGN_ROLLS.ui.menus.rollRequestsTitle"),n.innerHTML=`<i class="fas fa-bolt${l?"":"-slash"}"></i>`;const c=a.querySelector(".chat-control-icon");c?c.parentNode.insertBefore(n,c):a.insertBefore(n,a.firstChild),n.addEventListener("click",()=>{le.toggle()})}static updateRollRequestsIcon(t){const e=document.querySelector("#crlngn-requests-icon i");e&&(e.className=`fas fa-bolt${t?"":"-slash"}`)}}class me{static initialize(){Hooks.once(Y.INIT,this._onInit.bind(this)),Hooks.once(Y.READY,this._onReady.bind(this))}static _onInit(){A(),document.body.classList.add("crlngn-rolls"),L.registerSettings(),U.initialize(),this._registerHook(Y.RENDER_SIDEBAR_TAB,this._onRenderSidebarTab.bind(this))}static _onReady(){const t=A();L.get(t.debugMode.tag)&&(CONFIG.debug.hooks=!0),he.initialize(),this._registerDnd5eHooks(),game.user.isGM?this._registerGMHooks():U.getDiceConfig(),Le(Ee())}static _registerDnd5eHooks(){this._registerHook(M.POST_ROLL_CONFIG,this._onPostRollConfig.bind(this)),this._registerHook(Y.PRE_CREATE_CHAT_MESSAGE,this._onPreCreateChatMessage.bind(this)),this._registerHook(Y.PRE_CREATE_CHAT_MESSAGE,this._onPreCreateChatMessageFlavor.bind(this)),this._registerHook(M.RENDER_ROLL_CONFIGURATION_DIALOG,this._onRenderRollConfigDialog.bind(this))}static _registerGMHooks(){this._registerHook(Y.USER_CONNECTED,this._onUserConnected.bind(this)),game.users.forEach(t=>{this._onUserConnected(t)})}static _onPostRollConfig(t,e,s,i){e._showRequestedBy&&t.length>0&&(i.data=i.data||{},i.data._showRequestedBy=!0,i.data._requestedBy=e._requestedBy)}static _onPreCreateChatMessage(t,e,s,i){var a;if(e._showRequestedBy&&((a=e.rolls)==null?void 0:a.length)>0){const o=e._requestedBy||"GM",l=game.i18n.format("CRLNGN_ROLL_REQUESTS.chat.requestedBy",{gm:o}),n=e.flavor||"";e.flavor=n?`${n} ${l}`:l}}static _onPreCreateChatMessageFlavor(t,e,s,i){var a,o;if(((a=e.rolls)==null?void 0:a.length)>0&&e.rolls[0])try{const l=e.rolls[0];(o=l.options)!=null&&o._customFlavor&&(e.flavor=l.options._customFlavor)}catch{}}static _onRenderRollConfigDialog(t,e,s){if(t._situationalTriggered)return;const i=e.querySelectorAll('input[name*="situational"]');let a=!1;i.forEach(o=>{o.value&&!a&&(t._situationalTriggered=!0,a=!0,setTimeout(()=>{var l,n,c;o.dispatchEvent(new Event("change",{bubbles:!0,cancelable:!1})),(c=(n=(l=t.config)==null?void 0:l.rolls)==null?void 0:n[0])!=null&&c.data&&delete t.config.rolls[0].data.situational},50))})}static _onUserConnected(t){t.active&&t.id!==game.user.id&&U.requestDiceConfigFromUser(t.id)}static _onRenderSidebarTab(t,e,s){pe.addSidebarControls(t,e,s)}static _registerHook(t,e){const s=Hooks.on(t,e);return this.registeredHooks.set(`${t}_${s}`,s),s}static unregisterAll(){this.registeredHooks.forEach((t,e)=>{const s=e.split("_")[0];Hooks.off(s,t)}),this.registeredHooks.clear()}static isRegistered(t){for(const e of this.registeredHooks.keys())if(e.startsWith(`${t}_`))return!0;return!1}}S(me,"registeredHooks",new Map);const q={addSituationalBonus(r,t){return t&&(r.rolls=[{parts:[],data:{situational:t},options:{},situational:t}]),r},buildAbilityConfig(r,t){return{ability:r.rollKey,advantage:r.config.advantage||!1,disadvantage:r.config.disadvantage||!1,target:r.config.target,isRollRequest:!0,_showRequestedBy:!0,_requestedBy:r.config.requestedBy||"GM"}},async executeActivityRoll(r,t,e,s,i,a){e.rollKey&&await ie.executeActivityRoll(r,t,e.rollKey,e.activityId,{...s,dialog:i,message:a})},async handleCustomRoll(r,t){const e=t.rollKey,s=await renderTemplate(`modules/${P}/templates/custom-roll-dialog.hbs`,{formula:e,readonly:!0});new Dialog({title:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.customRollTitle"),content:s,buttons:{roll:{icon:'<i class="fas fa-dice-d20"></i>',label:game.i18n.localize("Roll"),callback:async()=>{try{const a=new Roll(e,r.getRollData());await a.evaluate({async:!0}),await a.toMessage({speaker:ChatMessage.getSpeaker({actor:r}),flavor:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${y.CUSTOM}`)})}catch{ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:e}))}}},cancel:{icon:'<i class="fas fa-times"></i>',label:game.i18n.localize("Cancel")}},default:"roll"},{classes:["crlngn-rolls-dialog","crlngn-custom-roll-dialog"]}).render(!0)}},Se={[y.ABILITY]:async(r,t,e,s,i)=>{const a=q.buildAbilityConfig(t,e);q.addSituationalBonus(a,t.config.situational),await r.rollAbilityCheck(a,s,i)},[y.SAVE]:async(r,t,e,s,i)=>{const a=q.buildAbilityConfig(t,e);q.addSituationalBonus(a,t.config.situational),await r.rollSavingThrow(a,s,i)},[y.SKILL]:async(r,t,e,s,i)=>{const a={...e,skill:t.rollKey,chooseAbility:!0};t.config.ability&&(a.ability=t.config.ability),await r.rollSkill(a,s,i)},[y.TOOL]:async(r,t,e,s,i)=>{const a={...e,tool:t.rollKey,chooseAbility:!0};t.config.ability&&(a.ability=t.config.ability),await r.rollToolCheck(a,s,i)},[y.CONCENTRATION]:async(r,t,e,s,i)=>{q.addSituationalBonus(e,t.config.situational),await r.rollConcentration(e,s,i)},[y.ATTACK]:async(r,t,e,s,i)=>{await q.executeActivityRoll(r,y.ATTACK,t,e,s,i)},[y.DAMAGE]:async(r,t,e,s,i)=>{await q.executeActivityRoll(r,y.DAMAGE,t,e,s,i)},[y.ITEM_SAVE]:async(r,t,e,s,i)=>{await q.executeActivityRoll(r,y.ITEM_SAVE,t,e,s,i)},[y.INITIATIVE]:async(r,t,e,s,i)=>{if(!game.combat){ui.notifications.warn(game.i18n.localize("COMBAT.NoneActive"));return}q.addSituationalBonus(e,t.config.situational),await r.rollInitiativeDialog(e,s,i)},[y.DEATH_SAVE]:async(r,t,e,s,i)=>{await r.rollDeathSave(e,s,i)},[y.HIT_DIE]:async(r,t,e,s,i)=>{e.denomination=t.rollKey,await r.rollHitDie(e,s,i)},[y.CUSTOM]:async(r,t,e,s,i)=>{await q.handleCustomRoll(r,t)}},D=class D{static async handleRequest(t){var s;if(game.user.isGM)return;const e=game.actors.get(t.actorId);e&&e.isOwner&&(t.preserveTargets&&((s=t.targetTokenIds)==null?void 0:s.length)>0&&game.user.targets.size===0&&_e(t.targetTokenIds),D.pendingNotifications.push({actor:e.name,rollType:t.rollType,rollKey:t.rollKey,gm:t.config.requestedBy||"GM"}),D.notificationTimer&&clearTimeout(D.notificationTimer),D.notificationTimer=setTimeout(()=>{ke(D.pendingNotifications),D.pendingNotifications=[],D.notificationTimer=null},D.NOTIFICATION_BATCH_DELAY),D.executeRequest(e,t))}static async executeRequest(t,e){try{const s={advantage:e.config.advantage||!1,disadvantage:e.config.disadvantage||!1,isRollRequest:!0,target:e.config.target,_showRequestedBy:!0,_requestedBy:e.config.requestedBy||"GM"};e.config.situational&&(s.bonus=e.config.situational),e.config.ability&&[y.SKILL,y.TOOL].includes(e.rollType)&&(s.ability=e.config.ability);const i={configure:!e.skipDialog,options:{defaultButton:e.config.advantage?"advantage":e.config.disadvantage?"disadvantage":"normal",window:{title:e.config.rollTitle||fe(e.rollType,e.rollKey),subtitle:t.name}}},a={rollMode:e.config.rollMode||game.settings.get("core","rollMode"),create:e.config.chatMessage!==!1},o=Se[e.rollType];o?await o(t,e,s,i,a):(X.warn(`No handler found for roll type: ${e.rollType}`),ui.notifications.warn(game.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.rollError")))}catch{ui.notifications.error(game.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.rollError"))}}};S(D,"pendingNotifications",[]),S(D,"notificationTimer",null),S(D,"NOTIFICATION_BATCH_DELAY",500);let ne=D;class J{static init(){F.initialize(J.registerSocketCalls),me.initialize()}static getDiceConfig(){return U.getDiceConfig()}static receiveDiceConfig(t,e){U.receiveDiceConfig(t,e)}static async handleRollRequest(t){return ne.handleRequest(t)}static registerSocketCalls(){F.registerCall(oe.getDiceConfig,J.getDiceConfig),F.registerCall(oe.receiveDiceConfig,J.receiveDiceConfig),F.registerCall(oe.handleRollRequest,J.handleRollRequest)}}J.init();
//# sourceMappingURL=crlngn-roll-requests.js.map
