var F=Object.defineProperty;var V=(I,t,e)=>t in I?F(I,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):I[t]=e;var y=(I,t,e)=>V(I,typeof t!="symbol"?t+"":t,e);const x={INIT:"init",READY:"ready",RENDER_SIDEBAR_TAB:"renderSidebarTab",USER_CONNECTED:"userConnected"},B={READY:"socketlib.ready"},A={PRE_ROLL_ABILITY_CHECK:"dnd5e.preRollAbilityCheckV2",PRE_ROLL_SAVING_THROW:"dnd5e.preRollSavingThrowV2",PRE_ROLL_DEATH_SAVE_V2:"dnd5e.preRollDeathSaveV2",PRE_ROLL_SKILL_V2:"dnd5e.preRollSkillV2",PRE_ROLL_TOOL_V2:"dnd5e.preRollToolV2",PRE_ROLL_HIT_DIE_V2:"dnd5e.preRollHitDieV2",PRE_ROLL_INITIATIVE:"dnd5e.preRollInitiative",PRE_ROLL_ATTACK_V2:"dnd5e.preRollAttackV2",PRE_ROLL_DAMAGE_V2:"dnd5e.preRollDamageV2"},w="crlngn-roll-requests",z=["%cFlash Rolls 5e","color:rgb(47, 151, 161); font-weight: bold;","|"],j={ABILITY_CHECK:{name:"abilityCheck",label:"Ability Check",subList:"abilities",actorPath:"system.abilities"},SAVING_THROW:{name:"savingThrow",label:"Saving Throw",subList:"abilities",actorPath:"system.abilities"},SKILL:{name:"skill",label:"Skill Check",subList:"skills",actorPath:"system.skills"},TOOL:{name:"tool",label:"Tool Check",subList:"tools",actorPath:"system.tools"},CONCENTRATION:{name:"concentration",label:"Concentration Check",subList:null,actorPath:""},INITIATIVE:{name:"initiativeDialog",label:"Initiative Roll",subList:null,actorPath:""},DEATH_SAVE:{name:"deathSave",label:"Death Save",subList:null,actorPath:""},CUSTOM:{name:"custom",label:"Custom Roll",subList:null,actorPath:""}},D={ID:w,ROLL_REQUEST_OPTIONS:j},M=class M{static log(t="",e=[],s=!1){try{const l=game.settings.get(w,"debug-mode")||M.debugOn;if(!(s||l))return;console.log(...z,t,...e)}catch{(s||M.debugOn)&&console.log(...z,t,...e)}}static warn(t="",e=[]){console.warn(...z,t,...e)}static error(t,e={ui:!1,console:!0,permanent:!1}){var s;e.ui&&((s=ui.notifications)==null||s.error(t,{localize:!0,permanent:e.permanent})),e.console&&console.error(...z,t)}};y(M,"debugOn",!1);let a=M;const q={checkbox:"checkbox"},G={client:"client",world:"world"},_=()=>({debugMode:{tag:"debug-mode",label:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.hint"),propType:Boolean,inputType:q.checkbox,default:!0,scope:G.client,config:!0},rollRequestsEnabled:{tag:"roll-requests-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.hint"),propType:Boolean,inputType:q.checkbox,default:!0,scope:G.world,config:!0},skipDialogs:{tag:"skip-dialogs",label:game.i18n.localize("CRLNGN_ROLLS.settings.skipDialogs.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.skipDialogs.hint"),propType:Boolean,inputType:q.checkbox,default:!1,scope:G.world,config:!0},useGMTargetTokens:{tag:"use-gm-target-tokens",label:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.hint"),propType:Boolean,inputType:q.checkbox,default:!1,scope:G.world,config:!0},rollInterceptionEnabled:{tag:"roll-interception-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollInterceptionEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollInterceptionEnabled.hint"),propType:Boolean,inputType:q.checkbox,default:!0,scope:G.world,config:!0},showOfflineNotifications:{tag:"show-offline-notifications",label:game.i18n.localize("CRLNGN_ROLLS.settings.showOfflineNotifications.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.showOfflineNotifications.hint"),propType:Boolean,inputType:q.checkbox,default:!0,scope:G.world,config:!0}});class L{static registerSettings(){const t=_();Object.entries(t).forEach(async s=>{const l=s[1];a.log("Registering... ",[s]);const o={name:l.label,hint:l.hint,default:l.default,type:l.propType,scope:l.scope,config:l.config,requiresReload:l.requiresReload||!1,onChange:i=>L.apply(l.tag,i)};l.choices&&(o.choices=l.choices),await game.settings.register(w,l.tag,o),(L.get(l.tag)===void 0||L.get(l.tag)===null)&&L.set(l.tag,l.default),a.log("registerSettings",[l.tag,L.get(l.tag)])})}static get(t,e=w){if(!t)return null;let s=!1;if(e===w)s=game.settings.get(e,t);else{let o=game.settings.storage.get("client")[`${e}.${t}`];o===void 0&&(o=game.settings.storage.get("world").getSetting(`${e}.${t}`),s=o==null?void 0:o.value),a.log("GET Setting",[o,s])}return s}static set(t,e,s=w){if(!t)return!1;let l=game.settings.storage.get("client")[`${s}.${t}`];l||(l=game.settings.storage.get("world").getSetting(`${s}.${t}`)),a.log("Setting",[t,l]);try{game.settings.set(s,t,e)}catch{a.log("Unable to change setting",[t,l])}return!0}static apply(t,e){const s=_();switch(t){case s.rollRequestsEnabled.tag:L.applyRollRequestsEnabled(e);break}}static applyRollRequestsEnabled(t){const e=document.querySelector("#chat-controls .chat-control-icon.roll-requests-icon");e&&(t?e.classList.add("active"):e.classList.remove("active"))}}const b=class b{static serializeForTransport(t,e=!1){return t==null||(e&&t.rolls&&Array.isArray(t.rolls)&&(t.rolls=t.rolls.map(s=>s instanceof Roll?s.toJSON():s)),a.log("ROLLS DATA",[t,t.subject])),t}static deserializeFromTransport(t,e=!1){let s={...t};if(!t)return s;if(e&&t.rolls&&t.rolls.length>0){const l=s.rolls.map(o=>{let i=o;return typeof o=="string"?i=Roll.fromJSON(o):i=Roll.fromJSON(JSON.stringify(o)),i});return s.rolls=[...l],s}return s}};y(b,"socket"),y(b,"_activeExecutions",new Map),y(b,"initialize",t=>{Hooks.once(B.READY,()=>{if(a.log("Attempting to register module...",[]),typeof socketlib>"u"){a.error("SocketUtil Error: socketlib is not loaded. Ensure it is installed and enabled."),ui.notifications.error(game.i18n.localize("CRLNGN_ROLLS.notifications.socketlibMissing"),{permanent:!0});return}try{b.socket=socketlib.registerModule(w),t&&t(),a.log("SocketUtil | Module registered",[b.socket])}catch(e){a.log("Problem registering module",[e])}})}),y(b,"registerCall",(t,e)=>{b.socket?(b.socket.register(t,e),a.log("SocketUtil - Registered callback",[b.socket,t])):a.log("SocketUtil - Failed to register callback (socket not initialized)",[b.socket,t])}),y(b,"sendMessage",(t,e)=>{a.log("SocketUtil - sendMessage",[t]),e&&e()}),y(b,"execForGMs",async(t,...e)=>{if(!b.socket){a.log("SocketUtil - Socket not initialized. Cannot execute as GM.",[]);return}return await b.socket.executeForAllGMs(t,...e)}),y(b,"execForAll",async(t,...e)=>{if(!b.socket){a.log("SocketUtil - Socket not initialized. Cannot execute for all clients.",[]);return}return await b.socket.executeForEveryone(t,...e)}),y(b,"execForUser",async(t,e,...s)=>{if(!b.socket){a.log("SocketUtil - Socket not initialized. Cannot execute as user.",[]);return}if(e===game.user.id)return a.log("SocketUtil - Preventing recursive call",[e]),null;const l=`${t}-${e}`;if(b._activeExecutions.has(l))return a.log("SocketUtil - Preventing recursive call",[l]),null;b._activeExecutions.set(l,!0);try{const o=await b.socket.executeAsUser(t,e,...s);return a.log("SocketUtil - Executed as user.",[o]),o}catch(o){return a.log("SocketUtil - Error executing as user",[o]),null}finally{b._activeExecutions.delete(l)}});let v=b;class P{static findActivityForRoll(t,e){var l;if(!((l=t==null?void 0:t.system)!=null&&l.activities))return null;const s=t.system.activities;switch(e){case"attack":const o=s.getByType("attack");return(o==null?void 0:o[0])||null;case"damage":const i=s.getByType("attack");if((i==null?void 0:i.length)>0)return i[0];const n=s.getByType("damage");if((n==null?void 0:n.length)>0)return n[0];const r=s.getByType("save");return(r==null?void 0:r.length)>0?r[0]:null;case"itemSave":const u=s.getByType("save");return(u==null?void 0:u[0])||null;default:return null}}static getActivitiesByType(t,e){var s;return(s=t==null?void 0:t.system)!=null&&s.activities?t.system.activities.getByType(e):[]}static hasActivityForRoll(t,e){return!!this.findActivityForRoll(t,e)}static async executeActivityRoll(t,e,s,l,o){var r,u,d,h;const i=t.items.get(s);if(!i)throw new Error(`Item ${s} not found on actor ${t.name}`);let n=null;if(l&&(n=(r=i.system.activities)==null?void 0:r.get(l),n||a.log("ActivityUtil.executeActivityRoll",["Activity not found by ID, falling back to search",{activityId:l,itemName:i.name,availableActivities:(u=i.system.activities)==null?void 0:u.map(m=>({id:m.id,type:m.type}))}])),n||(n=this.findActivityForRoll(i,e)),n)switch(a.log("ActivityUtil.executeActivityRoll",["Executing activity roll",{rollType:e,activityId:l,itemName:i.name,activityType:n.type}]),e){case"attack":a.log("ActivityUtil.executeActivityRoll",["Executing attack roll",{hasTargets:game.user.targets.size>0,targetCount:game.user.targets.size,skipDialog:o.fastForward,isRollRequest:o.isRollRequest,isGM:game.user.isGM}]);const m={configure:!0};if(MidiQOL){await P.syntheticItemRoll(i,{...o}),a.log("ActivityUtil.executeActivityRoll",["MidiQOL",MidiQOL,l,(d=MidiQOL==null?void 0:MidiQOL.Workflow)==null?void 0:d.getWorkflow(n.uuid)]);return}else return await n.use(usageConfig,m);case"damage":if(MidiQOL){const k=(h=MidiQOL==null?void 0:MidiQOL.Workflow)==null?void 0:h.getWorkflow(n.uuid),f=await k.activity.rollDamage({...o,workflow:k});a.log("ActivityUtil.executeActivityRoll",["MidiQOL / Damage",f]);return}else return await n.rollDamage(o);case"itemSave":return await i.use({activity:n.id},{skipDialog:o.fastForward});default:throw new Error(`Unknown roll type: ${e}`)}else{switch(a.log("ActivityUtil.executeActivityRoll",["No activity found, using legacy methods",{rollType:e,itemName:i.name,hasLegacyMethod:!!(i.rollAttack||i.rollDamage)}]),e){case"attack":if(i.rollAttack)return await i.rollAttack(o);break;case"damage":if(i.rollDamage)return await i.rollDamage(o);break;case"itemSave":return await i.use({},{skipDialog:o.fastForward})}throw new Error(`No suitable method found for ${e} on item ${i.name}`)}}static getActivityDisplayInfo(t){return t?{name:t.name||t.constructor.metadata.label,type:t.type,icon:t.constructor.metadata.icon,canAttack:t.type==="attack",canDamage:["attack","damage","save"].includes(t.type),canSave:t.type==="save"}:null}static getDamageFormula(t){var s,l;if(!((l=(s=t==null?void 0:t.damage)==null?void 0:s.parts)!=null&&l.length))return null;const e=t.damage.parts.map(o=>o.formula).filter(o=>o);return e.length>0?e.join(" + "):null}static async syntheticItemRoll(t,e={}){let s={consumeUsage:!1,consumeSpellSlot:!1},l={configureDialog:!0,workflowOptions:{autoRollAttack:!1,autoFastAttack:!1,autoRollDamage:"none",autoFastDamage:!1}};return e={...s,...e},a.log("ActivityUtil.syntheticItemRoll",["Executing synthetic item roll",t,e]),await MidiQOL.completeItemUse(t,e,l)}static async replaceDamage(t,e,{ignoreCrit:s=!1,damageType:l}={}){e=String(e),t.isCritical&&!s&&(e=await rollUtils.getCriticalFormula(e,t.item.getRollData()));let o=await new CONFIG.Dice.DamageRoll(e).evaluate();return await t.setDamageRolls([o]),a.log("ActivityUtil.replaceDamage",["Replaced damage",e,o,t.activity]),o}}class H extends foundry.applications.api.HandlebarsApplicationMixin(foundry.applications.api.ApplicationV2){constructor(e={}){super(e);y(this,"_onClickOutside",e=>{if(this.isLocked)return;const s=this.element;s&&(e.target.closest(".roll-requests-menu")||s.contains(e.target)||e.target.closest("#crlngn-requests-icon")||e.target.closest(".dialog, .app, .notification")||this.close())});this.selectedActors=new Set,this.currentTab="pc",this.selectedRequestType=null,this.isLocked=!1,this._initializeFromSelectedTokens()}async _prepareContext(e){var N;const s=await super._prepareContext(e),l=game.actors.contents,o=[],i=[],n=game.scenes.active;for(const g of l){if(g.type!=="character"&&g.type!=="npc")continue;const R={id:g.id,uuid:g.uuid,name:g.name,img:g.img,selected:this.selectedActors.has(g.id),crlngnStats:this._getActorStats(g)};Object.entries(g.ownership).some(([S,p])=>{const T=game.users.get(S);return T&&!T.isGM&&p>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})?o.push(R):n&&n.tokens.some(p=>p.actorId===g.id)&&i.push(R)}const r=_(),u=L.get(r.rollRequestsEnabled.tag),d=L.get(r.skipDialogs.tag),h=this.currentTab==="pc"?o:i,m=h.length>0&&h.every(g=>this.selectedActors.has(g.id)),k=[];if(this.selectedActors.size>0)for(const[g,R]of Object.entries(D.ROLL_REQUEST_OPTIONS))k.push({id:g,name:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${R.name}`)||R.label,rollable:R.subList==null,hasSubList:!!R.subList,selected:this.selectedRequestType===g});const f=[];if(this.selectedRequestType&&this.selectedActors.size>0){const g=D.ROLL_REQUEST_OPTIONS[this.selectedRequestType];if(g&&g.subList){const R=Array.from(this.selectedActors)[0],C=game.actors.get(R);if(g.subList==="tools"){const S=((N=CONFIG.DND5E.enrichmentLookup)==null?void 0:N.tools)||CONFIG.DND5E.tools||{};for(const[p,T]of Object.entries(S)){let E=p;if(T!=null&&T.id){const O=dnd5e.documents.Trait.getBaseItem(T.id,{indexOnly:!0});E=(O==null?void 0:O.name)||p}else E=p.replace(/([A-Z])/g," $1").replace(/^./,O=>O.toUpperCase()).trim();f.push({id:p,name:E,rollable:!0})}f.sort((p,T)=>p.name.localeCompare(T.name))}else if(C&&g.actorPath){const S=foundry.utils.getProperty(C,g.actorPath)||{},p=CONFIG.DND5E[g.subList];for(const[T,E]of Object.entries(S)){let O="";g.subList==="skills"&&(p!=null&&p[T])||g.subList==="abilities"&&(p!=null&&p[T])?O=p[T].label:O=E.label||game.i18n.localize(E.name||T)||T,f.push({id:T,name:O,rollable:!0})}g.subList==="skills"&&f.sort((T,E)=>T.name.localeCompare(E.name))}}}return{...s,actors:h,currentTab:this.currentTab,isPCTab:this.currentTab==="pc",isNPCTab:this.currentTab==="npc",selectedTab:this.currentTab,rollRequestsEnabled:u,skipDialogs:d,selectAllOn:m,hasSelectedActors:this.selectedActors.size>0,requestTypes:k,rollTypes:f,showNames:!0,actorsLocked:this.isLocked}}_getActorStats(e){var o,i,n,r,u;const s=e.system,l=[];return(o=s.attributes)!=null&&o.hp&&l.push({abbrev:"HP",value:s.attributes.hp.value}),(i=s.attributes)!=null&&i.ac&&l.push({abbrev:"AC",value:s.attributes.ac.value}),(n=s.attributes)!=null&&n.spelldc&&l.push({abbrev:"DC",value:s.attributes.spelldc}),(u=(r=s.skills)==null?void 0:r.prc)!=null&&u.passive&&l.push({abbrev:"PP",value:s.skills.prc.passive}),l}_onRender(e,s){super._onRender(e,s),this._attachListeners(),setTimeout(()=>{document.addEventListener("click",this._onClickOutside,!0)},100),this._tokenControlHook=Hooks.on("controlToken",this._onTokenControlChange.bind(this))}_onTokenControlChange(e,s){this.rendered&&(this._ignoreTokenControl||(this._tokenUpdateTimeout&&clearTimeout(this._tokenUpdateTimeout),this._tokenUpdateTimeout=setTimeout(()=>{this._initializeFromSelectedTokens(),this.render(),this._tokenUpdateTimeout=null},100)))}_attachListeners(){var i,n,r,u;a.log("Attaching listeners",[]);const e=this.element;(i=e.querySelector("#crlngn-requests-toggle"))==null||i.addEventListener("change",this._onToggleRollRequests.bind(this)),(n=e.querySelector("#crlngn-skip-dialogs"))==null||n.addEventListener("change",this._onToggleSkipDialogs.bind(this)),(r=e.querySelector("#crlngn-actors-all"))==null||r.addEventListener("change",this._onToggleSelectAll.bind(this)),(u=e.querySelector("#crlngn-actors-lock"))==null||u.addEventListener("click",this._onToggleLock.bind(this));const s=e.querySelectorAll(".actor-tab");a.log("Found tabs:",[s.length]),s.forEach(d=>{d.addEventListener("click",this._onTabClick.bind(this))}),e.querySelectorAll(".actor").forEach(d=>{d.addEventListener("click",this._onActorClick.bind(this))}),e.querySelectorAll(".actor-select").forEach(d=>{d.addEventListener("click",this._onActorSelectClick.bind(this))});const l=e.querySelector(".request-types");l&&l.addEventListener("click",d=>{const h=d.target.closest("li");if(h&&h.dataset.id){const m={...d,currentTarget:h};this._onRequestTypeClick(m)}});const o=e.querySelector(".roll-types");o&&o.addEventListener("click",d=>{const h=d.target.closest("li");if(h&&h.dataset.id){const m={...d,currentTarget:h};this._onRollTypeClick(m)}})}async _onToggleRollRequests(e){const s=_(),l=e.target.checked;await L.set(s.rollRequestsEnabled.tag,l),U.updateRollRequestsIcon(l),a.log("Roll requests enabled:",[l])}async _onToggleSkipDialogs(e){const s=_(),l=e.target.checked;await L.set(s.skipDialogs.tag,l),a.log("Skip dialogs:",[l])}_onToggleSelectAll(e){const s=e.target.checked;this._ignoreTokenControl=!0,(this.currentTab==="pc"?game.actors.contents.filter(o=>this._isPlayerOwned(o)):game.actors.contents.filter(o=>!this._isPlayerOwned(o)&&this._hasTokenInScene(o))).forEach(o=>{s?(this.selectedActors.add(o.id),this._updateCanvasTokenSelection(o.id,!0)):(this.selectedActors.delete(o.id),this._updateCanvasTokenSelection(o.id,!1))}),setTimeout(()=>{this._ignoreTokenControl=!1},200),this.render(),this._updateRequestTypesVisibility(),a.log("Select all:",[s,"for",this.currentTab])}_onToggleLock(e){e.preventDefault(),this.isLocked=!this.isLocked;const s=e.currentTarget;s.classList.remove("fa-lock-keyhole","fa-lock-keyhole-open"),s.classList.add(this.isLocked?"fa-lock-keyhole":"fa-lock-keyhole-open"),a.log("Lock toggled:",[this.isLocked])}_initializeFromSelectedTokens(){var s;const e=((s=canvas.tokens)==null?void 0:s.controlled)||[];this.selectedActors.clear();for(const l of e)if(l.actor&&(this.selectedActors.add(l.actor.id),this.selectedActors.size===1)){const o=this._isPlayerOwned(l.actor);this.currentTab=o?"pc":"npc"}a.log("Initialized with selected tokens:",[Array.from(this.selectedActors)])}_isPlayerOwned(e){return e.type!=="character"&&e.type!=="npc"?!1:Object.entries(e.ownership).some(([s,l])=>{const o=game.users.get(s);return o&&!o.isGM&&l>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})}_hasTokenInScene(e){if(e.type!=="character"&&e.type!=="npc")return!1;const s=game.scenes.active;return s&&s.tokens.some(l=>l.actorId===e.id)}async _onTabClick(e){var l;const s=e.currentTarget.dataset.tab;a.log("Tab clicked:",[s,this.currentTab]),s!==this.currentTab&&(this.selectedActors.clear(),(l=canvas.tokens)==null||l.releaseAll(),this.selectedRequestType=null,this.currentTab=s,await this.render(),a.log("Switched to tab:",[s]))}_onActorClick(e){if(e.target.closest(".actor-select"))return;const l=e.currentTarget.dataset.id;this._toggleActorSelection(l)}_onActorSelectClick(e){e.stopPropagation();const s=e.currentTarget.dataset.id;this._toggleActorSelection(s)}_toggleActorSelection(e){this._ignoreTokenControl=!0,this.selectedActors.has(e)?(this.selectedActors.delete(e),this._updateCanvasTokenSelection(e,!1)):(this.selectedActors.add(e),this._updateCanvasTokenSelection(e,!0)),setTimeout(()=>{this._ignoreTokenControl=!1},100),this.render(),this._updateRequestTypesVisibility(),this._updateSelectAllState(),a.log("Actor selected:",[e,this.selectedActors.has(e)])}_updateCanvasTokenSelection(e,s){if(!game.scenes.active)return;const o=canvas.tokens.placeables.filter(i=>{var n;return((n=i.actor)==null?void 0:n.id)===e});for(const i of o)s?i.control({releaseOthers:!1}):i.release()}_updateRequestTypesVisibility(){this.render()}_updateSelectAllState(){const e=this.element.querySelector("#crlngn-actors-all"),s=this.currentTab==="pc"?"pc":"npc",l=this.element.querySelectorAll(`.${s}-actors .actor-item input[type="checkbox"]`),o=Array.from(l).filter(i=>i.checked).length;e.checked=o>0&&o===l.length,e.indeterminate=o>0&&o<l.length}async _onRequestTypeClick(e){const l=e.currentTarget.dataset.id,o=D.ROLL_REQUEST_OPTIONS[l];if(!o){a.error("Unknown request type:",l);return}this.selectedRequestType===l?(this.selectedRequestType=null,a.log("Request type deselected:",[l])):(this.selectedRequestType=l,a.log("Request type selected:",[l])),o.subList?await this.render():this.selectedRequestType&&this._triggerRoll(l,null)}_onRollTypeClick(e){a.log("Roll type clicked!",[e.currentTarget]);const s=e.currentTarget.dataset.id;a.log("Roll type selected:",[s]),this._triggerRoll(this.selectedRequestType,s)}async _triggerRoll(e,s){var N;const l=_(),o=Array.from(this.selectedActors),i=L.get(l.skipDialogs.tag),n=o.filter(g=>{const R=game.actors.get(g);if(!R)return!1;const C=this._isPlayerOwned(R),S=!C&&this._hasTokenInScene(R);return this.currentTab==="pc"&&C||this.currentTab==="npc"&&S}),r=D.ROLL_REQUEST_OPTIONS[e],u=(r==null?void 0:r.name)||e;if(u==="custom"){const g=await this._showCustomRollDialog();if(!g)return;s=g}if(u==="initiativeDialog"&&!game.combat)if(await Dialog.confirm({title:game.i18n.localize("COMBAT.Create"),content:"<p>"+game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.noCombatActive")+"</p>",yes:()=>!0,no:()=>!1,defaultYes:!0,options:{classes:["crlngn-rolls-dialog"]}}))await(await game.combats.documentClass.create({scene:game.scenes.active.id})).activate(),ui.notifications.info(game.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.combatCreated"));else return;let d=n;if(u==="initiativeDialog"&&game.combat){const g=n.map(S=>game.actors.get(S)).filter(S=>S),R=[],C=new Set;for(const S of g){const p=game.combat.getCombatantByActor(S.id);p&&p.initiative!==null&&(R.push(S.name),C.add(S.id))}if(R.length>0){if(await Dialog.confirm({title:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.rerollInitiativeTitle"),content:"<p>"+game.i18n.format("CRLNGN_ROLLS.ui.dialogs.rerollInitiative",{actors:R.join(", ")})+"</p>",yes:()=>!0,no:()=>!1,defaultYes:!1,options:{classes:["crlngn-rolls-dialog"]}}))for(const p of C){const T=game.combat.getCombatantByActor(p);T&&await T.update({initiative:null})}else if(d=n.filter(p=>!C.has(p)),d.length===0){ui.notifications.info(game.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.allActorsHaveInitiative"));return}}}let h=d.map(g=>game.actors.get(g)).filter(g=>g);if(u==="deathSave"){const g=[],R=[];for(const C of h){const S=((N=C.system.attributes.hp)==null?void 0:N.value)||0,p=C.system.attributes.death||{},T=p.success||0,E=p.failure||0;S<=0&&T<3&&E<3?g.push(C):R.push(C.name)}R.length>0&&ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.actorsSkippingDeathSave",{actors:R.join(", ")})),h=g}if(!h.length){ui.notifications.warn("No valid actors selected");return}const m=[],k=[];for(const g of h){const R=this._getActorOwner(g);R?m.push({actor:g,owner:R}):k.push(g)}const f=[];for(const{actor:g,owner:R}of m){if(!R.active){L.get(l.showOfflineNotifications.tag)&&ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.playerOffline",{player:R.name})),k.push(g);continue}this._sendRollRequestToPlayer(g,R,u,s,i,!0),f.push({actor:g,owner:R}),await new Promise(C=>setTimeout(C,100))}f.length>0&&this._sendConsolidatedNotification(f,u,s),k.length>0&&await this._handleNPCRolls(k,u,s,i),setTimeout(()=>this.close(),500)}_getActorOwner(e){const s=e.ownership||{};for(const[l,o]of Object.entries(s))if(o>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const i=game.users.get(l);if(i&&!i.isGM)return i}return null}_sendRollRequestToPlayer(e,s,l,o,i,n=!1){const r=_(),d={abilityCheck:"ability",savingThrow:"save",skill:"skill",tool:"tool",concentration:"concentration",initiativeDialog:"initiative",deathSave:"deathsave",custom:"custom"}[l]||l,h={type:"rollRequest",requestId:foundry.utils.randomID(),actorId:e.id,rollType:d,rollKey:o,activityId:null,config:{rollMode:game.settings.get("core","rollMode"),advantage:!1,disadvantage:!1,situational:0,parts:[],chatMessage:!0},skipDialog:i,targetTokenIds:Array.from(game.user.targets).map(m=>m.id),preserveTargets:L.get(r.useGMTargetTokens.tag)};v.execForUser("handleRollRequest",s.id,h),n||ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestSent",{player:s.name,actor:e.name}))}_sendConsolidatedNotification(e,s,l){var r,u,d,h,m;const o={};for(const{actor:k,owner:f}of e)o[f.id]||(o[f.id]={player:f,actors:[]}),o[f.id].actors.push(k);for(const[k,f]of Object.entries(D.ROLL_REQUEST_OPTIONS))if(f.name===s)break;const i=s;let n=game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${i}`)||i;if(l)if(i==="skill")n=`${n} (${((r=CONFIG.DND5E.skills[l])==null?void 0:r.label)||l})`;else if(i==="savingThrow")n=`${n} (${((u=CONFIG.DND5E.abilities[l])==null?void 0:u.label)||l})`;else if(i==="abilityCheck")n=`${n} (${((d=CONFIG.DND5E.abilities[l])==null?void 0:d.label)||l})`;else if(i==="tool"){const k=(m=(h=CONFIG.DND5E.enrichmentLookup)==null?void 0:h.tools)==null?void 0:m[l];if(k!=null&&k.id){const f=dnd5e.documents.Trait.getBaseItem(k.id,{indexOnly:!0});n=`${n} (${(f==null?void 0:f.name)||l})`}else n=`${n} (${l})`}else i==="custom"&&(n=`${n}: ${l}`);if(Object.keys(o).length===1){const k=Object.values(o)[0],f=k.actors.map(N=>N.name).join(", ");ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsSentSingle",{rollType:n,actors:f,player:k.player.name}))}else{const k=Object.values(o).map(f=>{const N=f.actors.map(g=>g.name).join(", ");return`${f.player.name} (${N})`});ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsSentMultiple",{rollType:n,count:e.length,players:k.join("; ")}))}}async _handleNPCRolls(e,s,l,o){const i={advantage:!1,disadvantage:!1,situational:0,parts:[],rollMode:game.settings.get("core","rollMode"),fastForward:o,chatMessage:!0,isRollRequest:!0,targetValue:10};for(const n of e)await this._executeActorRoll(n,s,l,i),await new Promise(r=>setTimeout(r,200))}async _executeActorRoll(e,s,l,o){var i;try{switch(a.log("RollRequestsMenu._executeActorRoll",["Starting roll for actor",{actorName:e.name,actorType:e.type,actorId:e.id,requestType:s,normalizedType:s.toLowerCase(),config:o}]),s.toLowerCase()){case"abilitycheck":await e.rollAbilityCheck(l,o);break;case"savingthrow":await e.rollSavingThrow(l,o);break;case"skill":await e.rollSkill({...o,skill:l});break;case"tool":await e.rollToolCheck({...o,tool:l});break;case"concentration":await e.rollConcentration(o);break;case"initiativedialog":if(!game.combat){ui.notifications.warn(game.i18n.localize("COMBAT.NoneActive"));break}a.log("RollRequestsMenu._executeActorRoll",["About to roll initiative for",e.name,"with config",o]);const r=await e.rollInitiativeDialog(o);if(a.log("RollRequestsMenu._executeActorRoll",["Initiative roll result:",r]),!r){a.log("RollRequestsMenu._executeActorRoll",["No result from rollInitiativeDialog, trying direct combat update"]);let d=game.combat.getCombatantByActor(e.id);if(!d){const h=e.getActiveTokens();h.length&&(await game.combat.createEmbeddedDocuments("Combatant",[{tokenId:h[0].id,actorId:e.id}]),d=game.combat.getCombatantByActor(e.id))}if(d){const h=d.getInitiativeRoll();await h.evaluate({async:!0}),await d.update({initiative:h.total}),await h.toMessage({speaker:ChatMessage.getSpeaker({actor:e}),flavor:game.i18n.localize("DND5E.Initiative")})}}break;case"deathsave":a.log("RollRequestsMenu._executeActorRoll",["Actor death save state",{name:e.name,hp:(i=e.system.attributes.hp)==null?void 0:i.value,deathSaves:e.system.attributes.death,type:e.type}]);const u=await e.rollDeathSave();a.log("RollRequestsMenu._executeActorRoll",["Death save completed",u]);break;case"custom":try{const d=new Roll(l,e.getRollData());await d.evaluate({async:!0}),await d.toMessage({speaker:ChatMessage.getSpeaker({actor:e}),flavor:game.i18n.localize("CRLNGN_ROLLS.rollTypes.custom")})}catch(d){ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:l})),a.log("RollRequestsMenu._executeActorRoll",["Invalid custom formula",l,d])}break;default:ui.notifications.warn(`Unknown roll type: ${s}`);break}}catch(n){a.log("RollRequestsMenu._executeActorRoll",["Error executing roll",n]),ui.notifications.error(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:e.name}))}}async _onClose(e){await super._onClose(e),this.selectedActors.clear(),this.selectedRequestType=null,document.removeEventListener("click",this._onClickOutside,!0),this._tokenControlHook&&(Hooks.off("controlToken",this._tokenControlHook),this._tokenControlHook=null),this._tokenUpdateTimeout&&(clearTimeout(this._tokenUpdateTimeout),this._tokenUpdateTimeout=null)}setPosition(e={}){return this}async _showCustomRollDialog(){return new Promise(async e=>{const s=await renderTemplate(`modules/${D.ID}/templates/custom-roll-dialog.hbs`,{formula:"",readonly:!1});new Dialog({title:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.customRollTitle"),content:s,buttons:{roll:{icon:'<i class="fas fa-dice-d20"></i>',label:game.i18n.localize("Roll"),callback:o=>{const n=(o[0]||o).querySelector("#custom-roll-formula").value.trim();e(n||null)}},cancel:{icon:'<i class="fas fa-times"></i>',label:game.i18n.localize("Cancel"),callback:()=>e(null)}},default:"roll",render:o=>{const i=o[0]||o,n=i.querySelector("#custom-roll-formula"),r={};i.querySelectorAll(".dice-button").forEach(u=>{u.addEventListener("click",d=>{const h=d.currentTarget.dataset.die;r[h]=(r[h]||0)+1;const m=[];for(const[k,f]of Object.entries(r))f>0&&m.push(`${f}${k}`);n.value=m.join(" + ")})})}},{classes:["crlngn-rolls-dialog","crlngn-custom-roll-dialog"]}).render(!0)})}}y(H,"DEFAULT_OPTIONS",{id:"crlngn-requests-menu",classes:["roll-requests-menu"],tag:"div",window:{frame:!1,resizable:!1,minimizable:!1},position:null}),y(H,"PARTS",{main:{template:`modules/${D.ID}/templates/requests-menus.hbs`}});class ${static initialize(){a.log("RollInterceptor.initialize",["Called, checking if user is GM",game.user.isGM]),game.user.isGM&&(a.log("RollInterceptor.initialize",["Initializing roll interceptor for GM"]),this.registerHooks())}static registerHooks(){this._registerHook(A.PRE_ROLL_ABILITY_CHECK,this._handlePreRoll.bind(this,"ability")),this._registerHook(A.PRE_ROLL_SAVING_THROW,this._handlePreRoll.bind(this,"save")),this._registerHook(A.PRE_ROLL_SKILL_V2,this._handlePreRoll.bind(this,"skill")),this._registerHook(A.PRE_ROLL_TOOL_V2,this._handlePreRoll.bind(this,"tool")),this._registerHook(A.PRE_ROLL_ATTACK_V2,this._handlePreRoll.bind(this,"attack")),this._registerHook(A.PRE_ROLL_DAMAGE_V2,this._handlePreRoll.bind(this,"damage")),this._registerHook(A.PRE_ROLL_INITIATIVE,this._handlePreRoll.bind(this,"initiative")),this._registerHook(A.PRE_ROLL_DEATH_SAVE_V2,this._handlePreRoll.bind(this,"deathsave")),this._registerHook(A.PRE_ROLL_HIT_DIE_V2,this._handlePreRoll.bind(this,"hitDie")),a.log("RollInterceptor.registerHooks",["Registered roll interception hooks"])}static _registerHook(t,e){const s=Hooks.on(t,e);this.registeredHooks.add({hookName:t,hookId:s})}static unregisterHooks(){for(const{hookName:t,hookId:e}of this.registeredHooks)Hooks.off(t,e);this.registeredHooks.clear(),a.log("RollInterceptor.unregisterHooks",["Unregistered all hooks"])}static _handleGenericPreRoll(t,e){var u,d,h;if(!game.user.isGM||(a.log("RollInterceptor._handleGenericPreRoll",["Generic preRollV2 triggered",{configType:(u=t==null?void 0:t.constructor)==null?void 0:u.name,hasSubject:!!(t!=null&&t.subject),subjectName:(d=t==null?void 0:t.subject)==null?void 0:d.name,hasIsRollRequest:t==null?void 0:t.isRollRequest,optionsType:(h=e==null?void 0:e.constructor)==null?void 0:h.name}]),t!=null&&t.isRollRequest))return;const s=t==null?void 0:t.subject,l=_();if(!L.get(l.rollInterceptionEnabled.tag))return;if(a.log("RollInterceptor._handleGenericPreRoll",[s,s==null?void 0:s.documentName]),!s||s.documentName!=="Actor"){a.log("RollInterceptor._handleGenericPreRoll",["No valid Actor found in roll",t]);return}const i=this._getActorOwner(s);if(!i||i.id===game.user.id||!i.active)return;let n="unknown",r=null;return t!=null&&t.ability?(n=t.save?"save":"ability",r=t.ability):t!=null&&t.skill?(n="skill",r=t.skill):t!=null&&t.tool&&(n="tool",r=t.tool),a.log("RollInterceptor._handleGenericPreRoll",["Determined roll type",{rollType:n,rollKey:r,configKeys:Object.keys(t||{})}]),a.log("RollInterceptor._handleGenericPreRoll",["Intercepting generic roll",{rollType:n,actorName:s.name,ownerName:i.name}]),r&&t&&(t={...t,ability:r}),this._sendRollRequest(s,i,n,t),!1}static _handlePreRoll(t,e,s,l){var u,d;if(!game.user.isGM)return;a.log("RollInterceptor._handlePreRoll",["Hook triggered",{rollType:t,configType:(u=e==null?void 0:e.constructor)==null?void 0:u.name,hasIsRollRequest:e==null?void 0:e.isRollRequest,dialogIsRollRequest:s==null?void 0:s.isRollRequest,messageIsRollRequest:l==null?void 0:l.isRollRequest}]);let o;if(t==="initiative"&&e instanceof Actor){if(o=e,s!=null&&s.isRollRequest||l!=null&&l.isRollRequest)return}else{if(e.isRollRequest)return;o=((d=e.subject)==null?void 0:d.actor)||e.subject||e.actor}const i=_(),n=L.get(i.rollInterceptionEnabled.tag);if(a.log("RollInterceptor._handlePreRoll",["Roll interception enabled:",n]),!n)return;if(!o||o.documentName!=="Actor"){a.log("RollInterceptor._handlePreRoll",["No valid Actor found in roll config",e,t]);return}const r=this._getActorOwner(o);if(!r||r.id===game.user.id){a.log("RollInterceptor._handlePreRoll",["Actor is GM-owned or has no owner, allowing roll",{rollType:t,actorName:o.name,actorType:o.type,hasOwner:!!r}]);return}if(!r.active){a.log("RollInterceptor._handlePreRoll",["Player is offline, allowing GM roll",{rollType:t,actorName:o.name,ownerName:r.name}]);return}return a.log("RollInterceptor._handlePreRoll",["Intercepting GM roll for player character",{rollType:t,actorId:o.id,actorName:o.name,ownerId:r.id,ownerName:r.name}]),this._sendRollRequest(o,r,t,e),a.log("RollInterceptor._handlePreRoll",["PREVENTING ROLL - returning false"]),!1}static async _showConfigurationDialog(t,e,s,l,o,i){try{a.log("RollInterceptor._showConfigurationDialog",["Showing dialog",{rollType:s,dialog:o.cls.name}]);const r={...l,_rollMethod:async m=>(a.log("RollInterceptor._showConfigurationDialog",["Dialog submitted with config",m]),this._sendRollRequest(t,e,s,m),new Roll("1d20").evaluate({async:!1})),configured:!1},u=o.cls,h=await new u(r,o.options).render(!0)}catch(n){a.log("RollInterceptor._showConfigurationDialog",["Error showing configuration dialog",n]),this._sendRollRequest(t,e,s,l)}}static _getActorOwner(t){const e=t.ownership||{};for(const[s,l]of Object.entries(e))if(l>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const o=game.users.get(s);if(o&&!o.isGM)return o}return null}static _sendRollRequest(t,e,s,l){var h;const o=_(),i=L.get(o.skipDialogs.tag);let n=null,r=null;switch(s){case"ability":case"save":n=l.ability;break;case"skill":n=l.skill;break;case"tool":n=l.tool;break;case"attack":case"damage":if((h=l.subject)!=null&&h.item){n=l.subject.item.id;const m=P.findActivityForRoll(l.subject.item,s);m&&(r=m.id)}break;case"hitDie":n=l.denomination;break}const u={advantage:l.advantage||!1,disadvantage:l.disadvantage||!1,situational:l.situational||0,parts:l.parts||[],rollMode:l.rollMode||game.settings.get("core","rollMode"),elvenAccuracy:l.elvenAccuracy||!1,halflingLucky:l.halflingLucky||!1,reliableTalent:l.reliableTalent||!1,minimum:l.minimum,maximize:l.maximize,critical:l.critical,fumble:l.fumble,targetValue:l.targetValue,fastForward:l.fastForward||!1,chatMessage:l.chatMessage!==!1,flavor:l.flavor,title:l.title,dialogOptions:l.dialogOptions,messageData:l.messageData};Object.keys(u).forEach(m=>{u[m]===void 0&&delete u[m]});const d={type:"rollRequest",requestId:foundry.utils.randomID(),actorId:t.id,rollType:s,rollKey:n,activityId:r,config:u,skipDialog:i,targetTokenIds:Array.from(game.user.targets).map(m=>m.id),preserveTargets:L.get(o.useGMTargetTokens.tag)};v.execForUser("handleRollRequest",e.id,d),ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestSent",{player:e.name,actor:t.name}))}}y($,"registeredHooks",new Set);const c=class c{static init(){v.initialize(c.registerSocketCalls),Hooks.once(x.INIT,()=>{_(),a.log("Initiating module...",[],!0),L.registerSettings(),document.body.classList.add("crlngn-rolls"),c.setDiceConfig(),Hooks.on(x.RENDER_SIDEBAR_TAB,c.addChatControl)}),Hooks.once(x.READY,()=>{var s,l;a.log("Core Ready!!",[ui==null?void 0:ui.sidebar,(s=ui==null?void 0:ui.sidebar)==null?void 0:s._collapsed],!0);const t=_();var e=L.get(t.debugMode.tag);e&&(CONFIG.debug.hooks=!0),$.initialize(),game.user.isGM?(Hooks.on(x.USER_CONNECTED,c.onUserConnected),game.users.forEach(o=>{c.onUserConnected(o)}),c.checkSideBar(!((l=ui==null?void 0:ui.sidebar)!=null&&l._collapsed))):c.getDiceConfig()})}static onUserConnected(t){t.active&&t.id!==game.user.id&&(a.log("onUserConnected",[t]),v.execForUser(c.SOCKET_CALLS.getDiceConfig,t.id))}static setDiceConfig(){if(!game.user)return;const t=game.settings.storage.get("client");return c.diceConfig=t["core.diceConfiguration"]||"",a.log("getDiceConfig",[c.diceConfig]),c.diceConfig}static getDiceConfig(){if(game.user&&(c.setDiceConfig(),game.user.isGM)){v.execForGMs(c.SOCKET_CALLS.receiveDiceConfig,game.user.id,c.diceConfig);return}}static receiveDiceConfig(t,e){var s;((s=game.user)!=null&&s.isGM||t===game.user.id)&&(c.playerDiceConfigs||(c.playerDiceConfigs={}),c.playerDiceConfigs[t]=e?JSON.parse(e):{},a.log(`Received dice configuration from user ${t}`,[c.playerDiceConfigs]))}static async handleRollRequest(t){var s;if(game.user.isGM)return;a.log("handleRollRequest",["Received roll request",t]);const e=game.actors.get(t.actorId);if(!e){a.log("handleRollRequest",["Actor not found",t.actorId]);return}if(!e.isOwner){a.log("handleRollRequest",["User does not own actor",t.actorId]);return}t.preserveTargets&&((s=t.targetTokenIds)==null?void 0:s.length)>0&&game.user.targets.size===0&&t.targetTokenIds.map(o=>canvas.tokens.get(o)).filter(o=>o).forEach(o=>o.setTarget(!0,{user:game.user})),c.pendingNotifications.push({actor:e.name,rollType:t.rollType,rollKey:t.rollKey,gm:t.config.requestedBy||"GM"}),c.notificationTimer&&clearTimeout(c.notificationTimer),c.notificationTimer=setTimeout(()=>{c._showBatchedNotifications()},c.NOTIFICATION_BATCH_DELAY),a.log("handleRequestedRoll",["sending roll request"]),c._executeRequestedRoll(e,t)}static _showBatchedNotifications(){if(c.pendingNotifications.length===0)return;const t={};for(const s of c.pendingNotifications){const l=`${s.rollType}_${s.rollKey||""}`;t[l]||(t[l]={rollType:s.rollType,rollKey:s.rollKey,actors:[],gm:s.gm}),t[l].actors.push(s.actor)}const e=Object.values(t);if(e.length===1&&e[0].actors.length===1){const s=e[0];ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestReceived",{gm:s.gm,rollType:c._getRollTypeDisplay(s.rollType,s.rollKey)}))}else{const s=[];for(const l of e){const o=c._getRollTypeDisplay(l.rollType,l.rollKey),i=l.actors.join(", ");s.push(`${o} (${i})`)}ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsReceivedMultiple",{gm:e[0].gm,requests:s.join("; ")}))}c.pendingNotifications=[],c.notificationTimer=null}static _getRollTypeDisplay(t,e){var l,o,i,n,r;let s=game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${t}`)||t;if(e)switch(t){case"skill":s+=` (${((l=CONFIG.DND5E.skills[e])==null?void 0:l.label)||e})`;break;case"save":s+=` (${((o=CONFIG.DND5E.abilities[e])==null?void 0:o.label)||e})`;break;case"ability":s+=` (${((i=CONFIG.DND5E.abilities[e])==null?void 0:i.label)||e})`;break;case"tool":const u=(r=(n=CONFIG.DND5E.enrichmentLookup)==null?void 0:n.tools)==null?void 0:r[e];if(u!=null&&u.id){const d=dnd5e.documents.Trait.getBaseItem(u.id,{indexOnly:!0});s+=` (${(d==null?void 0:d.name)||e})`}else s+=` (${e})`;break;case"custom":s=`${s}: ${e}`;break}return s}static async _executeRequestedRoll(t,e){try{const s={...e.config,isRollRequest:!0};switch(e.skipDialog&&(s.dialog={configure:!1}),a.log("_executeRequestedRoll",[t,e,s]),e.rollType){case"ability":await t.rollAbilityCheck(e.rollKey,s);break;case"save":await t.rollSavingThrow(e.rollKey,s);break;case"skill":await t.rollSkill(e.rollKey,s);break;case"tool":await t.rollToolCheck({...s,tool:e.rollKey});break;case"concentration":await t.rollConcentration(s);break;case"attack":e.rollKey&&await P.executeActivityRoll(t,"attack",e.rollKey,e.activityId,s);break;case"damage":e.rollKey&&await P.executeActivityRoll(t,"damage",e.rollKey,e.activityId,s);break;case"itemSave":e.rollKey&&await P.executeActivityRoll(t,"itemSave",e.rollKey,e.activityId,s);break;case"initiative":if(!game.combat){ui.notifications.warn(game.i18n.localize("COMBAT.NoneActive"));break}await t.rollInitiativeDialog(s);break;case"deathsave":await t.rollDeathSave(s);break;case"hitDie":await t.rollHitDie(e.rollKey,s);break;case"custom":await c._handleCustomRoll(t,e);break}}catch(s){a.log("_executeRequestedRoll",["Error executing roll",s]),ui.notifications.error(game.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.rollError"))}}static async _handleCustomRoll(t,e){const s=e.rollKey,l=await renderTemplate(`modules/${w}/templates/custom-roll-dialog.hbs`,{formula:s,readonly:!0});new Dialog({title:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.customRollTitle"),content:l,buttons:{roll:{icon:'<i class="fas fa-dice-d20"></i>',label:game.i18n.localize("Roll"),callback:async()=>{try{const i=new Roll(s,t.getRollData());await i.evaluate({async:!0}),await i.toMessage({speaker:ChatMessage.getSpeaker({actor:t}),flavor:game.i18n.localize("CRLNGN_ROLLS.rollTypes.custom")})}catch(i){ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:s})),a.log("_handleCustomRoll",["Invalid formula",s,i])}}},cancel:{icon:'<i class="fas fa-times"></i>',label:game.i18n.localize("Cancel")}},default:"roll"},{classes:["crlngn-rolls-dialog","crlngn-custom-roll-dialog"]}).render(!0)}static registerSocketCalls(){v.registerCall(c.SOCKET_CALLS.getDiceConfig,c.getDiceConfig),v.registerCall(c.SOCKET_CALLS.receiveDiceConfig,c.receiveDiceConfig),v.registerCall(c.SOCKET_CALLS.handleRollRequest,c.handleRollRequest)}static addChatControl(t,e,s){if(!game.user.isGM||t.id!=="chat")return;a.log("Adding chat control for chat tab");const o=(e[0]||e).querySelector("#chat-controls");if(!o){a.log("Could not find #chat-controls",[]);return}if(o.querySelector(".roll-requests-icon"))return;const i=_(),n=L.get(i.rollRequestsEnabled.tag),r=document.createElement("a");r.id="crlngn-requests-icon",r.setAttribute("data-tooltip-direction","RIGHT"),r.className=`chat-control-icon roll-requests-icon${n?" active":""}`,r.title=game.i18n.localize("CRLNGN_ROLLS.ui.menus.rollRequestsTitle"),r.innerHTML=`<i class="fas fa-bolt${n?"":"-slash"}"></i>`;const u=o.querySelector(".chat-control-icon");u?u.parentNode.insertBefore(r,u):o.appendChild(r),r.addEventListener("click",c.toggleRollRequestsMenu),a.log("Added roll requests icon to chat controls",[])}static toggleRollRequestsMenu(){c.rollRequestsMenu?c.rollRequestsMenu.rendered?(c.rollRequestsMenu.close(),a.log("Closed roll requests menu",[])):(c.rollRequestsMenu._initializeFromSelectedTokens(),c.rollRequestsMenu.render(!0),a.log("Opened roll requests menu",[])):(c.rollRequestsMenu=new H,c.rollRequestsMenu.render(!0))}static updateRollRequestsIcon(t){const e=document.querySelector("#crlngn-requests-icon i");e&&(e.className=`fas fa-bolt${t?"":"-slash"}`)}};y(c,"diceConfig",{}),y(c,"playerDiceConfigs",{}),y(c,"rollRequestsMenu",null),y(c,"SOCKET_CALLS",{receiveDiceConfig:"receiveDiceConfig",getDiceConfig:"getDiceConfig",handleRollRequest:"handleRollRequest"}),y(c,"pendingNotifications",[]),y(c,"notificationTimer",null),y(c,"NOTIFICATION_BATCH_DELAY",500),y(c,"checkSideBar",t=>{const e=document.querySelector("body");t?e.classList.add("sidebar-expanded"):e.classList.remove("sidebar-expanded")});let U=c;U.init();
//# sourceMappingURL=crlngn-roll-requests.js.map
