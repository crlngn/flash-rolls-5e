var ke=Object.defineProperty;var me=l=>{throw TypeError(l)};var Se=(l,t,e)=>t in l?ke(l,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):l[t]=e;var O=(l,t,e)=>Se(l,typeof t!="symbol"?t+"":t,e),be=(l,t,e)=>t.has(l)||me("Cannot "+e);var Y=(l,t,e)=>(be(l,t,"read from private field"),e?e.call(l):t.get(l)),Re=(l,t,e)=>t.has(l)?me("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(l):t.set(l,e),pe=(l,t,e,s)=>(be(l,t,"write to private field"),s?s.call(l,e):t.set(l,e),e);const Q={checkbox:"checkbox"},K={client:"client",world:"world"},q=()=>({debugMode:{tag:"debug-mode",label:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.hint"),propType:Boolean,inputType:Q.checkbox,default:!0,scope:K.client,config:!0},rollRequestsEnabled:{tag:"roll-requests-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.hint"),propType:Boolean,inputType:Q.checkbox,default:!0,scope:K.world,config:!0},skipDialogs:{tag:"skip-dialogs",label:game.i18n.localize("CRLNGN_ROLLS.settings.skipDialogs.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.skipDialogs.hint"),propType:Boolean,inputType:Q.checkbox,default:!1,scope:K.world,config:!0},useGMTargetTokens:{tag:"use-gm-target-tokens",label:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.hint"),propType:Boolean,inputType:Q.checkbox,default:!1,scope:K.world,config:!0},rollInterceptionEnabled:{tag:"roll-interception-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollInterceptionEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollInterceptionEnabled.hint"),propType:Boolean,inputType:Q.checkbox,default:!0,scope:K.world,config:!0},showOfflineNotifications:{tag:"show-offline-notifications",label:game.i18n.localize("CRLNGN_ROLLS.settings.showOfflineNotifications.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.showOfflineNotifications.hint"),propType:Boolean,inputType:Q.checkbox,default:!0,scope:K.world,config:!0}}),P="crlngn-roll-requests",le=["%cFlash Rolls 5e","color:rgb(47, 151, 161); font-weight: bold;","|"],de={receiveDiceConfig:"receiveDiceConfig",getDiceConfig:"getDiceConfig",handleRollRequest:"handleRollRequest"},n={ABILITY:"ability",ABILITY_CHECK:"abilitycheck",SAVE:"save",SAVING_THROW:"savingthrow",SKILL:"skill",TOOL:"tool",CONCENTRATION:"concentration",ATTACK:"attack",DAMAGE:"damage",INITIATIVE:"initiative",INITIATIVE_DIALOG:"initiativedialog",DEATH_SAVE:"deathsave",HIT_DIE:"hitDie",ITEM_SAVE:"itemSave",CUSTOM:"custom",HEALING:"healing",FORMULA:"formula"},Oe={ABILITY_CHECK:{name:n.ABILITY_CHECK,label:"Ability Check",subList:"abilities",actorPath:"system.abilities"},SAVING_THROW:{name:n.SAVING_THROW,label:"Saving Throw",subList:"abilities",actorPath:"system.abilities"},SKILL:{name:n.SKILL,label:"Skill Check",subList:"skills",actorPath:"system.skills"},TOOL:{name:n.TOOL,label:"Tool Check",subList:"tools",actorPath:"system.tools"},CONCENTRATION:{name:n.CONCENTRATION,label:"Concentration Check",subList:null,actorPath:""},INITIATIVE:{name:n.INITIATIVE_DIALOG,label:"Initiative Roll",subList:null,actorPath:""},DEATH_SAVE:{name:n.DEATH_SAVE,label:"Death Save",subList:null,actorPath:""},CUSTOM:{name:n.CUSTOM,label:"Custom Roll",subList:null,actorPath:""}},z={ID:P,ROLL_REQUEST_OPTIONS:Oe},J={INIT:"init",READY:"ready",RENDER_SIDEBAR_TAB:"renderSidebarTab",USER_CONNECTED:"userConnected",PRE_CREATE_CHAT_MESSAGE:"preCreateChatMessage"},Ie={READY:"socketlib.ready"},M={PRE_ROLL_ABILITY_CHECK:"dnd5e.preRollAbilityCheckV2",PRE_ROLL_SAVING_THROW:"dnd5e.preRollSavingThrowV2",PRE_ROLL_DEATH_SAVE_V2:"dnd5e.preRollDeathSaveV2",PRE_ROLL_SKILL_V2:"dnd5e.preRollSkillV2",PRE_ROLL_TOOL_V2:"dnd5e.preRollToolV2",PRE_ROLL_HIT_DIE_V2:"dnd5e.preRollHitDieV2",PRE_ROLL_INITIATIVE:"dnd5e.preRollInitiative",PRE_ROLL_ATTACK_V2:"dnd5e.preRollAttackV2",PRE_ROLL_DAMAGE_V2:"dnd5e.preRollDamageV2",POST_ROLL_CONFIG:"dnd5e.postRollConfiguration",RENDER_ROLL_CONFIGURATION_DIALOG:"renderRollConfigurationDialog"},X=class X{static log(t="",e=[],s=!1){try{const i=game.settings.get(P,"debug-mode")||X.debugOn;if(!(s||i))return;console.log(...le,t,...e)}catch{(s||X.debugOn)&&console.log(...le,t,...e)}}static warn(t="",e=[]){console.warn(...le,t,...e)}static error(t,e={ui:!1,console:!0,permanent:!1}){var s;e.ui&&((s=ui.notifications)==null||s.error(t,{localize:!0,permanent:e.permanent})),e.console&&console.error(...le,t)}static method(t,e){var o;const i=`${((o=t.constructor)==null?void 0:o.name)||t.name||"Unknown"}.${e}`;return(a="",r=[],c=!1)=>{const u=a?`${i} - ${a}`:i;this.log(u,r,c)}}static traced(t,e,s){return function(...i){return X.log(`${e}.${s}`,["called with args:",i]),t.apply(this,i)}}};O(X,"debugOn",!1);let d=X;const L=class L{static serializeForTransport(t,e=!1){return d.method(L,"serializeForTransport")("serializing for transport",[t,e]),t==null||e&&t.rolls&&Array.isArray(t.rolls)&&(t.rolls=t.rolls.map(i=>i instanceof Roll?i.toJSON():i)),t}static deserializeFromTransport(t,e=!1){d.method(L,"deserializeFromTransport")("deserializing from transport",[t,e]);let i={...t};if(!t)return i;if(e&&t.rolls&&t.rolls.length>0){const o=i.rolls.map(a=>{let r=a;return typeof a=="string"?r=Roll.fromJSON(a):r=Roll.fromJSON(JSON.stringify(a)),r});return i.rolls=[...o],i}return i}};O(L,"socket"),O(L,"_activeExecutions",new Map),O(L,"initialize",t=>{d.method(L,"initialize")("initializing socket",[t]),Hooks.once(Ie.READY,()=>{if(typeof socketlib>"u"){d.error("SocketUtil Error: socketlib is not loaded. Ensure it is installed and enabled."),ui.notifications.error(game.i18n.localize("CRLNGN_ROLLS.notifications.socketlibMissing"),{permanent:!0});return}try{L.socket=socketlib.registerModule(P),t&&t()}catch{}})}),O(L,"registerCall",(t,e)=>{d.method(L,"registerCall")("registering call",[t]),L.socket&&L.socket.register(t,e)}),O(L,"sendMessage",(t,e)=>{d.method(L,"sendMessage")("sending message",[t]),e&&e()}),O(L,"execForGMs",async(t,...e)=>{if(d.method(L,"execForGMs")("executing for GMs",[t,...e]),!!L.socket)return await L.socket.executeForAllGMs(t,...e)}),O(L,"execForAll",async(t,...e)=>{if(L.socket)return await L.socket.executeForEveryone(t,...e)}),O(L,"execForUser",async(t,e,...s)=>{if(d.method(L,"execForUser")("executing for user",[t,e,...s]),!L.socket)return;if(e===game.user.id)return null;const o=`${t}-${e}`;if(L._activeExecutions.has(o))return null;L._activeExecutions.set(o,!0);try{return await L.socket.executeAsUser(t,e,...s)}catch{return null}finally{L._activeExecutions.delete(o)}});let H=L;class W{static initialize(){this.setDiceConfig()}static setDiceConfig(){if(!game.user)return{};const t=game.settings.storage.get("client");return this.diceConfig=t["core.diceConfiguration"]||"",this.diceConfig}static getDiceConfig(){return game.user?(this.setDiceConfig(),game.user.isGM&&this._sendDiceConfigToGMs(),this.diceConfig):{}}static _sendDiceConfigToGMs(){H.execForGMs("receiveDiceConfig",game.user.id,this.diceConfig)}static receiveDiceConfig(t,e){var s,i;((s=game.user)!=null&&s.isGM||t===((i=game.user)==null?void 0:i.id))&&(this.playerDiceConfigs[t]=e?JSON.parse(e):{})}static getUserDiceConfig(t){var e;return t===((e=game.user)==null?void 0:e.id)?this.diceConfig:this.playerDiceConfigs[t]||{}}static requestDiceConfigFromUser(t){H.execForUser("getDiceConfig",t)}static requestDiceConfigFromAllPlayers(){var t;(t=game.user)!=null&&t.isGM&&game.users.forEach(e=>{e.active&&!e.isGM&&e.id!==game.user.id&&this.requestDiceConfigFromUser(e.id)})}static clearPlayerConfigs(){this.playerDiceConfigs={}}static hasUserConfig(t){var e;return t===((e=game.user)==null?void 0:e.id)?!!this.diceConfig:!!this.playerDiceConfigs[t]}}O(W,"diceConfig",{}),O(W,"playerDiceConfigs",{});class E{static registerSettings(){const t=q();Object.entries(t).forEach(async s=>{const i=s[1],o={name:i.label,hint:i.hint,default:i.default,type:i.propType,scope:i.scope,config:i.config,requiresReload:i.requiresReload||!1,onChange:a=>E.apply(i.tag,a)};i.choices&&(o.choices=i.choices),await game.settings.register(P,i.tag,o),(E.get(i.tag)===void 0||E.get(i.tag)===null)&&E.set(i.tag,i.default)})}static get(t,e=P){if(!t)return null;let s=!1;if(e===P)s=game.settings.get(e,t);else{let o=game.settings.storage.get("client")[`${e}.${t}`];o===void 0&&(o=game.settings.storage.get("world").getSetting(`${e}.${t}`),s=o==null?void 0:o.value)}return s}static set(t,e,s=P){if(!t)return!1;let i=game.settings.storage.get("client")[`${s}.${t}`];i||(i=game.settings.storage.get("world").getSetting(`${s}.${t}`));try{game.settings.set(s,t,e)}catch{}return!0}static apply(t,e){const s=q();switch(t){case s.rollRequestsEnabled.tag:E.applyRollRequestsEnabled(e);break}}static applyRollRequestsEnabled(t){const e=document.querySelector("#chat-controls .chat-control-icon.roll-requests-icon");e&&(t?e.classList.add("active"):e.classList.remove("active"))}}class B{static findActivityForRoll(t,e){var o;if(!((o=t==null?void 0:t.system)!=null&&o.activities))return null;const s=t.system.activities;switch(e==null?void 0:e.toLowerCase()){case n.ATTACK:const a=s.getByType("attack");return(a==null?void 0:a[0])||null;case n.DAMAGE:const r=s.getByType("attack");if((r==null?void 0:r.length)>0)return r[0];const c=s.getByType("damage");if((c==null?void 0:c.length)>0)return c[0];const u=s.getByType("save");return(u==null?void 0:u.length)>0?u[0]:null;case n.ITEM_SAVE:const g=s.getByType("save");return(g==null?void 0:g[0])||null;default:return null}}static getActivitiesByType(t,e){var s;return(s=t==null?void 0:t.system)!=null&&s.activities?t.system.activities.getByType(e):[]}static hasActivityForRoll(t,e){return d.method(B,"hasActivityForRoll")("checking activity",[t,e]),!!this.findActivityForRoll(t,e)}static async executeActivityRoll(t,e,s,i,o){var g,f;d.method(B,"executeActivityRoll")("executing activity roll",[t,e,s,i,o]);const r=t.items.get(s);if(!r)throw new Error(`Item ${s} not found on actor ${t.name}`);let c=null;i&&(c=(g=r.system.activities)==null?void 0:g.get(i)),c||(c=this.findActivityForRoll(r,e));const u=e==null?void 0:e.toLowerCase();if(c)switch(u){case n.ATTACK:const R={configure:!0};if(MidiQOL){await B.syntheticItemRoll(r,{...o});return}else return await c.use(usageConfig,R);case n.DAMAGE:if(MidiQOL){const b=(f=MidiQOL==null?void 0:MidiQOL.Workflow)==null?void 0:f.getWorkflow(c.uuid);await b.activity.rollDamage({...o,workflow:b});return}else return await c.rollDamage(o);case n.ITEM_SAVE:return await r.use({activity:c.id},{skipDialog:o.fastForward});default:throw new Error(`Unknown roll type: ${u}`)}else{switch(u){case n.ATTACK:if(r.rollAttack)return await r.rollAttack(o);break;case n.DAMAGE:if(r.rollDamage)return await r.rollDamage(o);break;case n.ITEM_SAVE:return await r.use({},{skipDialog:o.fastForward})}throw new Error(`No suitable method found for ${u} on item ${r.name}`)}}static getActivityDisplayInfo(t){return d.method(B,"getActivityDisplayInfo")("getting activity display info",[t]),t?{name:t.name||t.constructor.metadata.label,type:t.type,icon:t.constructor.metadata.icon,canAttack:t.type==="attack",canDamage:["attack","damage","save"].includes(t.type),canSave:t.type==="save"}:null}static getDamageFormula(t){var i,o;if(d.method(B,"getDamageFormula")("getting damage formula",[t]),!((o=(i=t==null?void 0:t.damage)==null?void 0:i.parts)!=null&&o.length))return null;const s=t.damage.parts.map(a=>a.formula).filter(a=>a);return s.length>0?s.join(" + "):null}static async syntheticItemRoll(t,e={}){d.method(B,"syntheticItemRoll")("performing synthetic item roll",[t,e]);let i={consumeUsage:!1,consumeSpellSlot:!1},o={configureDialog:!0,workflowOptions:{autoRollAttack:!1,autoFastAttack:!1,autoRollDamage:"none",autoFastDamage:!1}};return e={...i,...e},await MidiQOL.completeItemUse(t,e,o)}static async replaceDamage(t,e,{ignoreCrit:s=!1,damageType:i}={}){e=String(e),t.isCritical&&!s&&(e=await rollUtils.getCriticalFormula(e,t.item.getRollData()));let o=await new CONFIG.Dice.DamageRoll(e).evaluate();return await t.setDamageRolls([o]),o}}class x extends dnd5e.applications.dice.D20RollConfigurationDialog{constructor(t={},e={},s={}){s.rollType=s.rollType||CONFIG.Dice.D20Roll,super(t,e,s),d.method(this,"constructor")("initializing",[t,e,s]),this.actors=s.actors||[],this.sendRequest=s.defaultSendRequest??s.sendRequest??!0,this.showDC=s.showDC||!1,this.dcValue=s.dcValue||null}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}_prepareConfigurationData(t,e,s,i){d.method(this,"_prepareConfigurationData")("preparing",[t,e,s,i]);const a=super._prepareConfigurationData(t,e,s,i);return a.showDC=this.showDC,a.dcValue=this.dcValue,a.sendRequest=this.sendRequest,a.actorCount=this.actors.length,a}async _preparePartContext(t,e,s){return d.method(this,"_preparePartContext")("preparing part context",[t,e,s]),e=await super._preparePartContext(t,e,s),t==="configuration"&&(e.showDC=this.showDC,e.dcValue=this.dcValue,e.sendRequest=this.sendRequest,e.actorCount=this.actors.length),e}async _onRender(t,e){var o,a,r;if(d.method(this,"_onRender")("rendering dialog",[t,e]),super._onRender(t,e),this.element.querySelector(".gm-roll-config-fields"))return;let i=this.element.querySelector(".rolls .formulas");if(i&&(this.showDC||this.actors.length>0)){const c={showDC:this.showDC,dcValue:this.dcValue,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},u=await renderTemplate(`modules/${P}/templates/gm-roll-config-fields.hbs`,c),g=document.createElement("div");g.className="gm-roll-config-fields",g.innerHTML=u,i.parentNode.insertBefore(g,i)}this._attachButtonListeners(),((r=(a=(o=this.config.rolls)==null?void 0:o[0])==null?void 0:a.data)!=null&&r.situational||this.config.situational)&&(d.log("GMRollConfigDialog._onRender",["Triggering rebuild for initial situational bonus"]),setTimeout(()=>{this.rebuild()},100))}_attachButtonListeners(){d.method(this,"_attachButtonListeners")("attaching button listeners"),this.element.querySelectorAll('[data-action="advantage"], [data-action="normal"], [data-action="disadvantage"]').forEach(s=>{s.addEventListener("click",i=>{i.currentTarget.dataset.action})})}_onChangeForm(t,e){d.method(this,"_onChangeForm")("form changed",[t,e]),super._onChangeForm(t,e);const i=this.element.querySelector('input[name="crlngn-send-request"]');i&&(this.sendRequest=i.checked);const o=this.element.querySelector('input[name="dc"]');o&&o.value&&(this.dcValue=parseInt(o.value)||null)}_buildConfig(t,e,s){d.method(this,"_buildConfig")("building config",[t,e,s]);const o=e==null?void 0:e.get("ability"),a=e==null?void 0:e.get("dc");o&&(t.ability=o,this.config.ability=o);const r=super._buildConfig(t,e,s);if(a){const c=parseInt(a);isNaN(c)||(r.options=r.options||{},r.options.target=c)}else this.dcValue!==void 0&&this.dcValue!==null&&(r.options=r.options||{},r.options.target=this.dcValue);return r}async _processSubmitData(t,e,s){if(d.method(this,"_processSubmitData")("processing submit",[t,e,s]),await super._processSubmitData(t,e,s),s.has("dc")&&s.get("dc")!==""){const o=parseInt(s.get("dc"));if(!isNaN(o)&&(this.dcValue=o,this.config.rolls&&this.config.rolls.length>0))for(const a of this.config.rolls)a.options.target=o}this.sendRequest=s.get("crlngn-send-request")!=="false"}_finalizeRolls(t){d.method(this,"_finalizeRolls")("finalizing rolls",[t]);const s=super._finalizeRolls(t);if(this.dcValue!==void 0&&this.dcValue!==null)for(const i of s)i.options.target=this.dcValue;return this.config.sendRequest=this.sendRequest,s}static async getConfiguration(t,e,s,i={}){var T,S,k,D,V,j,ee,te,se,ie,N,fe;d.method(x,"getConfiguration")("getting configuration",[t,e,s,i]);const a=e==null?void 0:e.toLowerCase(),r=[n.SAVE,n.SAVING_THROW,n.ABILITY,n.ABILITY_CHECK,n.CONCENTRATION].includes(a),c=t[0];if(!c)return null;let u=CONFIG.Dice.D20Roll;[n.DAMAGE,n.HEALING].includes(a)?u=CONFIG.Dice.DamageRoll||CONFIG.Dice.BasicRoll:[n.FORMULA,n.CUSTOM].includes(a)&&(u=CONFIG.Dice.BasicRoll),u||(u=CONFIG.Dice.D20Roll);const g={data:c.getRollData(),subject:c,rolls:[{parts:[],data:c.getRollData(),options:{}}]};switch(a){case n.SKILL:g.skill=s;break;case n.SAVE:case n.SAVING_THROW:g.ability=s;break;case n.ABILITY:case n.ABILITY_CHECK:g.ability=s;break}const f={create:!1,data:{speaker:ChatMessage.getSpeaker({actor:c})}},R={options:{actors:t,sendRequest:t.some($=>this._isPlayerOwned($)),showDC:r,rollKey:s,rollType:u,window:{title:x._getRollTitle(a,s,c),subtitle:t.map($=>$.name).join(", ")},...i}},b=new this(g,f,R.options),m=await new Promise($=>{b.addEventListener("close",()=>{$({rolls:b.rolls,config:b.config,message:b.message,sendRequest:b.sendRequest})},{once:!0}),b.render({force:!0})});if(!m.rolls||m.rolls.length===0)return null;const h=m.rolls[0];let C=!1,A=!1;((T=h==null?void 0:h.options)==null?void 0:T.advantageMode)!==void 0&&(C=h.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE,A=h.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE);const _={chatMessage:!0,isRollRequest:m.sendRequest,skipDialog:i.skipDialogs||!1,sendRequest:m.sendRequest};C&&(_.advantage=!0),A&&(_.disadvantage=!0);const y=game.settings.get("core","rollMode");m.message.rollMode&&m.message.rollMode!==y&&(_.rollMode=m.message.rollMode);let p=((S=h==null?void 0:h.options)==null?void 0:S.situational)||((k=h==null?void 0:h.data)==null?void 0:k.situational)||((V=(D=m.config)==null?void 0:D.data)==null?void 0:V.situational)||"";if(!p&&((j=h==null?void 0:h.parts)==null?void 0:j.length)>0&&h.parts.find(Ee=>Ee.includes("@situational"))&&(ee=h.data)!=null&&ee.situational&&(p=h.data.situational),p&&(_.situational=p,_.parts=["@situational"]),(te=h==null?void 0:h.options)!=null&&te.target&&(_.target=h.options.target),m.config.ability&&[n.SKILL,n.TOOL].includes(a)){const $=((ie=(se=c.system.skills)==null?void 0:se[s])==null?void 0:ie.ability)||((fe=(N=CONFIG.DND5E.skills)==null?void 0:N[s])==null?void 0:fe.ability);m.config.ability!==$&&(_.ability=m.config.ability)}return _.rollTitle=R.options.window.title,_}static _isPlayerOwned(t){return d.method(x,"_isPlayerOwned")("checking ownership",[t]),Object.entries(t.ownership).some(([s,i])=>{const o=game.users.get(s);return o&&!o.isGM&&i>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})}static _getRollTitle(t,e,s){var r,c,u,g,f,R,b,m;d.method(x,"_getRollTitle")("getting title",[t,e,s]);let o="";const a=t==null?void 0:t.toLowerCase();switch(a){case n.SKILL:const h=((r=CONFIG.DND5E.skills[e])==null?void 0:r.label)||e,C=(c=s==null?void 0:s.system.skills)==null?void 0:c[e],A=(C==null?void 0:C.ability)||((u=CONFIG.DND5E.skills[e])==null?void 0:u.ability)||"int",_=((g=CONFIG.DND5E.abilities[A])==null?void 0:g.label)||A;o=game.i18n.format("DND5E.SkillPromptTitle",{skill:h,ability:_});break;case n.SAVE:case n.SAVING_THROW:const y=((f=CONFIG.DND5E.abilities[e])==null?void 0:f.label)||e;o=game.i18n.format("DND5E.SavePromptTitle",{ability:y});break;case n.ABILITY:case n.ABILITY_CHECK:const p=((R=CONFIG.DND5E.abilities[e])==null?void 0:R.label)||e;o=game.i18n.format("DND5E.AbilityPromptTitle",{ability:p});break;case n.CONCENTRATION:o=game.i18n.localize("DND5E.Concentration");break;case n.TOOL:const T=(m=(b=CONFIG.DND5E.enrichmentLookup)==null?void 0:b.tools)==null?void 0:m[e];let S=e;if(T!=null&&T.id){const k=dnd5e.documents.Trait.getBaseItem(T.id,{indexOnly:!0});S=(k==null?void 0:k.name)||e}o=game.i18n.format("DND5E.ToolPromptTitle",{tool:S});break;case n.DEATH_SAVE:o=game.i18n.localize("DND5E.DeathSave");break;case n.INITIATIVE:case n.INITIATIVE_DIALOG:o=game.i18n.localize("DND5E.Initiative");break;default:o=game.i18n.localize("DND5E.Roll")}return d.log("_getRollTitle",[a,o]),o}}class ue extends dnd5e.applications.dice.SkillToolRollConfigurationDialog{constructor(t={},e={},s={}){const i=foundry.utils.mergeObject(t,{chooseAbility:!0});s.rollType=s.rollType||CONFIG.Dice.D20Roll,super(i,e,s),d.method(this,"constructor")("initializing skill/tool dialog",[t,e,s]),this.actors=s.actors||[],this.sendRequest=s.defaultSendRequest??s.sendRequest??!0,this.showDC=s.showDC||!1,this.dcValue=s.dcValue||null}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}_prepareConfigurationData(t,e,s,i){d.method(this,"_prepareConfigurationData")("preparing skill/tool config data",[t,e,s,i]);const a=super._prepareConfigurationData(t,e,s,i);return a.showDC=this.showDC,a.dcValue=this.dcValue,a.sendRequest=this.sendRequest,a.actorCount=this.actors.length,a}async _preparePartContext(t,e,s){return d.method(this,"_preparePartContext")("preparing part context",[t,e,s]),e=await super._preparePartContext(t,e,s),t==="configuration"&&(e.showDC=this.showDC,e.dcValue=this.dcValue,e.sendRequest=this.sendRequest,e.actorCount=this.actors.length),e}async _onRender(t,e){var o,a,r;if(d.method(this,"_onRender")("rendering dialog",[t,e]),super._onRender(t,e),this.element.querySelector(".gm-roll-config-fields"))return;let i=this.element.querySelector(".rolls .formulas");if(i&&(this.showDC||this.actors.length>0)){const c={showDC:this.showDC,dcValue:this.dcValue,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},u=await renderTemplate(`modules/${P}/templates/gm-roll-config-fields.hbs`,c),g=document.createElement("div");g.className="gm-roll-config-fields",g.innerHTML=u,i.parentNode.insertBefore(g,i)}this._attachButtonListeners(),((r=(a=(o=this.config.rolls)==null?void 0:o[0])==null?void 0:a.data)!=null&&r.situational||this.config.situational)&&setTimeout(()=>{this.rebuild()},100)}_attachButtonListeners(){d.method(this,"_attachButtonListeners")("attaching button listeners"),this.element.querySelectorAll('[data-action="advantage"], [data-action="normal"], [data-action="disadvantage"]').forEach(s=>{s.addEventListener("click",i=>{i.currentTarget.dataset.action})})}_onChangeForm(t,e){var a,r;d.method(this,"_onChangeForm")("skill/tool form changed",[t,e]),super._onChangeForm(t,e);const i=this.element.querySelector('input[name="crlngn-send-request"]');i&&(this.sendRequest=i.checked);const o=this.element.querySelector('input[name="dc"]');o&&o.value&&(this.dcValue=parseInt(o.value)||null),((a=e.target)==null?void 0:a.name)==="ability"&&((r=e.target)!=null&&r.value)&&(this.config.ability=e.target.value)}_buildConfig(t,e,s){d.method(this,"_buildConfig")("building skill/tool config",[t,e,s]);const o=e==null?void 0:e.get("ability"),a=e==null?void 0:e.get("dc");o&&(t.ability=o,this.config.ability=o);const r=super._buildConfig(t,e,s);if(a){const c=parseInt(a);isNaN(c)||(r.options=r.options||{},r.options.target=c)}else this.dcValue!==void 0&&this.dcValue!==null&&(r.options=r.options||{},r.options.target=this.dcValue);return r}async _processSubmitData(t,e,s){if(d.method(this,"_processSubmitData")("processing skill/tool submit",[t,e,s]),await super._processSubmitData(t,e,s),s.has("dc")&&s.get("dc")!==""){const o=parseInt(s.get("dc"));if(!isNaN(o)&&(this.dcValue=o,this.config.rolls&&this.config.rolls.length>0))for(const a of this.config.rolls)a.options.target=o}this.sendRequest=s.get("crlngn-send-request")!=="false"}_finalizeRolls(t){d.method(this,"_finalizeRolls")("finalizing skill/tool rolls",[t]);const s=super._finalizeRolls(t);if(this.dcValue!==void 0&&this.dcValue!==null)for(const i of s)i.options.target=this.dcValue;return this.config.sendRequest=this.sendRequest,s}static async getConfiguration(t,e,s,i={}){var S,k,D,V,j,ee,te,se,ie;d.method(ue,"getConfiguration")("getting skill/tool configuration",[t,e,s,i]);const a=e==null?void 0:e.toLowerCase(),r=[n.SKILL,n.TOOL].includes(a),c=t[0];if(!c)return null;const u=CONFIG.Dice.D20Roll;let g=null;if(a===n.SKILL){const N=c.system.skills[s];g=(N==null?void 0:N.ability)||((S=CONFIG.DND5E.skills[s])==null?void 0:S.ability)||"int"}else if(a===n.TOOL){const N=(k=c.system.tools)==null?void 0:k[s];g=(N==null?void 0:N.ability)||((j=(V=(D=CONFIG.DND5E.enrichmentLookup)==null?void 0:D.tools)==null?void 0:V[s])==null?void 0:j.ability)||"int"}const f={data:c.getRollData(),subject:c,ability:g,chooseAbility:!0,rolls:[{parts:[],data:c.getRollData(),options:{}}]};a===n.SKILL?f.skill=s:a===n.TOOL&&(f.tool=s);const R={create:!1,data:{speaker:ChatMessage.getSpeaker({actor:c})}},b={options:{actors:t,sendRequest:t.some(N=>x._isPlayerOwned(N)),showDC:r,rollKey:s,rollType:u,window:{title:x._getRollTitle(a,s,c),subtitle:t.map(N=>N.name).join(", ")},...i}},m=new this(f,R,b.options),h=await new Promise(N=>{m.addEventListener("close",()=>{N({rolls:m.rolls,config:m.config,message:m.message,sendRequest:m.sendRequest})},{once:!0}),m.render({force:!0})});if(!h.rolls||h.rolls.length===0)return null;const C=h.rolls[0];let A=!1,_=!1;((ee=C==null?void 0:C.options)==null?void 0:ee.advantageMode)!==void 0&&(A=C.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE,_=C.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE);const y={chatMessage:!0,isRollRequest:h.sendRequest,skipDialog:i.skipDialogs||!1,sendRequest:h.sendRequest};A&&(y.advantage=!0),_&&(y.disadvantage=!0);const p=game.settings.get("core","rollMode");h.message.rollMode&&h.message.rollMode!==p&&(y.rollMode=h.message.rollMode);const T=((te=C==null?void 0:C.options)==null?void 0:te.situational)||((se=C==null?void 0:C.data)==null?void 0:se.situational)||"";return T&&(y.situational=T,y.parts=[T]),(ie=C==null?void 0:C.options)!=null&&ie.target&&(y.target=C.options.target),h.config.ability&&[n.SKILL,n.TOOL].includes(a)&&(y.ability=h.config.ability),y.rollTitle=b.options.window.title,y}}const w=class w{static initialize(){d.method(w,"initialize")("initializing"),game.user.isGM&&this.registerHooks()}static registerHooks(){d.method(w,"registerHooks")("registering hooks"),this._registerHook(M.PRE_ROLL_ABILITY_CHECK,this._handlePreRoll.bind(this,n.ABILITY)),this._registerHook(M.PRE_ROLL_SAVING_THROW,this._handlePreRoll.bind(this,n.SAVE)),this._registerHook(M.PRE_ROLL_SKILL_V2,this._handlePreRoll.bind(this,n.SKILL)),this._registerHook(M.PRE_ROLL_TOOL_V2,this._handlePreRoll.bind(this,n.TOOL)),this._registerHook(M.PRE_ROLL_ATTACK_V2,this._handlePreRoll.bind(this,n.ATTACK)),this._registerHook(M.PRE_ROLL_DAMAGE_V2,this._handlePreRoll.bind(this,n.DAMAGE)),this._registerHook(M.PRE_ROLL_INITIATIVE,this._handlePreRoll.bind(this,n.INITIATIVE)),this._registerHook(M.PRE_ROLL_DEATH_SAVE_V2,this._handlePreRoll.bind(this,n.DEATH_SAVE)),this._registerHook(M.PRE_ROLL_HIT_DIE_V2,this._handlePreRoll.bind(this,n.HIT_DIE))}static _registerHook(t,e){d.method(w,"_registerHook")("registering hook",[t]);const i=Hooks.on(t,e);this.registeredHooks.add({hookName:t,hookId:i})}static unregisterHooks(){d.method(w,"unregisterHooks")("unregistering all hooks");for(const{hookName:e,hookId:s}of this.registeredHooks)Hooks.off(e,s);this.registeredHooks.clear()}static _handleGenericPreRoll(t,e){if(d.method(w,"_handleGenericPreRoll")("handling generic pre-roll",[t,e]),!game.user.isGM||t!=null&&t.isRollRequest)return;const i=t==null?void 0:t.subject,o=q(),a=E.get(o.rollInterceptionEnabled.tag),r=E.get(o.rollRequestsEnabled.tag);if(!a||!r||!i||i.documentName!=="Actor")return;const c=this._getActorOwner(i);if(!c||c.id===game.user.id||!c.active)return;let u="unknown",g=null;return t!=null&&t.ability?(u=t.save?n.SAVE:n.ABILITY,g=t.ability):t!=null&&t.skill?(u=n.SKILL,g=t.skill):t!=null&&t.tool&&(u=n.TOOL,g=t.tool),g&&t&&(t={...t,ability:g}),this._sendRollRequest(i,c,u,t),!1}static _handlePreRoll(t,e,s,i){var f;if(d.method(w,"_handlePreRoll")("handling pre-roll",[t,e,s,i]),!game.user.isGM)return;let a;if(t===n.INITIATIVE&&e instanceof Actor)a=e;else{if(e!=null&&e.isRollRequest||s!=null&&s.isRollRequest||i!=null&&i.isRollRequest)return;a=((f=e.subject)==null?void 0:f.actor)||e.subject||e.actor}const r=q(),c=E.get(r.rollInterceptionEnabled.tag),u=E.get(r.rollRequestsEnabled.tag);if(!c||!u||!a||a.documentName!=="Actor")return;const g=this._getActorOwner(a);if(!(!g||g.id===game.user.id)&&g.active)return this._showGMConfigDialog(a,g,t,e,s,i),!1}static async _showGMConfigDialog(t,e,s,i,o,a){var c,u;d.method(w,"_showGMConfigDialog")("showing GM config dialog",[t,e,s,i,o,a]);try{const g=s==null?void 0:s.toLowerCase(),f=[n.SKILL,n.TOOL].includes(g)?ue:x;let R={rolls:[{parts:[],data:{},options:{}}]};switch(g){case n.ABILITY:R.ability=i.ability||((c=i.subject)==null?void 0:c.ability);break;case n.SAVE:R.ability=i.ability||((u=i.subject)==null?void 0:u.ability),i.ability==="con"&&i.targetValue!==void 0&&(s=n.CONCENTRATION);break;case n.SKILL:R.skill=i.skill,R.ability=i.ability;break;case n.TOOL:R.tool=i.tool,R.ability=i.ability;break;case n.CONCENTRATION:R.ability="con";break}const b={actors:[t],rollType:g,showDC:!0,defaultSendRequest:!0,skipDialogs:!1},h=await new f(R,{},b).render(!0);if(!h||!h.sendRequest){await this._executeLocalRoll(t,s,i,h||{});return}const C={...i,...h,requestedBy:game.user.name};this._sendRollRequest(t,e,s,C)}catch{this._sendRollRequest(t,e,s,i)}}static async _executeLocalRoll(t,e,s,i){d.method(w,"_executeLocalRoll")("executing local roll",[t,e,s,i]);const a=e==null?void 0:e.toLowerCase(),r={...s,advantage:i.advantage||s.advantage,disadvantage:i.disadvantage||s.disadvantage,bonus:i.situational||s.bonus,target:i.dc||s.target,rollMode:i.rollMode||s.rollMode,isRollRequest:!1},c={configure:!1,isRollRequest:!1},u={rollMode:r.rollMode,create:!0,isRollRequest:!1};try{switch(a){case n.SAVE:await t.rollSavingThrow(s.ability,r,c,u);break;case n.ABILITY:await t.rollAbilityCheck(s.ability,r,c,u);break;case n.SKILL:await t.rollSkill(s.skill,r,c,u);break;case n.TOOL:await t.rollToolCheck(s.tool,r,c,u);break;case n.CONCENTRATION:await t.rollConcentration(r,c,u);break}}catch{}}static async _showConfigurationDialog(t,e,s,i,o,a){d.method(w,"_showConfigurationDialog")("showing configuration dialog",[t,e,s,i,o,a]);try{const u={...i,_rollMethod:async b=>(this._sendRollRequest(t,e,s,b),new Roll("1d20").evaluate({async:!1})),configured:!1},g=o.cls,R=await new g(u,o.options).render(!0)}catch{this._sendRollRequest(t,e,s,i)}}static _getActorOwner(t){d.method(w,"_getActorOwner")("getting actor owner",[t]);const s=t.ownership||{};for(const[i,o]of Object.entries(s))if(o>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const a=game.users.get(i);if(a&&!a.isGM)return a}return null}static _sendRollRequest(t,e,s,i){var b;d.method(w,"_sendRollRequest")("sending roll request",[t,e,s,i]);const a=q(),r=E.get(a.skipDialogs.tag),c=s==null?void 0:s.toLowerCase();let u=null,g=null;switch(c){case n.ABILITY:case n.SAVE:u=i.ability;break;case n.SKILL:u=i.skill;break;case n.TOOL:u=i.tool;break;case n.ATTACK:case n.DAMAGE:if((b=i.subject)!=null&&b.item){u=i.subject.item.id;const m=B.findActivityForRoll(i.subject.item,s);m&&(g=m.id)}break;case n.HIT_DIE:u=i.denomination;break;default:d.warn(`Unknown roll type: ${s}`);return}const f={advantage:i.advantage||!1,disadvantage:i.disadvantage||!1,situational:i.situational||0,parts:i.parts||[],rollMode:i.rollMode||game.settings.get("core","rollMode"),elvenAccuracy:i.elvenAccuracy||!1,halflingLucky:i.halflingLucky||!1,reliableTalent:i.reliableTalent||!1,minimum:i.minimum,maximize:i.maximize,critical:i.critical,fumble:i.fumble,targetValue:i.targetValue,fastForward:i.fastForward||!1,chatMessage:i.chatMessage!==!1,flavor:i.flavor,title:i.title,dialogOptions:i.dialogOptions,messageData:i.messageData};Object.keys(f).forEach(m=>{f[m]===void 0&&delete f[m]});const R={type:"rollRequest",requestId:foundry.utils.randomID(),actorId:t.id,rollType:c,rollKey:u,activityId:g,config:f,skipDialog:r,targetTokenIds:Array.from(game.user.targets).map(m=>m.id),preserveTargets:E.get(a.useGMTargetTokens.tag)};H.execForUser("handleRollRequest",e.id,R),ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestSent",{player:e.name,actor:t.name}))}};O(w,"registeredHooks",new Set);let ge=w;function Le(l,t){var i,o,a,r,c;let e=game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${l}`)||l;const s=l==null?void 0:l.toLowerCase();if(t)switch(s){case n.SKILL:e+=` (${((i=CONFIG.DND5E.skills[t])==null?void 0:i.label)||t})`;break;case n.SAVE:e+=` (${((o=CONFIG.DND5E.abilities[t])==null?void 0:o.label)||t})`;break;case n.ABILITY:e+=` (${((a=CONFIG.DND5E.abilities[t])==null?void 0:a.label)||t})`;break;case n.TOOL:const u=(c=(r=CONFIG.DND5E.enrichmentLookup)==null?void 0:r.tools)==null?void 0:c[t];if(u!=null&&u.id){const g=dnd5e.documents.Trait.getBaseItem(u.id,{indexOnly:!0});e+=` (${(g==null?void 0:g.name)||t})`}else e+=` (${t})`;break;case n.CUSTOM:e=`${e}: ${t}`;break}return e}function Ae(l,t=Le){if(l.length===0)return;const e={};for(const i of l){const o=`${i.rollType}_${i.rollKey||""}`;e[o]||(e[o]={rollType:i.rollType,rollKey:i.rollKey,actors:[],gm:i.gm}),e[o].actors.push(i.actor)}const s=Object.values(e);if(s.length===1&&s[0].actors.length===1){const i=s[0];ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestReceived",{gm:i.gm,rollType:t(i.rollType,i.rollKey)}))}else{const i=[];for(const o of s){const a=t(o.rollType,o.rollKey),r=o.actors.join(", ");i.push(`${a} (${r})`)}ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsReceivedMultiple",{gm:s[0].gm,requests:i.join("; ")}))}}function Ne(l){const t=l.ownership||{};for(const[e,s]of Object.entries(t))if(s>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const i=game.users.get(e);if(i&&!i.isGM)return i}return null}function De(l,t=game.user){if(!(l!=null&&l.length))return;l.map(s=>canvas.tokens.get(s)).filter(s=>s).forEach(s=>s.setTarget(!0,{user:t}))}function ne(l){return l.type!=="character"&&l.type!=="npc"?!1:Object.entries(l.ownership).some(([t,e])=>{const s=game.users.get(t);return s&&!s.isGM&&e>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})}function Ce(l){if(l.type!=="character"&&l.type!=="npc")return!1;const t=game.scenes.active;return t&&t.tokens.some(e=>e.actorId===l.id)}function re(l,t){if(!game.scenes.active)return;const s=canvas.tokens.placeables.filter(i=>{var o;return((o=i.actor)==null?void 0:o.id)===l});for(const i of s)t?i.control({releaseOthers:!1}):i.release()}function Te(l){return new Promise(t=>setTimeout(t,l))}function we(){var l;return!((l=ui==null?void 0:ui.sidebar)!=null&&l._collapsed)}function ve(l){const t=document.querySelector("body");l?t.classList.add("sidebar-expanded"):t.classList.remove("sidebar-expanded")}function qe(l,t){var a;const e=[];if(!l||t.size===0)return e;const s=z.ROLL_REQUEST_OPTIONS[l];if(!s||!s.subList)return e;const i=Array.from(t)[0],o=game.actors.get(i);if(s.subList==="tools"){const r=((a=CONFIG.DND5E.enrichmentLookup)==null?void 0:a.tools)||CONFIG.DND5E.tools||{};for(const[c,u]of Object.entries(r)){let g=c;if(u!=null&&u.id){const f=dnd5e.documents.Trait.getBaseItem(u.id,{indexOnly:!0});g=(f==null?void 0:f.name)||c}else g=c.replace(/([A-Z])/g," $1").replace(/^./,f=>f.toUpperCase()).trim();e.push({id:c,name:g,rollable:!0})}e.sort((c,u)=>c.name.localeCompare(u.name))}else if(o&&s.actorPath){const r=foundry.utils.getProperty(o,s.actorPath)||{},c=CONFIG.DND5E[s.subList];for(const[u,g]of Object.entries(r)){let f="";s.subList==="skills"&&(c!=null&&c[u])||s.subList==="abilities"&&(c!=null&&c[u])?f=c[u].label:f=g.label||game.i18n.localize(g.name||u)||u,e.push({id:u,name:f,rollable:!0})}s.subList==="skills"&&e.sort((u,g)=>u.name.localeCompare(g.name))}return e}const I=class I{static notify(t,e,s={}){if(!s.batch){ui.notifications[t](e);return}s.batchData&&(I.pendingNotifications.push(s.batchData),I.notificationTimer&&clearTimeout(I.notificationTimer),I.notificationTimer=setTimeout(()=>{Ae(I.pendingNotifications),I.pendingNotifications=[],I.notificationTimer=null},I.NOTIFICATION_BATCH_DELAY))}static notifyRollRequestsSent(t,e){const s=Object.entries(t);if(s.length!==0)if(s.length===1){const i=Object.values(t)[0],o=i.actors.map(a=>a.name).join(", ");ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsSentSingle",{rollType:e,actors:o,player:i.player.name}))}else{const i=s.map(([o,a])=>{const r=a.actors.map(c=>c.name).join(", ");return`${a.player.name} (${r})`});ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsSentMultiple",{rollType:e,count:s.length,players:i.join("; ")}))}}static clearPending(){I.notificationTimer&&(clearTimeout(I.notificationTimer),I.notificationTimer=null),I.pendingNotifications=[]}};O(I,"pendingNotifications",[]),O(I,"notificationTimer",null),O(I,"NOTIFICATION_BATCH_DELAY",500);let v=I;const oe={async ensureActorInCombat(l){if(!game.combat)return null;let t=game.combat.getCombatantByActor(l.id);if(t)return t;const e=l.getActiveTokens();try{return e.length?(await game.combat.createEmbeddedDocuments("Combatant",[{tokenId:e[0].id,actorId:l.id}]))[0]:(await game.combat.createEmbeddedDocuments("Combatant",[{actorId:l.id}]))[0]}catch(s){return console.error(`Failed to add actor ${l.name} to combat:`,s),null}},buildAbilityCheckConfig(l,t){const e={ability:l,advantage:t.advantage,disadvantage:t.disadvantage,target:t.target,isRollRequest:t.isRollRequest};t.situational&&(e.rolls=[{parts:["@situational"],data:{situational:t.situational},options:{},situational:!0}]);const s={configure:!t.fastForward},i={rollMode:t.rollMode,create:t.chatMessage!==!1};return[e,s,i]},buildSkillCheckConfig(l,t){var o,a;const e={skill:l,advantage:t.advantage,disadvantage:t.disadvantage,ability:t.ability,chooseAbility:!t.ability};t.situational&&(e.bonus=t.situational),t.target&&(e.target=t.target);const s={configure:!t.fastForward},i={rollMode:t.rollMode,create:t.chatMessage!==!1,data:{}};if(t.rollTitle)i.data.flavor=t.rollTitle;else if(t.ability){const r=((o=CONFIG.DND5E.skills[l])==null?void 0:o.label)||l,c=((a=CONFIG.DND5E.abilities[t.ability])==null?void 0:a.label)||t.ability;i.data.flavor=game.i18n.format("DND5E.SkillPromptTitle",{skill:r,ability:c})}return[e,s,i]},buildToolCheckConfig(l,t){var o,a,r;const e={tool:l,advantage:t.advantage,disadvantage:t.disadvantage,ability:t.ability,chooseAbility:!t.ability};t.situational&&(e.bonus=t.situational),t.target&&(e.target=t.target);const s={configure:!t.fastForward},i={rollMode:t.rollMode,create:t.chatMessage!==!1,data:{}};if(t.rollTitle)i.data.flavor=t.rollTitle;else if(t.ability){let c=l;const u=(a=(o=CONFIG.DND5E.enrichmentLookup)==null?void 0:o.tools)==null?void 0:a[l];if(u!=null&&u.id){const f=dnd5e.documents.Trait.getBaseItem(u.id,{indexOnly:!0});c=(f==null?void 0:f.name)||l}const g=((r=CONFIG.DND5E.abilities[t.ability])==null?void 0:r.label)||t.ability;i.data.flavor=`${g} (${c}) ${game.i18n.localize("DND5E.Check")}`}return[e,s,i]}},Ge={[n.ABILITY_CHECK]:async(l,t,e)=>{const[s,i,o]=oe.buildAbilityCheckConfig(t,e);await l.rollAbilityCheck(s,i,o)},[n.SAVING_THROW]:async(l,t,e)=>{const[s,i,o]=oe.buildAbilityCheckConfig(t,e);await l.rollSavingThrow(s,i,o)},[n.SKILL]:async(l,t,e)=>{const[s,i,o]=oe.buildSkillCheckConfig(t,e);await l.rollSkill(s,i,o)},[n.TOOL]:async(l,t,e)=>{const[s,i,o]=oe.buildToolCheckConfig(t,e);await l.rollToolCheck(s,i,o)},[n.CONCENTRATION]:async(l,t,e)=>{const s={advantage:e.advantage,disadvantage:e.disadvantage,target:e.target};e.situational&&(s.bonus=e.situational);const i={configure:!e.fastForward&&!e.skipDialog},o={rollMode:e.rollMode,create:e.chatMessage!==!1};await l.rollConcentration(s,i,o)},[n.INITIATIVE_DIALOG]:async(l,t,e)=>{if(!game.combat){ui.notifications.warn(game.i18n.localize("COMBAT.NoneActive"));return}if(!await oe.ensureActorInCombat(l)){ui.notifications.warn(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.actorNotInCombat",{actor:l.name}));return}const i={advantage:e.advantage,disadvantage:e.disadvantage};e.situational&&(i.bonus=e.situational);const o={configure:!e.fastForward&&!e.skipDialog},a={rollMode:e.rollMode,create:e.chatMessage!==!1};await(e.skipDialog||e.fastForward?l.rollInitiative(i,o,a):l.rollInitiativeDialog(i,o,a))},[n.DEATH_SAVE]:async(l,t,e)=>{const s={advantage:e.advantage,disadvantage:e.disadvantage,target:e.target};e.situational&&(s.bonus=e.situational);const i={configure:!e.fastForward&&!e.skipDialog},o={rollMode:e.rollMode,create:e.chatMessage!==!1};await l.rollDeathSave(s,i,o)},[n.CUSTOM]:async(l,t,e)=>{try{const s=new Roll(t,l.getRollData());await s.evaluate({async:!0}),await s.toMessage({speaker:ChatMessage.getSpeaker({actor:l}),flavor:game.i18n.localize("CRLNGN_ROLLS.rollTypes.custom")})}catch{ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:t}))}}};var F;const U=class U extends foundry.applications.api.HandlebarsApplicationMixin(foundry.applications.api.ApplicationV2){constructor(e={}){d.method(U,"constructor");super(e);O(this,"_onClickOutside",e=>{if(d.method(this,"_onClickOutside"),this.isLocked)return;const s=this.element;s&&(e.target.closest(".roll-requests-menu")||s.contains(e.target)||e.target.closest("#crlngn-requests-icon")||e.target.closest(".dialog, .app, .notification")||this.close())});this.selectedActors=new Set,this.currentTab="pc",this.selectedRequestType=null,this.isLocked=!1,this.optionsExpanded=game.user.getFlag(z.ID,"menuOptionsExpanded")??!1,this._initializeFromSelectedTokens()}async _prepareContext(e){d.method(this,"_prepareContext");const s=await super._prepareContext(e),i=game.actors.contents,o=[],a=[],r=game.scenes.active;for(const h of i){if(h.type!=="character"&&h.type!=="npc")continue;const C={id:h.id,uuid:h.uuid,name:h.name,img:h.img,selected:this.selectedActors.has(h.id),crlngnStats:this._getActorStats(h)};Object.entries(h.ownership).some(([_,y])=>{const p=game.users.get(_);return p&&!p.isGM&&y>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})?o.push(C):r&&r.tokens.some(y=>y.actorId===h.id)&&a.push(C)}const c=q(),u=E.get(c.rollRequestsEnabled.tag),g=E.get(c.skipDialogs.tag),f=this.currentTab==="pc"?o:a,R=f.length>0&&f.every(h=>this.selectedActors.has(h.id)),b=[];if(this.selectedActors.size>0)for(const[h,C]of Object.entries(z.ROLL_REQUEST_OPTIONS))b.push({id:h,name:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${C.name}`)||C.label,rollable:C.subList==null,hasSubList:!!C.subList,selected:this.selectedRequestType===h});const m=qe(this.selectedRequestType,this.selectedActors);return{...s,actors:f,currentTab:this.currentTab,isPCTab:this.currentTab==="pc",isNPCTab:this.currentTab==="npc",selectedTab:this.currentTab,rollRequestsEnabled:u,skipDialogs:g,selectAllOn:R,hasSelectedActors:this.selectedActors.size>0,requestTypes:b,rollTypes:m,showNames:!0,actorsLocked:this.isLocked,optionsExpanded:this.optionsExpanded}}_getActorStats(e){var o,a,r,c,u;d.method(this,"_getActorStats");const s=e.system,i=[];return(o=s.attributes)!=null&&o.hp&&i.push({abbrev:"HP",value:s.attributes.hp.value}),(a=s.attributes)!=null&&a.ac&&i.push({abbrev:"AC",value:s.attributes.ac.value}),(r=s.attributes)!=null&&r.spelldc&&i.push({abbrev:"DC",value:s.attributes.spelldc}),(u=(c=s.skills)==null?void 0:c.prc)!=null&&u.passive&&i.push({abbrev:"PP",value:s.skills.prc.passive}),i}_onRender(e,s){if(d.method(this,"_onRender"),super._onRender(e,s),this._attachListeners(),this.optionsExpanded){const i=this.element.querySelector(".options-toggle"),o=this.element.querySelector("li.options");i&&i.classList.add("expanded"),o&&o.classList.add("expanded")}setTimeout(()=>{document.addEventListener("click",this._onClickOutside,!0)},100),this._tokenControlHook=Hooks.on("controlToken",this._onTokenControlChange.bind(this))}_onTokenControlChange(e,s){d.method(this,"_onTokenControlChange"),this.rendered&&(this._ignoreTokenControl||(this._tokenUpdateTimeout&&clearTimeout(this._tokenUpdateTimeout),this._tokenUpdateTimeout=setTimeout(()=>{this._initializeFromSelectedTokens(),this.render(),this._tokenUpdateTimeout=null},100)))}_attachListeners(){var a,r,c,u,g;d.method(this,"_attachListeners");const e=this.element;(a=e.querySelector("#crlngn-requests-toggle"))==null||a.addEventListener("change",this._onToggleRollRequests.bind(this)),(r=e.querySelector("#crlngn-skip-dialogs"))==null||r.addEventListener("change",this._onToggleSkipDialogs.bind(this)),(c=e.querySelector("#crlngn-actors-all"))==null||c.addEventListener("change",this._onToggleSelectAll.bind(this)),(u=e.querySelector("#crlngn-actors-lock"))==null||u.addEventListener("click",this._onToggleLock.bind(this)),(g=e.querySelector(".options-toggle"))==null||g.addEventListener("click",this._onToggleOptions.bind(this)),e.querySelectorAll(".actor-tab").forEach(f=>{f.addEventListener("click",this._onTabClick.bind(this))}),e.querySelectorAll(".actor").forEach(f=>{f.addEventListener("click",this._onActorClick.bind(this))}),e.querySelectorAll(".actor-select").forEach(f=>{f.addEventListener("click",this._onActorSelectClick.bind(this))});const i=e.querySelector(".request-types");i&&i.addEventListener("click",f=>{const R=f.target.closest("li");if(R&&R.dataset.id){const b={...f,currentTarget:R};this._onRequestTypeClick(b)}});const o=e.querySelector(".roll-types");o&&o.addEventListener("click",f=>{const R=f.target.closest("li");if(R&&R.dataset.id){const b={...f,currentTarget:R};this._onRollTypeClick(b)}})}async _onToggleRollRequests(e){d.method(this,"_onToggleRollRequests");const s=q(),i=e.target.checked;await E.set(s.rollRequestsEnabled.tag,i),_e.updateRollRequestsIcon(i)}async _onToggleSkipDialogs(e){d.method(this,"_onToggleSkipDialogs");const s=q(),i=e.target.checked;await E.set(s.skipDialogs.tag,i)}_onToggleSelectAll(e){d.method(this,"_onToggleSelectAll");const s=e.target.checked;this._ignoreTokenControl=!0,(this.currentTab==="pc"?game.actors.contents.filter(o=>ne(o)):game.actors.contents.filter(o=>!ne(o)&&Ce(o))).forEach(o=>{s?(this.selectedActors.add(o.id),re(o.id,!0)):(this.selectedActors.delete(o.id),re(o.id,!1))}),setTimeout(()=>{this._ignoreTokenControl=!1},200),this.render(),this._updateRequestTypesVisibility()}_onToggleLock(e){d.method(this,"_onToggleLock"),e.preventDefault(),this.isLocked=!this.isLocked;const s=e.currentTarget;s.classList.remove("fa-lock-keyhole","fa-lock-keyhole-open"),s.classList.add(this.isLocked?"fa-lock-keyhole":"fa-lock-keyhole-open")}async _onToggleOptions(e){d.method(this,"_onToggleOptions"),e.preventDefault(),this.optionsExpanded=!this.optionsExpanded,await game.user.setFlag(z.ID,"menuOptionsExpanded",this.optionsExpanded);const s=e.currentTarget||e.target.closest(".options-toggle");s&&s.classList.toggle("expanded",this.optionsExpanded);const i=this.element.querySelector("li.options");i&&i.classList.toggle("expanded",this.optionsExpanded)}_initializeFromSelectedTokens(){var s;d.method(this,"_initializeFromSelectedTokens");const e=((s=canvas.tokens)==null?void 0:s.controlled)||[];this.selectedActors.clear();for(const i of e)if(i.actor&&(this.selectedActors.add(i.actor.id),this.selectedActors.size===1)){const o=ne(i.actor);this.currentTab=o?"pc":"npc"}}async _onTabClick(e){var i;d.method(this,"_onTabClick");const s=e.currentTarget.dataset.tab;s!==this.currentTab&&(this.selectedActors.clear(),(i=canvas.tokens)==null||i.releaseAll(),this.selectedRequestType=null,this.currentTab=s,await this.render())}_onActorClick(e){if(d.method(this,"_onActorClick"),e.target.closest(".actor-select"))return;const i=e.currentTarget.dataset.id;this._toggleActorSelection(i)}_onActorSelectClick(e){d.method(this,"_onActorSelectClick"),e.stopPropagation();const s=e.currentTarget.dataset.id;this._toggleActorSelection(s)}_toggleActorSelection(e){d.method(this,"_toggleActorSelection"),this._ignoreTokenControl=!0,this.selectedActors.has(e)?(this.selectedActors.delete(e),re(e,!1)):(this.selectedActors.add(e),re(e,!0)),setTimeout(()=>{this._ignoreTokenControl=!1},100),this.render(),this._updateRequestTypesVisibility(),this._updateSelectAllState()}_updateRequestTypesVisibility(){d.method(this,"_updateRequestTypesVisibility"),this.render()}_updateSelectAllState(){d.method(this,"_updateSelectAllState");const e=this.element.querySelector("#crlngn-actors-all"),s=this.currentTab==="pc"?"pc":"npc",i=this.element.querySelectorAll(`.${s}-actors .actor-item input[type="checkbox"]`),o=Array.from(i).filter(a=>a.checked).length;e.checked=o>0&&o===i.length,e.indeterminate=o>0&&o<i.length}async _onRequestTypeClick(e){d.method(this,"_onRequestTypeClick");const i=e.currentTarget.dataset.id,o=z.ROLL_REQUEST_OPTIONS[i];if(!o){d.error("Unknown request type:",i);return}this.selectedRequestType===i?this.selectedRequestType=null:this.selectedRequestType=i,o.subList?await this.render():this.selectedRequestType&&this._triggerRoll(i,null)}_onRollTypeClick(e){d.method(this,"_onRollTypeClick");const s=e.currentTarget.dataset.id;this._triggerRoll(this.selectedRequestType,s)}async _triggerRoll(e,s){var _,y;d.method(this,"_triggerRoll");const i=q(),o=Array.from(this.selectedActors),a=E.get(i.skipDialogs.tag),r=o.filter(p=>{const T=game.actors.get(p);if(!T)return!1;const S=ne(T),k=!S&&Ce(T);return this.currentTab==="pc"&&S||this.currentTab==="npc"&&k}),c=z.ROLL_REQUEST_OPTIONS[e],u=(_=(c==null?void 0:c.name)||e)==null?void 0:_.toLowerCase();if(u===n.CUSTOM){const p=await this._showCustomRollDialog();if(!p)return;s=p}if(u===n.INITIATIVE_DIALOG&&!game.combat)if(await Dialog.confirm({title:game.i18n.localize("COMBAT.Create"),content:"<p>"+game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.noCombatActive")+"</p>",yes:()=>!0,no:()=>!1,defaultYes:!0,options:{classes:["crlngn-rolls-dialog"]}}))await(await game.combats.documentClass.create({scene:game.scenes.active.id})).activate(),v.notify("info",game.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.combatCreated"));else return;let g=r;if(u===n.INITIATIVE_DIALOG&&game.combat){const p=r.map(k=>game.actors.get(k)).filter(k=>k),T=[],S=new Set;for(const k of p){const D=game.combat.getCombatantByActor(k.id);D&&D.initiative!==null&&(T.push(k.name),S.add(k.id))}if(T.length>0){if(await Dialog.confirm({title:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.rerollInitiativeTitle"),content:"<p>"+game.i18n.format("CRLNGN_ROLLS.ui.dialogs.rerollInitiative",{actors:T.join(", ")})+"</p>",yes:()=>!0,no:()=>!1,defaultYes:!1,options:{classes:["crlngn-rolls-dialog"]}}))for(const D of S){const V=game.combat.getCombatantByActor(D);V&&await V.update({initiative:null})}else if(g=r.filter(D=>!S.has(D)),g.length===0){v.notify("info",game.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.allActorsHaveInitiative"));return}}}let f=g.map(p=>game.actors.get(p)).filter(p=>p);if(u===n.DEATH_SAVE){const p=[],T=[];for(const S of f){const k=((y=S.system.attributes.hp)==null?void 0:y.value)||0,D=S.system.attributes.death||{},V=D.success||0,j=D.failure||0;k<=0&&V<3&&j<3?p.push(S):T.push(S.name)}T.length>0&&v.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.actorsSkippingDeathSave",{actors:T.join(", ")})),f=p}if(!f.length){v.notify("warn","No valid actors selected");return}const R=[],b=[];for(const p of f){const T=Ne(p);T?R.push({actor:p,owner:T}):b.push(p)}const m=E.get(i.rollRequestsEnabled.tag);let h=null;if(a)h={advantage:!1,disadvantage:!1,situational:"",parts:[],rollMode:game.settings.get("core","rollMode"),chatMessage:!0,isRollRequest:!1,skipDialog:!0,sendRequest:m&&R.length>0},u===n.DEATH_SAVE&&(h.target=10);else if(h=await([n.SKILL,n.TOOL].includes(u)?ue:x).getConfiguration(f,u,s,{skipDialogs:a,defaultSendRequest:m}),!h)return;const C=[],A=[];if(h.sendRequest){for(const{actor:p,owner:T}of R){if(!T.active){E.get(i.showOfflineNotifications.tag)&&v.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.playerOffline",{player:T.name})),A.push(p);continue}this._sendRollRequestToPlayer(p,T,u,s,h,!0),C.push({actor:p,owner:T}),await Te(100)}C.length>0&&this._sendConsolidatedNotification(C,u,s)}else b.push(...R.map(({actor:p})=>p));if(A.length>0){const p={...h,skipDialog:!0};await this._handleNPCRolls(A,u,s,p)}if(b.length>0){const p={...h};p.fastForward=!0,p.skipDialog=!0,await this._handleNPCRolls(b,u,s,p)}setTimeout(()=>this.close(),500)}_sendRollRequestToPlayer(e,s,i,o,a,r=!1){d.method(this,"_sendRollRequestToPlayer");const c=q(),u=i==null?void 0:i.toLowerCase();let g=u;u===n.ABILITY_CHECK?g=n.ABILITY:u===n.SAVING_THROW?g=n.SAVE:u===n.INITIATIVE_DIALOG&&(g=n.INITIATIVE);const f={type:"rollRequest",requestId:foundry.utils.randomID(),actorId:e.id,rollType:g,rollKey:o,activityId:null,config:{rollMode:a.rollMode||game.settings.get("core","rollMode"),advantage:a.advantage||!1,disadvantage:a.disadvantage||!1,situational:a.situational||"",parts:a.parts||[],chatMessage:a.chatMessage!==!1,target:a.target,ability:a.ability,attackMode:a.attackMode,rollTitle:a.rollTitle},skipDialog:a.skipDialog||!1,targetTokenIds:Array.from(game.user.targets).map(R=>R.id),preserveTargets:E.get(c.useGMTargetTokens.tag)};H.execForUser("handleRollRequest",s.id,f),r||v.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestSent",{player:s.name,actor:e.name}))}_sendConsolidatedNotification(e,s,i){var c,u,g,f,R;d.method(this,"_sendConsolidatedNotification");const o={};for(const{actor:b,owner:m}of e)o[m.id]||(o[m.id]={player:m,actors:[]}),o[m.id].actors.push(b);for(const[b,m]of Object.entries(z.ROLL_REQUEST_OPTIONS))if(m.name===s)break;const a=s;let r=game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${a}`)||a;if(i){const b=a.toLowerCase();if(b===n.SKILL)r=`${r} (${((c=CONFIG.DND5E.skills[i])==null?void 0:c.label)||i})`;else if(b===n.SAVING_THROW)r=`${r} (${((u=CONFIG.DND5E.abilities[i])==null?void 0:u.label)||i})`;else if(b===n.ABILITY_CHECK)r=`${r} (${((g=CONFIG.DND5E.abilities[i])==null?void 0:g.label)||i})`;else if(b===n.TOOL){const m=(R=(f=CONFIG.DND5E.enrichmentLookup)==null?void 0:f.tools)==null?void 0:R[i];if(m!=null&&m.id){const h=dnd5e.documents.Trait.getBaseItem(m.id,{indexOnly:!0});r=`${r} (${(h==null?void 0:h.name)||i})`}else r=`${r} (${i})`}else b===n.CUSTOM&&(r=`${r}: ${i}`)}v.notifyRollRequestsSent(o,r)}async _handleNPCRolls(e,s,i,o){d.method(this,"_handleNPCRolls");const a={advantage:o.advantage||!1,disadvantage:o.disadvantage||!1,situational:o.situational||"",parts:o.parts||[],rollMode:o.rollMode||game.settings.get("core","rollMode"),fastForward:o.skipDialog||!1,skipDialog:o.skipDialog||!1,chatMessage:o.chatMessage!==!1,isRollRequest:!1,target:o.target,ability:o.ability,attackMode:o.attackMode};for(const r of e)await this._executeActorRoll(r,s,i,a),await Te(100)}async _executeActorRoll(e,s,i,o){d.method(this,"_executeActorRoll");try{const a=s.toLowerCase(),r=Ge[a];r?await r(e,i,o):v.notify("warn",`Unknown roll type: ${s}`)}catch{v.notify("error",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:e.name}))}}async _onClose(e){d.method(this,"_onClose"),await super._onClose(e),this.selectedActors.clear(),this.selectedRequestType=null,document.removeEventListener("click",this._onClickOutside,!0),this._tokenControlHook&&(Hooks.off("controlToken",this._tokenControlHook),this._tokenControlHook=null),this._tokenUpdateTimeout&&(clearTimeout(this._tokenUpdateTimeout),this._tokenUpdateTimeout=null)}setPosition(e={}){return d.method(this,"setPosition"),this}async _showCustomRollDialog(){return d.method(this,"_showCustomRollDialog"),new Promise(async e=>{const s=await renderTemplate(`modules/${z.ID}/templates/custom-roll-dialog.hbs`,{formula:"",readonly:!1});new Dialog({title:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.customRollTitle"),content:s,buttons:{roll:{icon:'<i class="fas fa-dice-d20"></i>',label:game.i18n.localize("Roll"),callback:o=>{const r=(o[0]||o).querySelector("#custom-roll-formula").value.trim();e(r||null)}},cancel:{icon:'<i class="fas fa-times"></i>',label:game.i18n.localize("Cancel"),callback:()=>e(null)}},default:"roll",render:o=>{const a=o[0]||o,r=a.querySelector("#custom-roll-formula"),c={};a.querySelectorAll(".dice-button").forEach(u=>{u.addEventListener("click",g=>{const f=g.currentTarget.dataset.die;c[f]=(c[f]||0)+1;const R=[];for(const[b,m]of Object.entries(c))m>0&&R.push(`${m}${b}`);r.value=R.join(" + ")})})}},{classes:["crlngn-rolls-dialog","crlngn-custom-roll-dialog"]}).render(!0)})}static toggle(){d.method(U,"toggle"),Y(this,F)?Y(this,F).rendered?Y(this,F).close():(Y(this,F)._initializeFromSelectedTokens(),Y(this,F).render(!0)):(pe(this,F,new U),Y(this,F).render(!0))}};F=new WeakMap,Re(U,F,null),O(U,"DEFAULT_OPTIONS",{id:"crlngn-requests-menu",classes:["roll-requests-menu"],tag:"div",window:{frame:!1,resizable:!1,minimizable:!1},position:null}),O(U,"PARTS",{main:{template:`modules/${z.ID}/templates/requests-menus.hbs`}});let he=U;class _e{static addSidebarControls(t,e,s){if(!game.user.isGM||t.id!=="chat")return;const o=(e[0]||e).querySelector("#chat-controls");if(!o||o.querySelector(".roll-requests-icon"))return;const a=q(),r=E.get(a.rollRequestsEnabled.tag),c=document.createElement("a");c.id="crlngn-requests-icon",c.setAttribute("data-tooltip-direction","RIGHT"),c.className=`chat-control-icon roll-requests-icon${r?" active":""}`,c.title=game.i18n.localize("CRLNGN_ROLLS.ui.menus.rollRequestsTitle"),c.innerHTML=`<i class="fas fa-bolt${r?"":"-slash"}"></i>`;const u=o.querySelector(".chat-control-icon");u?u.parentNode.insertBefore(c,u):o.insertBefore(c,o.firstChild),c.addEventListener("click",()=>{he.toggle()})}static updateRollRequestsIcon(t){const e=document.querySelector("#crlngn-requests-icon i");e&&(e.className=`fas fa-bolt${t?"":"-slash"}`)}}class ye{static initialize(){Hooks.once(J.INIT,this._onInit.bind(this)),Hooks.once(J.READY,this._onReady.bind(this))}static _onInit(){q(),document.body.classList.add("crlngn-rolls"),E.registerSettings(),W.initialize(),this._registerHook(J.RENDER_SIDEBAR_TAB,this._onRenderSidebarTab.bind(this))}static _onReady(){const t=q();E.get(t.debugMode.tag)&&(CONFIG.debug.hooks=!0),ge.initialize(),this._registerDnd5eHooks(),game.user.isGM?this._registerGMHooks():W.getDiceConfig(),ve(we())}static _registerDnd5eHooks(){this._registerHook(M.POST_ROLL_CONFIG,this._onPostRollConfig.bind(this)),this._registerHook(J.PRE_CREATE_CHAT_MESSAGE,this._onPreCreateChatMessage.bind(this)),this._registerHook(J.PRE_CREATE_CHAT_MESSAGE,this._onPreCreateChatMessageFlavor.bind(this)),this._registerHook(M.RENDER_ROLL_CONFIGURATION_DIALOG,this._onRenderRollConfigDialog.bind(this))}static _registerGMHooks(){this._registerHook(J.USER_CONNECTED,this._onUserConnected.bind(this)),game.users.forEach(t=>{this._onUserConnected(t)})}static _onPostRollConfig(t,e,s,i){e._showRequestedBy&&t.length>0&&(i.data=i.data||{},i.data._showRequestedBy=!0,i.data._requestedBy=e._requestedBy)}static _onPreCreateChatMessage(t,e,s,i){var o;if(e._showRequestedBy&&((o=e.rolls)==null?void 0:o.length)>0){const a=e._requestedBy||"GM",r=game.i18n.format("CRLNGN_ROLL_REQUESTS.chat.requestedBy",{gm:a}),c=e.flavor||"";e.flavor=c?`${c} ${r}`:r}}static _onPreCreateChatMessageFlavor(t,e,s,i){var o,a;if(((o=e.rolls)==null?void 0:o.length)>0&&e.rolls[0])try{const r=e.rolls[0];(a=r.options)!=null&&a._customFlavor&&(e.flavor=r.options._customFlavor)}catch{}}static _onRenderRollConfigDialog(t,e,s){var a,r,c;if(d.log("_onRenderRollConfigDialog triggered",[{app:t,config:t.config,rolls:(a=t.config)==null?void 0:a.rolls,situational:(r=t.config)==null?void 0:r.situational,bonus:(c=t.config)==null?void 0:c.bonus,data:s}]),t._situationalTriggered)return;const i=e.querySelectorAll('input[name*="situational"]');d.log("Found situational inputs:",[i.length]);let o=!1;t.config.bonus=t.config.bonus||t.config.rolls[0].data.situational,i.forEach((u,g)=>{var f,R,b,m,h,C;d.log(`Situational input ${g}:`,[{name:u.name,value:u.value,type:u.type}]),!u.value&&((f=t.config)!=null&&f.bonus||(h=(m=(b=(R=t.config)==null?void 0:R.rolls)==null?void 0:b[0])==null?void 0:m.data)!=null&&h.situational)&&((C=t.config)!=null&&C.isConcentration)&&(d.log("Populating concentration situational bonus:",t.config.bonus),u.value=t.config.bonus||t.config.rolls[0].data.situational,o=!0),u.value&&!o&&(t._situationalTriggered=!0,o=!0,setTimeout(()=>{var A,_,y;u.dispatchEvent(new Event("change",{bubbles:!0,cancelable:!1})),(y=(_=(A=t.config)==null?void 0:A.rolls)==null?void 0:_[0])!=null&&y.data&&delete t.config.rolls[0].data.situational},50))})}static _onUserConnected(t){t.active&&t.id!==game.user.id&&W.requestDiceConfigFromUser(t.id)}static _onRenderSidebarTab(t,e,s){_e.addSidebarControls(t,e,s)}static _onPreConfigureInitiative(t,e){t._initiativeSituationalBonus&&(d.log("Adding situational bonus to initiative:",["actor:",t.name,"situational:",t._initiativeSituationalBonus,"config before:",e]),(!e.rolls||e.rolls.length===0)&&(e.rolls=[{parts:[],data:{},options:{}}]),e.rolls[0].data.situational=t._initiativeSituationalBonus,d.log("Flash Rolls 5e | Initiative config after adding situational:",e))}static _registerHook(t,e){const s=Hooks.on(t,e);return this.registeredHooks.set(`${t}_${s}`,s),s}static unregisterAll(){this.registeredHooks.forEach((t,e)=>{const s=e.split("_")[0];Hooks.off(s,t)}),this.registeredHooks.clear()}static isRegistered(t){for(const e of this.registeredHooks.keys())if(e.startsWith(`${t}_`))return!0;return!1}}O(ye,"registeredHooks",new Map);const G={addSituationalBonus(l,t){return t&&(d.log("Flash Rolls 5e | Adding situational bonus:",[t,"to config:",l]),l.bonus=t,l.situational=t,(!l.rolls||l.rolls.length===0)&&(l.rolls=[{parts:[],data:{},options:{}}],l.rolls[0].data.situational=t),d.log("Flash Rolls 5e | Config after adding bonus:",[l])),l},buildAbilityConfig(l,t){return{ability:l.rollKey,advantage:l.config.advantage||!1,disadvantage:l.config.disadvantage||!1,target:l.config.target,isRollRequest:!0,_showRequestedBy:!0,_requestedBy:l.config.requestedBy||"GM"}},async executeActivityRoll(l,t,e,s,i,o){e.rollKey&&await B.executeActivityRoll(l,t,e.rollKey,e.activityId,{...s,dialog:i,message:o})},async handleCustomRoll(l,t){const e=t.rollKey,s=await renderTemplate(`modules/${P}/templates/custom-roll-dialog.hbs`,{formula:e,readonly:!0});new Dialog({title:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.customRollTitle"),content:s,buttons:{roll:{icon:'<i class="fas fa-dice-d20"></i>',label:game.i18n.localize("Roll"),callback:async()=>{try{const o=new Roll(e,l.getRollData());await o.evaluate({async:!0}),await o.toMessage({speaker:ChatMessage.getSpeaker({actor:l}),flavor:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${n.CUSTOM}`)})}catch{ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:e}))}}},cancel:{icon:'<i class="fas fa-times"></i>',label:game.i18n.localize("Cancel")}},default:"roll"},{classes:["crlngn-rolls-dialog","crlngn-custom-roll-dialog"]}).render(!0)}},ce={[n.ABILITY]:async(l,t,e,s,i)=>{const o=G.buildAbilityConfig(t,e);G.addSituationalBonus(o,t.config.situational),await l.rollAbilityCheck(o,s,i)},[n.ABILITY_CHECK]:async(l,t,e,s,i)=>ce[n.ABILITY](l,t,e,s,i),[n.SAVE]:async(l,t,e,s,i)=>{const o=G.buildAbilityConfig(t,e);G.addSituationalBonus(o,t.config.situational),await l.rollSavingThrow(o,s,i)},[n.SAVING_THROW]:async(l,t,e,s,i)=>ce[n.SAVE](l,t,e,s,i),[n.SKILL]:async(l,t,e,s,i)=>{const o={...e,skill:t.rollKey,chooseAbility:!0};t.config.ability&&(o.ability=t.config.ability),await l.rollSkill(o,s,i)},[n.TOOL]:async(l,t,e,s,i)=>{const o={...e,tool:t.rollKey,chooseAbility:!0};t.config.ability&&(o.ability=t.config.ability),await l.rollToolCheck(o,s,i)},[n.CONCENTRATION]:async(l,t,e,s,i)=>{e.legacy=!1,G.addSituationalBonus(e,t.config.situational),await l.rollConcentration(e,s,i)},[n.ATTACK]:async(l,t,e,s,i)=>{await G.executeActivityRoll(l,n.ATTACK,t,e,s,i)},[n.DAMAGE]:async(l,t,e,s,i)=>{await G.executeActivityRoll(l,n.DAMAGE,t,e,s,i)},[n.ITEM_SAVE]:async(l,t,e,s,i)=>{await G.executeActivityRoll(l,n.ITEM_SAVE,t,e,s,i)},[n.INITIATIVE]:async(l,t,e,s,i)=>{if(!game.combat){ui.notifications.warn(game.i18n.localize("COMBAT.NoneActive"));return}const o=l.getInitiativeRollConfig(e);G.addSituationalBonus(o,t.config.situational),await l.rollInitiativeDialog(o)},[n.INITIATIVE_DIALOG]:async(l,t,e,s,i)=>ce[n.INITIATIVE](l,t,e,s,i),[n.DEATH_SAVE]:async(l,t,e,s,i)=>{e.legacy=!1,G.addSituationalBonus(e,t.config.situational),await l.rollDeathSave(e,s,i)},[n.HIT_DIE]:async(l,t,e,s,i)=>{e.denomination=t.rollKey,await l.rollHitDie(e,s,i)},[n.CUSTOM]:async(l,t,e,s,i)=>{await G.handleCustomRoll(l,t)}};class ae{static async handleRequest(t){var i;if(d.method(ae,"handleRequest")("handling roll request",[t]),game.user.isGM)return;const s=game.actors.get(t.actorId);!s||!s.isOwner||(t.preserveTargets&&((i=t.targetTokenIds)==null?void 0:i.length)>0&&game.user.targets.size===0&&De(t.targetTokenIds),v.notify("info","",{batch:!0,batchData:{actor:s.name,rollType:t.rollType,rollKey:t.rollKey,gm:t.config.requestedBy||"GM"}}),ae.executeRequest(s,t))}static async executeRequest(t,e){var i;d.method(ae,"executeRequest")("executing roll request",[t,e]);try{const o=(i=e.rollType)==null?void 0:i.toLowerCase(),a={advantage:e.config.advantage||!1,disadvantage:e.config.disadvantage||!1,isRollRequest:!0,target:e.config.target,_showRequestedBy:!0,_requestedBy:e.config.requestedBy||"GM"};e.config.situational&&(a.bonus=e.config.situational),e.config.ability&&[n.SKILL,n.TOOL].includes(o)&&(a.ability=e.config.ability);const r={configure:!e.skipDialog,options:{defaultButton:e.config.advantage?"advantage":e.config.disadvantage?"disadvantage":"normal",window:{title:e.config.rollTitle||Le(o,e.rollKey),subtitle:t.name}}},c={rollMode:e.config.rollMode||game.settings.get("core","rollMode"),create:e.config.chatMessage!==!1},u=ce[o];u?await u(t,e,a,r,c):(d.warn(`No handler found for roll type: ${o}`),v.notify("warn",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:t.name||"Unknown Actor"})))}catch(o){d.error("Error executing roll request:",o),v.notify("error",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:t.name||"Unknown Actor"}))}}}class Z{static init(){H.initialize(Z.registerSocketCalls),ye.initialize()}static getDiceConfig(){return W.getDiceConfig()}static receiveDiceConfig(t,e){W.receiveDiceConfig(t,e)}static async handleRollRequest(t){return ae.handleRequest(t)}static registerSocketCalls(){H.registerCall(de.getDiceConfig,Z.getDiceConfig),H.registerCall(de.receiveDiceConfig,Z.receiveDiceConfig),H.registerCall(de.handleRollRequest,Z.handleRollRequest)}}Z.init();
//# sourceMappingURL=crlngn-roll-requests.js.map
