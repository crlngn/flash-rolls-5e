var Ct=Object.defineProperty;var W=C=>{throw TypeError(C)};var Et=(C,t,e)=>t in C?Ct(C,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):C[t]=e;var m=(C,t,e)=>Et(C,typeof t!="symbol"?t+"":t,e),St=(C,t,e)=>t.has(C)||W("Cannot "+e);var B=(C,t,e)=>t.has(C)?W("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(C):t.set(C,e);var p=(C,t,e)=>(St(C,t,"access private method"),e);const G={INIT:"init",READY:"ready",RENDER_CHAT_MESSAGE:"renderChatMessage",RENDER_ROLL_RESOLVER:"renderRollResolver",USER_CONNECTED:"userConnected"},At={READY:"socketlib.ready"},T={PRE_USE_ACTIVITY:"dnd5e.preUseActivity",POST_USE_ACTIVITY:"dnd5e.postUseActivity",PRE_ROLL_ABILITY_CHECK:"dnd5e.preRollAbilityCheck",PRE_ROLL_SAVING_THROW:"dnd5e.preRollSavingThrow",PRE_BEGIN_CONCENTRATING:"dnd5e.preBeginConcentrating",PRE_END_CONCENTRATION:"dnd5e.preEndConcentration",PRE_ROLL_CONCENTRATION_V2:"dnd5e.preRollConcentrationV2",PRE_ROLL_DEATH_SAVE_V2:"dnd5e.preRollDeathSaveV2",PRE_ROLL_SKILL_V2:"dnd5e.preRollSkillV2",PRE_ROLL_TOOL_V2:"dnd5e.preRollToolV2",PRE_ROLL_HIT_DIE_V2:"dnd5e.preRollHitDieV2",PRE_ROLL_CLASS_HIT_POINTS:"dnd5e.preRollClassHitPoints",PRE_ROLL_NPC_HIT_POINTS:"dnd5e.preRollNPCHitPoints",PRE_ROLL_INITIATIVE_DIALOG:"dnd5e.preRollInitiativeDialog",PRE_ROLL_INITIATIVE:"dnd5e.preRollInitiative",PRE_ROLL_ATTACK_V2:"dnd5e.preRollAttackV2",PRE_ROLL_DAMAGE_V2:"dnd5e.preRollDamageV2",PRE_ROLL_FORMULA_V2:"dnd5e.preRollFormulaV2",PRE_ROLL_RECHARGE_V2:"dnd5e.preRollRechargeV2",POST_ROLL_CONFIG:"dnd5e.postRollConfiguration",RENDER_ROLL_CONFIGURATION_DIALOG:"renderRollConfigurationDialog"},E="crlngn-roll-requests",q=["%cRoll That For Me","color:rgb(47, 151, 161); font-weight: bold;","|"],D={SAVING_THROW:{name:"savingthrow"},SKILL:{name:"skill"},TOOL:{name:"tool"},ATTACK:{name:"attack"},DAMAGE:{name:"damage"}},I={ATTACK:"attack",CHECK:"check",DAMAGE:"damage",SAVE:"save"},z={ACTIVITY:"activity",CHECK:"check"},x=class x{static log(t="",e=[],a=!1){try{const o=game.settings.get(E,"debugMode")||x.debugOn;if(!(a||o))return;console.log(...q,t,...e)}catch{console.log(...q,t,...e)}}static warn(t="",e=[]){console.warn(...q,t,...e)}static error(t,e={ui:!1,console:!0,permanent:!1}){var a;e.ui&&((a=ui.notifications)==null||a.error(t,{localize:!0,permanent:e.permanent})),e.console&&console.error(...q,t)}};m(x,"debugOn",!1);let i=x;const J={checkbox:"checkbox"},Q={client:"client",world:"world"},w=()=>({debugMode:{tag:"debug-mode",label:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.hint"),propType:Boolean,inputType:J.checkbox,default:!0,scope:Q.client,config:!0},rollRequestsEnabled:{tag:"roll-requests-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.hint"),propType:Boolean,inputType:J.checkbox,default:!0,scope:Q.world,config:!0}});class H{static getTargets(t){let e=game.users.find(o=>o.isGM===!0),a=t.targets||e.targets;return new Set([...a])}static getActorFromItem(t){const e=t.split(".")[1];return game.actors.get(e)}static isModuleOn(t){var a;const e=(a=game.modules)==null?void 0:a.get(t);return!!(e!=null&&e.active)}static isPrivateRoll(t){return t===CONST.DICE_ROLL_MODES.BLIND||t===CONST.DICE_ROLL_MODES.PRIVATE}static removeTemplateForItem(t){i.log("removeTemplateForItem - A",[t]);const e=y.get("remove-template");if(i.log("removeTemplateForItem - B",[e]),!e)return;const a=canvas.templates.objects.children.filter(o=>o.document.flags.dnd5e.item===(t==null?void 0:t.uuid));canvas.scene.deleteEmbeddedDocuments("MeasuredTemplate",a.map(o=>o.id))}static getUserFromActor(t){let e;if(!t)return null;const a=t?game.actors.get(t):null;return e=game.users.players.find(s=>s.active===!0&&s.character.id===t),e||game.users.players.forEach(s=>{s.active&&a.testUserPermission(s,foundry.CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER,{exact:!0})&&(e=s)}),i.log("getUserFromActor",[t,e]),e}static html(t,e){return t.querySelector(e)}}m(H,"getClientTargets",()=>{if(!game.user)return[];const t=Array.from(game.user.targets);return i.log("Selected Targets",[game.user.id,t,t.filter(e=>e.actor)]),t}),m(H,"getTargetDescriptors",()=>{var e,a;const t=new Map;for(const o of game.user.targets){const{name:s}=o,{img:r,system:n,uuid:l,statuses:d}=o.actor??{};if(l){const f=d.has("coverTotal")?null:(a=(e=n.attributes)==null?void 0:e.ac)==null?void 0:a.value;t.set(l,{name:s,img:r,uuid:l,ac:f??null})}}return Array.from(t.values())}),m(H,"findItemFromActor",(t,e,a)=>{const o=game.actors.get(t);if(i.log("findItemFromActor",[e,a]),!o)return null;let s=e?o.items.find(r=>r.id===e):null;return s||(s=a?o.items.find(r=>r.name.toLowerCase()===a.toLowerCase()):null,s||(s=o.items.find(r=>r.name.toLowerCase()===(a+" (Legacy)").toLowerCase()))),s}),m(H,"addCSSVars",(t,e)=>{let a=document.querySelector("#crlngn-chat-vars");if(!a){const g=document.querySelector("body");a=document.createElement("style"),a.id="crlngn-chat-vars",a.textContent=`body.crlngn-chat {
}
`,g.prepend(a)}let o=a.textContent,s=o.indexOf("body.crlngn-chat {"),r=o.indexOf("}",s);s===-1&&(o=`body.crlngn-chat {
}
`,s=0,r=o.indexOf("}"));const l=o.substring(s+18,r).split(";").map(g=>g.trim()).filter(g=>g!==""),d={};l.forEach(g=>{const S=g.split(":");if(S.length>=2){const v=S[0].trim(),P=S.slice(1).join(":").trim();v&&(d[v]=P)}}),t.includes("i18n")&&typeof e=="string"&&!e.startsWith('"')&&!e.startsWith("'")&&!e.match(/^url\(|^rgba?\(|^hsla?\(/)&&(e=`"${e}"`),d[t]=e;const f=Object.entries(d).map(([g,S])=>`  ${g}: ${S};`).join(`
`),R=o.substring(0,s)+`body.crlngn-chat {
`+f+`
}`+o.substring(r+1);a.textContent=R});const L=class L{static serializeForTransport(t,e=!1){return t==null||(e&&t.rolls&&Array.isArray(t.rolls)&&(t.rolls=t.rolls.map(a=>a instanceof Roll?a.toJSON():a)),i.log("ROLLS DATA",[t])),t}static deserializeFromTransport(t,e=!1){let a={};return t==null?t:(e&&t.rolls&&t.rolls.length>0&&(a={...t,rolls:t.rolls.map(o=>typeof o=="string"?Roll.fromJSON(o):Roll.fromJSON(JSON.stringify(o)))}),i.log("ROLLS RESULT",[a]),a)}};m(L,"socket"),m(L,"initialize",t=>{Hooks.once(At.READY,()=>{if(i.log("Attempting to register module..."),typeof socketlib>"u"){i.error("SocketUtil Error: socketlib is not loaded. Ensure it is installed and enabled."),ui.notifications.error(game.i18n.localize("CRLNGN_ROLLS.notifications.socketlibMissing"),{permanent:!0});return}try{L.socket=socketlib.registerModule(E),t&&t(),i.log("SocketUtil | Module registered",[L.socket])}catch(e){i.log("Problem registering module",[e])}})}),m(L,"registerCall",(t,e)=>{L.socket?(L.socket.register(t,e),i.log("SocketUtil - Registered callback",[L.socket,t])):i.log("SocketUtil - Failed to register callback (socket not initialized)",[L.socket,t])}),m(L,"sendMessage",(t,e)=>{i.log("SocketUtil - sendMessage",[t]),e&&e()}),m(L,"execForGMs",async(t,...e)=>{if(!L.socket){i.log("SocketUtil - Socket not initialized. Cannot execute as GM.");return}return await L.socket.executeForAllGMs(t,...e)}),m(L,"execForAll",async(t,...e)=>{if(!L.socket){i.log("SocketUtil - Socket not initialized. Cannot execute for all clients.");return}return await L.socket.executeForEveryone(t,...e)}),m(L,"execForUser",async(t,e,...a)=>{if(!L.socket){i.log("SocketUtil - Socket not initialized. Cannot execute as user.");return}const o=await L.socket.executeAsUser(t,e,...a);return i.log("SocketUtil - Executed as user.",[o]),o});let A=L;var K,X;const b=class b{static init(){Hooks.on(G.RENDER_CHAT_MESSAGE,p(b,K,X))}static rollModifiedAttack(t,e,a){i.log("rollModifiedAttack",[t,e,a,this]);const{activity:o}=b.getDataFromUuid(e.dataset.activityUuid);o.rollAttack({event:t,advantage:e.dataset.advantage==="true",disadvantage:e.dataset.disadvantage==="true",attackMode:e.dataset.attackMode,ammunition:e.dataset.ammunition,situational:e.dataset.situational},{},a)}static rollModifiedDamage(t,e,a){i.log("rollModifiedDamage",[t,e,a]),this.rollDamage()}static getDataFromUuid(t){var r,n,l;const e=t.split("."),a=game.actors.get(e[1]),o=a==null?void 0:a.items.get(e[3]),s=((n=(r=o==null?void 0:o.system)==null?void 0:r.activities)==null?void 0:n.get(e[5]))||((l=o==null?void 0:o.activities)==null?void 0:l.get(e[5]));return{actor:a,item:o,activity:s}}};K=new WeakSet,X=function(t,e,a){var n,l,d;const o=((n=t.flags)==null?void 0:n[E])||((d=(l=a.message)==null?void 0:l.flags)==null?void 0:d[E]);if(i.log("#onRenderChatMessage",[t,e,a,o]),!(o!=null&&o.modifiedActions))return;const s=o.activityUuid;if(!s)return;const{activity:r}=b.getDataFromUuid(s);r&&(i.log("#onRenderChatMessage Activating button listeners",[r,t,e]),r.activateChatListeners(t,e[0]))},B(b,K),m(b,"triggerActivity",async t=>{var M,_,N;const{activityUuid:e,diceTypes:a,config:o,dialog:s,message:r}=t,n=k.playerDiceConfigs[game.user.id],l=o.situational?Number(o.situational):0,d=e.split("."),f=game.actors.get(d[1]),R=f==null?void 0:f.items.get(d[3]),g=((_=(M=R==null?void 0:R.system)==null?void 0:M.activities)==null?void 0:_.get(d[5]))||((N=R==null?void 0:R.activities)==null?void 0:N.get(d[5])),S=a.map(j=>(n==null?void 0:n[j])!=="").includes(!0);if(i.log("triggerActivity #1",[g,a,S,t]),!f||!R||!g)return;const v={...o,parts:o.parts||[]},P={...s,configure:!S},h={...r,flavor:o.flavor};switch(l&&!v.parts.includes("@situational")&&v.parts.push("@situational"),o.type){case I.ATTACK:{b.useAttack({activity:g,config:v,message:h,dialog:P}),i.log("triggerActivity attack",[v,P,h]);break}case I.DAMAGE:{g.rollDamage(v,P,h);break}case I.SAVE:{i.log("triggerActivity #rollSave",[g.rollSave,f.rollSavingThrow]),h.create=!0,g.use(v,P,h);break}}i.log("triggerActivity #2",[e,o,t])}),m(b,"useAttack",async t=>{const{activity:e,config:a,message:o,dialog:s}=t,r=await e._usageChatContext(o);e.metadata.usage.actions;const n=r.buttons.find(R=>R.dataset.action==="rollAttack"),l=r.buttons.find(R=>R.dataset.action==="rollDamage"),d={situational:a.situational,attackMode:a.attackMode,advantage:a.advantage,disadvantage:a.disadvantage,ammunition:a.ammunition};n.dataset={...n.dataset,...d,action:"rollAttack",activityUuid:e.uuid},l.dataset={...n.dataset,action:"rollDamage",activityUuid:e.uuid},e.metadata.usage.actions={rollAttack:b.rollModifiedAttack,rollDamage:b.rollModifiedDamage};const f=foundry.utils.mergeObject({rollMode:o.rollMode||game.settings.get("core","rollMode"),data:{content:await renderTemplate(e.metadata.usage.chatCard,r),speaker:ChatMessage.getSpeaker({actor:e.actor}),flags:{core:{canPopout:!0},[E]:{modifiedActions:!0,activityType:e.type,activityUuid:e.uuid}}}},o);i.log("useAttack",[e,r,f,t]),await ChatMessage.create(f.data),e.rollAttack(d)});let U=b;var u,Z,tt,et,Y,at,ot,st,it,rt,lt,Ot,nt,ct,gt,dt,ut,ft,Rt,pt,Tt,mt,Lt;const c=class c{static init(){i.log("RollUtil.init() - Registering hooks",[],!0),Hooks.on(G.RENDER_ROLL_RESOLVER,p(c,u,Lt)),Hooks.on(T.PRE_USE_ACTIVITY,p(c,u,Z)),Hooks.on(T.POST_USE_ACTIVITY,p(c,u,tt)),Hooks.on(T.PRE_ROLL_ABILITY_CHECK,p(c,u,at)),Hooks.on(T.PRE_ROLL_SAVING_THROW,p(c,u,ot)),Hooks.on(T.PRE_BEGIN_CONCENTRATING,p(c,u,st)),Hooks.on(T.PRE_END_CONCENTRATION,p(c,u,it)),Hooks.on(T.PRE_ROLL_CONCENTRATION_V2,p(c,u,rt)),Hooks.on(T.PRE_ROLL_DEATH_SAVE_V2,p(c,u,lt)),i.log("Registering preRollSkillV2 hook: "+T.PRE_ROLL_SKILL_V2,[],!0),Hooks.on(T.PRE_ROLL_SKILL_V2,p(c,u,Y)),i.log("Registering preRollToolV2 hook: "+T.PRE_ROLL_TOOL_V2,[],!0),Hooks.on(T.PRE_ROLL_TOOL_V2,p(c,u,Y)),Hooks.on(T.PRE_ROLL_HIT_DIE_V2,p(c,u,nt)),Hooks.on(T.PRE_ROLL_CLASS_HIT_POINTS,p(c,u,ct)),Hooks.on(T.PRE_ROLL_NPC_HIT_POINTS,p(c,u,gt)),Hooks.on(T.PRE_ROLL_INITIATIVE_DIALOG,p(c,u,dt)),Hooks.on(T.PRE_ROLL_INITIATIVE,p(c,u,ut)),Hooks.on(T.PRE_ROLL_ATTACK_V2,p(c,u,ft)),Hooks.on(T.PRE_ROLL_DAMAGE_V2,p(c,u,Rt)),Hooks.on(T.PRE_ROLL_FORMULA_V2,p(c,u,pt)),Hooks.on(T.PRE_ROLL_RECHARGE_V2,p(c,u,Tt)),Hooks.on(T.RENDER_ROLL_CONFIGURATION_DIALOG,p(c,u,et)),Hooks.on(T.POST_ROLL_CONFIG,p(c,u,mt)),CONFIG.debug.hooks=!0,i.log("Hook debugging enabled",[],!0)}static registerSocketCalls(){Object.values(c.SOCKET_CALLS).forEach(t=>{t.type===z.ACTIVITY?A.registerCall(t.action,U[t.action]):A.registerCall(t.action,c[t.action])})}static getPlayerOwner(t){return game.users.find(e=>{var a;return((a=e.character)==null?void 0:a.id)===t})}static getTrigger(t){var S,v,P,h;const{config:e,dialog:a,message:o,rolls:s}=t,r=e.subject instanceof dnd5e.dataModels.activity.BaseActivityData,n=r?(S=e.subject)==null?void 0:S.actor:e.subject;if(!n)return;const l=r?e.subject:null,d=(l==null?void 0:l.type)||"",f=n.hasPlayerOwner?H.getUserFromActor(n.id):null,R=s[0];if(!R)return;const g=R!=null&&R.data.situational?Number(R.data.situational):Number(e.situational||"");if(R.data.flags={...R.data.flags,[E]:{flavor:o.data.flavor,situational:g,attackMode:e.attackMode,ammunition:e.ammunition}},f&&f!==game.user&&c.requestsEnabled){let M,_,N={subject:e.subject,situational:g,flavor:o.data.flavor,rolls:[R],parts:e.parts||[]};r&&(N.activity=e.subject);const j={data:{flavor:((P=(v=a.options)==null?void 0:v.window)==null?void 0:P.title)||o.data.flavor},speaker:{...o.speaker,alias:n.name},rollMode:o.rollMode};g&&!N.parts.includes("@situational")&&N.parts.push("@situational"),r&&(M=((h=l==null?void 0:l.damage)==null?void 0:h.parts)||[],_=M.map(F=>F.denomination).filter(F=>F&&typeof F=="string"));const V={config:N,dialog:a,message:j,isActivity:r,diceTypes:_,activity:l,playerOwner:f,roll:R};switch(i.log("getTrigger",[d,V]),d){case I.ATTACK:{c.forwardAttackActivity(V);break}case I.DAMAGE:{c.forwardDamageActivity(V);break}case I.CHECK:{c.forwardSkillToolCheck(V);break}case I.SAVE:{c.forwardSaveActivity(V);break}default:return null}return null}}static forwardAttackActivity(t){var R,g;const{config:e,dialog:a,message:o,isActivity:s,diceTypes:r,playerOwner:n,roll:l}=t,d={...e,options:l==null?void 0:l.options,type:D.ATTACK.name,attackMode:(R=l==null?void 0:l.options)==null?void 0:R.attackMode,advantage:(l==null?void 0:l.hasAdvantage)||!1,disadvantage:(l==null?void 0:l.hasDisadvantage)||!1,ammunition:(g=l==null?void 0:l.options)==null?void 0:g.ammunition,target:e.target},f={activityUuid:e.subject.uuid,diceTypes:r,config:d,dialog:a,message:{...o,create:!1}};i.log("SocketUtil.execForUser",[n.id,f]),A.execForUser(c.SOCKET_CALLS.triggerActivity.action,n.id,f)}static forwardDamageActivity(t){const{config:e,dialog:a,message:o,isActivity:s,diceTypes:r,playerOwner:n,roll:l}=t,d={...e,options:l.options,type:D.DAMAGE.name,critical:l.options.critical,isCritical:l.options.isCritical,target:l.options.target},f={activityUuid:e.subject.uuid,diceTypes:r,config:d,dialog:a,message:o};s&&(f.diceTypes=r),i.log("SocketUtil.execForUser",[n.id,f]),A.execForUser(c.SOCKET_CALLS.triggerActivity.action,n.id,f)}static forwardSaveActivity(t){const{config:e,dialog:a,message:o,isActivity:s,diceTypes:r,activity:n,playerOwner:l}=data,d={...e,type:D.SAVING_THROW.name,target:n.target},f={activityUuid:n.uuid,diceTypes:r,config:d,dialog:a,message:o};o.create=!1,i.log("SocketUtil.execForUser",[l.id,f]),A.execForUser(c.SOCKET_CALLS.triggerActivity.action,l.id,f)}static forwardSkillToolCheck(t){var g,S;const{config:e,dialog:a,message:o,isActivity:s,diceTypes:r,activity:n,playerOwner:l,roll:d}=t,f={...e,type:e.skill?D.SKILL.name:D.TOOL.name,subject:e.subject,ability:d.data.abilityId||e.ability,abilityId:d.data.abilityId||e.ability,advantage:d.hasAdvantage||!1,disadvantage:d.hasDisadvantage||!1,target:17,parts:e.parts||[]};hookName===D.SKILL.name?f.skill=e.skill:hookName===D.TOOL.name&&(f.tool=e.tool),(S=(g=a.options)==null?void 0:g.window)!=null&&S.title&&(a.options.window.title=o.data.flavor);const R={diceTypes:r,config:f,dialog:a,message:o};i.log("SocketUtil.execForUser",[l.id,R]),A.execForUser(c.SOCKET_CALLS.triggerRollSkillV2,l.id,R)}};u=new WeakSet,Z=function(t,e,a,o){var r;i.log("#onPreUseActivity #1",[]);const s=c.getPlayerOwner(t.actor.id);i.log("#onPreUseActivity #2",[s,t,e,a,o]),!(!c.requestsEnabled||!e.create)&&(s.id!==game.user.id&&game.user.isGM?(e.create.measuredTemplate=!1,e.consume.spellSlot=!1,o.create=!1,o.data={...o.data||{},flags:{...((r=o.data)==null?void 0:r.flags)||{},[E]:{modifiedActions:!0,activityType:t.type,activityUuid:t.uuid}}},c.getTrigger({activity:t,rolls:t.rolls,dialog:a,message:o,config:e})):(e.create.measuredTemplate=!0,e.consume.spellSlot=!0))},tt=function(t,e,a,o){i.log("#onPostUseActivity",[t,e,a,o]);const s=c.getPlayerOwner(t.actor.id);if(!(!e.create||t.type!==I.SAVING_THROW)&&s.id!==game.user.id&&game.user.isGM){e.create.measuredTemplate=!0,e.consume.spellSlot=!0;const r={...e,type:D.SAVING_THROW.name,target:t.target},n={activityUuid:t.uuid,config:r,dialog:a,message:o};o.create=!0,i.log("SocketUtil.execForUser",[s.id,n]),A.execForUser(c.SOCKET_CALLS.triggerActivity.action,s.id,n)}},et=function(t,e){var s,r,n;const a=(n=(r=(s=t.config)==null?void 0:s.event)==null?void 0:r.target)==null?void 0:n.closest("button[data-action]");i.log("#onRenderRollConfigurationDialog",[t,a]);const o=`data-${E}-${game.user.id}custom-event`;e.hasAttribute(o)},Y=function(t,e,a){var r,n,l,d,f,R;i.log("#onPreRollSkillToolV2 CALLED",[t,e,a]);const o=(n=(r=t.event)==null?void 0:r.target)==null?void 0:n.closest("button[data-action=rollRequest]"),s=o?Number(o.dataset.situational):t.situational;i.log("Situational bonus:",[s],!0),o&&(t.advantage=o.dataset.advantage==="true",t.disadvantage=o.dataset.disadvantage==="true",t.ability=o.dataset.ability,t.abilityId=o.dataset.ability,t.situational=s,o.dataset.flavor&&(a.data.flavor=o.dataset.flavor,(l=e.options)!=null&&l.window&&(e.options.window.title=o.dataset.flavor)),i.log("Applied target data to config",[t],!0)),s!==void 0&&!((d=t.parts)!=null&&d.includes("@situational"))&&(t.parts||(t.parts=[]),t.parts.push("@situational")),t.rolls||(t.rolls=[]),i.log("Number of rolls:",[t.rolls.length],!0);for(const g of t.rolls)g.data||(g.data={}),g.data.flags||(g.data.flags={}),g.data.flags[E]={flavor:((R=(f=e.options)==null?void 0:f.window)==null?void 0:R.title)||a.data.flavor},g.data={flags:g.data.flags,situational:s,target:o!=null&&o.dataset.dc?Number(o.dataset.dc):t.target,ability:(o==null?void 0:o.dataset.ability)||t.ability},g.resetFormula&&g.resetFormula(),i.log("Modified roll data",[g],!0);return i.log("#onPreRollSkillToolV2 completed",[],!0),!0},at=function(t){i.log("#onPreRollAbilityCheck",[t])},ot=function(t){i.log("#onPreRollSavingThrow",[t])},st=function(t,e){i.log("#onPreBeginConcentrating",[t,e])},it=function(t,e){i.log("#onPreEndConcentration",[t,e])},rt=function(t,e,a){i.log("#onPreRollConcentrationV2",[t,e,a])},lt=function(t,e,a){i.log("#onPreRollDeathSaveV2",[t,e,a])},Ot=function(t,e,a){i.log("#onPreRollToolCheckV2",[t,e,a])},nt=function(t,e,a){i.log("#onPreRollHitDieV2",[t,e,a])},ct=function(t,e,a){i.log("#onPreRollClassHitPoints",[t,e,a])},gt=function(t,e){i.log("#onPreRollNPCHitPoints",[t,e])},dt=function(t){i.log("#onPreRollInitiativeDialog",[t])},ut=function(t,e){i.log("#onPreRollInitiative",[t,e])},ft=function(t,e,a){var r,n,l,d,f,R;i.log("#onPreRollAttackV2",[t,e,a]);const o=(n=(r=t.event)==null?void 0:r.target)==null?void 0:n.closest("button[data-action=rollAttack]"),s=o?Number(o.dataset.situational):t.situational;i.log("Situational bonus:",[s],!0),o&&(t.advantage=o.dataset.advantage==="true",t.disadvantage=o.dataset.disadvantage==="true",t.attackMode=o.dataset.attackMode,t.situational=s,o.dataset.flavor&&(a.data.flavor=o.dataset.flavor,(l=e.options)!=null&&l.window&&(e.options.window.title=o.dataset.flavor)),i.log("Applied target data to config",[t],!0)),s!==void 0&&!((d=t.parts)!=null&&d.includes("@situational"))&&(t.parts||(t.parts=[]),t.parts.push("@situational")),t.rolls||(t.rolls=[]),i.log("Number of rolls:",[t.rolls.length],!0);for(const g of t.rolls)g.data||(g.data={}),g.data.flags||(g.data.flags={}),g.data.flags[E]={flavor:((R=(f=e.options)==null?void 0:f.window)==null?void 0:R.title)||a.data.flavor},g.data={flags:g.data.flags,situational:s},g.resetFormula&&g.resetFormula(),i.log("Modified roll data",[g],!0);return i.log("#onPreRollSkillToolV2 completed",[],!0),!0},Rt=function(t,e,a){i.log("#onPreRollDamageV2",[t,e,a])},pt=function(t,e,a){i.log("#onPreRollFormulaV2",[t,e,a])},Tt=function(t){i.log("#onPreRollRechargeV2",[t])},mt=function(t,e,a,o){if(i.log("#onPostRollConfiguration",[t,e,a,o]),!game.user.isGM)return;const s={rolls:t,config:e,dialog:a,message:o};return c.getTrigger(s),!1},Lt=function(t,e){var s,r;i.log("#onRenderRollResolver",[t,e]);const a=n=>(n==null?void 0:n.method)==="pixels";if(t.fulfillable instanceof Map&&[...t.fulfillable.values()].some(a)){const n=t.roll,l=(r=(s=n==null?void 0:n.data)==null?void 0:s.flags)==null?void 0:r[E];l||(l={flavor:""}),e.classList.add("crlngn-rolls"),e.querySelector(".window-header .window-title").innerHTML=game.i18n.localize("CRLNGN_ROLLS.ui.forms.pixelsRollTitle");const d=document.createElement("div");d.classList.add("crlngn-resolver-title"),d.innerHTML=`<h1>${game.i18n.localize("CRLNGN_ROLLS.ui.forms.pixelsWaitingTitle")}</h1><br/>${l.flavor}`,e.querySelector(".standard-form").prepend(d)}},B(c,u),m(c,"requestsEnabled",!1),m(c,"SOCKET_CALLS",{triggerRollSkillV2:{action:"triggerRollSkillV2",type:z.CHECK},triggerActivity:{action:"triggerActivity",type:z.ACTIVITY}}),m(c,"diceConfig",{}),m(c,"playerDiceConfigs",{}),m(c,"postRequestChatMessage",async(t,e,a,o,s)=>{const r=a.situational!==void 0?Number(a.situational):0,n={...a,type:a.type,action:"rollRequest",visibility:t.id,target:e.uuid,dc:a.target,hideDC:!0,flavor:a.flavor,situational:r,parts:a.parts||[]};r&&!n.parts.includes("@situational")&&n.parts.push("@situational");const l=[{buttonLabel:dnd5e.enrichers.createRollLabel({...n,format:"short",icon:!0}),hiddenLabel:dnd5e.enrichers.createRollLabel({...n,format:"short",icon:!0,hideDC:!0}),dataset:n}];s.data.flavor=a.flavor,i.log("postRequestChatMessage",[s,n]);const d={user:t.id,content:await renderTemplate("systems/dnd5e/templates/chat/request-card.hbs",{buttons:l}),flavor:"GM has requested a roll",speaker:s.speaker};await ChatMessage.implementation.create(d)}),m(c,"triggerRollSkillV2",async t=>{const{diceTypes:e,config:a,dialog:o,message:s}=t,r=c.playerDiceConfigs[game.user.id];a.situational!==void 0&&Number(a.situational),e.map(R=>(r==null?void 0:r[R])!=="").includes(!0);const n=game.actors.get(a.subject._id);if(i.log("triggerRollSkillV2",[game.user,r,n]),!n)return;c.postRequestChatMessage(playerOwner,n,a,o,s);const l={...o,configure:!(r!=null&&r.d20)},d={...a,parts:a.parts||[]},f={...s,flavor:a.flavor};a.situational&&!d.parts.includes("@situational")&&d.parts.push("@situational"),a.skill?n.rollSkill(d,l,f):a.tool&&n.rollToolCheck(d,l,f)});let k=c;class y{static registerSettings(){const t=w();Object.entries(t).forEach(async a=>{const o=a[1];i.log("Registering... ",[a]);const s={name:o.label,hint:o.hint,default:o.default,type:o.propType,scope:o.scope,config:o.config,requiresReload:o.requiresReload||!1,onChange:r=>y.apply(o.tag,r)};o.choices&&(s.choices=o.choices),await game.settings.register(E,o.tag,s),y.get(o.tag)===void 0&&y.set(o.tag,o.default),i.log("registerSettings",[o.tag,y.get(o.tag)])})}static get(t,e=E){if(!t)return null;let a=!1;if(e===E)a=game.settings.get(e,t);else{let s=game.settings.storage.get("client")[`${e}.${t}`];s===void 0&&(s=game.settings.storage.get("world").getSetting(`${e}.${t}`),a=s==null?void 0:s.value),i.log("GET Setting",[s,a])}return a}static set(t,e,a=E){if(!t)return!1;let o=game.settings.storage.get("client")[`${a}.${t}`];o||(o=game.settings.storage.get("world").getSetting(`${a}.${t}`)),i.log("Setting",[t,o]);try{game.settings.set(a,t,e)}catch{i.log("Unable to change setting",[t,o])}return!0}static apply(t,e){const a=w();switch(t){case a.rollRequestsEnabled.tag:y.applyRollRequestsSetting(e);break}}static applyRollRequestsSetting(t){const e=w(),a=t!==void 0?t:y.get(e.rollRequestsEnabled.tag);k.requestsEnabled=a;const o=document.querySelector("#crlngn-request-toggle");if(!o)return;a===!1?o.classList.remove("active"):o.classList.add("active");const s=game.i18n.localize(o.classList.contains("active")?"CRLNGN_ROLLS.ui.buttons.rollRequestsToggleOn":"CRLNGN_ROLLS.ui.buttons.rollRequestsToggleOff");o.dataset.tooltip=s,game.tooltip&&game.tooltip.activate(o,{text:s}),i.log("Roll Requests Toggle",[a,o])}}const O=class O{static init(){A.initialize(O.registerSocketCalls),Hooks.once(G.INIT,()=>{w(),i.log("Initiating module...",[],!0),y.registerSettings(),k.init()}),Hooks.once(G.READY,()=>{i.log("Core Ready",[]);const t=w();var e=y.get(t.debugMode.tag);e&&(CONFIG.debug.hooks=!0),game.user.isGM&&O.injectRollRequestsToggle(),game.user.isGM&&(Hooks.on(G.USER_CONNECTED,O.onUserConnected),game.users.forEach(a=>{O.onUserConnected(a)}))}),U.init()}static onUserConnected(t){t.active&&t.id!==game.user.id&&(i.log("onUserConnected",[t]),A.execForUser(O.SOCKET_CALLS.getDiceConfig,t.id))}static getDiceConfig(){if(!game.user)return;let e=game.settings.storage.get("client")["core.diceConfiguration"]||"";if(e=e||"",i.log("getDiceConfig",[e]),game.user.isGM){k.playerDiceConfigs[game.user.id]=e,A.execForGMs(O.SOCKET_CALLS.receiveDiceConfig,game.user.id,e);return}else k.playerDiceConfigs[game.user.id]=e?JSON.parse(e):{}}static receiveDiceConfig(t,e){var a;((a=game.user)!=null&&a.isGM||t===game.user.id)&&(k.playerDiceConfigs||(k.playerDiceConfigs={}),k.playerDiceConfigs[t]=e?JSON.parse(e):{},i.log(`Received dice configuration from user ${t}`,[k.playerDiceConfigs]))}static registerSocketCalls(){A.registerCall(O.SOCKET_CALLS.getDiceConfig,O.getDiceConfig),A.registerCall(O.SOCKET_CALLS.receiveDiceConfig,O.receiveDiceConfig),k.registerSocketCalls()}static injectRollRequestsToggle(){const t=w();document.querySelector("#chat-controls").insertAdjacentHTML("afterbegin",'<label class="chat-control-icon active" id="crlngn-request-toggle" data-tooltip-direction="LEFT"><i class="fas fa-bolt"></i></label>');const a=document.querySelector("#crlngn-request-toggle"),o=y.get(t.rollRequestsEnabled.tag);return y.applyRollRequestsSetting(o),a.addEventListener("click",s=>{s.target.classList.toggle("active");const r=s.target.classList.contains("active");y.set(t.rollRequestsEnabled.tag,r)}),a}};m(O,"SOCKET_CALLS",{receiveDiceConfig:"receiveDiceConfig",getDiceConfig:"getDiceConfig"});let $=O;$.init();
//# sourceMappingURL=crlngn-roll-requests.js.map
