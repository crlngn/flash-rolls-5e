var Ne=Object.defineProperty;var be=d=>{throw TypeError(d)};var we=(d,e,t)=>e in d?Ne(d,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):d[e]=t;var S=(d,e,t)=>we(d,typeof e!="symbol"?e+"":e,t),_e=(d,e,t)=>e.has(d)||be("Cannot "+t);var Z=(d,e,t)=>(_e(d,e,"read from private field"),t?t.call(d):e.get(d)),Ce=(d,e,t)=>e.has(d)?be("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(d):e.set(d,t),ye=(d,e,t,i)=>(_e(d,e,"write to private field"),i?i.call(d,t):e.set(d,t),t);const ee={checkbox:"checkbox"},te={client:"client",world:"world"},V=()=>({debugMode:{tag:"debug-mode",label:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.hint"),propType:Boolean,inputType:ee.checkbox,default:!0,scope:te.client,config:!0},rollRequestsEnabled:{tag:"roll-requests-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.hint"),propType:Boolean,inputType:ee.checkbox,default:!0,scope:te.world,config:!0},skipDialogs:{tag:"skip-dialogs",label:game.i18n.localize("CRLNGN_ROLLS.settings.skipDialogs.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.skipDialogs.hint"),propType:Boolean,inputType:ee.checkbox,default:!1,scope:te.world,config:!0},useGMTargetTokens:{tag:"use-gm-target-tokens",label:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.hint"),propType:Boolean,inputType:ee.checkbox,default:!1,scope:te.world,config:!0},rollInterceptionEnabled:{tag:"roll-interception-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollInterceptionEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollInterceptionEnabled.hint"),propType:Boolean,inputType:ee.checkbox,default:!0,scope:te.world,config:!0},showOfflineNotifications:{tag:"show-offline-notifications",label:game.i18n.localize("CRLNGN_ROLLS.settings.showOfflineNotifications.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.showOfflineNotifications.hint"),propType:Boolean,inputType:ee.checkbox,default:!0,scope:te.world,config:!0}}),F="crlngn-roll-requests",re=["%cFlash Rolls 5e","color:rgb(47, 151, 161); font-weight: bold;","|"],fe={receiveDiceConfig:"receiveDiceConfig",getDiceConfig:"getDiceConfig",handleRollRequest:"handleRollRequest"},r={ABILITY:"ability",ABILITY_CHECK:"abilitycheck",ATTACK:"attack",CONCENTRATION:"concentration",CUSTOM:"custom",DEATH_SAVE:"deathsave",FORMULA:"formula",DAMAGE:"damage",HEALING:"healing",HIT_DIE:"hitdie",INITIATIVE:"initiative",INITIATIVE_DIALOG:"initiativedialog",ITEM_SAVE:"itemsave",SAVE:"save",SAVING_THROW:"savingthrow",SKILL:"skill",TOOL:"tool"},ve={ABILITY_CHECK:{name:r.ABILITY_CHECK,label:"Ability Check",subList:"abilities",actorPath:"system.abilities"},SAVING_THROW:{name:r.SAVING_THROW,label:"Saving Throw",subList:"abilities",actorPath:"system.abilities"},SKILL:{name:r.SKILL,label:"Skill Check",subList:"skills",actorPath:"system.skills"},TOOL:{name:r.TOOL,label:"Tool Check",subList:"tools",actorPath:"system.tools"},CONCENTRATION:{name:r.CONCENTRATION,label:"Concentration Check",subList:null,actorPath:""},INITIATIVE:{name:r.INITIATIVE_DIALOG,label:"Initiative Roll",subList:null,actorPath:""},DEATH_SAVE:{name:r.DEATH_SAVE,label:"Death Save",subList:null,actorPath:""},HIT_DIE:{name:r.HIT_DIE,label:"Hit Die",subList:null,actorPath:""},CUSTOM:{name:r.CUSTOM,label:"Custom Roll",subList:null,actorPath:""}},Y={ID:F,ROLL_REQUEST_OPTIONS:ve},ie={INIT:"init",READY:"ready",RENDER_SIDEBAR_TAB:"renderSidebarTab",USER_CONNECTED:"userConnected",PRE_CREATE_CHAT_MESSAGE:"preCreateChatMessage"},Me={READY:"socketlib.ready"},H={PRE_USE_ACTIVITY:"dnd5e.preUseActivity",PRE_ROLL_ABILITY_CHECK:"dnd5e.preRollAbilityCheckV2",PRE_ROLL_SAVING_THROW:"dnd5e.preRollSavingThrowV2",PRE_ROLL_DEATH_SAVE_V2:"dnd5e.preRollDeathSaveV2",PRE_ROLL_SKILL_V2:"dnd5e.preRollSkillV2",PRE_ROLL_TOOL_V2:"dnd5e.preRollToolV2",PRE_ROLL_HIT_DIE_V2:"dnd5e.preRollHitDieV2",PRE_ROLL_INITIATIVE_DIALOG_V2:"dnd5e.preRollInitiativeDialogV2",PRE_ROLL_INITIATIVE:"dnd5e.preRollInitiative",PRE_ROLL_ATTACK_V2:"dnd5e.preRollAttackV2",PRE_ROLL_DAMAGE_V2:"dnd5e.preRollDamageV2",POST_ROLL_CONFIG:"dnd5e.postRollConfiguration",RENDER_ROLL_CONFIGURATION_DIALOG:"renderRollConfigurationDialog",RENDER_SKILL_TOOL_ROLL_DIALOG:"renderSkillToolRollConfigurationDialog"},ae=class ae{static log(e="",t=[],i=!1){try{const s=game.settings.get(F,"debug-mode")||ae.debugOn;if(!(i||s))return;console.log(...re,e,...t)}catch{(i||ae.debugOn)&&console.log(...re,e,...t)}}static warn(e="",t=[]){console.warn(...re,e,...t)}static error(e,t={ui:!1,console:!0,permanent:!1}){var i;t.ui&&((i=ui.notifications)==null||i.error(e,{localize:!0,permanent:t.permanent})),t.console&&console.error(...re,e)}};S(ae,"debugOn",!1);let n=ae;const N=class N{static serializeForTransport(e,t=!1){return n.log("serializeForTransport",[e,t]),e==null||t&&e.rolls&&Array.isArray(e.rolls)&&(e.rolls=e.rolls.map(i=>i instanceof Roll?i.toJSON():i)),e}static deserializeFromTransport(e,t=!1){n.log("deserializeFromTransport",[e,t]);let i={...e};if(!e)return i;if(t&&e.rolls&&e.rolls.length>0){const s=i.rolls.map(o=>{let a=o;return typeof o=="string"?a=Roll.fromJSON(o):a=Roll.fromJSON(JSON.stringify(o)),a});return i.rolls=[...s],i}return i}};S(N,"socket"),S(N,"_activeExecutions",new Map),S(N,"initialize",e=>{n.log("initialize",[e]),Hooks.once(Me.READY,()=>{if(typeof socketlib>"u"){n.error("SocketUtil Error: socketlib is not loaded. Ensure it is installed and enabled."),ui.notifications.error(game.i18n.localize("CRLNGN_ROLLS.notifications.socketlibMissing"),{permanent:!0});return}try{N.socket=socketlib.registerModule(F),e&&e()}catch{}})}),S(N,"registerCall",(e,t)=>{n.log("registerCall",[e]),N.socket&&N.socket.register(e,t)}),S(N,"sendMessage",(e,t)=>{n.log("sendMessage",[e]),t&&t()}),S(N,"execForGMs",async(e,...t)=>{if(n.log("execForGMs",[e,...t]),!!N.socket)return await N.socket.executeForAllGMs(e,...t)}),S(N,"execForAll",async(e,...t)=>{if(N.socket)return await N.socket.executeForEveryone(e,...t)}),S(N,"execForUser",async(e,t,...i)=>{if(n.log("execForUser",[e,t,...i]),!N.socket)return;if(t===game.user.id)return null;const s=`${e}-${t}`;if(N._activeExecutions.has(s))return null;N._activeExecutions.set(s,!0);try{return await N.socket.executeAsUser(e,t,...i)}catch{return null}finally{N._activeExecutions.delete(s)}});let Q=N;class X{static initialize(){this.setDiceConfig()}static setDiceConfig(){if(!game.user)return{};const e=game.settings.storage.get("client");return this.diceConfig=e["core.diceConfiguration"]||"",this.diceConfig}static getDiceConfig(){return game.user?(this.setDiceConfig(),game.user.isGM&&this._sendDiceConfigToGMs(),this.diceConfig):{}}static _sendDiceConfigToGMs(){Q.execForGMs("receiveDiceConfig",game.user.id,this.diceConfig)}static receiveDiceConfig(e,t){var i,s;((i=game.user)!=null&&i.isGM||e===((s=game.user)==null?void 0:s.id))&&(this.playerDiceConfigs[e]=t?JSON.parse(t):{})}static getUserDiceConfig(e){var t;return e===((t=game.user)==null?void 0:t.id)?this.diceConfig:this.playerDiceConfigs[e]||{}}static requestDiceConfigFromUser(e){Q.execForUser("getDiceConfig",e)}static requestDiceConfigFromAllPlayers(){var e;(e=game.user)!=null&&e.isGM&&game.users.forEach(t=>{t.active&&!t.isGM&&t.id!==game.user.id&&this.requestDiceConfigFromUser(t.id)})}static clearPlayerConfigs(){this.playerDiceConfigs={}}static hasUserConfig(e){var t;return e===((t=game.user)==null?void 0:t.id)?!!this.diceConfig:!!this.playerDiceConfigs[e]}}S(X,"diceConfig",{}),S(X,"playerDiceConfigs",{});class k{static registerSettings(){const e=V();Object.entries(e).forEach(async i=>{const s=i[1],o={name:s.label,hint:s.hint,default:s.default,type:s.propType,scope:s.scope,config:s.config,requiresReload:s.requiresReload||!1,onChange:a=>k.apply(s.tag,a)};s.choices&&(o.choices=s.choices),await game.settings.register(F,s.tag,o),(k.get(s.tag)===void 0||k.get(s.tag)===null)&&k.set(s.tag,s.default)})}static get(e,t=F){if(!e)return null;let i=!1;if(t===F)i=game.settings.get(t,e);else{let o=game.settings.storage.get("client")[`${t}.${e}`];o===void 0&&(o=game.settings.storage.get("world").getSetting(`${t}.${e}`),i=o==null?void 0:o.value)}return i}static set(e,t,i=F){if(!e)return!1;let s=game.settings.storage.get("client")[`${i}.${e}`];s||(s=game.settings.storage.get("world").getSetting(`${i}.${e}`));try{game.settings.set(i,e,t)}catch{}return!0}static apply(e,t){const i=V();switch(e){case i.rollRequestsEnabled.tag:k.applyRollRequestsEnabled(t);break}}static applyRollRequestsEnabled(e){const t=document.querySelector("#chat-controls .chat-control-icon.roll-requests-icon");t&&(e?t.classList.add("active"):t.classList.remove("active"))}}Hooks.once("ready",()=>{dnd5e.applications.dice.DamageRollConfigurationDialog||n.warn("DamageRollConfigurationDialog not found in dnd5e.applications.dice")});function ne(d){return class extends d{constructor(e={},t={},i={}){var s,o;super(e,t,i),this.actors=i.actors||[],this.sendRequest=i.sendRequest??i.sendRequest??!0,this.showDC=i.showDC||!1,this.dcValue=i.dcValue||null,this.rollKey=i.rollKey||e.skill||e.ability||null,this.rollTypeString=i.rollTypeString||null,this.windowTitle=((s=i.window)==null?void 0:s.title)||"",this.windowSubtitle=((o=i.window)==null?void 0:o.subtitle)||""}_buildConfig(e,t,i){const s=t==null?void 0:t.get("ability"),o=t==null?void 0:t.get("dc"),a=t==null?void 0:t.get(`rolls.${i}.situational`);if(n.log("_buildConfig",[a,t,e]),a)e.parts||(e.parts=[]),e.parts.push("@situational"),e.data||(e.data={}),e.data.situational=a;else if(e.parts){const u=e.parts.indexOf("@situational");u!==-1&&e.parts.splice(u,1)}s&&(e.ability=s,this.config.ability=s);const l=super._buildConfig(e,t,i);if(o){const u=parseInt(o);isNaN(u)||(l.options=l.options||{},l.options.target=u)}else this.dcValue!==void 0&&this.dcValue!==null&&(l.options=l.options||{},l.options.target=this.dcValue);return n.log(`${this.constructor.name}._buildConfig`,[this.config,t,l]),l}_onChangeForm(e,t){n.log("_onChangeForm",[t.target.value]),super._onChangeForm(e,t);const i=this.element.querySelector('input[name="crlngn-send-request"]');i&&(this.sendRequest=i.checked);const s=this.element.querySelector('input[name="dc"]');s&&s.value&&(this.dcValue=parseInt(s.value)||null)}_finalizeRolls(e){const t=super._finalizeRolls(e);if(n.log("_finalizeRolls #1",[t,this.sendRequest]),this.dcValue!==void 0&&this.dcValue!==null)for(const i of t)i.options.target=this.dcValue;return this.config.sendRequest=this.sendRequest,t}async _onRender(e,t){var i,s,o;await super._onRender(e,t),((o=(s=(i=this.config.rolls)==null?void 0:i[0])==null?void 0:s.data)!=null&&o.situational||this.config.situational)&&(n.log(`${this.constructor.name}._onRender`,["Triggering rebuild for initial situational bonus"]),setTimeout(()=>{this.rebuild()},100))}}}class z extends ne(dnd5e.applications.dice.D20RollConfigurationDialog){constructor(e={},t={},i={}){i.rollType=i.rollType||CONFIG.Dice.D20Roll,super(e,t,i),n.log("constructor - initializing GM Dialog",[e,t,i])}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}get title(){return this.windowTitle||super.title}_prepareConfigurationData(e,t,i,s){n.log("_prepareConfigurationData",[e,t,i,s]);const o=super._prepareConfigurationData(e,t,i,s);return o.showDC=this.showDC,o.dcValue=this.dcValue,o.sendRequest=this.sendRequest,o.actorCount=this.actors.length,o}async _preparePartContext(e,t,i){return n.log("_preparePartContext",[e,t,i]),t=await super._preparePartContext(e,t,i),e==="configuration"&&(t.showDC=this.showDC,t.dcValue=this.dcValue,t.sendRequest=this.sendRequest,t.actorCount=this.actors.length),t}async _onRender(e,t){if(n.log("_onRender",[e,t]),super._onRender(e,t),this.element.querySelector(".gm-roll-config-fields"))return;let i=this.element.querySelector(".rolls .formulas");if(i&&(this.showDC||this.actors.length>0)){const s={showDC:this.showDC,dcValue:this.dcValue,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},o=await renderTemplate(`modules/${F}/templates/gm-roll-config-fields.hbs`,s),a=document.createElement("div");a.className="gm-roll-config-fields",a.innerHTML=o,i.parentNode.insertBefore(a,i)}this._attachButtonListeners()}_attachButtonListeners(){n.log("_attachButtonListeners",[this.element]),this.element.querySelectorAll('[data-action="advantage"], [data-action="normal"], [data-action="disadvantage"]').forEach(t=>{t.addEventListener("click",i=>{i.currentTarget.dataset.action})})}static async initConfiguration(e,t,i,s={}){var I,E,D,w,M,$,O,v,J,j,G;e.length>0&&typeof e[0]=="string"&&(e=e.map(q=>game.actors.get(q)).filter(q=>q)),n.log("GMRollConfigDialog.initConfiguration",[e,e.map(q=>q.name),t,i,s]);const o=t==null?void 0:t.toLowerCase(),a=[r.SAVE,r.SAVING_THROW,r.ABILITY,r.ABILITY_CHECK,r.CONCENTRATION].includes(o),l=e[0];if(!l)return null;let u=CONFIG.Dice.D20Roll;[r.DAMAGE,r.HEALING].includes(o)?u=CONFIG.Dice.DamageRoll||CONFIG.Dice.BasicRoll:[r.FORMULA,r.CUSTOM,r.HIT_DIE].includes(o)&&(u=CONFIG.Dice.BasicRoll);const c={data:l.getRollData(),subject:l,rolls:[{parts:[],data:l.getRollData(),options:{}}]};switch(o){case r.SKILL:c.skill=i;break;case r.TOOL:c.tool=i;break;case r.SAVE:case r.SAVING_THROW:c.ability=i;break;case r.ABILITY:case r.ABILITY_CHECK:c.ability=i;break;case r.HIT_DIE:c.rolls[0].parts=[],c.rolls[0].options.flavor="Hit Die";break}const g={create:!1,data:{speaker:ChatMessage.getSpeaker({actor:l})}},f={options:{actors:e,sendRequest:e.some(q=>this._isPlayerOwned(q)),showDC:a,rollKey:i,rollType:u,rollTypeString:o,window:{title:z._getRollTitle(o,i,l),subtitle:z._getSubtitle(e)},...s}},m=new this(c,g,f.options),h=await new Promise(q=>{m.addEventListener("close",()=>{q({rolls:m.rolls,config:m.config,message:m.message,sendRequest:m.sendRequest})},{once:!0}),m.render({force:!0})});if(!h.rolls||h.rolls.length===0)return null;const R=h.rolls[0];let p=!1,b=!1;((I=R==null?void 0:R.options)==null?void 0:I.advantageMode)!==void 0&&(p=R.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE,b=R.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE);let y=((E=R==null?void 0:R.data)==null?void 0:E.situational)||"",T=(R==null?void 0:R.parts)||[],_=(D=R==null?void 0:R.options)==null?void 0:D.target;const C={rolls:[{parts:T.slice(),data:y?{situational:y}:{},options:_?{target:_}:{}}],subject:l,advantage:p,disadvantage:b,target:_,sendRequest:h.sendRequest,isRollRequest:h.sendRequest,skipDialog:s.skipDialogs||!1,chatMessage:!0},L=game.settings.get("core","rollMode");if(h.message.rollMode&&h.message.rollMode!==L&&(C.rollMode=h.message.rollMode),h.config.ability&&[r.SKILL,r.TOOL].includes(o)){const q=((M=(w=l.system.skills)==null?void 0:w[i])==null?void 0:M.ability)||((O=($=CONFIG.DND5E.skills)==null?void 0:$[i])==null?void 0:O.ability);h.config.ability!==q&&(C.ability=h.config.ability)}let A=f.options.window.title;if(h.config.ability&&[r.SKILL,r.TOOL].includes(o)){const q=((v=CONFIG.DND5E.abilities[h.config.ability])==null?void 0:v.label)||h.config.ability;if(o===r.SKILL){const U=((J=CONFIG.DND5E.skills[i])==null?void 0:J.label)||i;A=game.i18n.format("DND5E.SkillPromptTitle",{skill:U,ability:q})}else if(o===r.TOOL){const U=(G=(j=CONFIG.DND5E.enrichmentLookup)==null?void 0:j.tools)==null?void 0:G[i];let me=i;if(U!=null&&U.id){const ge=dnd5e.documents.Trait.getBaseItem(U.id,{indexOnly:!0});me=(ge==null?void 0:ge.name)||i}A=game.i18n.format("DND5E.ToolPromptTitle",{tool:me,ability:q})}}return C.rollTitle=A,C.rollType=o,C.rollKey=i,C}static _isPlayerOwned(e){return n.log("GMRollConfigDialog._isPlayerOwned",[e]),Object.entries(e.ownership).some(([t,i])=>{const s=game.users.get(t);return s&&!s.isGM&&i>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})}static _getRollTitle(e,t,i){var a,l,u,c,g,f,m,h,R,p,b,y,T,_,C,L,A,I;n.log("GMRollConfigDialog._getRollTitle",[e,t,i]),n.log("GMRollConfigDialog._getRollTitle - Detailed",{rollType:e,rollKey:t,actorName:i==null?void 0:i.name,actorAbilities:(a=i==null?void 0:i.system)!=null&&a.abilities?Object.keys(i.system.abilities):[],actorSkills:(l=i==null?void 0:i.system)!=null&&l.skills?Object.keys(i.system.skills):[],actorInitAbility:(g=(c=(u=i==null?void 0:i.system)==null?void 0:u.attributes)==null?void 0:c.init)==null?void 0:g.ability});let s="";const o=e==null?void 0:e.toLowerCase();switch([r.SAVE,r.ABILITY,r.ABILITY_CHECK].includes(o)&&!t&&n.warn("Missing rollKey for roll type",[o,t]),o){case r.SKILL:const E=((f=CONFIG.DND5E.skills[t])==null?void 0:f.label)||t,D=(m=i==null?void 0:i.system.skills)==null?void 0:m[t],w=(D==null?void 0:D.ability)||((h=CONFIG.DND5E.skills[t])==null?void 0:h.ability)||"int",M=((R=CONFIG.DND5E.abilities[w])==null?void 0:R.label)||w;s=game.i18n.format("DND5E.SkillPromptTitle",{skill:E,ability:M});break;case r.SAVE:case r.SAVING_THROW:const $=((p=CONFIG.DND5E.abilities[t])==null?void 0:p.label)||t;s=game.i18n.format("DND5E.SavePromptTitle",{ability:$});break;case r.ABILITY:case r.ABILITY_CHECK:const O=((b=CONFIG.DND5E.abilities[t])==null?void 0:b.label)||t;s=game.i18n.format("DND5E.AbilityPromptTitle",{ability:O});break;case r.CONCENTRATION:s=game.i18n.localize("DND5E.Concentration");break;case r.TOOL:const v=(T=(y=CONFIG.DND5E.enrichmentLookup)==null?void 0:y.tools)==null?void 0:T[t];let J=t;if(v!=null&&v.id){const U=dnd5e.documents.Trait.getBaseItem(v.id,{indexOnly:!0});J=(U==null?void 0:U.name)||t}const j=(_=i==null?void 0:i.system.tools)==null?void 0:_[t],G=(j==null?void 0:j.ability)||((A=(L=(C=CONFIG.DND5E.enrichmentLookup)==null?void 0:C.tools)==null?void 0:L[t])==null?void 0:A.ability)||"int",q=((I=CONFIG.DND5E.abilities[G])==null?void 0:I.label)||G;s=game.i18n.format("DND5E.ToolPromptTitle",{tool:J,ability:q});break;case r.DEATH_SAVE:s=game.i18n.localize("DND5E.DeathSave");break;case r.INITIATIVE:case r.INITIATIVE_DIALOG:s=game.i18n.localize("DND5E.Initiative");break;default:s=game.i18n.localize("DND5E.Roll")}return n.log("_getRollTitle",[o,s]),s}static _getSubtitle(e=[]){return e.length===1?e[0].name:e.length>1?game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.multipleActors"):""}}class De extends ne(dnd5e.applications.dice.RollConfigurationDialog){constructor(e={},t={},i={}){i.rollType=CONFIG.Dice.BasicRoll||Roll,i.showDC=!1,super(e,t,i),n.log("constructor",[e,t,i])}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config","hit-die-config"]})}_prepareConfigurationData(e,t,i,s){const o=super._prepareConfigurationData(e,t,i,s);return n.log("GMHitDieConfigDialog._prepareConfigurationData",[o]),o.formula="Hit Die (varies by actor)",o.sendRequest=this.sendRequest,o.actorCount=this.actors.length,o}async _preparePartContext(e,t,i){return t=await super._preparePartContext(e,t,i),e==="configuration"&&(t.sendRequest=this.sendRequest,t.actorCount=this.actors.length,t.formula="Hit Die (varies by actor)"),t}async _onRender(e,t){if(super._onRender(e,t),this.element.querySelector(".gm-roll-config-fields"))return;let i=this.element.querySelector(".rolls .formulas");if(i&&this.actors.length>0){const s={showDC:!1,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},o=await renderTemplate(`modules/${F}/templates/gm-roll-config-fields.hbs`,s),a=document.createElement("div");a.className="gm-roll-config-fields",a.innerHTML=o,i.parentNode.insertBefore(a,i)}}async _processSubmitData(e,t,i){await super._processSubmitData(e,t,i),this.sendRequest=i.get("crlngn-send-request")!=="false",n.log("_processSubmitData",[i,this.config])}_finalizeRolls(e){const t=super._finalizeRolls(e);return this.config.sendRequest=this.sendRequest,n.log("GMHitDieConfigDialog._finalizeRolls - before merge",[t]),t}static async initConfiguration(e,t,i,s={}){var _,C;n.log("GMHitDieConfigDialog.initConfiguration",[e,t,i,s]);const o=e[0];if(!o)return null;const a={data:o.getRollData(),subject:o,rolls:[{parts:[],data:o.getRollData(),options:{flavor:"Hit Die Roll"}}]},l={create:!1,data:{speaker:ChatMessage.getSpeaker({actor:o})}},u={options:{actors:e,sendRequest:e.some(L=>z._isPlayerOwned(L)),rollKey:i,rollType:CONFIG.Dice.BasicRoll||Roll,window:{title:game.i18n.localize("DND5E.HitDice"),subtitle:z._getSubtitle(e)},...s}},c=new this(a,l,u.options),g=await new Promise(L=>{c.addEventListener("close",()=>{L({rolls:c.rolls,config:c.config,message:c.message,sendRequest:c.sendRequest})},{once:!0}),c.render({force:!0})});if(!g.rolls||g.rolls.length===0)return null;n.log("GMHitDieConfigDialog - dialog result",[g.rolls]);const f=g.rolls[0];let m=!1,h=!1;((_=f==null?void 0:f.options)==null?void 0:_.advantageMode)!==void 0&&(m=f.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE,h=f.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE),f!=null&&f.parts,f!=null&&f.data;const p=((f==null?void 0:f.options)||{}).target,b=((C=f==null?void 0:f.data)==null?void 0:C.situational)||"",y={rolls:[{parts:[],data:b?{situational:b}:{},options:p?{target:p}:{}}],subject:e[0],advantage:m,disadvantage:h,target:p,sendRequest:g.sendRequest,isRollRequest:g.sendRequest,skipDialog:s.skipDialogs||!1,chatMessage:!0},T=game.settings.get("core","rollMode");return g.message.rollMode&&g.message.rollMode!==T&&(y.rollMode=g.message.rollMode),g.config.ability&&(y.ability=g.config.ability),y}}class Ie extends ne(dnd5e.applications.dice.SkillToolRollConfigurationDialog){constructor(e={},t={},i={}){const s=foundry.utils.mergeObject(e,{chooseAbility:!0});i.rollType=i.rollType||CONFIG.Dice.D20Roll,super(s,t,i),n.log("constructor",[e,t,i])}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}_prepareConfigurationData(e,t,i,s){n.log("_prepareConfigurationData",[e,t,i,s]);const o=super._prepareConfigurationData(e,t,i,s);return o.showDC=this.showDC,o.dcValue=this.dcValue,o.sendRequest=this.sendRequest,o.actorCount=this.actors.length,o}async _preparePartContext(e,t,i){return n.log("_preparePartContext",[e,t,i]),t=await super._preparePartContext(e,t,i),e==="configuration"&&(t.showDC=this.showDC,t.dcValue=this.dcValue,t.sendRequest=this.sendRequest,t.actorCount=this.actors.length),t}async _onRender(e,t){if(n.log("_onRender",[e,t]),super._onRender(e,t),this.element.querySelector(".gm-roll-config-fields"))return;let i=this.element.querySelector(".rolls .formulas");if(i&&(this.showDC||this.actors.length>0)){const s={showDC:this.showDC,dcValue:this.dcValue,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},o=await renderTemplate(`modules/${F}/templates/gm-roll-config-fields.hbs`,s),a=document.createElement("div");a.className="gm-roll-config-fields",a.innerHTML=o,i.parentNode.insertBefore(a,i)}this._attachButtonListeners()}_attachButtonListeners(){n.log("_attachButtonListeners",[]),this.element.querySelectorAll('[data-action="advantage"], [data-action="normal"], [data-action="disadvantage"]').forEach(t=>{t.addEventListener("click",i=>{i.currentTarget.dataset.action})})}static async initConfiguration(e,t,i,s={}){var A,I,E,D,w,M,$,O;n.log("initConfiguration",[e,t,i,s]);const o=t==null?void 0:t.toLowerCase(),a=[r.SKILL,r.TOOL].includes(o),l=e[0];if(!l)return null;const u=CONFIG.Dice.D20Roll;let c=null;if(o===r.SKILL){const v=l.system.skills[i];c=(v==null?void 0:v.ability)||((A=CONFIG.DND5E.skills[i])==null?void 0:A.ability)||"int"}else if(o===r.TOOL){const v=(I=l.system.tools)==null?void 0:I[i];c=(v==null?void 0:v.ability)||((w=(D=(E=CONFIG.DND5E.enrichmentLookup)==null?void 0:E.tools)==null?void 0:D[i])==null?void 0:w.ability)||"int"}const g={data:l.getRollData(),subject:l,ability:c,chooseAbility:!0,rolls:[{parts:[],data:l.getRollData(),options:{}}]};o===r.SKILL?g.skill=i:o===r.TOOL&&(g.tool=i);const f={create:!1,data:{speaker:ChatMessage.getSpeaker({actor:l})}},m={options:{actors:e,sendRequest:e.some(v=>z._isPlayerOwned(v)),showDC:a,rollKey:i,rollType:u,window:{title:z._getRollTitle(o,i,l),subtitle:z._getSubtitle(e)},...s}},h=new this(g,f,m.options),R=await new Promise(v=>{h.addEventListener("close",()=>{v({rolls:h.rolls,config:h.config,message:h.message,sendRequest:h.sendRequest})},{once:!0}),h.render({force:!0})});if(!R.rolls||R.rolls.length===0)return null;const p=R.rolls[0];let b=!1,y=!1;((M=p==null?void 0:p.options)==null?void 0:M.advantageMode)!==void 0&&(b=p.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE,y=p.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE);const T=(($=p==null?void 0:p.data)==null?void 0:$.situational)||"",_=(O=p==null?void 0:p.options)==null?void 0:O.target,C={rolls:[{parts:[],data:T?{situational:T}:{},options:_?{target:_}:{}}],subject:e[0],advantage:b,disadvantage:y,target:_,sendRequest:R.sendRequest,isRollRequest:R.sendRequest,skipDialog:s.skipDialogs||!1,chatMessage:!0},L=game.settings.get("core","rollMode");return R.message.rollMode&&R.message.rollMode!==L&&(C.rollMode=R.message.rollMode),R.config.ability&&[r.SKILL,r.TOOL].includes(o)&&(C.ability=R.config.ability),C.rollTitle=m.options.window.title,C.rollType=o,C.rollKey=i,C}}class Ge extends ne(dnd5e.applications.dice.DamageRollConfigurationDialog){constructor(e={},t={},i={}){const s=foundry.utils.mergeObject({configure:!0},e);super(s,t,i),n.log("GMDamageConfigDialog.constructor",[s,t,i])}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","damage-roll","gm-roll-config"]})}_prepareConfigurationData(e,t,i,s){n.log("GMDamageConfigDialog._prepareConfigurationData",[e,t,i,s]);const o=super._prepareConfigurationData(e,t,i,s);return o.sendRequest=this.sendRequest,o.actorCount=this.actors.length,o}async _onRender(e,t){if(await super._onRender(e,t),this.actors.length>0){const i=this.element.querySelector(".rolls + .dialog-buttons");if(i&&!this.element.querySelector(".gm-roll-config-fields")){const s=document.createElement("div");s.className="gm-roll-config-fields",s.innerHTML=`
          <div class="form-group">
            <label class="checkbox">
              <input type="checkbox" name="crlngn-send-request" ${this.sendRequest?"checked":""}>
              ${game.i18n.localize("CRLNGN_ROLL_REQUESTS.ui.dialogs.sendRequestToPlayers")}
            </label>
          </div>
        `,i.insertAdjacentElement("beforebegin",s)}}}static async initConfiguration(e,t,i,s={},o={},a={}){var T;n.log("GMDamageConfigDialog.initConfiguration",[e,t,i,s,o,a]);const l=e[0];if(!l)return null;const u=t==null?void 0:t.toLowerCase(),c={subject:o.subject,data:l.getRollData(),critical:o.critical||!1,rolls:o.rolls||[{parts:[],data:l.getRollData(),options:{}}]},g={create:!1,data:{speaker:ChatMessage.getSpeaker({actor:l})}},{position:f,...m}=(a==null?void 0:a.options)||{},h={options:{actors:e,sendRequest:e.some(_=>z._isPlayerOwned(_)),rollKey:i,rollType:CONFIG.Dice.DamageRoll||CONFIG.Dice.BasicRoll,rollTypeString:u,window:{title:game.i18n.localize("DND5E.DamageRoll"),subtitle:z._getSubtitle(e)},...m,...s}},R=new this(c,g,h.options),p=await new Promise(_=>{R.addEventListener("close",()=>{var C;_({rolls:R.rolls,sendRequest:R.sendRequest,advantage:R.config.advantage,disadvantage:R.config.disadvantage,critical:R.config.critical,rollMode:(C=R.message)==null?void 0:C.rollMode})},{once:!0}),R.render(!0)});if(!((T=p.rolls)!=null&&T.length))return n.log("GMDamageConfigDialog.initConfiguration - cancelled"),null;n.log("GMDamageConfigDialog.initConfiguration - result",[p]);const b={rolls:p.rolls,sendRequest:p.sendRequest,critical:p.critical,skipDialog:s.skipDialogs||!1,chatMessage:!0},y=game.settings.get("core","rollMode");return p.rollMode&&p.rollMode!==y&&(b.rollMode=p.rollMode),b.rollTitle=h.options.window.title,b.rollType=u,b.rollKey=i,n.log("GMDamageConfigDialog.initConfiguration - final result",[b]),b}}class qe extends ne(dnd5e.applications.dice.AttackRollConfigurationDialog){constructor(e={},t={},i={}){super(e,t,i),n.log("GMAttackConfigDialog.constructor",[e,t,i])}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}_prepareConfigurationData(e,t,i,s){n.log("GMAttackConfigDialog._prepareConfigurationData",[e,t,i,s]);const o=super._prepareConfigurationData(e,t,i,s);return o.sendRequest=this.sendRequest,o.actorCount=this.actors.length,o}async _preparePartContext(e,t,i){return t=await super._preparePartContext(e,t,i),e==="configuration"&&(t.sendRequest=this.sendRequest,t.actorCount=this.actors.length),t}async _onRender(e,t){if(await super._onRender(e,t),this.element.querySelector(".gm-roll-config-fields"))return;let i=this.element.querySelector(".rolls .formulas");if(i&&this.actors.length>0){const s={showDC:!1,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},o=await renderTemplate(`modules/${F}/templates/gm-roll-config-fields.hbs`,s),a=document.createElement("div");a.className="gm-roll-config-fields",a.innerHTML=o,i.parentNode.insertBefore(a,i)}}_finalizeRolls(e){return this.config.sendRequest=this.sendRequest,!this.sendRequest&&this.config.isRollRequest&&(this.config.isRollRequest=!1),super._finalizeRolls(e)}static async initConfiguration(e,t,i,s={},o={},a={}){var I,E,D,w,M,$;n.log("GMAttackConfigDialog.initConfiguration",[e,t,i,s,o,a]);const l=e[0];if(!l)return null;const u=t==null?void 0:t.toLowerCase(),c={subject:o.subject||l,data:l.getRollData(),rollMode:CONST.DICE_ROLL_MODES.PUBLIC,rolls:[{parts:[],data:l.getRollData(),options:{}}]},g={create:!1,data:{speaker:ChatMessage.getSpeaker({actor:l})}},{position:f,...m}=(a==null?void 0:a.options)||{},h={options:{actors:e,sendRequest:e.some(O=>z._isPlayerOwned(O)),rollKey:i,rollType:CONFIG.Dice.D20Roll,rollTypeString:u,window:{title:game.i18n.localize("DND5E.Attack"),subtitle:z._getSubtitle(e)},...m,...s}},R=new this(c,g,h.options),p=await new Promise(O=>{R.addEventListener("close",()=>{O({rolls:R.rolls,config:R.config,message:R.message,sendRequest:R.sendRequest})},{once:!0}),R.render({force:!0})});if(n.log("GMAttackConfigDialog.initConfiguration",[R.sendRequest]),!p.rolls||p.rolls.length===0)return null;const b=p.rolls[0];let y=!1,T=!1;((I=b==null?void 0:b.options)==null?void 0:I.advantageMode)!==void 0&&(y=b.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE,T=b.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE);const _=((E=b==null?void 0:b.data)==null?void 0:E.situational)||"",C=(D=b==null?void 0:b.options)==null?void 0:D.target,L={rolls:[{parts:[],data:_?{situational:_}:{},options:{...C&&{target:C},...((w=b==null?void 0:b.options)==null?void 0:w.ammunition)&&{ammunition:b.options.ammunition},...((M=b==null?void 0:b.options)==null?void 0:M.attackMode)&&{attackMode:b.options.attackMode},...(($=b==null?void 0:b.options)==null?void 0:$.mastery)!==void 0&&{mastery:b.options.mastery}}}],subject:o.subject||l,advantage:y,disadvantage:T,target:C,sendRequest:p.sendRequest,isRollRequest:p.sendRequest,skipDialog:s.skipDialogs||!1,chatMessage:!0},A=game.settings.get("core","rollMode");return p.message.rollMode&&p.message.rollMode!==A&&(L.rollMode=p.message.rollMode),L.rollTitle=h.options.window.title,L.rollType=u,L.rollKey=i,n.log("GMAttackConfigDialog.initConfiguration - SIMPLIFIED result",[L]),L}}class le{static isModuleActive(e){const t=game.modules.get(e);return t&&t.active}static getMidiQOL(){return this.isMidiQOLActive()&&typeof MidiQOL<"u"?MidiQOL:null}}class Re{static findActivityForRoll(e,t){var o;if(!((o=e==null?void 0:e.system)!=null&&o.activities))return null;const i=e.system.activities;switch(t==null?void 0:t.toLowerCase()){case r.ATTACK:const a=i.getByType("attack");return(a==null?void 0:a[0])||null;case r.DAMAGE:const l=i.getByType("attack");if((l==null?void 0:l.length)>0)return l[0];const u=i.getByType("damage");if((u==null?void 0:u.length)>0)return u[0];const c=i.getByType("save");return(c==null?void 0:c.length)>0?c[0]:null;case r.ITEM_SAVE:const g=i.getByType("save");return(g==null?void 0:g[0])||null;default:return null}}static getActivitiesByType(e,t){var i;return(i=e==null?void 0:e.system)!=null&&i.activities?e.system.activities.getByType(t):[]}static hasActivityForRoll(e,t){return n.log("hasActivityForRoll",[e,t]),!!this.findActivityForRoll(e,t)}static async executeActivityRoll(e,t,i,s,o){var c,g,f,m,h,R,p,b,y,T;n.log("executeActivityRoll",[e,t,i,s,o]);const a=e.items.get(i);if(!a)throw new Error(`Item ${i} not found on actor ${e.name}`);let l=null;if(s&&(l=(c=a.system.activities)==null?void 0:c.get(s)),l=l||this.findActivityForRoll(a,t),!l)throw new Error(`Activity not found on item ${a.name}`);n.log("executeActivityRoll - activity",[l,t]);const u=t==null?void 0:t.toLowerCase();if(l)switch(u){case r.ATTACK:n.log("executeActivityRoll - is attack activity",[o]);const _={attackMode:o.usage.attackMode,ammunition:o.usage.ammunition,mastery:o.usage.mastery,situational:(m=(f=(g=o.usage.rolls)==null?void 0:g[0])==null?void 0:f.data)==null?void 0:m.situational,advantage:o.usage.advantage,disadvantage:o.usage.disadvantage};await l.item.setFlag(F,"tempAttackConfig",_),n.log("executeActivityRoll - stored temp config as flag",[_]);try{if(le.isModuleActive("midi-qol")&&le.getMidiQOL()){const A=await Re.syntheticItemRoll(a,{...o});return}await l.use(o.usage,o.dialog,o.message)}finally{await l.item.unsetFlag(F,"tempAttackConfig")}return;case r.DAMAGE:if(le.isModuleActive("midi-qol")){const L=le.getMidiQOL();if(L){const A=(h=L.Workflow)==null?void 0:h.getWorkflow(l.uuid);await A.activity.rollDamage({...o,workflow:A});return}}n.log("executeActivityRoll - damage roll",[l,o]);const C={critical:o.usage.critical||!1,event:o.usage.event,rollMode:(R=o.message)==null?void 0:R.rollMode,create:((p=o.message)==null?void 0:p.create)!==!1};return(T=(y=(b=o.usage.rolls)==null?void 0:b[0])==null?void 0:y.data)!=null&&T.situational&&(C.data||(C.data={}),C.data.situational=o.usage.rolls[0].data.situational),n.log("executeActivityRoll - damage config with situational",[C]),l!=null&&l.previousAttack||l!=null&&l.damageOnly?await l.rollDamage(C,o.dialog,o.message):await l.rollDamage(C,o.dialog,o.message);case r.ITEM_SAVE:return await a.use({activity:l.id},{skipDialog:o.fastForward});default:n.log("executeActivityRoll - unknown roll type",[u]);return}throw new Error(`No suitable method found for ${u} on item ${a.name}`)}static getActivityDisplayInfo(e){return n.log("getActivityDisplayInfo",[e]),e?{name:e.name||e.constructor.metadata.label,type:e.type,icon:e.constructor.metadata.icon,canAttack:e.type==="attack",canDamage:["attack","damage","save"].includes(e.type),canSave:e.type==="save"}:null}static getDamageFormula(e){var i,s;if(n.log("getDamageFormula",[e]),!((s=(i=e==null?void 0:e.damage)==null?void 0:i.parts)!=null&&s.length))return null;const t=e.damage.parts.map(o=>o.formula).filter(o=>o);return t.length>0?t.join(" + "):null}static async syntheticItemRoll(e,t={}){n.log("syntheticItemRoll",[e,t]);const i=le.getMidiQOL();if(!i){n.warn("MidiQOL is not active");return}let s={consumeUsage:!1,consumeSpellSlot:!1},o={configureDialog:!0,workflowOptions:{autoRollAttack:!1,autoFastAttack:!1,autoRollDamage:"none",autoFastDamage:!1}};return t={...s,...t},await i.completeItemUse(e,t,o)}static async replaceDamage(e,t,{ignoreCrit:i=!1,damageType:s}={}){t=String(t),e.isCritical&&!i&&(t=await rollUtils.getCriticalFormula(t,e.item.getRollData()));let o=await new CONFIG.Dice.DamageRoll(t).evaluate();return await e.setDamageRolls([o]),o}}const W={addSituationalBonus(d,e){var t;return n.log("Config before adding bonus:",[e,d]),e&&((t=d.rolls)!=null&&t[0])&&(d.rolls[0].parts||(d.rolls[0].parts=[]),d.rolls[0].data||(d.rolls[0].data={}),d.rolls[0].data.situational=e,d.rolls[0].parts.includes("@situational")||d.rolls[0].parts.push("@situational"),n.log("Config after adding bonus:",[d])),d},buildRollConfig(d,e,t={}){const i={rolls:[{parts:e.parts||[],data:e.data||{},options:e.options||{}}],advantage:d.config.advantage||!1,disadvantage:d.config.disadvantage||!1,target:d.config.target,subject:null,chatMessage:!0,legacy:!1,...t},s=d.config.situational;return s&&this.addSituationalBonus(i,s),this.ensureRollFlags(i,d)},ensureRollFlags(d,e){return d.isRollRequest=!game.user.isGM,d._showRequestedBy=!0,d._requestedBy=e.config.requestedBy||"GM",d}};class de extends foundry.applications.api.HandlebarsApplicationMixin(foundry.applications.api.ApplicationV2){constructor(e={}){super(e),this.formula=e.formula||"",this.readonly=e.readonly||!1,this.actor=e.actor,this.callback=e.callback,this.diceCounts={}}_onClickAction(e,t){switch(t.dataset.action){case"rollDice":return this.rollDice(e,t);case"addDie":return this.addDie(e,t);case"cancel":return this.cancel(e,t)}}async _prepareContext(e={}){return{...await super._prepareContext(e),formula:this.formula,readonly:this.readonly}}_attachPartListeners(e,t,i){super._attachPartListeners(e,t,i);const s=t.querySelector("#custom-roll-formula"),o=t.querySelector("#formula-validation-message");s&&!this.readonly&&(s.addEventListener("input",a=>{this.formula=a.target.value.trim(),this.updateValidationMessage(o)}),this.formula&&this.updateValidationMessage(o))}updateValidationMessage(e){if(!e)return;if(!this.formula){e.textContent="&nbsp;",e.classList.remove("error","success");return}this.validateFormula(this.formula)?(e.textContent=game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.formulaValid"),e.classList.remove("error"),e.classList.add("success")):(e.textContent=game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.formulaInvalid"),e.classList.remove("success"),e.classList.add("error"))}addDie(e,t){const i=t.dataset.die,s=this.element.querySelector("#custom-roll-formula");if(!s)return;const o=s.value.trim();if(o){const a=/(\d*)d(\d+)/g,l=new Map;let u=o,c;for(;(c=a.exec(o))!==null;){const m=parseInt(c[1]||"1"),h=c[2];l.set(h,(l.get(h)||0)+m),u=u.replace(c[0],"").trim()}const g=i.substring(1);l.set(g,(l.get(g)||0)+1);const f=[];for(const[m,h]of l)f.push(`${h}d${m}`);u=u.replace(/^\+\s*|\s*\+\s*$|\s*\+\s*\+/g,"").trim(),u&&u!=="+"?this.formula=`${f.join(" + ")} + ${u}`:this.formula=f.join(" + ")}else this.formula=`1${i}`;s.value=this.formula,s.dispatchEvent(new Event("input"))}validateFormula(e){var t;if(!e||e.trim()==="")return!1;try{return Roll.validate(e)}catch{try{return new Roll(e,((t=this.actor)==null?void 0:t.getRollData())||{}),!0}catch{return!1}}}async rollDice(){if(n.log("rollDice"),!this.validateFormula(this.formula)){ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:this.formula||"empty"}));return}this.callback&&await this.callback(this.formula),this.close()}cancel(){this.close()}static async prompt(e={}){return new Promise(t=>{const i=new this({...e,callback:s=>t(s)});i.addEventListener("close",()=>{i._resolved||t(null)}),i.render(!0)})}async close(e={}){return this._resolved=!0,super.close(e)}}S(de,"DEFAULT_OPTIONS",{id:"crlngn-custom-roll-dialog",classes:["crlngn-rolls-dialog","crlngn-custom-roll-dialog"],tag:"div",window:{title:"CRLNGN_ROLLS.ui.dialogs.customRollTitle",icon:"fas fa-dice-d20",resizable:!1,positioned:!0,frame:!0},position:{width:420,height:"auto"}}),S(de,"PARTS",{main:{template:`modules/${Y.ID}/templates/custom-roll-dialog.hbs`},footer:{template:`modules/${Y.ID}/templates/custom-roll-dialog-footer.hbs`}});const x={ability:async(d,e,t,i,s)=>{var a;n.log("RollHandlers.ability #1",[t]);const o=W.buildRollConfig(e,t,{ability:e.rollKey});n.log("RollHandlers.ability #2",[(a=o.rolls)==null?void 0:a[0]]),await d.rollAbilityCheck(o,i,s)},abilitycheck:async(d,e,t,i,s)=>x.ability(d,e,t,i,s),save:async(d,e,t,i,s)=>{var a;const o=W.buildRollConfig(e,t,{ability:((a=e.config)==null?void 0:a.ability)||e.rollKey});await d.rollSavingThrow(o,i,s)},savingthrow:async(d,e,t,i,s)=>x.save(d,e,t,i,s),skill:async(d,e,t,i,s)=>{var l,u,c,g,f,m;n.log("RollHandlers.skill #1",[e,t,i]);const o=((u=(l=d.system.skills)==null?void 0:l[e.rollKey])==null?void 0:u.ability)||((g=(c=CONFIG.DND5E.skills)==null?void 0:c[e.rollKey])==null?void 0:g.ability)||void 0,a=W.buildRollConfig(e,t,{skill:e.rollKey,chooseAbility:i.configure!==!1,ability:e.config.ability||o});if(e.config.ability&&i.configure===!1){const h=((f=CONFIG.DND5E.skills[e.rollKey])==null?void 0:f.label)||e.rollKey,R=((m=CONFIG.DND5E.abilities[e.config.ability])==null?void 0:m.label)||e.config.ability,p=game.i18n.format("DND5E.SkillPromptTitle",{skill:h,ability:R});s.data=s.data||{},s.data.flavor=p}n.log("RollHandlers.skill #2",[a,i,s]),await d.rollSkill(a,i,s)},tool:async(d,e,t,i,s)=>{var u,c,g,f,m,h,R;n.log("RollHandlers.tool #1",[e,t]);const o=(u=d.system.tools)==null?void 0:u[e.rollKey],a=(o==null?void 0:o.ability)||((f=(g=(c=CONFIG.DND5E.enrichmentLookup)==null?void 0:c.tools)==null?void 0:g[e.rollKey])==null?void 0:f.ability)||"int",l=W.buildRollConfig(e,t,{tool:e.rollKey,chooseAbility:i.configure!==!1,ability:e.config.ability||a});if(e.config.ability&&i.configure===!1){const p=(h=(m=CONFIG.DND5E.enrichmentLookup)==null?void 0:m.tools)==null?void 0:h[e.rollKey];let b=e.rollKey;if(p!=null&&p.id){const _=dnd5e.documents.Trait.getBaseItem(p.id,{indexOnly:!0});b=(_==null?void 0:_.name)||e.rollKey}const y=((R=CONFIG.DND5E.abilities[e.config.ability])==null?void 0:R.label)||e.config.ability,T=game.i18n.format("DND5E.ToolPromptTitle",{tool:b,ability:y});s.data=s.data||{},s.data.flavor=T}n.log("RollHandlers.tool #2",[l,i,s]),await d.rollToolCheck(l,i,s)},concentration:async(d,e,t,i,s)=>{const o=W.buildRollConfig(e,t);await d.rollConcentration(o,i,s)},attack:async(d,e,t,i,s)=>{await x.handleActivityRoll(d,r.ATTACK,e,t,i,s)},damage:async(d,e,t,i,s)=>{await x.handleActivityRoll(d,r.DAMAGE,e,t,i,s)},itemsave:async(d,e,t,i,s)=>{await x.handleActivityRoll(d,r.ITEM_SAVE,e,t,i,s)},initiative:async(d,e,t,i,s)=>{if(!game.combat){ui.notifications.warn(game.i18n.localize("COMBAT.NoneActive"));return}const o=W.buildRollConfig(e,t),a=e.config.situational||t.data.situational||"";a&&i.configure&&!game.user.isGM&&(d._initiativeSituationalBonus=a),i.configure&&!game.user.isGM?await d.rollInitiativeDialog(o):await d.rollInitiative({createCombatants:!0},o)},initiativedialog:async(d,e,t,i,s)=>x.initiative(d,e,t,i,s),deathsave:async(d,e,t,i,s)=>{const o=W.buildRollConfig(e,t);await d.rollDeathSave(o,i,s)},hitdie:async(d,e,t,i,s)=>{i.configure=game.user.isGM?i.configure:!0;const o=W.buildRollConfig(e,t,{denomination:e.rollKey});n.log("RollHandlers.hitdie",[o,i,s]),await d.rollHitDie(o,i,s)},custom:async(d,e,t,i,s)=>{await x.handleCustomRoll(d,e,i,s)},async handleActivityRoll(d,e,t,i,s,o){var a,l;if(n.log("RollHandlers.handleActivityRoll",[e,t,i]),t.rollKey){const u=W.buildRollConfig(t,i),c=((l=(a=u.rolls)==null?void 0:a[0])==null?void 0:l.options)||{},g={usage:{...t.config,rolls:u.rolls,...c.attackMode&&{attackMode:c.attackMode},...c.ammunition&&{ammunition:c.ammunition},...c.mastery!==void 0&&{mastery:c.mastery}},dialog:s,message:o};n.log("handleActivityRoll - final activity config",[g]),await Re.executeActivityRoll(d,e,t.rollKey,t.activityId,g)}},async handleCustomRoll(d,e,t,i){var a,l,u;const s=e.rollKey;if((t==null?void 0:t.configure)===!1){try{const c=new Roll(s,d.getRollData());c.options=c.options||{},c.options.isRollRequest=((a=e.config)==null?void 0:a.isRollRequest)!==!1,await c.evaluate({async:!0}),await c.toMessage({speaker:ChatMessage.getSpeaker({actor:d}),flavor:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${r.CUSTOM}`),rollMode:(i==null?void 0:i.rollMode)||((l=e.config)==null?void 0:l.rollMode)||game.settings.get("core","rollMode"),isRollRequest:((u=e.config)==null?void 0:u.isRollRequest)!==!1,create:(i==null?void 0:i.create)!==!1})}catch{ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:s}))}return}new de({formula:s,readonly:!0,actor:d,callback:async c=>{try{const g=new Roll(c,d.getRollData());g.options=g.options||{},g.options.isRollRequest=!0,await g.evaluate({async:!0}),await g.toMessage({speaker:ChatMessage.getSpeaker({actor:d}),flavor:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${r.CUSTOM}`),rollMode:e.config.rollMode,isRollRequest:!0,_showRequestedBy:!0,_requestedBy:e.config.requestedBy||"GM"})}catch{ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:c}))}}}).render(!0)},async handleHitDieRecovery(d){const e=foundry.utils.mergeObject({type:"long",deltas:{hitDice:0},newDay:!1,rolls:[],updateData:{},updateItems:[]},{});"dhd"in e&&(e.deltas.hitDice=e.dhd),d._getRestHitDiceRecovery({maxHitDice:d.system.attributes.hd.max,type:"long"},e),e.dhd=e.deltas.hitDice,e.longRest=!0;try{if(e.updateData&&Object.keys(e.updateData).length>0){const t=await d.update(e.updateData,{isRest:!1})}else n.log("No actor updates to perform",[]);if(e.updateItems&&e.updateItems.length>0){const t=await d.updateEmbeddedDocuments("Item",e.updateItems,{isRest:!1})}else n.log("No item updates to perform",[])}catch(t){throw n.error("Error during updates in handleHitDieRecovery:",[t]),t}return n.log("handleHitDieRecovery #3",[e]),e}};function Pe(d,e){var s,o,a,l,u;let t=game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${d}`)||d;const i=d==null?void 0:d.toLowerCase();if(e)switch(i){case r.SKILL:t+=` (${((s=CONFIG.DND5E.skills[e])==null?void 0:s.label)||e})`;break;case r.SAVE:t+=` (${((o=CONFIG.DND5E.abilities[e])==null?void 0:o.label)||e})`;break;case r.ABILITY:t+=` (${((a=CONFIG.DND5E.abilities[e])==null?void 0:a.label)||e})`;break;case r.TOOL:const c=(u=(l=CONFIG.DND5E.enrichmentLookup)==null?void 0:l.tools)==null?void 0:u[e];if(c!=null&&c.id){const g=dnd5e.documents.Trait.getBaseItem(c.id,{indexOnly:!0});t+=` (${(g==null?void 0:g.name)||e})`}else t+=` (${e})`;break;case r.CUSTOM:t=`${t}: ${e}`;break}return t}function He(d,e=Pe){if(d.length===0)return;const t={};for(const s of d){const o=`${s.rollType}_${s.rollKey||""}`;t[o]||(t[o]={rollType:s.rollType,rollKey:s.rollKey,actors:[],gm:s.gm}),t[o].actors.push(s.actor)}const i=Object.values(t);if(i.length===1&&i[0].actors.length===1){const s=i[0];ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestReceived",{gm:s.gm,rollType:e(s.rollType,s.rollKey)}))}else{const s=[];for(const o of i){const a=e(o.rollType,o.rollKey),l=o.actors.join(", ");s.push(`${a} (${l})`)}ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsReceivedMultiple",{gm:i[0].gm,requests:s.join("; ")}))}}function Ve(d){const e=d.ownership||{};for(const[t,i]of Object.entries(e))if(i>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const s=game.users.get(t);if(s&&!s.isGM)return s}return null}function Fe(d,e=game.user){if(!(d!=null&&d.length))return;d.map(i=>canvas.tokens.get(i)).filter(i=>i).forEach(i=>i.setTarget(!0,{user:e}))}function ce(d){return d.type!=="character"&&d.type!=="npc"?!1:Object.entries(d.ownership).some(([e,t])=>{const i=game.users.get(e);return i&&!i.isGM&&t>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})}function Te(d){if(d.type!=="character"&&d.type!=="npc")return!1;const e=game.scenes.active;return e&&e.tokens.some(t=>t.actorId===d.id)}function ue(d,e){if(!game.scenes.active)return;const i=canvas.tokens.placeables.filter(s=>{var o;return((o=s.actor)==null?void 0:o.id)===d});for(const s of i)e?s.control({releaseOthers:!1}):s.release()}function Le(d){return new Promise(e=>setTimeout(e,d))}function Be(){var d;return!((d=ui==null?void 0:ui.sidebar)!=null&&d._collapsed)}function ze(d){const e=document.querySelector("body");d?e.classList.add("sidebar-expanded"):e.classList.remove("sidebar-expanded")}function xe(d,e){var a;const t=[];if(!d||e.size===0)return t;const i=Y.ROLL_REQUEST_OPTIONS[d];if(!i||!i.subList)return t;const s=Array.from(e)[0],o=game.actors.get(s);if(i.subList==="tools"){const l=((a=CONFIG.DND5E.enrichmentLookup)==null?void 0:a.tools)||CONFIG.DND5E.tools||{};for(const[u,c]of Object.entries(l)){let g=u;if(c!=null&&c.id){const f=dnd5e.documents.Trait.getBaseItem(c.id,{indexOnly:!0});g=(f==null?void 0:f.name)||u}else g=u.replace(/([A-Z])/g," $1").replace(/^./,f=>f.toUpperCase()).trim();t.push({id:u,name:g,rollable:!0})}t.sort((u,c)=>u.name.localeCompare(c.name))}else if(o&&i.actorPath){const l=foundry.utils.getProperty(o,i.actorPath)||{},u=CONFIG.DND5E[i.subList];for(const[c,g]of Object.entries(l)){let f="";i.subList==="skills"&&(u!=null&&u[c])||i.subList==="abilities"&&(u!=null&&u[c])?f=u[c].label:f=g.label||game.i18n.localize(g.name||c)||c,t.push({id:c,name:f,rollable:!0})}i.subList==="skills"&&t.sort((c,g)=>c.name.localeCompare(g.name))}return t}const P=class P{static notify(e,t,i={}){if(!i.batch){ui.notifications[e](t);return}i.batchData&&(P.pendingNotifications.push(i.batchData),P.notificationTimer&&clearTimeout(P.notificationTimer),P.notificationTimer=setTimeout(()=>{He(P.pendingNotifications),P.pendingNotifications=[],P.notificationTimer=null},P.NOTIFICATION_BATCH_DELAY))}static notifyRollRequestsSent(e,t){const i=Object.entries(e);if(i.length!==0)if(i.length===1){const s=Object.values(e)[0],o=s.actors.map(a=>a.name).join(", ");ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsSentSingle",{rollType:t,actors:o,player:s.player.name}))}else{const s=i.map(([o,a])=>{const l=a.actors.map(u=>u.name).join(", ");return`${a.player.name} (${l})`});ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsSentMultiple",{rollType:t,count:i.length,players:s.join("; ")}))}}static clearPending(){P.notificationTimer&&(clearTimeout(P.notificationTimer),P.notificationTimer=null),P.pendingNotifications=[]}};S(P,"pendingNotifications",[]),S(P,"notificationTimer",null),S(P,"NOTIFICATION_BATCH_DELAY",500);let B=P;function $e(d){var i;const e=[],t=[];for(const s of d){const o=((i=s.system.attributes.hp)==null?void 0:i.value)||0,a=s.system.attributes.death||{},l=a.success||0,u=a.failure||0;o<=0&&l<3&&u<3?e.push(s):t.push(s.name)}return t.length>0&&B.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.actorsSkippingDeathSave",{actors:t.join(", ")})),e}function je(d){const e=[],t=[];for(const i of d){const s=Ve(i);s?e.push({actor:i,owner:s}):t.push(i)}return{pcActors:e,npcActors:t}}async function Ee(){return game.combat?!0:await Dialog.confirm({title:game.i18n.localize("COMBAT.Create"),content:"<p>"+game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.noCombatActive")+"</p>",yes:()=>!0,no:()=>!1,defaultYes:!0,options:{classes:["crlngn-rolls-dialog"]}})?(await(await game.combats.documentClass.create({scene:game.scenes.active.id})).activate(),B.notify("info",game.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.combatCreated")),!0):!1}async function ke(d,e){if(!e.combat)return d;const t=d.map(o=>e.actors.get(o)).filter(o=>o),i=[],s=new Set;for(const o of t){const a=e.combat.getCombatantByActor(o.id);a&&a.initiative!==null&&(i.push(o.name),s.add(o.id))}if(n.log("filterActorsForInitiative",[i]),i.length>0)if(await Dialog.confirm({title:e.i18n.localize("CRLNGN_ROLLS.ui.dialogs.rerollInitiativeTitle"),content:"<p>"+e.i18n.format("CRLNGN_ROLLS.ui.dialogs.rerollInitiative",{actors:i.join(", ")})+"</p>",yes:()=>!0,no:()=>!1,defaultYes:!1,options:{classes:["crlngn-rolls-dialog"]}})){for(const a of s){const l=e.combat.getCombatantByActor(a);l&&await l.update({initiative:null})}return d}else{const a=d.filter(l=>!s.has(l));return a.length===0&&B.notify("info",e.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.allActorsHaveInitiative")),a}return d}class Ae{static initialize(){n.log("RollInterceptor.initialize"),game.user.isGM&&this.registerHooks()}static registerHooks(){n.log("RollInterceptor.registerHooks"),this._registerHook(H.PRE_ROLL_ABILITY_CHECK,this._handlePreRoll.bind(this,r.ABILITY)),this._registerHook(H.PRE_ROLL_SAVING_THROW,this._handlePreRoll.bind(this,r.SAVE)),this._registerHook(H.PRE_ROLL_SKILL_V2,this._handlePreRoll.bind(this,r.SKILL)),this._registerHook(H.PRE_ROLL_TOOL_V2,this._handlePreRoll.bind(this,r.TOOL)),this._registerHook(H.PRE_ROLL_ATTACK_V2,this._handlePreRoll.bind(this,r.ATTACK)),this._registerHook(H.PRE_ROLL_DAMAGE_V2,this._handlePreRoll.bind(this,r.DAMAGE)),this._registerHook(H.PRE_ROLL_INITIATIVE,this._handlePreRollInitiative.bind(this,r.INITIATIVE)),this._registerHook(H.PRE_ROLL_INITIATIVE_DIALOG_V2,this._handlePreRollInitiative.bind(this,r.INITIATIVE)),this._registerHook(H.PRE_ROLL_DEATH_SAVE_V2,this._handlePreRoll.bind(this,r.DEATH_SAVE)),this._registerHook(H.PRE_ROLL_HIT_DIE_V2,this._handlePreRoll.bind(this,r.HIT_DIE))}static _registerHook(e,t){n.log("RollInterceptor._registerHook");const i=Hooks.on(e,t);this.registeredHooks.add({hookName:e,hookId:i})}static unregisterHooks(){n.log("RollInterceptor.unregisterHooks");for(const{hookName:e,hookId:t}of this.registeredHooks)Hooks.off(e,t);this.registeredHooks.clear()}static _handlePreRollInitiative(e,t,i){n.log("_handlePreRollInitiative",[e,t,i])}static _handlePreRoll(e,t,i,s){var f,m,h,R,p,b,y,T;if(n.log("_handlePreRoll #0",[e,t,i,s]),!game.user.isGM||t.isRollRequest===!1)return;const o=(t==null?void 0:t.hookNames)||(i==null?void 0:i.hookNames)||(s==null?void 0:s.hookNames)||[],a=o.includes("initiativeDialog")||o.includes("initiative");if(e===r.ATTACK){n.log("_handlePreRoll - is Attack roll",[(f=t.subject)==null?void 0:f.item]);const _=(h=(m=t.subject)==null?void 0:m.item)==null?void 0:h.getFlag(F,"tempAttackConfig");if(_){n.log("_handlePreRoll - found module flags, skipping interception",[_]);return}}if(e===r.DAMAGE){n.log("RollInterceptor._handlePreRoll - is Damage roll",[t]);const _=(p=(R=t.subject)==null?void 0:R.item)==null?void 0:p.getFlag(F,"tempDamageConfig");if(_){n.log("RollInterceptor._handlePreRoll - found module flags, skipping interception",[_]);return}}if(a&&e===r.ABILITY&&(n.log("RollInterceptor._handlePreRoll - Overriding ability to initiative",[o]),e=r.INITIATIVE),t!=null&&t.isRollRequest||t.sendRequest===!1||i!=null&&i.isRollRequest||s!=null&&s.isRollRequest)return;let l;e===r.HIT_DIE?l=((b=i==null?void 0:i.subject)==null?void 0:b.actor)||(i==null?void 0:i.subject)||(i==null?void 0:i.actor):e===r.ATTACK||e===r.DAMAGE?l=(y=t.subject)==null?void 0:y.actor:l=((T=t.subject)==null?void 0:T.actor)||t.subject||t.actor;const u=V();if(!k.get(u.rollInterceptionEnabled.tag)||!l||l.documentName!=="Actor")return;n.log("_handlePreRoll",[t,s]);const g=this._getActorOwner(l);if(!(!g||g.id===game.user.id||i.configure===!1||t.isRollRequest===!1||t.skipDialog===!0||t.fastForward===!0))return n.log("_handlePreRoll - intercepting roll #1",[t,s]),e===r.ATTACK&&(s={...s,rollMode:CONST.DICE_ROLL_MODES.PUBLIC}),n.log("_handlePreRoll - intercepting roll #2",[t,s]),this._showGMConfigDialog(l,g,e,t,i,s),!1}static async _showGMConfigDialog(e,t,i,s,o,a){var c,g,f,m,h,R,p,b,y,T,_,C,L,A;n.log("_showGMConfigDialog - config",[i,s]);const l=V();k.get(l.rollInterceptionEnabled.tag);const u=k.get(l.rollRequestsEnabled.tag);try{const I=i==null?void 0:i.toLowerCase();if(I===r.INITIATIVE&&(!game.combat&&!await Ee()||(await ke([e.id],game)).length===0))return;let E;[r.SKILL,r.TOOL].includes(I)?E=Ie:I===r.HIT_DIE?E=De:I===r.ATTACK?E=qe:I===r.DAMAGE&&(g=(c=dnd5e.applications)==null?void 0:c.dice)!=null&&g.DamageRollConfigurationDialog?E=Ge:E=z;let D={rolls:[{parts:[],data:{},options:{}}]};switch(I){case r.ABILITY:D.ability=s.ability||((f=s.subject)==null?void 0:f.ability);break;case r.SAVE:D.ability=s.ability||((m=s.subject)==null?void 0:m.ability),s.ability==="con"&&s.targetValue!==void 0&&(i=r.CONCENTRATION);break;case r.SKILL:D.skill=s.skill,D.ability=s.ability;break;case r.TOOL:D.tool=s.tool,D.ability=s.ability;break;case r.CONCENTRATION:D.ability="con";break;case r.INITIATIVE:break;case r.HIT_DIE:D.denomination=typeof s=="string"?s:s.denomination||((h=s.subject)==null?void 0:h.denomination);break;case r.ATTACK:o!=null&&o.options&&(D.ammunition=o.options.ammunition,D.attackMode=o.options.attackMode,D.mastery=o.options.mastery);break;case r.DAMAGE:D.item=(R=s.subject)==null?void 0:R.item,D.subject=s.subject,D.critical=s.critical||!1;break}const w=V(),M=k.get(w.skipDialogs.tag),$={actors:[e],rollType:I,showDC:!0,sendRequest:!0,skipDialogs:M};let O;if(M)O={sendRequest:!0,advantage:!1,disadvantage:!1,situational:"",rollMode:game.settings.get("core","rollMode")};else{let G=null;switch(I){case r.SKILL:G=s.skill;break;case r.TOOL:G=s.tool;break;case r.ABILITY:case r.SAVE:G=s.ability||((p=s.subject)==null?void 0:p.ability);break;case r.CONCENTRATION:G="con";break;case r.INITIATIVE:G=((y=(b=e.system.attributes)==null?void 0:b.init)==null?void 0:y.ability)||"dex";break;case r.HIT_DIE:G=typeof s=="string"?s:s.denomination||((T=s.subject)==null?void 0:T.denomination);break;case r.ATTACK:G=(C=(_=s.subject)==null?void 0:_.item)==null?void 0:C.id;break;case r.DAMAGE:G=(A=(L=s.subject)==null?void 0:L.item)==null?void 0:A.id;break}if(!E.initConfiguration)throw n.error("DialogClass.initConfiguration not found",[E,E.name]),new Error(`DialogClass ${E.name} does not have initConfiguration method`);I===r.ATTACK||I===r.DAMAGE?O=await E.initConfiguration([e],I,G,{skipDialogs:!1,sendRequest:u},s,o):O=await E.initConfiguration([e],I,G,{skipDialogs:!1,sendRequest:u})}if(!O){n.log("_showGMConfigDialog - Dialog cancelled");return}if(n.log("_showGMConfigDialog - sending _executeInterceptedRoll",[i,s,O]),!O.sendRequest||!u){await this._executeInterceptedRoll(e,i,s,O);return}const{event:v,...J}=s,j={...J,...O,rolls:O.rolls,requestedBy:game.user.name,...i===r.ATTACK&&{chatMessage:!1}};n.log("_showGMConfigDialog - finalConfig for damage roll",["rollType:",i,"result:",O,"result.rolls:",O.rolls,"finalConfig:",j,"finalConfig.rolls:",j.rolls]),this._sendRollRequest(e,t,i,j)}catch{this._sendRollRequest(e,t,i,s)}}static async _executeInterceptedRoll(e,t,i,s){var m,h,R,p,b,y,T,_,C,L,A,I,E,D;n.log("RollInterceptor._executeInterceptedRoll",[e,t,i,s]);const o=t==null?void 0:t.toLowerCase(),a=((m=s.rolls)==null?void 0:m[0])||{parts:[],data:{},options:{}},l=((h=a.data)==null?void 0:h.situational)||s.situational||"";let u;switch(o){case r.SKILL:u=i.skill;break;case r.TOOL:u=i.tool;break;case r.ABILITY:case r.SAVE:u=i.ability||((R=i.subject)==null?void 0:R.ability);break;case r.HIT_DIE:u=i.denomination;break;default:u=i.ability||i.skill||i.tool||i.denomination}const c={rollKey:u,config:{advantage:s.advantage||i.advantage,disadvantage:s.disadvantage||i.disadvantage,target:s.target||s.dc||i.target,rollMode:s.rollMode||i.rollMode,situational:l,isRollRequest:!1,ability:i.ability}};if(o===r.SKILL&&!c.config.ability)c.config.ability=((b=(p=e.system.skills)==null?void 0:p[c.rollKey])==null?void 0:b.ability)||((T=(y=CONFIG.DND5E.skills)==null?void 0:y[c.rollKey])==null?void 0:T.ability);else if(o===r.TOOL&&!c.config.ability){const w=(_=e.system.tools)==null?void 0:_[c.rollKey];c.config.ability=(w==null?void 0:w.ability)||((A=(L=(C=CONFIG.DND5E.enrichmentLookup)==null?void 0:C.tools)==null?void 0:L[c.rollKey])==null?void 0:A.ability)||"int"}else(o===r.ABILITY||o===r.SAVE)&&!c.config.ability&&(c.config.ability=c.rollKey);n.log("RollInterceptor._executeInterceptedRoll - requestData",[c,i,s]);const g={configure:!1,isRollRequest:!1},f={rollMode:c.config.rollMode,create:!0,isRollRequest:!1};try{const w=r,M=x[o];n.log("RollInterceptor._executeInterceptedRoll - handler 1",[M,o,x[o]]),M?((o===r.ATTACK||o===r.DAMAGE||o===r.SAVE)&&(c.rollKey=(E=(I=i.subject)==null?void 0:I.item)==null?void 0:E.id,c.activityId=(D=i.subject)==null?void 0:D.id),n.log("RollInterceptor._executeInterceptedRoll - handler 2",[c,a,g,f]),await M(e,c,a,g,f)):n.warn(`No handler found for roll type: ${o}`)}catch(w){n.error("RollInterceptor._executeInterceptedRoll",[w])}}static async _showConfigurationDialog(e,t,i,s,o,a){n.log("RollInterceptor._showConfigurationDialog",[e,t,i,s,o,a]);try{const u={...s,_rollMethod:async m=>(this._sendRollRequest(e,t,i,m),new Roll("1d20").evaluate({async:!1})),configured:!1},c=o.cls,f=await new c(u,o.options).render(!0)}catch{this._sendRollRequest(e,t,i,s)}}static _getActorOwner(e){n.log("_getActorOwner",[e]);const t=e.ownership||{};for(const[i,s]of Object.entries(t))if(s>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const o=game.users.get(i);if(o&&!o.isGM)return o}return null}static _sendRollRequest(e,t,i,s){var f,m,h,R,p,b,y;n.log("_sendRollRequest",[e,t,i,s]),n.log("_sendRollRequest - config.rolls check",["config.rolls:",s.rolls,"config.rolls[0]:",(f=s.rolls)==null?void 0:f[0],"config.rolls[0].data:",(h=(m=s.rolls)==null?void 0:m[0])==null?void 0:h.data,"config.rolls[0].data.situational:",(b=(p=(R=s.rolls)==null?void 0:R[0])==null?void 0:p.data)==null?void 0:b.situational]);const o=V(),a=k.get(o.skipDialogs.tag);let l=i==null?void 0:i.toLowerCase();l===r.INITIATIVE&&(l=r.INITIATIVE_DIALOG);let u=null,c=null;switch(l){case r.ABILITY:case r.SAVE:u=s.ability;break;case r.SKILL:u=s.skill;break;case r.TOOL:u=s.tool;break;case r.ATTACK:case r.DAMAGE:n.log("_sendRollRequest - Attack/Damage roll config",[i,s]),u=(y=s.subject.item)==null?void 0:y.id,c=s.subject.id;break;case r.HIT_DIE:u=typeof s=="string"?s:s.denomination;break;case r.INITIATIVE_DIALOG:case r.INITIATIVE:u=null;break;case r.DEATH_SAVE:u=null;break;default:n.warn(`Unknown roll type: ${i}`);return}const g={type:"rollRequest",requestId:foundry.utils.randomID(),actorId:e.id,rollType:l,rollKey:u,activityId:c,rollProcessConfig:{...s,_requestedBy:game.user.name},skipDialog:a,targetTokenIds:Array.from(game.user.targets).map(T=>T.id),preserveTargets:k.get(o.useGMTargetTokens.tag)};Q.execForUser("handleRollRequest",t.id,g),ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestSent",{player:t.name,actor:e.name}))}}S(Ae,"registeredHooks",new Set);var K;const oe=class oe extends foundry.applications.api.HandlebarsApplicationMixin(foundry.applications.api.ApplicationV2){constructor(t={}){n.log("RollRequestsMenu.constructor");super(t);S(this,"_onClickOutside",t=>{if(n.log("_onClickOutside"),this.isLocked)return;const i=this.element;i&&(t.target.closest(".roll-requests-menu")||i.contains(t.target)||t.target.closest("#crlngn-requests-icon")||t.target.closest(".dialog, .app, .notification")||this.close())});this.selectedActors=new Set,this.currentTab="pc",this.selectedRequestType=null,this.isLocked=!1,this.optionsExpanded=game.user.getFlag(Y.ID,"menuOptionsExpanded")??!1,this._initializeFromSelectedTokens()}async _prepareContext(t){n.log("_prepareContext");const i=await super._prepareContext(t),s=game.actors.contents,o=[],a=[],l=game.scenes.active;for(const p of s){if(p.type!=="character"&&p.type!=="npc")continue;const b={id:p.id,uuid:p.uuid,name:p.name,img:p.img,selected:this.selectedActors.has(p.id),crlngnStats:this._getActorStats(p)};Object.entries(p.ownership).some(([T,_])=>{const C=game.users.get(T);return C&&!C.isGM&&_>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})?o.push(b):l&&l.tokens.some(_=>_.actorId===p.id)&&a.push(b)}const u=V(),c=k.get(u.rollRequestsEnabled.tag),g=k.get(u.skipDialogs.tag),f=this.currentTab==="pc"?o:a,m=f.length>0&&f.every(p=>this.selectedActors.has(p.id)),h=[];if(this.selectedActors.size>0)for(const[p,b]of Object.entries(Y.ROLL_REQUEST_OPTIONS))h.push({id:p,name:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${b.name}`)||b.label,rollable:b.subList==null,hasSubList:!!b.subList,selected:this.selectedRequestType===p});const R=xe(this.selectedRequestType,this.selectedActors);return{...i,actors:f,currentTab:this.currentTab,isPCTab:this.currentTab==="pc",isNPCTab:this.currentTab==="npc",selectedTab:this.currentTab,rollRequestsEnabled:c,skipDialogs:g,selectAllOn:m,hasSelectedActors:this.selectedActors.size>0,requestTypes:h,rollTypes:R,showNames:!0,actorsLocked:this.isLocked,optionsExpanded:this.optionsExpanded}}_getActorStats(t){var a,l,u,c,g,f;n.log("_getActorStats");const i=t.system,s=[];(a=i.attributes)!=null&&a.hp&&s.push({abbrev:"HP",value:i.attributes.hp.value}),(l=i.attributes)!=null&&l.ac&&s.push({abbrev:"AC",value:i.attributes.ac.value});const o=(c=(u=i.attributes)==null?void 0:u.spell)==null?void 0:c.dc;return o&&s.push({abbrev:"DC",value:o}),(f=(g=i.skills)==null?void 0:g.prc)!=null&&f.passive&&s.push({abbrev:"PRC",value:i.skills.prc.passive}),s}_onRender(t,i){if(n.log("_onRender"),super._onRender(t,i),this._attachListeners(),this.optionsExpanded){const s=this.element.querySelector(".options-toggle"),o=this.element.querySelector("li.options");s&&s.classList.add("expanded"),o&&o.classList.add("expanded")}setTimeout(()=>{document.addEventListener("click",this._onClickOutside,!0)},100),this._tokenControlHook=Hooks.on("controlToken",this._onTokenControlChange.bind(this))}_onTokenControlChange(t,i){n.log("_onTokenControlChange"),this.rendered&&(this._ignoreTokenControl||(this._tokenUpdateTimeout&&clearTimeout(this._tokenUpdateTimeout),this._tokenUpdateTimeout=setTimeout(()=>{this._initializeFromSelectedTokens(),this.render(),this._tokenUpdateTimeout=null},100)))}_attachListeners(){var a,l,u,c,g;n.log("_attachListeners");const t=this.element;(a=t.querySelector("#crlngn-requests-toggle"))==null||a.addEventListener("change",this._onToggleRollRequests.bind(this)),(l=t.querySelector("#crlngn-skip-dialogs"))==null||l.addEventListener("change",this._onToggleSkipDialogs.bind(this)),(u=t.querySelector("#crlngn-actors-all"))==null||u.addEventListener("change",this._onToggleSelectAll.bind(this)),(c=t.querySelector("#crlngn-actors-lock"))==null||c.addEventListener("click",this._onToggleLock.bind(this)),(g=t.querySelector(".options-toggle"))==null||g.addEventListener("click",this._onToggleOptions.bind(this)),t.querySelectorAll(".actor-tab").forEach(f=>{f.addEventListener("click",this._onTabClick.bind(this))}),t.querySelectorAll(".actor").forEach(f=>{f.addEventListener("click",this._onActorClick.bind(this))}),t.querySelectorAll(".actor-select").forEach(f=>{f.addEventListener("click",this._onActorSelectClick.bind(this))});const s=t.querySelector(".request-types");s&&s.addEventListener("click",f=>{const m=f.target.closest("li");if(m&&m.dataset.id){const h={...f,currentTarget:m};this._onRequestTypeClick(h)}});const o=t.querySelector(".roll-types");o&&o.addEventListener("click",f=>{const m=f.target.closest("li");if(m&&m.dataset.id){const h={...f,currentTarget:m};this._onRollTypeClick(h)}})}async _onToggleRollRequests(t){n.log("_onToggleRollRequests");const i=V(),s=t.target.checked;await k.set(i.rollRequestsEnabled.tag,s),Oe.updateRollRequestsIcon(s)}async _onToggleSkipDialogs(t){n.log("_onToggleSkipDialogs");const i=V(),s=t.target.checked;await k.set(i.skipDialogs.tag,s)}_onToggleSelectAll(t){n.log("_onToggleSelectAll");const i=t.target.checked;this._ignoreTokenControl=!0,(this.currentTab==="pc"?game.actors.contents.filter(o=>ce(o)):game.actors.contents.filter(o=>!ce(o)&&Te(o))).forEach(o=>{i?(this.selectedActors.add(o.id),ue(o.id,!0)):(this.selectedActors.delete(o.id),ue(o.id,!1))}),setTimeout(()=>{this._ignoreTokenControl=!1},200),this.render(),this._updateRequestTypesVisibility()}_onToggleLock(t){n.log("_onToggleLock"),t.preventDefault(),this.isLocked=!this.isLocked;const i=t.currentTarget;i.classList.remove("fa-lock-keyhole","fa-lock-keyhole-open"),i.classList.add(this.isLocked?"fa-lock-keyhole":"fa-lock-keyhole-open")}async _onToggleOptions(t){n.log("_onToggleOptions"),t.preventDefault(),this.optionsExpanded=!this.optionsExpanded,await game.user.setFlag(Y.ID,"menuOptionsExpanded",this.optionsExpanded);const i=t.currentTarget||t.target.closest(".options-toggle");i&&i.classList.toggle("expanded",this.optionsExpanded);const s=this.element.querySelector("li.options");s&&s.classList.toggle("expanded",this.optionsExpanded)}_initializeFromSelectedTokens(){var i;n.log("_initializeFromSelectedTokens");const t=((i=canvas.tokens)==null?void 0:i.controlled)||[];this.selectedActors.clear();for(const s of t)if(s.actor&&(this.selectedActors.add(s.actor.id),this.selectedActors.size===1)){const o=ce(s.actor);this.currentTab=o?"pc":"npc"}}async _onTabClick(t){var s;n.log("_onTabClick");const i=t.currentTarget.dataset.tab;i!==this.currentTab&&(this.selectedActors.clear(),(s=canvas.tokens)==null||s.releaseAll(),this.selectedRequestType=null,this.currentTab=i,await this.render())}_onActorClick(t){if(n.log("_onActorClick"),t.target.closest(".actor-select"))return;const s=t.currentTarget.dataset.id;this._toggleActorSelection(s)}_onActorSelectClick(t){n.log("_onActorSelectClick"),t.stopPropagation();const i=t.currentTarget.dataset.id;this._toggleActorSelection(i)}_toggleActorSelection(t){n.log("_toggleActorSelection"),this._ignoreTokenControl=!0,this.selectedActors.has(t)?(this.selectedActors.delete(t),ue(t,!1)):(this.selectedActors.add(t),ue(t,!0)),setTimeout(()=>{this._ignoreTokenControl=!1},100),this.render(),this._updateRequestTypesVisibility(),this._updateSelectAllState()}_updateRequestTypesVisibility(){n.log("_updateRequestTypesVisibility"),this.render()}_updateSelectAllState(){n.log("_updateSelectAllState");const t=this.element.querySelector("#crlngn-actors-all"),i=this.currentTab==="pc"?"pc":"npc",s=this.element.querySelectorAll(`.${i}-actors .actor-item input[type="checkbox"]`),o=Array.from(s).filter(a=>a.checked).length;t.checked=o>0&&o===s.length,t.indeterminate=o>0&&o<s.length}async _onRequestTypeClick(t){const i=t.currentTarget,s=i.dataset.id,o=Y.ROLL_REQUEST_OPTIONS[s];if(n.log("_onRequestTypeClick",[s,i.dataset,o]),!o){n.error("Unknown request type:",s);return}this.selectedRequestType===s?this.selectedRequestType=null:this.selectedRequestType=s,o.subList?await this.render():this.selectedRequestType&&this._triggerRoll(s,null)}_onRollTypeClick(t){n.log("_onRollTypeClick");const i=t.currentTarget.dataset.id;this._triggerRoll(this.selectedRequestType,i)}_getValidActorIds(t){return t.filter(i=>{const s=game.actors.get(i);if(!s)return!1;const o=ce(s),a=!o&&Te(s);return this.currentTab==="pc"&&o||this.currentTab==="npc"&&a})}async _handleCustomRoll(){return await this._showCustomRollDialog()}async _getRollConfiguration(t,i,s,o,a){const l=V(),u=k.get(l.rollRequestsEnabled.tag);if(!o&&i!==r.CUSTOM){let c;[r.SKILL,r.TOOL].includes(i)?c=Ie:i===r.HIT_DIE?c=De:c=z;const g=await c.initConfiguration(t,i,s,{skipDialogs:o,sendRequest:u||!1});return n.log("_getRollConfiguration",[g]),g}else{const c={rolls:[{parts:[],data:{},options:{}}],advantage:!1,disadvantage:!1,rollMode:game.settings.get("core","rollMode"),chatMessage:!0,isRollRequest:!1,skipDialog:!0,sendRequest:u&&a.length>0};return i===r.DEATH_SAVE&&(c.target=10),c}}async _orchestrateRollsForActors(t,i,s,o,a){const l=V(),u=[],c=[],g=[];if(n.log("_orchestrateRollsForActors",[t]),t.sendRequest)for(const{actor:m,owner:h}of i)h.active?g.push({actor:m,owner:h}):(k.get(l.showOfflineNotifications.tag)&&B.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.playerOffline",{player:h.name})),c.push(m));else s.push(...i.map(({actor:m})=>m));for(const{actor:m,owner:h}of g)await this._sendRollRequestToPlayer(m,h,o,a,t,!0),u.push({actor:m,owner:h}),await Le(100);u.length>0&&this._showConsolidatedNotification(u,o,a);const f=[...c,...s];f.length>0&&(t.skipDialog=!0,await this._handleGMRolls(f,o,a,t))}async _triggerRoll(t,i){var R;n.log("_triggerRoll",[t,i]);const s=V(),o=Array.from(this.selectedActors),a=k.get(s.skipDialogs.tag),l=this._getValidActorIds(o);let u=l.map(p=>game.actors.get(p));const c=Y.ROLL_REQUEST_OPTIONS[t],g=(R=(c==null?void 0:c.name)||t)==null?void 0:R.toLowerCase();switch(g){case r.CUSTOM:if(i=await this._handleCustomRoll(),!i)return;break;case r.INITIATIVE:case r.INITIATIVE_DIALOG:if(!await Ee())return;if(game.combat){n.log("_triggerRoll",[]);const b=await ke(l,game);if(n.log("_triggerRoll filteredActorIds",[b,!b.length]),!b.length)return;u=b.map(y=>game.actors.get(y))}break;case r.DEATH_SAVE:u=await $e(u);break}if(!u.length){B.notify("warn","No valid actors selected");return}const{pcActors:f,npcActors:m}=je(u),h=await this._getRollConfiguration(u,g,i,a,f);n.log("_triggerRoll config",[h]),h&&(await this._orchestrateRollsForActors(h,f,m,g,i),setTimeout(()=>this.close(),500))}async _sendRollRequestToPlayer(t,i,s,o,a,l=!1){n.log("_sendRollRequestToPlayer #A",[s,o]);const u=V();let c=s==null?void 0:s.toLowerCase();if(c===r.ABILITY_CHECK?c=r.ABILITY:c===r.SAVING_THROW?c=r.SAVE:c===r.INITIATIVE_DIALOG&&(c=r.INITIATIVE),c===r.HIT_DIE){const f=t.system.attributes.hd;if(f.value>0)o=f.largestAvailable;else if(await foundry.applications.api.DialogV2.confirm({window:{title:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.hitDie.refillTitle")||"No Hit Dice Available",classes:["crlngn-hit-die-dialog"]},position:{width:420},content:`<p>${game.i18n.format("CRLNGN_ROLLS.ui.dialogs.hitDie.refillMessage",{actors:t.name})||""}</p>`,modal:!0,rejectClose:!1,yes:{label:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.hitDie.refillAndSend")||"Refill & Send",icon:""},no:{label:game.i18n.localize("Cancel")||"Cancel",icon:""}})){try{n.log("About to call handleHitDieRecovery for",[t.name]);const h=await x.handleHitDieRecovery(t);n.log("handleHitDieRecovery completed",[h])}catch(h){n.error("Error calling handleHitDieRecovery:",[h])}o=t.system.attributes.hd.largestAvailable,n.log("_sendRollRequestToPlayer - Hit Die REFILL",[{hdData:t.system.attributes.hd}]),B.notify("info",game.i18n.format("CRLNGN_ROLLS.ui.dialogs.hitDie.refilled",{actor:t.name})||`Hit dice refilled for ${t.name}`)}else return}const g={type:"rollRequest",requestId:foundry.utils.randomID(),actorId:t.id,rollType:c,rollKey:o,activityId:null,rollProcessConfig:{...a,_requestedBy:game.user.name},skipDialog:!1,targetTokenIds:Array.from(game.user.targets).map(f=>f.id),preserveTargets:k.get(u.useGMTargetTokens.tag)};Q.execForUser("handleRollRequest",i.id,g),l||B.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestSent",{player:i.name,actor:t.name}))}_showConsolidatedNotification(t,i,s){var u,c,g,f,m;n.log("_showConsolidatedNotification");const o={};for(const{actor:h,owner:R}of t)o[R.id]||(o[R.id]={player:R,actors:[]}),o[R.id].actors.push(h);for(const[h,R]of Object.entries(Y.ROLL_REQUEST_OPTIONS))if(R.name===i)break;const a=i;let l=game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${a}`)||a;if(s){const h=a.toLowerCase();if(h===r.SKILL)l=`${l} (${((u=CONFIG.DND5E.skills[s])==null?void 0:u.label)||s})`;else if(h===r.SAVING_THROW)l=`${l} (${((c=CONFIG.DND5E.abilities[s])==null?void 0:c.label)||s})`;else if(h===r.ABILITY_CHECK)l=`${l} (${((g=CONFIG.DND5E.abilities[s])==null?void 0:g.label)||s})`;else if(h===r.TOOL){const R=(m=(f=CONFIG.DND5E.enrichmentLookup)==null?void 0:f.tools)==null?void 0:m[s];if(R!=null&&R.id){const p=dnd5e.documents.Trait.getBaseItem(R.id,{indexOnly:!0});l=`${l} (${(p==null?void 0:p.name)||s})`}else l=`${l} (${s})`}else h===r.CUSTOM&&(l=`${l}: ${s}`)}B.notifyRollRequestsSent(o,l)}async _handleGMRolls(t,i,s,o){n.log("_handleGMRolls",[t,i,s,o]);for(const a of t)await this._initiateRollRequest(a,i,s,o),await Le(100)}async _initiateRollRequest(t,i,s,o){var R,p,b,y,T;n.log("_initiateRollRequest",[i,s,o]);const a=i.toLowerCase();let l=s;if(a===r.HIT_DIE){const _=t.system.attributes.hd;if(_){const C=["d6","d8","d10","d12","d20"];for(const L of C)if((((R=_[L])==null?void 0:R.value)||0)>0){l=L;break}}if(!l)if(n.log("_initiateRollRequest - No hit dice available",[t.name]),await foundry.applications.api.DialogV2.confirm({window:{title:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.hitDie.refillTitle")||"No Hit Dice Available",classes:["crlngn-hit-die-dialog"]},position:{width:420},content:`<p>${game.i18n.format("CRLNGN_ROLLS.ui.dialogs.hitDie.refillMessageLocal",{actors:t.name})||""}</p>`,modal:!0,rejectClose:!1,yes:{label:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.hitDie.refillAndRoll")||"Refill & Roll",icon:""},no:{label:game.i18n.localize("Cancel")||"Cancel",icon:""}})){const L=await x.handleHitDieRecovery(t);if(n.log("Hit die recovery result",[L]),B.notify("info",game.i18n.format("CRLNGN_ROLLS.ui.dialogs.hitDie.refilled",{actor:t.name})),l=t.system.attributes.hd.largestAvailable,!l){B.notify("warn",game.i18n.format("DND5E.HitDiceWarn",{name:t.name}));return}}else return}const u=((y=(b=(p=o.rolls)==null?void 0:p[0])==null?void 0:b.data)==null?void 0:y.situational)||"",c={rollKey:l,config:{...o,situational:u,rollMode:o.rollMode||game.settings.get("core","rollMode"),advantage:o.advantage||!1,disadvantage:o.disadvantage||!1,target:o.target}},g={configure:!o.fastForward&&!o.skipDialog},f={rollMode:o.rollMode||game.settings.get("core","rollMode"),create:o.chatMessage!==!1},m=((T=o.rolls)==null?void 0:T[0])||{},h=x[a];h?await h(t,c,m,g,f):B.notify("warn",`Unknown roll type: ${i}`)}async _onClose(t){n.log("_onClose"),await super._onClose(t),this.selectedActors.clear(),this.selectedRequestType=null,document.removeEventListener("click",this._onClickOutside,!0),this._tokenControlHook&&(Hooks.off("controlToken",this._tokenControlHook),this._tokenControlHook=null),this._tokenUpdateTimeout&&(clearTimeout(this._tokenUpdateTimeout),this._tokenUpdateTimeout=null)}setPosition(t={}){return n.log("setPosition"),this}async _showCustomRollDialog(){return n.log("_showCustomRollDialog"),de.prompt({formula:"",readonly:!1})}static toggle(){n.log("RollRequestsMenu.toggle"),Z(this,K)?Z(this,K).rendered?Z(this,K).close():(Z(this,K)._initializeFromSelectedTokens(),Z(this,K).render(!0)):(ye(this,K,new oe),Z(this,K).render(!0))}};K=new WeakMap,Ce(oe,K,null),S(oe,"DEFAULT_OPTIONS",{id:"crlngn-requests-menu",classes:["roll-requests-menu"],tag:"div",window:{frame:!1,resizable:!1,minimizable:!1},position:null}),S(oe,"PARTS",{main:{template:`modules/${Y.ID}/templates/requests-menus.hbs`}});let he=oe;class Oe{static addSidebarControls(e,t,i){if(!game.user.isGM||e.id!=="chat")return;const o=(t[0]||t).querySelector("#chat-controls");if(!o||o.querySelector(".roll-requests-icon"))return;const a=V(),l=k.get(a.rollRequestsEnabled.tag),u=document.createElement("a");u.id="crlngn-requests-icon",u.setAttribute("data-tooltip-direction","RIGHT"),u.className=`chat-control-icon roll-requests-icon${l?" active":""}`,u.title=game.i18n.localize("CRLNGN_ROLLS.ui.menus.rollRequestsTitle"),u.innerHTML=`<i class="fas fa-bolt${l?"":"-slash"}"></i>`;const c=o.querySelector(".chat-control-icon");c?c.parentNode.insertBefore(u,c):o.insertBefore(u,o.firstChild),u.addEventListener("click",()=>{he.toggle()})}static updateRollRequestsIcon(e){const t=document.querySelector("#crlngn-requests-icon i");t&&(t.className=`fas fa-bolt${e?"":"-slash"}`)}}class Se{static initialize(){Hooks.once(ie.INIT,this._onInit.bind(this)),Hooks.once(ie.READY,this._onReady.bind(this))}static _onInit(){V(),document.body.classList.add("crlngn-rolls"),k.registerSettings(),X.initialize(),this._registerHook(ie.RENDER_SIDEBAR_TAB,this._onRenderSidebarTab.bind(this))}static _onReady(){const e=V();k.get(e.debugMode.tag)&&(CONFIG.debug.hooks=!0),Ae.initialize(),this._registerDnd5eHooks(),game.user.isGM?this._registerGMHooks():(X.getDiceConfig(),this._registerPlayerHooks()),ze(Be())}static _registerDnd5eHooks(){this._registerHook(H.POST_ROLL_CONFIG,this._onPostRollConfig.bind(this)),this._registerHook(ie.PRE_CREATE_CHAT_MESSAGE,this._onPreCreateChatMessage.bind(this)),this._registerHook(ie.PRE_CREATE_CHAT_MESSAGE,this._onPreCreateChatMessageFlavor.bind(this)),this._registerHook(H.RENDER_ROLL_CONFIGURATION_DIALOG,this._onRenderRollConfigDialog.bind(this)),this._registerHook(H.RENDER_SKILL_TOOL_ROLL_DIALOG,this._onRenderSkillToolDialog.bind(this)),this._registerHook(H.PRE_USE_ACTIVITY,this._onPreUseActivity.bind(this)),this._registerHook(H.PRE_ROLL_HIT_DIE_V2,this._onPreRollHitDieV2.bind(this))}static _registerGMHooks(){this._registerHook(ie.USER_CONNECTED,this._onUserConnected.bind(this)),game.users.forEach(e=>{this._onUserConnected(e)})}static _registerPlayerHooks(){this._registerHook(H.PRE_ROLL_INITIATIVE_DIALOG_V2,this._onPreRollInitiativeDialogV2.bind(this)),this._registerHook(H.PRE_ROLL_ATTACK_V2,this._onPreRollAttackV2.bind(this))}static _onPostRollConfig(e,t,i,s){t._showRequestedBy&&e.length>0&&(s.data=s.data||{},s.data._showRequestedBy=!0,s.data._requestedBy=t._requestedBy)}static _onPreCreateChatMessage(e,t,i,s){var o;if(t._showRequestedBy&&((o=t.rolls)==null?void 0:o.length)>0){const a=t._requestedBy||"GM",l=game.i18n.format("CRLNGN_ROLL_REQUESTS.chat.requestedBy",{gm:a}),u=t.flavor||"";t.flavor=u?`${u} ${l}`:l}}static _onPreCreateChatMessageFlavor(e,t,i,s){var o,a;if(((o=t.rolls)==null?void 0:o.length)>0&&t.rolls[0])try{const l=t.rolls[0];(a=l.options)!=null&&a._customFlavor&&(t.flavor=l.options._customFlavor)}catch{}}static _onRenderRollConfigDialog(e,t,i){if(n.log("_onRenderRollConfigDialog triggered",[e,i]),e._situationalTriggered)return;const s=t.querySelectorAll('input[name*="situational"]');n.log("Situational inputs:",[s.length]);let o=!1;s.forEach((a,l)=>{var u,c,g,f,m;!a.value&&((f=(g=(c=(u=e.config)==null?void 0:u.rolls)==null?void 0:c[0])==null?void 0:g.data)!=null&&f.situational)&&((m=e.config)!=null&&m.isConcentration)&&(a.value=e.config.rolls[0].data.situational,o=!0),a.value&&!o&&(e._situationalTriggered=!0,o=!0,setTimeout(()=>{var h,R,p;a.dispatchEvent(new Event("change",{bubbles:!0,cancelable:!1})),(p=(R=(h=e.config)==null?void 0:h.rolls)==null?void 0:R[0])!=null&&p.data&&delete e.config.rolls[0].data.situational},50))})}static _onUserConnected(e){e.active&&e.id!==game.user.id&&X.requestDiceConfigFromUser(e.id)}static _onRenderSidebarTab(e,t,i){Oe.addSidebarControls(e,t,i)}static _registerHook(e,t){const i=Hooks.on(e,t);return this.registeredHooks.set(`${e}_${i}`,i),i}static unregisterAll(){this.registeredHooks.forEach((e,t)=>{const i=t.split("_")[0];Hooks.off(i,e)}),this.registeredHooks.clear()}static isRegistered(e){for(const t of this.registeredHooks.keys())if(t.startsWith(`${e}_`))return!0;return!1}static _onPreRollHitDieV2(e,t,i){if(n.log("_onPreRollHitDieV2 triggered",[e,t,i]),e.rolls&&e.rolls.length>1){const s=[];for(let o=0;o<e.rolls.length;o++){const a=e.rolls[o];a&&a.data&&a.data.situational&&s.push(a.data.situational)}if(s.length>0){e.rolls[0].data||(e.rolls[0].data={});const o=[...new Set(s)];e.rolls[0].data.situational=o.map(a=>{const l=a.toString().trim();return l.startsWith("-")?`(${l})`:l.startsWith("+")?`${l.substring(1)}`:`${l}`}).join(" + "),game.user.isGM&&!e.rolls[0].parts.find(a=>a.includes("@situational"))&&e.rolls[0].parts.push("@situational")}e.rolls=e.rolls.slice(0,1),n.log("Cleaned up hit die rolls",e.rolls)}}static _onPreRollInitiativeDialogV2(e,t,i){n.log("_onPreRollInitiativeDialogV2 triggered",[e,t,i]);const s=e.subject;if(s&&s._initiativeSituationalBonus){if(!e.rolls||e.rolls.length===0){const o=s.getInitiativeRollConfig({});e.rolls=o.rolls||[]}e.rolls.length>0&&(e.rolls[0].data||(e.rolls[0].data={}),e.rolls[0].data.situational=s._initiativeSituationalBonus,n.log("Added situational bonus to initiative dialog",[{bonus:s._initiativeSituationalBonus,rolls:e.rolls}]),delete s._initiativeSituationalBonus)}}static _onPreRollAttackV2(e,t,i){var o,a;n.log("_onPreRollAttackV2 triggered",[e,t,i]);const s=(a=(o=e.subject)==null?void 0:o.item)==null?void 0:a.getFlag(F,"tempAttackConfig");if(s){if(n.log("_onPreRollAttackV2 - Found stored request config from flag",[s]),s.isRollRequest===!1||s.skipDialog===!0||s.sendRequest===!1){n.log("_onPreRollAttackV2 - Not a roll request, skipping",[s]);return}s.attackMode&&(e.attackMode=s.attackMode),s.ammunition&&(e.ammunition=s.ammunition),s.mastery!==void 0&&(e.mastery=s.mastery),s.advantage&&(e.advantage=!0),s.disadvantage&&(e.disadvantage=!0),s.situational&&((!e.rolls||e.rolls.length===0)&&(e.rolls=[{parts:[],data:{},options:{}}]),e.rolls[0].data||(e.rolls[0].data={}),e.rolls[0].data.situational=s.situational),n.log("_onPreRollAttackV2 - Applied stored configuration to attack roll",[e])}}static _onPreUseActivity(e,t,i,s){n.log("_onPreUseActivity triggered",[e,t,i,s]);const o=V(),a=k.get(o.rollRequestsEnabled.tag),l=k.get(o.rollInterceptionEnabled.tag);if(n.log("_onPreUseActivity - Settings",[a,l]),!game.user.isGM||!a||!l)return;e.item.unsetFlag(F,"tempAttackConfig");const u=e.actor;if(!u)return;Object.entries(u.ownership).some(([g,f])=>{const m=game.users.get(g);return m&&!m.isGM&&f>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})&&(n.log("Preventing usage message for player-owned actor",[u.name]),s.create=!1)}static _onRenderSkillToolDialog(e,t,i){var o,a;if(n.log("_onRenderSkillToolDialog triggered",[e]),e._abilityFlavorFixed)return;const s=t.querySelector('select[name="ability"]');if(s&&(o=e.config)!=null&&o.isRollRequest&&(a=e.config)!=null&&a.ability){const l=s.value,u=e.config.ability;l===u&&(e._abilityFlavorFixed=!0,setTimeout(()=>{const c=new Event("change",{bubbles:!0,cancelable:!0});s.dispatchEvent(c)},50))}}}S(Se,"registeredHooks",new Map);class pe{static async handleRequest(e){var i;if(n.log("handleRequest",[e]),game.user.isGM)return;const t=game.actors.get(e.actorId);!t||!t.isOwner||(e.preserveTargets&&((i=e.targetTokenIds)==null?void 0:i.length)>0&&game.user.targets.size===0&&Fe(e.targetTokenIds),B.notify("info","",{batch:!0,batchData:{actor:t.name,rollType:e.rollType,rollKey:e.rollKey,gm:e.rollProcessConfig._requestedBy||"GM"}}),pe.executePlayerRollRequest(t,e))}static async executePlayerRollRequest(e,t){var i,s,o,a,l;n.log("executePlayerRollRequest",[e,t]),n.log("executePlayerRollRequest - checking rolls",["rollProcessConfig:",t.rollProcessConfig,"rollProcessConfig.rolls:",t.rollProcessConfig.rolls,"rollProcessConfig.rolls[0]:",(i=t.rollProcessConfig.rolls)==null?void 0:i[0],"rollProcessConfig.rolls[0].data:",(o=(s=t.rollProcessConfig.rolls)==null?void 0:s[0])==null?void 0:o.data]);try{const u=(a=t.rollType)==null?void 0:a.toLowerCase(),c=((l=t.rollProcessConfig.rolls)==null?void 0:l[0])||{parts:[],data:{},options:{}},f={configure:!(game.user.isGM?t.skipDialog:!1)},m={rollMode:t.rollProcessConfig.rollMode||game.settings.get("core","rollMode"),create:!0},h={rollKey:t.rollKey,activityId:t.activityId,config:t.rollProcessConfig};n.log("executePlayerRollRequest",[h,c]);const R=x[u];R?await R(e,h,c,f,m):(n.warn(`No handler found for roll type: ${u}`),B.notify("warn",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:e.name||"Unknown Actor"})))}catch(u){n.error("Error executing roll request:",[u]),B.notify("error",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:e.name||"Unknown Actor"}))}}}class se{static init(){Q.initialize(se.registerSocketCalls),Se.initialize()}static getDiceConfig(){return X.getDiceConfig()}static receiveDiceConfig(e,t){X.receiveDiceConfig(e,t)}static async handleRollRequest(e){return pe.handleRequest(e)}static registerSocketCalls(){Q.registerCall(fe.getDiceConfig,se.getDiceConfig),Q.registerCall(fe.receiveDiceConfig,se.receiveDiceConfig),Q.registerCall(fe.handleRollRequest,se.handleRollRequest)}}se.init();
//# sourceMappingURL=crlngn-roll-requests.js.map
