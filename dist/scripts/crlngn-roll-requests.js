var Te=Object.defineProperty;var ce=c=>{throw TypeError(c)};var ye=(c,t,e)=>t in c?Te(c,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):c[t]=e;var I=(c,t,e)=>ye(c,typeof t!="symbol"?t+"":t,e),ue=(c,t,e)=>t.has(c)||ce("Cannot "+e);var U=(c,t,e)=>(ue(c,t,"read from private field"),e?e.call(c):t.get(c)),de=(c,t,e)=>t.has(c)?ce("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(c):t.set(c,e),ge=(c,t,e,s)=>(ue(c,t,"write to private field"),s?s.call(c,e):t.set(c,e),e);const W={checkbox:"checkbox"},Q={client:"client",world:"world"},w=()=>({debugMode:{tag:"debug-mode",label:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.hint"),propType:Boolean,inputType:W.checkbox,default:!0,scope:Q.client,config:!0},rollRequestsEnabled:{tag:"roll-requests-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.hint"),propType:Boolean,inputType:W.checkbox,default:!0,scope:Q.world,config:!0},skipDialogs:{tag:"skip-dialogs",label:game.i18n.localize("CRLNGN_ROLLS.settings.skipDialogs.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.skipDialogs.hint"),propType:Boolean,inputType:W.checkbox,default:!1,scope:Q.world,config:!0},useGMTargetTokens:{tag:"use-gm-target-tokens",label:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.hint"),propType:Boolean,inputType:W.checkbox,default:!1,scope:Q.world,config:!0},rollInterceptionEnabled:{tag:"roll-interception-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollInterceptionEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollInterceptionEnabled.hint"),propType:Boolean,inputType:W.checkbox,default:!0,scope:Q.world,config:!0},showOfflineNotifications:{tag:"show-offline-notifications",label:game.i18n.localize("CRLNGN_ROLLS.settings.showOfflineNotifications.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.showOfflineNotifications.hint"),propType:Boolean,inputType:W.checkbox,default:!0,scope:Q.world,config:!0}}),V="crlngn-roll-requests",X=["%cFlash Rolls 5e","color:rgb(47, 151, 161); font-weight: bold;","|"],le={receiveDiceConfig:"receiveDiceConfig",getDiceConfig:"getDiceConfig",handleRollRequest:"handleRollRequest"},n={ABILITY:"ability",ABILITY_CHECK:"abilitycheck",SAVE:"save",SAVING_THROW:"savingthrow",SKILL:"skill",TOOL:"tool",CONCENTRATION:"concentration",ATTACK:"attack",DAMAGE:"damage",INITIATIVE:"initiative",INITIATIVE_DIALOG:"initiativedialog",DEATH_SAVE:"deathsave",HIT_DIE:"hitdie",ITEM_SAVE:"itemsave",CUSTOM:"custom",HEALING:"healing",FORMULA:"formula"},Le={ABILITY_CHECK:{name:n.ABILITY_CHECK,label:"Ability Check",subList:"abilities",actorPath:"system.abilities"},SAVING_THROW:{name:n.SAVING_THROW,label:"Saving Throw",subList:"abilities",actorPath:"system.abilities"},SKILL:{name:n.SKILL,label:"Skill Check",subList:"skills",actorPath:"system.skills"},TOOL:{name:n.TOOL,label:"Tool Check",subList:"tools",actorPath:"system.tools"},CONCENTRATION:{name:n.CONCENTRATION,label:"Concentration Check",subList:null,actorPath:""},INITIATIVE:{name:n.INITIATIVE_DIALOG,label:"Initiative Roll",subList:null,actorPath:""},DEATH_SAVE:{name:n.DEATH_SAVE,label:"Death Save",subList:null,actorPath:""},HIT_DIE:{name:n.HIT_DIE,label:"Hit Die",subList:null,actorPath:""},CUSTOM:{name:n.CUSTOM,label:"Custom Roll",subList:null,actorPath:""}},F={ID:V,ROLL_REQUEST_OPTIONS:Le},K={INIT:"init",READY:"ready",RENDER_SIDEBAR_TAB:"renderSidebarTab",USER_CONNECTED:"userConnected",PRE_CREATE_CHAT_MESSAGE:"preCreateChatMessage"},Ie={READY:"socketlib.ready"},A={PRE_ROLL_ABILITY_CHECK:"dnd5e.preRollAbilityCheckV2",PRE_ROLL_SAVING_THROW:"dnd5e.preRollSavingThrowV2",PRE_ROLL_DEATH_SAVE_V2:"dnd5e.preRollDeathSaveV2",PRE_ROLL_SKILL_V2:"dnd5e.preRollSkillV2",PRE_ROLL_TOOL_V2:"dnd5e.preRollToolV2",PRE_ROLL_HIT_DIE_V2:"dnd5e.preRollHitDieV2",PRE_ROLL_INITIATIVE_DIALOG_V2:"dnd5e.preRollInitiativeDialogV2",PRE_ROLL_INITIATIVE:"dnd5e.preRollInitiative",PRE_ROLL_ATTACK_V2:"dnd5e.preRollAttackV2",PRE_ROLL_DAMAGE_V2:"dnd5e.preRollDamageV2",POST_ROLL_CONFIG:"dnd5e.postRollConfiguration",RENDER_ROLL_CONFIGURATION_DIALOG:"renderRollConfigurationDialog",RENDER_SKILL_TOOL_ROLL_DIALOG:"renderSkillToolRollConfigurationDialog"},ee=class ee{static log(t="",e=[],s=!1){try{const i=game.settings.get(V,"debug-mode")||ee.debugOn;if(!(s||i))return;console.log(...X,t,...e)}catch{(s||ee.debugOn)&&console.log(...X,t,...e)}}static warn(t="",e=[]){console.warn(...X,t,...e)}static error(t,e={ui:!1,console:!0,permanent:!1}){var s;e.ui&&((s=ui.notifications)==null||s.error(t,{localize:!0,permanent:e.permanent})),e.console&&console.error(...X,t)}};I(ee,"debugOn",!1);let d=ee;const D=class D{static serializeForTransport(t,e=!1){return d.log("serializeForTransport",[t,e]),t==null||e&&t.rolls&&Array.isArray(t.rolls)&&(t.rolls=t.rolls.map(s=>s instanceof Roll?s.toJSON():s)),t}static deserializeFromTransport(t,e=!1){d.log("deserializeFromTransport",[t,e]);let s={...t};if(!t)return s;if(e&&t.rolls&&t.rolls.length>0){const i=s.rolls.map(o=>{let l=o;return typeof o=="string"?l=Roll.fromJSON(o):l=Roll.fromJSON(JSON.stringify(o)),l});return s.rolls=[...i],s}return s}};I(D,"socket"),I(D,"_activeExecutions",new Map),I(D,"initialize",t=>{d.log("initialize",[t]),Hooks.once(Ie.READY,()=>{if(typeof socketlib>"u"){d.error("SocketUtil Error: socketlib is not loaded. Ensure it is installed and enabled."),ui.notifications.error(game.i18n.localize("CRLNGN_ROLLS.notifications.socketlibMissing"),{permanent:!0});return}try{D.socket=socketlib.registerModule(V),t&&t()}catch{}})}),I(D,"registerCall",(t,e)=>{d.log("registerCall",[t]),D.socket&&D.socket.register(t,e)}),I(D,"sendMessage",(t,e)=>{d.log("sendMessage",[t]),e&&e()}),I(D,"execForGMs",async(t,...e)=>{if(d.log("execForGMs",[t,...e]),!!D.socket)return await D.socket.executeForAllGMs(t,...e)}),I(D,"execForAll",async(t,...e)=>{if(D.socket)return await D.socket.executeForEveryone(t,...e)}),I(D,"execForUser",async(t,e,...s)=>{if(d.log("execForUser",[t,e,...s]),!D.socket)return;if(e===game.user.id)return null;const i=`${t}-${e}`;if(D._activeExecutions.has(i))return null;D._activeExecutions.set(i,!0);try{return await D.socket.executeAsUser(t,e,...s)}catch{return null}finally{D._activeExecutions.delete(i)}});let z=D;class j{static initialize(){this.setDiceConfig()}static setDiceConfig(){if(!game.user)return{};const t=game.settings.storage.get("client");return this.diceConfig=t["core.diceConfiguration"]||"",this.diceConfig}static getDiceConfig(){return game.user?(this.setDiceConfig(),game.user.isGM&&this._sendDiceConfigToGMs(),this.diceConfig):{}}static _sendDiceConfigToGMs(){z.execForGMs("receiveDiceConfig",game.user.id,this.diceConfig)}static receiveDiceConfig(t,e){var s,i;((s=game.user)!=null&&s.isGM||t===((i=game.user)==null?void 0:i.id))&&(this.playerDiceConfigs[t]=e?JSON.parse(e):{})}static getUserDiceConfig(t){var e;return t===((e=game.user)==null?void 0:e.id)?this.diceConfig:this.playerDiceConfigs[t]||{}}static requestDiceConfigFromUser(t){z.execForUser("getDiceConfig",t)}static requestDiceConfigFromAllPlayers(){var t;(t=game.user)!=null&&t.isGM&&game.users.forEach(e=>{e.active&&!e.isGM&&e.id!==game.user.id&&this.requestDiceConfigFromUser(e.id)})}static clearPlayerConfigs(){this.playerDiceConfigs={}}static hasUserConfig(t){var e;return t===((e=game.user)==null?void 0:e.id)?!!this.diceConfig:!!this.playerDiceConfigs[t]}}I(j,"diceConfig",{}),I(j,"playerDiceConfigs",{});class E{static registerSettings(){const t=w();Object.entries(t).forEach(async s=>{const i=s[1],o={name:i.label,hint:i.hint,default:i.default,type:i.propType,scope:i.scope,config:i.config,requiresReload:i.requiresReload||!1,onChange:l=>E.apply(i.tag,l)};i.choices&&(o.choices=i.choices),await game.settings.register(V,i.tag,o),(E.get(i.tag)===void 0||E.get(i.tag)===null)&&E.set(i.tag,i.default)})}static get(t,e=V){if(!t)return null;let s=!1;if(e===V)s=game.settings.get(e,t);else{let o=game.settings.storage.get("client")[`${e}.${t}`];o===void 0&&(o=game.settings.storage.get("world").getSetting(`${e}.${t}`),s=o==null?void 0:o.value)}return s}static set(t,e,s=V){if(!t)return!1;let i=game.settings.storage.get("client")[`${s}.${t}`];i||(i=game.settings.storage.get("world").getSetting(`${s}.${t}`));try{game.settings.set(s,t,e)}catch{}return!0}static apply(t,e){const s=w();switch(t){case s.rollRequestsEnabled.tag:E.applyRollRequestsEnabled(e);break}}static applyRollRequestsEnabled(t){const e=document.querySelector("#chat-controls .chat-control-icon.roll-requests-icon");e&&(t?e.classList.add("active"):e.classList.remove("active"))}}class te{static findActivityForRoll(t,e){var o;if(!((o=t==null?void 0:t.system)!=null&&o.activities))return null;const s=t.system.activities;switch(e==null?void 0:e.toLowerCase()){case n.ATTACK:const l=s.getByType("attack");return(l==null?void 0:l[0])||null;case n.DAMAGE:const a=s.getByType("attack");if((a==null?void 0:a.length)>0)return a[0];const r=s.getByType("damage");if((r==null?void 0:r.length)>0)return r[0];const u=s.getByType("save");return(u==null?void 0:u.length)>0?u[0]:null;case n.ITEM_SAVE:const f=s.getByType("save");return(f==null?void 0:f[0])||null;default:return null}}static getActivitiesByType(t,e){var s;return(s=t==null?void 0:t.system)!=null&&s.activities?t.system.activities.getByType(e):[]}static hasActivityForRoll(t,e){return d.log("hasActivityForRoll",[t,e]),!!this.findActivityForRoll(t,e)}static async executeActivityRoll(t,e,s,i,o){var u,f;d.log("executeActivityRoll",[t,e,s,i,o]);const l=t.items.get(s);if(!l)throw new Error(`Item ${s} not found on actor ${t.name}`);let a=null;i&&(a=(u=l.system.activities)==null?void 0:u.get(i)),a||(a=this.findActivityForRoll(l,e));const r=e==null?void 0:e.toLowerCase();if(a)switch(r){case n.ATTACK:const g={configure:!0};if(MidiQOL){await te.syntheticItemRoll(l,{...o});return}else return await a.use(usageConfig,g);case n.DAMAGE:if(MidiQOL){const R=(f=MidiQOL==null?void 0:MidiQOL.Workflow)==null?void 0:f.getWorkflow(a.uuid);await R.activity.rollDamage({...o,workflow:R});return}else return await a.rollDamage(o);case n.ITEM_SAVE:return await l.use({activity:a.id},{skipDialog:o.fastForward});default:throw new Error(`Unknown roll type: ${r}`)}else{switch(r){case n.ATTACK:if(l.rollAttack)return await l.rollAttack(o);break;case n.DAMAGE:if(l.rollDamage)return await l.rollDamage(o);break;case n.ITEM_SAVE:return await l.use({},{skipDialog:o.fastForward})}throw new Error(`No suitable method found for ${r} on item ${l.name}`)}}static getActivityDisplayInfo(t){return d.log("getActivityDisplayInfo",[t]),t?{name:t.name||t.constructor.metadata.label,type:t.type,icon:t.constructor.metadata.icon,canAttack:t.type==="attack",canDamage:["attack","damage","save"].includes(t.type),canSave:t.type==="save"}:null}static getDamageFormula(t){var s,i;if(d.log("getDamageFormula",[t]),!((i=(s=t==null?void 0:t.damage)==null?void 0:s.parts)!=null&&i.length))return null;const e=t.damage.parts.map(o=>o.formula).filter(o=>o);return e.length>0?e.join(" + "):null}static async syntheticItemRoll(t,e={}){d.log("syntheticItemRoll",[t,e]);let s={consumeUsage:!1,consumeSpellSlot:!1},i={configureDialog:!0,workflowOptions:{autoRollAttack:!1,autoFastAttack:!1,autoRollDamage:"none",autoFastDamage:!1}};return e={...s,...e},await MidiQOL.completeItemUse(t,e,i)}static async replaceDamage(t,e,{ignoreCrit:s=!1,damageType:i}={}){e=String(e),t.isCritical&&!s&&(e=await rollUtils.getCriticalFormula(e,t.item.getRollData()));let o=await new CONFIG.Dice.DamageRoll(e).evaluate();return await t.setDamageRolls([o]),o}}class P extends dnd5e.applications.dice.D20RollConfigurationDialog{constructor(t={},e={},s={}){var i,o;s.rollType=s.rollType||CONFIG.Dice.D20Roll,super(t,e,s),d.log("constructor - initializing GM Dialog",[t,e,s]),this.actors=s.actors||[],this.sendRequest=s.defaultSendRequest??s.sendRequest??!0,this.showDC=s.showDC||!1,this.dcValue=s.dcValue||null,this.rollKey=s.rollKey||t.skill||t.ability||null,this.rollTypeString=s.rollTypeString||null,this.windowTitle=((i=s.window)==null?void 0:i.title)||"",this.windowSubtitle=((o=s.window)==null?void 0:o.subtitle)||""}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}get title(){return this.windowTitle||super.title}_prepareConfigurationData(t,e,s,i){d.log("_prepareConfigurationData",[t,e,s,i]);const o=super._prepareConfigurationData(t,e,s,i);return o.showDC=this.showDC,o.dcValue=this.dcValue,o.sendRequest=this.sendRequest,o.actorCount=this.actors.length,o}async _preparePartContext(t,e,s){return d.log("_preparePartContext",[t,e,s]),e=await super._preparePartContext(t,e,s),t==="configuration"&&(e.showDC=this.showDC,e.dcValue=this.dcValue,e.sendRequest=this.sendRequest,e.actorCount=this.actors.length),e}async _onRender(t,e){var i,o,l;if(d.log("_onRender",[t,e]),super._onRender(t,e),this.element.querySelector(".gm-roll-config-fields"))return;let s=this.element.querySelector(".rolls .formulas");if(s&&(this.showDC||this.actors.length>0)){const a={showDC:this.showDC,dcValue:this.dcValue,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},r=await renderTemplate(`modules/${V}/templates/gm-roll-config-fields.hbs`,a),u=document.createElement("div");u.className="gm-roll-config-fields",u.innerHTML=r,s.parentNode.insertBefore(u,s)}this._attachButtonListeners(),((l=(o=(i=this.config.rolls)==null?void 0:i[0])==null?void 0:o.data)!=null&&l.situational||this.config.situational)&&(d.log("GMRollConfigDialog._onRender",["Triggering rebuild for initial situational bonus"]),setTimeout(()=>{this.rebuild()},100))}_attachButtonListeners(){d.log("_attachButtonListeners",[this.element]),this.element.querySelectorAll('[data-action="advantage"], [data-action="normal"], [data-action="disadvantage"]').forEach(e=>{e.addEventListener("click",s=>{s.currentTarget.dataset.action})})}_onChangeForm(t,e){super._onChangeForm(t,e);const s=this.element.querySelector('input[name="crlngn-send-request"]');s&&(this.sendRequest=s.checked);const i=this.element.querySelector('input[name="dc"]');i&&i.value&&(this.dcValue=parseInt(i.value)||null),d.log("_onChangeForm",[t,e,this.config])}_buildConfig(t,e,s){const i=e==null?void 0:e.get("ability"),o=e==null?void 0:e.get("dc"),l=e==null?void 0:e.get(`rolls.${s}.situational`);if(l&&t.situational!==!1)t.parts||(t.parts=[]),t.parts.push("@situational"),t.data||(t.data={}),t.data.situational=l;else if(t.parts){const r=t.parts.indexOf("@situational");r!==-1&&t.parts.splice(r,1)}i&&(t.ability=i,this.config.ability=i);const a=super._buildConfig(t,e,s);if(o){const r=parseInt(o);isNaN(r)||(a.options=a.options||{},a.options.target=r)}else this.dcValue!==void 0&&this.dcValue!==null&&(a.options=a.options||{},a.options.target=this.dcValue);return d.log("_buildConfig",[this.config,e,a]),a}async _processSubmitData(t,e,s){if(d.log("_processSubmitData",[t,e,s]),await super._processSubmitData(t,e,s),s.has("dc")&&s.get("dc")!==""){const i=parseInt(s.get("dc"));if(!isNaN(i)&&(this.dcValue=i,this.config.rolls&&this.config.rolls.length>0))for(const o of this.config.rolls)o.options.target=i}this.sendRequest=s.get("crlngn-send-request")!=="false"}_finalizeRolls(t){d.log("_finalizeRolls",[t,this.config]);const e=super._finalizeRolls(t);if(this.dcValue!==void 0&&this.dcValue!==null)for(const s of e)s.options.target=this.dcValue;return this.config.sendRequest=this.sendRequest,d.log("_finalizeRolls #2",[e]),e}static async getConfiguration(t,e,s,i={}){var S,G,k,M,L,$,x;t.length>0&&typeof t[0]=="string"&&(t=t.map(v=>game.actors.get(v)).filter(v=>v)),d.log("GMRollConfigDialog.getConfiguration",[{actors:t,actorNames:t.map(v=>v.name),rollType:e,rollKey:s,options:i}]);const o=e==null?void 0:e.toLowerCase(),l=[n.SAVE,n.SAVING_THROW,n.ABILITY,n.ABILITY_CHECK,n.CONCENTRATION].includes(o),a=t[0];if(!a)return null;let r=CONFIG.Dice.D20Roll;[n.DAMAGE,n.HEALING].includes(o)?r=CONFIG.Dice.DamageRoll||CONFIG.Dice.BasicRoll:[n.FORMULA,n.CUSTOM,n.HIT_DIE].includes(o)&&(r=CONFIG.Dice.BasicRoll);const u={data:a.getRollData(),subject:a,rolls:[{parts:[],data:a.getRollData(),options:{}}]};switch(o){case n.SKILL:u.skill=s;break;case n.SAVE:case n.SAVING_THROW:u.ability=s;break;case n.ABILITY:case n.ABILITY_CHECK:u.ability=s;break;case n.HIT_DIE:u.rolls[0].parts=[],u.rolls[0].options.flavor="Hit Die";break}const f={create:!1,data:{speaker:ChatMessage.getSpeaker({actor:a})}},g={options:{actors:t,sendRequest:t.some(v=>this._isPlayerOwned(v)),showDC:l,rollKey:s,rollType:r,rollTypeString:o,window:{title:P._getRollTitle(o,s,a),subtitle:P._getSubtitle(t)},...i}},R=new this(u,f,g.options),h=await new Promise(v=>{R.addEventListener("close",()=>{v({rolls:R.rolls,config:R.config,message:R.message,sendRequest:R.sendRequest})},{once:!0}),R.render({force:!0})});if(!h.rolls||h.rolls.length===0)return null;const p=h.rolls[0];let m=!1,C=!1;((S=p==null?void 0:p.options)==null?void 0:S.advantageMode)!==void 0&&(m=p.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE,C=p.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE);let b=((G=p==null?void 0:p.data)==null?void 0:G.situational)||"";p!=null&&p.parts;let T=(k=p==null?void 0:p.options)==null?void 0:k.target;const _={rolls:[{parts:[],data:b?{situational:b}:{},options:T?{target:T}:{}}],subject:a,advantage:m,disadvantage:C,target:T,sendRequest:h.sendRequest,isRollRequest:h.sendRequest,skipDialog:i.skipDialogs||!1,chatMessage:!0},y=game.settings.get("core","rollMode");if(h.message.rollMode&&h.message.rollMode!==y&&(_.rollMode=h.message.rollMode),h.config.ability&&[n.SKILL,n.TOOL].includes(o)){const v=((L=(M=a.system.skills)==null?void 0:M[s])==null?void 0:L.ability)||((x=($=CONFIG.DND5E.skills)==null?void 0:$[s])==null?void 0:x.ability);h.config.ability!==v&&(_.ability=h.config.ability)}return _.rollTitle=g.options.window.title,_.rollType=o,_.rollKey=s,_}static _isPlayerOwned(t){return d.log("GMRollConfigDialog._isPlayerOwned",[t]),Object.entries(t.ownership).some(([e,s])=>{const i=game.users.get(e);return i&&!i.isGM&&s>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})}static _getRollTitle(t,e,s){var l,a,r,u,f,g,R,h,p,m,C,b,T;d.log("GMRollConfigDialog._getRollTitle",[t,e,s]),d.log("GMRollConfigDialog._getRollTitle - Detailed",{rollType:t,rollKey:e,actorName:s==null?void 0:s.name,actorAbilities:(l=s==null?void 0:s.system)!=null&&l.abilities?Object.keys(s.system.abilities):[],actorSkills:(a=s==null?void 0:s.system)!=null&&a.skills?Object.keys(s.system.skills):[],actorInitAbility:(f=(u=(r=s==null?void 0:s.system)==null?void 0:r.attributes)==null?void 0:u.init)==null?void 0:f.ability});let i="";const o=t==null?void 0:t.toLowerCase();switch([n.SAVE,n.ABILITY,n.ABILITY_CHECK].includes(o)&&!e&&d.warn("Missing rollKey for roll type",[o,e]),o){case n.SKILL:const _=((g=CONFIG.DND5E.skills[e])==null?void 0:g.label)||e,y=(R=s==null?void 0:s.system.skills)==null?void 0:R[e],S=(y==null?void 0:y.ability)||((h=CONFIG.DND5E.skills[e])==null?void 0:h.ability)||"int",G=((p=CONFIG.DND5E.abilities[S])==null?void 0:p.label)||S;i=game.i18n.format("DND5E.SkillPromptTitle",{skill:_,ability:G});break;case n.SAVE:case n.SAVING_THROW:const k=((m=CONFIG.DND5E.abilities[e])==null?void 0:m.label)||e;i=game.i18n.format("DND5E.SavePromptTitle",{ability:k});break;case n.ABILITY:case n.ABILITY_CHECK:const M=((C=CONFIG.DND5E.abilities[e])==null?void 0:C.label)||e;i=game.i18n.format("DND5E.AbilityPromptTitle",{ability:M});break;case n.CONCENTRATION:i=game.i18n.localize("DND5E.Concentration");break;case n.TOOL:const L=(T=(b=CONFIG.DND5E.enrichmentLookup)==null?void 0:b.tools)==null?void 0:T[e];let $=e;if(L!=null&&L.id){const x=dnd5e.documents.Trait.getBaseItem(L.id,{indexOnly:!0});$=(x==null?void 0:x.name)||e}i=game.i18n.format("DND5E.ToolPromptTitle",{tool:$});break;case n.DEATH_SAVE:i=game.i18n.localize("DND5E.DeathSave");break;case n.INITIATIVE:case n.INITIATIVE_DIALOG:i=game.i18n.localize("DND5E.Initiative");break;default:i=game.i18n.localize("DND5E.Roll")}return d.log("_getRollTitle",[o,i]),i}static _getSubtitle(t=[]){return t.length===1?t[0].name:t.length>1?game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.multipleActors"):""}}class Re extends dnd5e.applications.dice.RollConfigurationDialog{constructor(t={},e={},s={}){s.rollType=CONFIG.Dice.BasicRoll||Roll,super(t,e,s),d.log("constructor",[t,e,s]),this.actors=s.actors||[],this.sendRequest=s.defaultSendRequest??s.sendRequest??!0,this.showDC=!1}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config","hit-die-config"]})}_prepareConfigurationData(t,e,s,i){d.log("_prepareConfigurationData",[t,e,s,i]);const o=super._prepareConfigurationData(t,e,s,i);return o.formula="Hit Die (varies by actor)",o.sendRequest=this.sendRequest,o.actorCount=this.actors.length,o}async _preparePartContext(t,e,s){return e=await super._preparePartContext(t,e,s),t==="configuration"&&(e.sendRequest=this.sendRequest,e.actorCount=this.actors.length,e.formula="Hit Die (varies by actor)"),e}async _onRender(t,e){if(super._onRender(t,e),this.element.querySelector(".gm-roll-config-fields"))return;let s=this.element.querySelector(".rolls .formulas");if(s&&this.actors.length>0){const i={showDC:!1,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},o=await renderTemplate(`modules/${V}/templates/gm-roll-config-fields.hbs`,i),l=document.createElement("div");l.className="gm-roll-config-fields",l.innerHTML=o,s.parentNode.insertBefore(l,s)}}_onChangeForm(t,e){super._onChangeForm(t,e);const s=this.element.querySelector('input[name="crlngn-send-request"]');s&&(this.sendRequest=s.checked),d.log("_onChangeForm",[t,e,this.config])}async _processSubmitData(t,e,s){await super._processSubmitData(t,e,s),this.sendRequest=s.get("crlngn-send-request")!=="false",d.log("_processSubmitData",[s,this.config])}_finalizeRolls(t){const e=super._finalizeRolls(t);return this.config.sendRequest=this.sendRequest,e}static async getConfiguration(t,e,s,i={}){var T,_,y;d.log("GMRollConfigDialog.getConfiguration",[t,e,s,i]);const o=t[0];if(!o)return null;const l={data:o.getRollData(),subject:o,rolls:[{parts:[],data:o.getRollData(),options:{flavor:"Hit Die Roll"}}]},a={create:!1,data:{speaker:ChatMessage.getSpeaker({actor:o})}},r={options:{actors:t,sendRequest:t.some(S=>P._isPlayerOwned(S)),rollKey:s,rollType:CONFIG.Dice.BasicRoll||Roll,window:{title:game.i18n.localize("DND5E.HitDice"),subtitle:P._getSubtitle(t)},...i}},u=new this(l,a,r.options),f=await new Promise(S=>{u.addEventListener("close",()=>{S({rolls:u.rolls,config:u.config,message:u.message,sendRequest:u.sendRequest})},{once:!0}),u.render({force:!0})});if(!f.rolls||f.rolls.length===0)return null;const g=f.rolls[0];let R=!1,h=!1;((T=g==null?void 0:g.options)==null?void 0:T.advantageMode)!==void 0&&(R=g.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE,h=g.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE);const p=((_=g==null?void 0:g.data)==null?void 0:_.situational)||"",m=(y=g==null?void 0:g.options)==null?void 0:y.target,C={rolls:[{parts:[],data:p?{situational:p}:{},options:m?{target:m}:{}}],subject:t[0],advantage:R,disadvantage:h,target:m,sendRequest:f.sendRequest,isRollRequest:f.sendRequest,skipDialog:i.skipDialogs||!1,chatMessage:!0},b=game.settings.get("core","rollMode");return f.message.rollMode&&f.message.rollMode!==b&&(C.rollMode=f.message.rollMode),f.config.ability&&(C.ability=f.config.ability),C}}class pe extends dnd5e.applications.dice.SkillToolRollConfigurationDialog{constructor(t={},e={},s={}){const i=foundry.utils.mergeObject(t,{chooseAbility:!0});s.rollType=s.rollType||CONFIG.Dice.D20Roll,super(i,e,s),d.log("constructor",[t,e,s]),this.actors=s.actors||[],this.sendRequest=s.defaultSendRequest??s.sendRequest??!0,this.showDC=s.showDC||!1,this.dcValue=s.dcValue||null}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}_prepareConfigurationData(t,e,s,i){d.log("_prepareConfigurationData",[t,e,s,i]);const o=super._prepareConfigurationData(t,e,s,i);return o.showDC=this.showDC,o.dcValue=this.dcValue,o.sendRequest=this.sendRequest,o.actorCount=this.actors.length,o}async _preparePartContext(t,e,s){return d.log("_preparePartContext",[t,e,s]),e=await super._preparePartContext(t,e,s),t==="configuration"&&(e.showDC=this.showDC,e.dcValue=this.dcValue,e.sendRequest=this.sendRequest,e.actorCount=this.actors.length),e}async _onRender(t,e){var i,o,l;if(d.log("_onRender",[t,e]),super._onRender(t,e),this.element.querySelector(".gm-roll-config-fields"))return;let s=this.element.querySelector(".rolls .formulas");if(s&&(this.showDC||this.actors.length>0)){const a={showDC:this.showDC,dcValue:this.dcValue,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},r=await renderTemplate(`modules/${V}/templates/gm-roll-config-fields.hbs`,a),u=document.createElement("div");u.className="gm-roll-config-fields",u.innerHTML=r,s.parentNode.insertBefore(u,s)}this._attachButtonListeners(),((l=(o=(i=this.config.rolls)==null?void 0:i[0])==null?void 0:o.data)!=null&&l.situational||this.config.situational)&&setTimeout(()=>{this.rebuild()},100)}_attachButtonListeners(){d.log("_attachButtonListeners",[]),this.element.querySelectorAll('[data-action="advantage"], [data-action="normal"], [data-action="disadvantage"]').forEach(e=>{e.addEventListener("click",s=>{s.currentTarget.dataset.action})})}_onChangeForm(t,e){var o,l;super._onChangeForm(t,e);const s=this.element.querySelector('input[name="crlngn-send-request"]');s&&(this.sendRequest=s.checked);const i=this.element.querySelector('input[name="dc"]');i&&i.value&&(this.dcValue=parseInt(i.value)||null),((o=e.target)==null?void 0:o.name)==="ability"&&((l=e.target)!=null&&l.value)&&(this.config.ability=e.target.value),d.log("_onChangeForm",[t,e,this.config])}_buildConfig(t,e,s){d.log("_buildConfig",[t,e,s]);const i=e==null?void 0:e.get("ability"),o=e==null?void 0:e.get("dc");i&&(t.ability=i,this.config.ability=i);const l=super._buildConfig(t,e,s);if(o){const a=parseInt(o);isNaN(a)||(l.options=l.options||{},l.options.target=a)}else this.dcValue!==void 0&&this.dcValue!==null&&(l.options=l.options||{},l.options.target=this.dcValue);return l}async _processSubmitData(t,e,s){if(d.log("_processSubmitData",[t,e,s]),await super._processSubmitData(t,e,s),s.has("dc")&&s.get("dc")!==""){const i=parseInt(s.get("dc"));if(!isNaN(i)&&(this.dcValue=i,this.config.rolls&&this.config.rolls.length>0))for(const o of this.config.rolls)o.options.target=i}this.sendRequest=s.get("crlngn-send-request")!=="false"}_finalizeRolls(t){d.log("_finalizeRolls",[t]);const e=super._finalizeRolls(t);if(this.dcValue!==void 0&&this.dcValue!==null)for(const s of e)s.options.target=this.dcValue;return this.config.sendRequest=this.sendRequest,e}static async getConfiguration(t,e,s,i={}){var G,k,M,L,$,x,v,re;d.log("getConfiguration",[t,e,s,i]);const o=e==null?void 0:e.toLowerCase(),l=[n.SKILL,n.TOOL].includes(o),a=t[0];if(!a)return null;const r=CONFIG.Dice.D20Roll;let u=null;if(o===n.SKILL){const H=a.system.skills[s];u=(H==null?void 0:H.ability)||((G=CONFIG.DND5E.skills[s])==null?void 0:G.ability)||"int"}else if(o===n.TOOL){const H=(k=a.system.tools)==null?void 0:k[s];u=(H==null?void 0:H.ability)||(($=(L=(M=CONFIG.DND5E.enrichmentLookup)==null?void 0:M.tools)==null?void 0:L[s])==null?void 0:$.ability)||"int"}const f={data:a.getRollData(),subject:a,ability:u,chooseAbility:!0,rolls:[{parts:[],data:a.getRollData(),options:{}}]};o===n.SKILL?f.skill=s:o===n.TOOL&&(f.tool=s);const g={create:!1,data:{speaker:ChatMessage.getSpeaker({actor:a})}},R={options:{actors:t,sendRequest:t.some(H=>P._isPlayerOwned(H)),showDC:l,rollKey:s,rollType:r,window:{title:P._getRollTitle(o,s,a),subtitle:P._getSubtitle(t)},...i}},h=new this(f,g,R.options),p=await new Promise(H=>{h.addEventListener("close",()=>{H({rolls:h.rolls,config:h.config,message:h.message,sendRequest:h.sendRequest})},{once:!0}),h.render({force:!0})});if(!p.rolls||p.rolls.length===0)return null;const m=p.rolls[0];let C=!1,b=!1;((x=m==null?void 0:m.options)==null?void 0:x.advantageMode)!==void 0&&(C=m.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE,b=m.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE);const T=((v=m==null?void 0:m.data)==null?void 0:v.situational)||"",_=(re=m==null?void 0:m.options)==null?void 0:re.target,y={rolls:[{parts:[],data:T?{situational:T}:{},options:_?{target:_}:{}}],subject:t[0],advantage:C,disadvantage:b,target:_,sendRequest:p.sendRequest,isRollRequest:p.sendRequest,skipDialog:i.skipDialogs||!1,chatMessage:!0},S=game.settings.get("core","rollMode");return p.message.rollMode&&p.message.rollMode!==S&&(y.rollMode=p.message.rollMode),p.config.ability&&[n.SKILL,n.TOOL].includes(o)&&(y.ability=p.config.ability),y.rollTitle=R.options.window.title,y.rollType=o,y.rollKey=s,y}}class De extends dnd5e.applications.dice.AttackRollConfigurationDialog{constructor(t={},e={},s={}){super(t,e,s),d.log("GMAttackConfigDialog.constructor",[t,e,s]),this.actors=s.actors||[],this.sendRequest=s.defaultSendRequest??s.sendRequest??!0}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}_prepareConfigurationData(t,e,s,i){d.log("GMAttackConfigDialog._prepareConfigurationData",[t,e,s,i]);const o=super._prepareConfigurationData(t,e,s,i);return o.sendRequest=this.sendRequest,o.actorCount=this.actors.length,o}async _preparePartContext(t,e,s){return e=await super._preparePartContext(t,e,s),t==="configuration"&&(e.sendRequest=this.sendRequest,e.actorCount=this.actors.length),e}async _onRender(t,e){if(await super._onRender(t,e),this.element.querySelector(".gm-roll-config-fields"))return;let s=this.element.querySelector(".rolls .formulas");if(s&&this.actors.length>0){const i={showDC:!1,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},o=await renderTemplate(`modules/${V}/templates/gm-roll-config-fields.hbs`,i),l=document.createElement("div");l.className="gm-roll-config-fields",l.innerHTML=o,s.parentNode.insertBefore(l,s)}}_onChangeForm(t,e){super._onChangeForm(t,e);const s=this.element.querySelector('input[name="crlngn-send-request"]');s&&(this.sendRequest=s.checked)}async _processSubmitData(t,e,s){await super._processSubmitData(t,e,s),this.sendRequest=s.get("crlngn-send-request")!=="false"}_finalizeRolls(t){const e=super._finalizeRolls(t);return this.config.sendRequest=this.sendRequest,e}static async getConfiguration(t,e,s,i={},o={},l={}){d.log("GMAttackConfigDialog.getConfiguration",[t,e,s,i,o,l]);const a=t[0];if(!a)return null;const r=o,u=o.message||{create:!1,data:{speaker:ChatMessage.getSpeaker({actor:a})}},f=foundry.utils.mergeObject(l.options||{},{actors:t,sendRequest:t.some(h=>P._isPlayerOwned(h)),defaultSendRequest:i.defaultSendRequest,...i}),g=new this(r,u,f),R=await new Promise(h=>{g.addEventListener("close",()=>{h({rolls:g.rolls,config:g.config,message:g.message,sendRequest:g.sendRequest})},{once:!0}),g.render({force:!0})});return!R.rolls||R.rolls.length===0?null:{...R.config,sendRequest:R.sendRequest,isRollRequest:R.sendRequest,skipDialog:i.skipDialogs||!1,chatMessage:!0}}}class me{static initialize(){d.log("RollInterceptor.initialize"),game.user.isGM&&this.registerHooks()}static registerHooks(){d.log("RollInterceptor.registerHooks"),this._registerHook(A.PRE_ROLL_ABILITY_CHECK,this._handlePreRoll.bind(this,n.ABILITY)),this._registerHook(A.PRE_ROLL_SAVING_THROW,this._handlePreRoll.bind(this,n.SAVE)),this._registerHook(A.PRE_ROLL_SKILL_V2,this._handlePreRoll.bind(this,n.SKILL)),this._registerHook(A.PRE_ROLL_TOOL_V2,this._handlePreRoll.bind(this,n.TOOL)),this._registerHook(A.PRE_ROLL_ATTACK_V2,this._handlePreRoll.bind(this,n.ATTACK)),this._registerHook(A.PRE_ROLL_DAMAGE_V2,this._handlePreRoll.bind(this,n.DAMAGE)),this._registerHook(A.PRE_ROLL_INITIATIVE,this._handlePreRoll.bind(this,n.INITIATIVE)),this._registerHook(A.PRE_ROLL_INITIATIVE_DIALOG_V2,this._handlePreRoll.bind(this,n.INITIATIVE)),this._registerHook(A.PRE_ROLL_DEATH_SAVE_V2,this._handlePreRoll.bind(this,n.DEATH_SAVE)),this._registerHook(A.PRE_ROLL_HIT_DIE_V2,this._handlePreRoll.bind(this,n.HIT_DIE))}static _registerHook(t,e){d.log("RollInterceptor._registerHook");const s=Hooks.on(t,e);this.registeredHooks.add({hookName:t,hookId:s})}static unregisterHooks(){d.log("RollInterceptor.unregisterHooks");for(const{hookName:t,hookId:e}of this.registeredHooks)Hooks.off(t,e);this.registeredHooks.clear()}static _handlePreRoll(t,e,s,i){var R,h;if(d.log("_handlePreRoll #1",[{rollType:t,config:e}]),!game.user.isGM||e.isRollRequest===!1)return;d.log("_handlePreRoll #2");const o=(e==null?void 0:e.hookNames)||(s==null?void 0:s.hookNames)||(i==null?void 0:i.hookNames)||[];(o.includes("initiativeDialog")||o.includes("initiative"))&&t===n.ABILITY&&(d.log("RollInterceptor._handlePreRoll - Overriding ability to initiative",[{hookNames:o}]),t=n.INITIATIVE);let a;if(t===n.INITIATIVE&&e instanceof Actor)a=e;else if(t===n.HIT_DIE){if(s!=null&&s.isRollRequest||i!=null&&i.isRollRequest)return;a=((R=s==null?void 0:s.subject)==null?void 0:R.actor)||(s==null?void 0:s.subject)||(s==null?void 0:s.actor)}else{if(e!=null&&e.isRollRequest||s!=null&&s.isRollRequest||i!=null&&i.isRollRequest)return;a=((h=e.subject)==null?void 0:h.actor)||e.subject||e.actor}d.log("_handlePreRoll #3");const r=w(),u=E.get(r.rollInterceptionEnabled.tag),f=E.get(r.rollRequestsEnabled.tag);if(!u||!f||!a||a.documentName!=="Actor")return;d.log("_handlePreRoll #4");const g=this._getActorOwner(a);if(!(!g||g.id===game.user.id||!g.active||s.configure===!1||e.skipDialog===!0||e.fastForward===!0))return d.log("_handlePreRoll #5"),this._showGMConfigDialog(a,g,t,e,s,i),!1}static async _showGMConfigDialog(t,e,s,i,o,l){var a,r,u,f,g,R,h,p,m,C;console.trace(X+" _showGMConfigDialog",[t,e,s,i,o,l]),d.log("_showGMConfigDialog - Detailed config",[{rollType:s,configAbility:i==null?void 0:i.ability,configSubject:i==null?void 0:i.subject,configSubjectAbility:(a=i==null?void 0:i.subject)==null?void 0:a.ability,configSkill:i==null?void 0:i.skill,configTool:i==null?void 0:i.tool,fullConfig:i}]);try{const b=s==null?void 0:s.toLowerCase();let T;[n.SKILL,n.TOOL].includes(b)?T=pe:b===n.HIT_DIE?T=Re:b===n.ATTACK?T=De:T=P;let _={rolls:[{parts:[],data:{},options:{}}]};switch(b){case n.ABILITY:_.ability=i.ability||((r=i.subject)==null?void 0:r.ability);break;case n.SAVE:_.ability=i.ability||((u=i.subject)==null?void 0:u.ability),i.ability==="con"&&i.targetValue!==void 0&&(s=n.CONCENTRATION);break;case n.SKILL:_.skill=i.skill,_.ability=i.ability;break;case n.TOOL:_.tool=i.tool,_.ability=i.ability;break;case n.CONCENTRATION:_.ability="con";break;case n.INITIATIVE:break;case n.HIT_DIE:_.denomination=typeof i=="string"?i:i.denomination||((f=i.subject)==null?void 0:f.denomination);break}const y=w(),S=E.get(y.skipDialogs.tag),G={actors:[t],rollType:b,showDC:!0,defaultSendRequest:!0,skipDialogs:S};let k;if(S)k={sendRequest:!0,advantage:!1,disadvantage:!1,situational:"",rollMode:game.settings.get("core","rollMode")};else{let L=null;switch(b){case n.SKILL:L=i.skill;break;case n.TOOL:L=i.tool;break;case n.ABILITY:case n.SAVE:L=i.ability||((g=i.subject)==null?void 0:g.ability);break;case n.CONCENTRATION:L="con";break;case n.INITIATIVE:L=((h=(R=t.system.attributes)==null?void 0:R.init)==null?void 0:h.ability)||"dex";break;case n.HIT_DIE:L=typeof i=="string"?i:i.denomination||((p=i.subject)==null?void 0:p.denomination);break;case n.ATTACK:L=(C=(m=i.subject)==null?void 0:m.item)==null?void 0:C.id;break}d.log("RollInterceptor._showGMConfigDialog - Calling getConfiguration",{actor:t.name,normalizedRollType:b,rollKey:L,config:i,DialogClass:T.name}),b===n.ATTACK?k=await T.getConfiguration([t],b,L,{skipDialogs:!1,defaultSendRequest:!0},i):k=await T.getConfiguration([t],b,L,{skipDialogs:!1,defaultSendRequest:!0})}if(!k){d.log("RollInterceptor._showGMConfigDialog - Dialog cancelled");return}if(d.log("RollInterceptor._showGMConfigDialog - Dialog result",[{sendRequest:k.sendRequest,rollType:b,result:k}]),!k.sendRequest){await this._executeLocalRoll(t,s,i,k);return}const M={...i,...k,requestedBy:game.user.name};this._sendRollRequest(t,e,s,M)}catch{this._sendRollRequest(t,e,s,i)}}static async _executeLocalRoll(t,e,s,i){var u;d.log("RollInterceptor._executeLocalRoll",[t,e,s,i]);const o=e==null?void 0:e.toLowerCase(),l={...s,advantage:i.advantage||s.advantage,disadvantage:i.disadvantage||s.disadvantage,target:i.dc||s.target,rollMode:i.rollMode||s.rollMode,isRollRequest:!1},a={configure:!1,isRollRequest:!1},r={rollMode:l.rollMode,create:!0,isRollRequest:!1};try{switch(o){case n.SAVE:await t.rollSavingThrow(s.ability,l,a,r);break;case n.ABILITY:await t.rollAbilityCheck(s.ability,l,a,r);break;case n.SKILL:await t.rollSkill(s.skill,l,a,r);break;case n.TOOL:await t.rollToolCheck(s.tool,l,a,r);break;case n.CONCENTRATION:await t.rollConcentration(l,a,r);break;case n.INITIATIVE:await t.rollInitiativeD(l,a,r);break;case n.DEATH_SAVE:await t.rollDeathSave(l,a,r);break;case n.HIT_DIE:const f=typeof s=="string"?s:s.denomination;await t.rollHitDie(f,l,a,r);break;case n.ATTACK:const g=(u=s.subject)==null?void 0:u.item;if(g){const R=te.findActivityForRoll(g,n.ATTACK);R&&await R.use(l,a,r)}break}}catch{}}static async _showConfigurationDialog(t,e,s,i,o,l){d.log("RollInterceptor._showConfigurationDialog",[t,e,s,i,o,l]);try{const r={...i,_rollMethod:async R=>(this._sendRollRequest(t,e,s,R),new Roll("1d20").evaluate({async:!1})),configured:!1},u=o.cls,g=await new u(r,o.options).render(!0)}catch{this._sendRollRequest(t,e,s,i)}}static _getActorOwner(t){d.log("_getActorOwner",[t]);const e=t.ownership||{};for(const[s,i]of Object.entries(e))if(i>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const o=game.users.get(s);if(o&&!o.isGM)return o}return null}static _sendRollRequest(t,e,s,i){var g;d.log("_sendRollRequest",[t,e,s,i]);const o=w(),l=E.get(o.skipDialogs.tag);let a=s==null?void 0:s.toLowerCase();a===n.INITIATIVE&&(a=n.INITIATIVE_DIALOG);let r=null,u=null;switch(a){case n.ABILITY:case n.SAVE:r=i.ability;break;case n.SKILL:r=i.skill;break;case n.TOOL:r=i.tool;break;case n.ATTACK:case n.DAMAGE:if((g=i.subject)!=null&&g.item){r=i.subject.item.id;const R=te.findActivityForRoll(i.subject.item,s);R&&(u=R.id)}break;case n.HIT_DIE:r=typeof i=="string"?i:i.denomination;break;case n.INITIATIVE_DIALOG:case n.INITIATIVE:r=null;break;case n.DEATH_SAVE:r=null;break;default:d.warn(`Unknown roll type: ${s}`);return}const f={type:"rollRequest",requestId:foundry.utils.randomID(),actorId:t.id,rollType:a,rollKey:r,activityId:u,rollProcessConfig:{...i,_requestedBy:game.user.name},skipDialog:l,targetTokenIds:Array.from(game.user.targets).map(R=>R.id),preserveTargets:E.get(o.useGMTargetTokens.tag)};a===n.HIT_DIE&&d.log("RollInterceptor._sendRollRequest - Hit Die Debug",[{actor:t.name,owner:e.name,rollType:a,rollKey:r,requestData:f}]),z.execForUser("handleRollRequest",e.id,f),ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestSent",{player:e.name,actor:t.name}))}}I(me,"registeredHooks",new Set);function be(c,t){var i,o,l,a,r;let e=game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${c}`)||c;const s=c==null?void 0:c.toLowerCase();if(t)switch(s){case n.SKILL:e+=` (${((i=CONFIG.DND5E.skills[t])==null?void 0:i.label)||t})`;break;case n.SAVE:e+=` (${((o=CONFIG.DND5E.abilities[t])==null?void 0:o.label)||t})`;break;case n.ABILITY:e+=` (${((l=CONFIG.DND5E.abilities[t])==null?void 0:l.label)||t})`;break;case n.TOOL:const u=(r=(a=CONFIG.DND5E.enrichmentLookup)==null?void 0:a.tools)==null?void 0:r[t];if(u!=null&&u.id){const f=dnd5e.documents.Trait.getBaseItem(u.id,{indexOnly:!0});e+=` (${(f==null?void 0:f.name)||t})`}else e+=` (${t})`;break;case n.CUSTOM:e=`${e}: ${t}`;break}return e}function Ee(c,t=be){if(c.length===0)return;const e={};for(const i of c){const o=`${i.rollType}_${i.rollKey||""}`;e[o]||(e[o]={rollType:i.rollType,rollKey:i.rollKey,actors:[],gm:i.gm}),e[o].actors.push(i.actor)}const s=Object.values(e);if(s.length===1&&s[0].actors.length===1){const i=s[0];ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestReceived",{gm:i.gm,rollType:t(i.rollType,i.rollKey)}))}else{const i=[];for(const o of s){const l=t(o.rollType,o.rollKey),a=o.actors.join(", ");i.push(`${l} (${a})`)}ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsReceivedMultiple",{gm:s[0].gm,requests:i.join("; ")}))}}function Se(c){const t=c.ownership||{};for(const[e,s]of Object.entries(t))if(s>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const i=game.users.get(e);if(i&&!i.isGM)return i}return null}function ke(c,t=game.user){if(!(c!=null&&c.length))return;c.map(s=>canvas.tokens.get(s)).filter(s=>s).forEach(s=>s.setTarget(!0,{user:t}))}function se(c){return c.type!=="character"&&c.type!=="npc"?!1:Object.entries(c.ownership).some(([t,e])=>{const s=game.users.get(t);return s&&!s.isGM&&e>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})}function fe(c){if(c.type!=="character"&&c.type!=="npc")return!1;const t=game.scenes.active;return t&&t.tokens.some(e=>e.actorId===c.id)}function ie(c,t){if(!game.scenes.active)return;const s=canvas.tokens.placeables.filter(i=>{var o;return((o=i.actor)==null?void 0:o.id)===c});for(const i of s)t?i.control({releaseOthers:!1}):i.release()}function he(c){return new Promise(t=>setTimeout(t,c))}function Oe(){var c;return!((c=ui==null?void 0:ui.sidebar)!=null&&c._collapsed)}function Ae(c){const t=document.querySelector("body");c?t.classList.add("sidebar-expanded"):t.classList.remove("sidebar-expanded")}function Ne(c,t){var l;const e=[];if(!c||t.size===0)return e;const s=F.ROLL_REQUEST_OPTIONS[c];if(!s||!s.subList)return e;const i=Array.from(t)[0],o=game.actors.get(i);if(s.subList==="tools"){const a=((l=CONFIG.DND5E.enrichmentLookup)==null?void 0:l.tools)||CONFIG.DND5E.tools||{};for(const[r,u]of Object.entries(a)){let f=r;if(u!=null&&u.id){const g=dnd5e.documents.Trait.getBaseItem(u.id,{indexOnly:!0});f=(g==null?void 0:g.name)||r}else f=r.replace(/([A-Z])/g," $1").replace(/^./,g=>g.toUpperCase()).trim();e.push({id:r,name:f,rollable:!0})}e.sort((r,u)=>r.name.localeCompare(u.name))}else if(o&&s.actorPath){const a=foundry.utils.getProperty(o,s.actorPath)||{},r=CONFIG.DND5E[s.subList];for(const[u,f]of Object.entries(a)){let g="";s.subList==="skills"&&(r!=null&&r[u])||s.subList==="abilities"&&(r!=null&&r[u])?g=r[u].label:g=f.label||game.i18n.localize(f.name||u)||u,e.push({id:u,name:g,rollable:!0})}s.subList==="skills"&&e.sort((u,f)=>u.name.localeCompare(f.name))}return e}const O=class O{static notify(t,e,s={}){if(!s.batch){ui.notifications[t](e);return}s.batchData&&(O.pendingNotifications.push(s.batchData),O.notificationTimer&&clearTimeout(O.notificationTimer),O.notificationTimer=setTimeout(()=>{Ee(O.pendingNotifications),O.pendingNotifications=[],O.notificationTimer=null},O.NOTIFICATION_BATCH_DELAY))}static notifyRollRequestsSent(t,e){const s=Object.entries(t);if(s.length!==0)if(s.length===1){const i=Object.values(t)[0],o=i.actors.map(l=>l.name).join(", ");ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsSentSingle",{rollType:e,actors:o,player:i.player.name}))}else{const i=s.map(([o,l])=>{const a=l.actors.map(r=>r.name).join(", ");return`${l.player.name} (${a})`});ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsSentMultiple",{rollType:e,count:s.length,players:i.join("; ")}))}}static clearPending(){O.notificationTimer&&(clearTimeout(O.notificationTimer),O.notificationTimer=null),O.pendingNotifications=[]}};I(O,"pendingNotifications",[]),I(O,"notificationTimer",null),I(O,"NOTIFICATION_BATCH_DELAY",500);let N=O;function we(c){var s;const t=[],e=[];for(const i of c){const o=((s=i.system.attributes.hp)==null?void 0:s.value)||0,l=i.system.attributes.death||{},a=l.success||0,r=l.failure||0;o<=0&&a<3&&r<3?t.push(i):e.push(i.name)}return e.length>0&&N.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.actorsSkippingDeathSave",{actors:e.join(", ")})),t}function ve(c){const t=[],e=[];for(const s of c){const i=Se(s);i?t.push({actor:s,owner:i}):e.push(s)}return{pcActors:t,npcActors:e}}class oe extends foundry.applications.api.HandlebarsApplicationMixin(foundry.applications.api.ApplicationV2){constructor(t={}){super(t),this.formula=t.formula||"",this.readonly=t.readonly||!1,this.actor=t.actor,this.callback=t.callback,this.diceCounts={}}_onClickAction(t,e){switch(e.dataset.action){case"rollDice":return this.rollDice(t,e);case"addDie":return this.addDie(t,e);case"cancel":return this.cancel(t,e)}}async _prepareContext(t={}){return{...await super._prepareContext(t),formula:this.formula,readonly:this.readonly}}_attachPartListeners(t,e,s){super._attachPartListeners(t,e,s);const i=e.querySelector("#custom-roll-formula"),o=e.querySelector("#formula-validation-message");i&&!this.readonly&&(i.addEventListener("input",l=>{this.formula=l.target.value.trim(),this.updateValidationMessage(o)}),this.formula&&this.updateValidationMessage(o))}updateValidationMessage(t){if(!t)return;if(!this.formula){t.textContent="&nbsp;",t.classList.remove("error","success");return}this.validateFormula(this.formula)?(t.textContent=game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.formulaValid"),t.classList.remove("error"),t.classList.add("success")):(t.textContent=game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.formulaInvalid"),t.classList.remove("success"),t.classList.add("error"))}addDie(t,e){const s=e.dataset.die,i=this.element.querySelector("#custom-roll-formula");if(!i)return;const o=i.value.trim();if(o){const l=/(\d*)d(\d+)/g,a=new Map;let r=o,u;for(;(u=l.exec(o))!==null;){const R=parseInt(u[1]||"1"),h=u[2];a.set(h,(a.get(h)||0)+R),r=r.replace(u[0],"").trim()}const f=s.substring(1);a.set(f,(a.get(f)||0)+1);const g=[];for(const[R,h]of a)g.push(`${h}d${R}`);r=r.replace(/^\+\s*|\s*\+\s*$|\s*\+\s*\+/g,"").trim(),r&&r!=="+"?this.formula=`${g.join(" + ")} + ${r}`:this.formula=g.join(" + ")}else this.formula=`1${s}`;i.value=this.formula,i.dispatchEvent(new Event("input"))}validateFormula(t){var e;if(!t||t.trim()==="")return!1;try{return Roll.validate(t)}catch{try{return new Roll(t,((e=this.actor)==null?void 0:e.getRollData())||{}),!0}catch{return!1}}}async rollDice(){if(d.log("rollDice"),!this.validateFormula(this.formula)){ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:this.formula||"empty"}));return}this.callback&&await this.callback(this.formula),this.close()}cancel(){this.close()}static async prompt(t={}){return new Promise(e=>{const s=new this({...t,callback:i=>e(i)});s.addEventListener("close",()=>{s._resolved||e(null)}),s.render(!0)})}async close(t={}){return this._resolved=!0,super.close(t)}}I(oe,"DEFAULT_OPTIONS",{id:"crlngn-custom-roll-dialog",classes:["crlngn-rolls-dialog","crlngn-custom-roll-dialog"],tag:"div",window:{title:"CRLNGN_ROLLS.ui.dialogs.customRollTitle",icon:"fas fa-dice-d20",resizable:!1,positioned:!0,frame:!0},position:{width:400,height:"auto"}}),I(oe,"PARTS",{main:{template:`modules/${F.ID}/templates/custom-roll-dialog.hbs`},footer:{template:`modules/${F.ID}/templates/custom-roll-dialog-footer.hbs`}});const q={addSituationalBonus(c,t){var e;return d.log("Config before adding bonus:",[t,!c.rolls,c]),t&&((e=c.rolls)!=null&&e[0])&&(c.rolls[0].parts||(c.rolls[0].parts=[]),c.rolls[0].data||(c.rolls[0].data={}),c.rolls[0].data.situational=t,c.situational=t,d.log("Config after adding bonus:",[c])),c},buildRollConfig(c,t,e={}){const s={rolls:[{parts:t.parts||[],data:t.data||{},options:t.options||{}}],advantage:c.config.advantage||!1,disadvantage:c.config.disadvantage||!1,target:c.config.target,subject:null,chatMessage:!0,legacy:!1,...e},i=c.config.situational;return i&&this.addSituationalBonus(s,i),this.ensureRollFlags(s,c)},ensureRollFlags(c,t){return{...c,isRollRequest:!game.user.isGM,_showRequestedBy:!0,_requestedBy:t.config.requestedBy||"GM"}},async executeActivityRoll(c,t,e,s,i,o){e.rollKey&&await te.executeActivityRoll(c,t,e.rollKey,e.activityId,{...s,dialog:i,message:o})},async handleCustomRoll(c,t){const e=t.rollKey;new oe({formula:e,readonly:!0,actor:c,callback:async i=>{try{const o=new Roll(i,c.getRollData());o.options=o.options||{},o.options.isRollRequest=!0,await o.evaluate({async:!0}),await o.toMessage({speaker:ChatMessage.getSpeaker({actor:c}),flavor:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${n.CUSTOM}`),rollMode:t.config.rollMode,isRollRequest:!0,_showRequestedBy:!0,_requestedBy:t.config.requestedBy||"GM"})}catch{ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:i}))}}}).render(!0)},async regainHitDice(c){const t=foundry.utils.mergeObject({type:"long",deltas:{hitDice:0},newDay:!1,rolls:[],updateData:{},updateItems:[]},{});"dhd"in t&&(t.deltas.hitDice=t.dhd),c._getRestHitDiceRecovery({maxHitDice:c.system.attributes.hd.max,type:"long"},t),d.log("RollHelpers.regainHitDice #1",[t]),t.dhd=t.deltas.hitDice,t.longRest=!0,d.log("RollHelpers.regainHitDice #2",[t]);try{if(t.updateData&&Object.keys(t.updateData).length>0){const e=await c.update(t.updateData,{isRest:!1})}else d.log("No actor updates to perform",[]);if(t.updateItems&&t.updateItems.length>0){const e=await c.updateEmbeddedDocuments("Item",t.updateItems,{isRest:!1})}else d.log("No item updates to perform",[])}catch(e){throw d.error("Error during updates in regainHitDice:",[e]),e}return d.log("RollHelpers.regainHitDice #3",[t]),t}},Y={ability:async(c,t,e,s,i)=>{const o=q.buildRollConfig(t,e,{ability:t.rollKey});await c.rollAbilityCheck(o,s,i)},abilitycheck:async(c,t,e,s,i)=>Y.ability(c,t,e,s,i),save:async(c,t,e,s,i)=>{const o=q.buildRollConfig(t,e,{ability:t.rollKey});await c.rollSavingThrow(o,s,i)},savingthrow:async(c,t,e,s,i)=>Y.save(c,t,e,s,i),skill:async(c,t,e,s,i)=>{const o=q.buildRollConfig(t,e,{skill:t.rollKey,chooseAbility:!0,ability:t.config.ability||void 0});await c.rollSkill(o,s,i)},tool:async(c,t,e,s,i)=>{const o=q.buildRollConfig(t,e,{tool:t.rollKey,chooseAbility:!0,ability:t.config.ability||void 0});await c.rollToolCheck(o,s,i)},concentration:async(c,t,e,s,i)=>{const o=q.buildRollConfig(t,e);await c.rollConcentration(o,s,i)},attack:async(c,t,e,s,i)=>{await q.executeActivityRoll(c,n.ATTACK,t,e,s,i)},damage:async(c,t,e,s,i)=>{await q.executeActivityRoll(c,n.DAMAGE,t,e,s,i)},itemsave:async(c,t,e,s,i)=>{await q.executeActivityRoll(c,n.ITEM_SAVE,t,e,s,i)},initiative:async(c,t,e,s,i)=>{if(!game.combat){ui.notifications.warn(game.i18n.localize("COMBAT.NoneActive"));return}const o=q.buildRollConfig(t,e),l=t.config.situational;l&&s.configure&&!game.user.isGM&&(c._initiativeSituationalBonus=l),s.configure&&!game.user.isGM?await c.rollInitiativeDialog(o):await c.rollInitiative({},o)},initiativedialog:async(c,t,e,s,i)=>Y.initiative(c,t,e,s,i),deathsave:async(c,t,e,s,i)=>{const o=q.buildRollConfig(t,e);await c.rollDeathSave(o,s,i)},hitdie:async(c,t,e,s,i)=>{s.configure=game.user.isGM?s.configure:!0;const o=q.buildRollConfig(t,e,{denomination:t.rollKey});await c.rollHitDie(o,s,i)},custom:async(c,t,e,s,i)=>{await q.handleCustomRoll(c,t)}};async function qe(){return game.combat?!0:await Dialog.confirm({title:game.i18n.localize("COMBAT.Create"),content:"<p>"+game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.noCombatActive")+"</p>",yes:()=>!0,no:()=>!1,defaultYes:!0,options:{classes:["crlngn-rolls-dialog"]}})?(await(await game.combats.documentClass.create({scene:game.scenes.active.id})).activate(),N.notify("info",game.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.combatCreated")),!0):!1}async function Ge(c,t){if(!t.combat)return c;const e=c.map(o=>t.actors.get(o)).filter(o=>o),s=[],i=new Set;for(const o of e){const l=t.combat.getCombatantByActor(o.id);l&&l.initiative!==null&&(s.push(o.name),i.add(o.id))}if(s.length>0)if(await Dialog.confirm({title:t.i18n.localize("CRLNGN_ROLLS.ui.dialogs.rerollInitiativeTitle"),content:"<p>"+t.i18n.format("CRLNGN_ROLLS.ui.dialogs.rerollInitiative",{actors:s.join(", ")})+"</p>",yes:()=>!0,no:()=>!1,defaultYes:!1,options:{classes:["crlngn-rolls-dialog"]}})){for(const l of i){const a=t.combat.getCombatantByActor(l);a&&await a.update({initiative:null})}return c}else{const l=c.filter(a=>!i.has(a));return l.length===0&&N.notify("info",t.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.allActorsHaveInitiative")),l}return c}var B;const Z=class Z extends foundry.applications.api.HandlebarsApplicationMixin(foundry.applications.api.ApplicationV2){constructor(e={}){d.log("RollRequestsMenu.constructor");super(e);I(this,"_onClickOutside",e=>{if(d.log("_onClickOutside"),this.isLocked)return;const s=this.element;s&&(e.target.closest(".roll-requests-menu")||s.contains(e.target)||e.target.closest("#crlngn-requests-icon")||e.target.closest(".dialog, .app, .notification")||this.close())});this.selectedActors=new Set,this.currentTab="pc",this.selectedRequestType=null,this.isLocked=!1,this.optionsExpanded=game.user.getFlag(F.ID,"menuOptionsExpanded")??!1,this._initializeFromSelectedTokens()}async _prepareContext(e){d.log("_prepareContext");const s=await super._prepareContext(e),i=game.actors.contents,o=[],l=[],a=game.scenes.active;for(const m of i){if(m.type!=="character"&&m.type!=="npc")continue;const C={id:m.id,uuid:m.uuid,name:m.name,img:m.img,selected:this.selectedActors.has(m.id),crlngnStats:this._getActorStats(m)};Object.entries(m.ownership).some(([T,_])=>{const y=game.users.get(T);return y&&!y.isGM&&_>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})?o.push(C):a&&a.tokens.some(_=>_.actorId===m.id)&&l.push(C)}const r=w(),u=E.get(r.rollRequestsEnabled.tag),f=E.get(r.skipDialogs.tag),g=this.currentTab==="pc"?o:l,R=g.length>0&&g.every(m=>this.selectedActors.has(m.id)),h=[];if(this.selectedActors.size>0)for(const[m,C]of Object.entries(F.ROLL_REQUEST_OPTIONS))h.push({id:m,name:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${C.name}`)||C.label,rollable:C.subList==null,hasSubList:!!C.subList,selected:this.selectedRequestType===m});const p=Ne(this.selectedRequestType,this.selectedActors);return{...s,actors:g,currentTab:this.currentTab,isPCTab:this.currentTab==="pc",isNPCTab:this.currentTab==="npc",selectedTab:this.currentTab,rollRequestsEnabled:u,skipDialogs:f,selectAllOn:R,hasSelectedActors:this.selectedActors.size>0,requestTypes:h,rollTypes:p,showNames:!0,actorsLocked:this.isLocked,optionsExpanded:this.optionsExpanded}}_getActorStats(e){var l,a,r,u,f,g;d.log("_getActorStats");const s=e.system,i=[];(l=s.attributes)!=null&&l.hp&&i.push({abbrev:"HP",value:s.attributes.hp.value}),(a=s.attributes)!=null&&a.ac&&i.push({abbrev:"AC",value:s.attributes.ac.value});const o=(u=(r=s.attributes)==null?void 0:r.spell)==null?void 0:u.dc;return o&&i.push({abbrev:"DC",value:o}),(g=(f=s.skills)==null?void 0:f.prc)!=null&&g.passive&&i.push({abbrev:"PP",value:s.skills.prc.passive}),i}_onRender(e,s){if(d.log("_onRender"),super._onRender(e,s),this._attachListeners(),this.optionsExpanded){const i=this.element.querySelector(".options-toggle"),o=this.element.querySelector("li.options");i&&i.classList.add("expanded"),o&&o.classList.add("expanded")}setTimeout(()=>{document.addEventListener("click",this._onClickOutside,!0)},100),this._tokenControlHook=Hooks.on("controlToken",this._onTokenControlChange.bind(this))}_onTokenControlChange(e,s){d.log("_onTokenControlChange"),this.rendered&&(this._ignoreTokenControl||(this._tokenUpdateTimeout&&clearTimeout(this._tokenUpdateTimeout),this._tokenUpdateTimeout=setTimeout(()=>{this._initializeFromSelectedTokens(),this.render(),this._tokenUpdateTimeout=null},100)))}_attachListeners(){var l,a,r,u,f;d.log("_attachListeners");const e=this.element;(l=e.querySelector("#crlngn-requests-toggle"))==null||l.addEventListener("change",this._onToggleRollRequests.bind(this)),(a=e.querySelector("#crlngn-skip-dialogs"))==null||a.addEventListener("change",this._onToggleSkipDialogs.bind(this)),(r=e.querySelector("#crlngn-actors-all"))==null||r.addEventListener("change",this._onToggleSelectAll.bind(this)),(u=e.querySelector("#crlngn-actors-lock"))==null||u.addEventListener("click",this._onToggleLock.bind(this)),(f=e.querySelector(".options-toggle"))==null||f.addEventListener("click",this._onToggleOptions.bind(this)),e.querySelectorAll(".actor-tab").forEach(g=>{g.addEventListener("click",this._onTabClick.bind(this))}),e.querySelectorAll(".actor").forEach(g=>{g.addEventListener("click",this._onActorClick.bind(this))}),e.querySelectorAll(".actor-select").forEach(g=>{g.addEventListener("click",this._onActorSelectClick.bind(this))});const i=e.querySelector(".request-types");i&&i.addEventListener("click",g=>{const R=g.target.closest("li");if(R&&R.dataset.id){const h={...g,currentTarget:R};this._onRequestTypeClick(h)}});const o=e.querySelector(".roll-types");o&&o.addEventListener("click",g=>{const R=g.target.closest("li");if(R&&R.dataset.id){const h={...g,currentTarget:R};this._onRollTypeClick(h)}})}async _onToggleRollRequests(e){d.log("_onToggleRollRequests");const s=w(),i=e.target.checked;await E.set(s.rollRequestsEnabled.tag,i),_e.updateRollRequestsIcon(i)}async _onToggleSkipDialogs(e){d.log("_onToggleSkipDialogs");const s=w(),i=e.target.checked;await E.set(s.skipDialogs.tag,i)}_onToggleSelectAll(e){d.log("_onToggleSelectAll");const s=e.target.checked;this._ignoreTokenControl=!0,(this.currentTab==="pc"?game.actors.contents.filter(o=>se(o)):game.actors.contents.filter(o=>!se(o)&&fe(o))).forEach(o=>{s?(this.selectedActors.add(o.id),ie(o.id,!0)):(this.selectedActors.delete(o.id),ie(o.id,!1))}),setTimeout(()=>{this._ignoreTokenControl=!1},200),this.render(),this._updateRequestTypesVisibility()}_onToggleLock(e){d.log("_onToggleLock"),e.preventDefault(),this.isLocked=!this.isLocked;const s=e.currentTarget;s.classList.remove("fa-lock-keyhole","fa-lock-keyhole-open"),s.classList.add(this.isLocked?"fa-lock-keyhole":"fa-lock-keyhole-open")}async _onToggleOptions(e){d.log("_onToggleOptions"),e.preventDefault(),this.optionsExpanded=!this.optionsExpanded,await game.user.setFlag(F.ID,"menuOptionsExpanded",this.optionsExpanded);const s=e.currentTarget||e.target.closest(".options-toggle");s&&s.classList.toggle("expanded",this.optionsExpanded);const i=this.element.querySelector("li.options");i&&i.classList.toggle("expanded",this.optionsExpanded)}_initializeFromSelectedTokens(){var s;d.log("_initializeFromSelectedTokens");const e=((s=canvas.tokens)==null?void 0:s.controlled)||[];this.selectedActors.clear();for(const i of e)if(i.actor&&(this.selectedActors.add(i.actor.id),this.selectedActors.size===1)){const o=se(i.actor);this.currentTab=o?"pc":"npc"}}async _onTabClick(e){var i;d.log("_onTabClick");const s=e.currentTarget.dataset.tab;s!==this.currentTab&&(this.selectedActors.clear(),(i=canvas.tokens)==null||i.releaseAll(),this.selectedRequestType=null,this.currentTab=s,await this.render())}_onActorClick(e){if(d.log("_onActorClick"),e.target.closest(".actor-select"))return;const i=e.currentTarget.dataset.id;this._toggleActorSelection(i)}_onActorSelectClick(e){d.log("_onActorSelectClick"),e.stopPropagation();const s=e.currentTarget.dataset.id;this._toggleActorSelection(s)}_toggleActorSelection(e){d.log("_toggleActorSelection"),this._ignoreTokenControl=!0,this.selectedActors.has(e)?(this.selectedActors.delete(e),ie(e,!1)):(this.selectedActors.add(e),ie(e,!0)),setTimeout(()=>{this._ignoreTokenControl=!1},100),this.render(),this._updateRequestTypesVisibility(),this._updateSelectAllState()}_updateRequestTypesVisibility(){d.log("_updateRequestTypesVisibility"),this.render()}_updateSelectAllState(){d.log("_updateSelectAllState");const e=this.element.querySelector("#crlngn-actors-all"),s=this.currentTab==="pc"?"pc":"npc",i=this.element.querySelectorAll(`.${s}-actors .actor-item input[type="checkbox"]`),o=Array.from(i).filter(l=>l.checked).length;e.checked=o>0&&o===i.length,e.indeterminate=o>0&&o<i.length}async _onRequestTypeClick(e){const s=e.currentTarget,i=s.dataset.id,o=F.ROLL_REQUEST_OPTIONS[i];if(d.log("_onRequestTypeClick",[i,s.dataset,o]),!o){d.error("Unknown request type:",i);return}this.selectedRequestType===i?this.selectedRequestType=null:this.selectedRequestType=i,o.subList?await this.render():this.selectedRequestType&&this._triggerRoll(i,null)}_onRollTypeClick(e){d.log("_onRollTypeClick");const s=e.currentTarget.dataset.id;this._triggerRoll(this.selectedRequestType,s)}_getValidActorIds(e){return e.filter(s=>{const i=game.actors.get(s);if(!i)return!1;const o=se(i),l=!o&&fe(i);return this.currentTab==="pc"&&o||this.currentTab==="npc"&&l})}async _handleCustomRoll(){return await this._showCustomRollDialog()}async _getRollConfiguration(e,s,i,o,l){const a=w(),r=E.get(a.rollRequestsEnabled.tag);if(!o&&s!==n.CUSTOM){let u;return[n.SKILL,n.TOOL].includes(s)?u=pe:s===n.HIT_DIE?u=Re:u=P,await u.getConfiguration(e,s,i,{skipDialogs:o,defaultSendRequest:r})}else{const u={rolls:[{parts:[],data:{},options:{}}],advantage:!1,disadvantage:!1,rollMode:game.settings.get("core","rollMode"),chatMessage:!0,isRollRequest:!1,skipDialog:!0,sendRequest:r&&l.length>0};return s===n.DEATH_SAVE&&(u.target=10),u}}async _executeRollRequests(e,s,i,o,l){const a=w(),r=[],u=[];if(d.log("_executeRollRequests",{config:e,rollMethodName:o,rollKey:l}),e.sendRequest){for(const{actor:f,owner:g}of s){if(!g.active){E.get(a.showOfflineNotifications.tag)&&N.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.playerOffline",{player:g.name})),u.push(f);continue}await this._sendRollRequestToPlayer(f,g,o,l,e,!0),r.push({actor:f,owner:g}),await he(100)}r.length>0&&this._showConsolidatedNotification(r,o,l)}else i.push(...s.map(({actor:f})=>f));if(u.length>0){const f={...e,skipDialog:!0};await this._handleGMRolls(u,o,l,f)}if(i.length>0){const f={...e};f.fastForward=!0,f.skipDialog=!0,await this._handleGMRolls(i,o,l,f)}}async _triggerRoll(e,s){var p;d.log("_triggerRoll",[e,s]);const i=w(),o=Array.from(this.selectedActors),l=E.get(i.skipDialogs.tag),a=this._getValidActorIds(o);let r=a.map(m=>game.actors.get(m)).filter(m=>m);const u=F.ROLL_REQUEST_OPTIONS[e],f=(p=(u==null?void 0:u.name)||e)==null?void 0:p.toLowerCase();switch(f){case n.CUSTOM:if(s=await this._handleCustomRoll(),!s)return;break;case n.INITIATIVE:case n.INITIATIVE_DIALOG:if(!await qe())return;if(game.combat){const C=await Ge(a,game);if(!C.length)return;r=C.map(b=>game.actors.get(b)).filter(b=>b)}break;case n.DEATH_SAVE:r=await we(r);break}if(!r.length){N.notify("warn","No valid actors selected");return}const{pcActors:g,npcActors:R}=ve(r),h=await this._getRollConfiguration(r,f,s,l,g);h&&(await this._executeRollRequests(h,g,R,f,s),setTimeout(()=>this.close(),500))}async _sendRollRequestToPlayer(e,s,i,o,l,a=!1){d.log("_sendRollRequestToPlayer #A",[i,o]);const r=w();let u=i==null?void 0:i.toLowerCase();if(u===n.ABILITY_CHECK?u=n.ABILITY:u===n.SAVING_THROW?u=n.SAVE:u===n.INITIATIVE_DIALOG&&(u=n.INITIATIVE),u===n.HIT_DIE){const g=e.system.attributes.hd;if(g.value>0)o=g.largestAvailable;else if(await foundry.applications.api.DialogV2.confirm({window:{title:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.hitDie.refillTitle")||"No Hit Dice Available",classes:["crlngn-hit-die-dialog"]},position:{width:420},content:`<p>${game.i18n.format("CRLNGN_ROLLS.ui.dialogs.hitDie.refillMessage",{actor:e.name})||""}</p>`,modal:!0,rejectClose:!1,yes:{label:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.hitDie.refillAndSend")||"Refill & Send",icon:""},no:{label:game.i18n.localize("Cancel")||"Cancel",icon:""}})){try{d.log("About to call regainHitDice for",[e.name]);const h=await q.regainHitDice(e);d.log("regainHitDice completed",[h])}catch(h){d.error("Error calling regainHitDice:",[h])}o=e.system.attributes.hd.largestAvailable,d.log("_sendRollRequestToPlayer - Hit Die REFILL",[{hdData:e.system.attributes.hd}]),N.notify("info",game.i18n.format("CRLNGN_ROLLS.ui.dialogs.hitDie.refilled",{actor:e.name})||`Hit dice refilled for ${e.name}`)}else return}d.log("_sendRollRequestToPlayer - Hit Die Debug",[{rollType:u,rollKey:o,actor:e.name}]);const f={type:"rollRequest",requestId:foundry.utils.randomID(),actorId:e.id,rollType:u,rollKey:o,activityId:null,rollProcessConfig:{...l,_requestedBy:game.user.name},skipDialog:!1,targetTokenIds:Array.from(game.user.targets).map(g=>g.id),preserveTargets:E.get(r.useGMTargetTokens.tag)};z.execForUser("handleRollRequest",s.id,f),a||N.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestSent",{player:s.name,actor:e.name}))}_showConsolidatedNotification(e,s,i){var r,u,f,g,R;d.log("_showConsolidatedNotification");const o={};for(const{actor:h,owner:p}of e)o[p.id]||(o[p.id]={player:p,actors:[]}),o[p.id].actors.push(h);for(const[h,p]of Object.entries(F.ROLL_REQUEST_OPTIONS))if(p.name===s)break;const l=s;let a=game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${l}`)||l;if(i){const h=l.toLowerCase();if(h===n.SKILL)a=`${a} (${((r=CONFIG.DND5E.skills[i])==null?void 0:r.label)||i})`;else if(h===n.SAVING_THROW)a=`${a} (${((u=CONFIG.DND5E.abilities[i])==null?void 0:u.label)||i})`;else if(h===n.ABILITY_CHECK)a=`${a} (${((f=CONFIG.DND5E.abilities[i])==null?void 0:f.label)||i})`;else if(h===n.TOOL){const p=(R=(g=CONFIG.DND5E.enrichmentLookup)==null?void 0:g.tools)==null?void 0:R[i];if(p!=null&&p.id){const m=dnd5e.documents.Trait.getBaseItem(p.id,{indexOnly:!0});a=`${a} (${(m==null?void 0:m.name)||i})`}else a=`${a} (${i})`}else h===n.CUSTOM&&(a=`${a}: ${i}`)}N.notifyRollRequestsSent(o,a)}async _handleGMRolls(e,s,i,o){d.log("_handleGMRolls",[e,s,i,o]);for(const l of e)await this._executeActorRoll(l,s,i,o),await he(100)}async _executeActorRoll(e,s,i,o){var l,a,r,u,f;d.log("_executeActorRoll",[s,i,o]);try{const g=s.toLowerCase();let R=i;if(g===n.HIT_DIE){const _=e.system.attributes.hd;if(_){const y=["d6","d8","d10","d12","d20"];for(const S of y)if((((l=_[S])==null?void 0:l.value)||0)>0){R=S;break}}if(!R){N.notify("warn",game.i18n.format("DND5E.HitDiceWarn",{name:e.name}));return}}const h=((u=(r=(a=o.rolls)==null?void 0:a[0])==null?void 0:r.data)==null?void 0:u.situational)||"",p={rollKey:R,config:{...o,situational:h,rollMode:o.rollMode||game.settings.get("core","rollMode"),advantage:o.advantage||!1,disadvantage:o.disadvantage||!1,target:o.target}},m={configure:!o.fastForward&&!o.skipDialog},C={rollMode:o.rollMode||game.settings.get("core","rollMode"),create:o.chatMessage!==!1},b=((f=o.rolls)==null?void 0:f[0])||{},T=Y[g];T?await T(e,p,b,m,C):N.notify("warn",`Unknown roll type: ${s}`)}catch(g){d.error("executeActorRoll",[g]),N.notify("error",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:e.name}))}}async _onClose(e){d.log("_onClose"),await super._onClose(e),this.selectedActors.clear(),this.selectedRequestType=null,document.removeEventListener("click",this._onClickOutside,!0),this._tokenControlHook&&(Hooks.off("controlToken",this._tokenControlHook),this._tokenControlHook=null),this._tokenUpdateTimeout&&(clearTimeout(this._tokenUpdateTimeout),this._tokenUpdateTimeout=null)}setPosition(e={}){return d.log("setPosition"),this}async _showCustomRollDialog(){return d.log("_showCustomRollDialog"),oe.prompt({formula:"",readonly:!1})}static toggle(){d.log("RollRequestsMenu.toggle"),U(this,B)?U(this,B).rendered?U(this,B).close():(U(this,B)._initializeFromSelectedTokens(),U(this,B).render(!0)):(ge(this,B,new Z),U(this,B).render(!0))}};B=new WeakMap,de(Z,B,null),I(Z,"DEFAULT_OPTIONS",{id:"crlngn-requests-menu",classes:["roll-requests-menu"],tag:"div",window:{frame:!1,resizable:!1,minimizable:!1},position:null}),I(Z,"PARTS",{main:{template:`modules/${F.ID}/templates/requests-menus.hbs`}});let ae=Z;class _e{static addSidebarControls(t,e,s){if(!game.user.isGM||t.id!=="chat")return;const o=(e[0]||e).querySelector("#chat-controls");if(!o||o.querySelector(".roll-requests-icon"))return;const l=w(),a=E.get(l.rollRequestsEnabled.tag),r=document.createElement("a");r.id="crlngn-requests-icon",r.setAttribute("data-tooltip-direction","RIGHT"),r.className=`chat-control-icon roll-requests-icon${a?" active":""}`,r.title=game.i18n.localize("CRLNGN_ROLLS.ui.menus.rollRequestsTitle"),r.innerHTML=`<i class="fas fa-bolt${a?"":"-slash"}"></i>`;const u=o.querySelector(".chat-control-icon");u?u.parentNode.insertBefore(r,u):o.insertBefore(r,o.firstChild),r.addEventListener("click",()=>{ae.toggle()})}static updateRollRequestsIcon(t){const e=document.querySelector("#crlngn-requests-icon i");e&&(e.className=`fas fa-bolt${t?"":"-slash"}`)}}class Ce{static initialize(){Hooks.once(K.INIT,this._onInit.bind(this)),Hooks.once(K.READY,this._onReady.bind(this))}static _onInit(){w(),document.body.classList.add("crlngn-rolls"),E.registerSettings(),j.initialize(),this._registerHook(K.RENDER_SIDEBAR_TAB,this._onRenderSidebarTab.bind(this))}static _onReady(){const t=w();E.get(t.debugMode.tag)&&(CONFIG.debug.hooks=!0),me.initialize(),this._registerDnd5eHooks(),game.user.isGM?this._registerGMHooks():(j.getDiceConfig(),this._registerPlayerHooks()),Ae(Oe())}static _registerDnd5eHooks(){this._registerHook(A.POST_ROLL_CONFIG,this._onPostRollConfig.bind(this)),this._registerHook(K.PRE_CREATE_CHAT_MESSAGE,this._onPreCreateChatMessage.bind(this)),this._registerHook(K.PRE_CREATE_CHAT_MESSAGE,this._onPreCreateChatMessageFlavor.bind(this)),this._registerHook(A.RENDER_ROLL_CONFIGURATION_DIALOG,this._onRenderRollConfigDialog.bind(this)),this._registerHook(A.RENDER_SKILL_TOOL_ROLL_DIALOG,this._onRenderSkillToolDialog.bind(this))}static _registerGMHooks(){this._registerHook(K.USER_CONNECTED,this._onUserConnected.bind(this)),game.users.forEach(t=>{this._onUserConnected(t)})}static _registerPlayerHooks(){this._registerHook(A.PRE_ROLL_HIT_DIE_V2,this._onPreRollHitDieV2.bind(this)),this._registerHook(A.PRE_ROLL_INITIATIVE_DIALOG_V2,this._onPreRollInitiativeDialogV2.bind(this)),this._registerHook(A.RENDER_ROLL_CONFIGURATION_DIALOG,this._onRenderHitDieDialog.bind(this))}static _onPostRollConfig(t,e,s,i){e._showRequestedBy&&t.length>0&&(i.data=i.data||{},i.data._showRequestedBy=!0,i.data._requestedBy=e._requestedBy)}static _onPreCreateChatMessage(t,e,s,i){var o;if(e._showRequestedBy&&((o=e.rolls)==null?void 0:o.length)>0){const l=e._requestedBy||"GM",a=game.i18n.format("CRLNGN_ROLL_REQUESTS.chat.requestedBy",{gm:l}),r=e.flavor||"";e.flavor=r?`${r} ${a}`:a}}static _onPreCreateChatMessageFlavor(t,e,s,i){var o,l;if(((o=e.rolls)==null?void 0:o.length)>0&&e.rolls[0])try{const a=e.rolls[0];(l=a.options)!=null&&l._customFlavor&&(e.flavor=a.options._customFlavor)}catch{}}static _onRenderRollConfigDialog(t,e,s){if(d.log("_onRenderRollConfigDialog triggered",[t,s]),t._situationalTriggered)return;const i=e.querySelectorAll('input[name*="situational"]');d.log("Found situational inputs:",[i.length]);let o=!1;i.forEach((l,a)=>{var r,u,f,g,R;!l.value&&((g=(f=(u=(r=t.config)==null?void 0:r.rolls)==null?void 0:u[0])==null?void 0:f.data)!=null&&g.situational)&&((R=t.config)!=null&&R.isConcentration)&&(l.value=t.config.rolls[0].data.situational,o=!0),l.value&&!o&&(t._situationalTriggered=!0,o=!0,setTimeout(()=>{var h,p,m;l.dispatchEvent(new Event("change",{bubbles:!0,cancelable:!1})),(m=(p=(h=t.config)==null?void 0:h.rolls)==null?void 0:p[0])!=null&&m.data&&delete t.config.rolls[0].data.situational},50))})}static _onUserConnected(t){t.active&&t.id!==game.user.id&&j.requestDiceConfigFromUser(t.id)}static _onRenderSidebarTab(t,e,s){_e.addSidebarControls(t,e,s)}static _registerHook(t,e){const s=Hooks.on(t,e);return this.registeredHooks.set(`${t}_${s}`,s),s}static unregisterAll(){this.registeredHooks.forEach((t,e)=>{const s=e.split("_")[0];Hooks.off(s,t)}),this.registeredHooks.clear()}static isRegistered(t){for(const e of this.registeredHooks.keys())if(e.startsWith(`${t}_`))return!0;return!1}static _onPreRollHitDieV2(t,e,s){if(d.log("_onPreRollHitDieV2 triggered",[t,e,s]),t.rolls&&t.rolls.length>1){const i=t.rolls[1];i&&i.data&&i.data.situational&&(t.rolls[0].data||(t.rolls[0].data={}),t.rolls[0].data.situational=i.data.situational,t.rolls.splice(1,1),d.log("Consolidated hit die rolls with situational bonus",t.rolls))}}static _onPreRollInitiativeDialogV2(t,e,s){d.log("_onPreRollInitiativeDialogV2 triggered",[t,e,s]);const i=t.subject;if(i&&i._initiativeSituationalBonus){if(!t.rolls||t.rolls.length===0){const o=i.getInitiativeRollConfig({});t.rolls=o.rolls||[]}t.rolls.length>0&&(t.rolls[0].data||(t.rolls[0].data={}),t.rolls[0].data.situational=i._initiativeSituationalBonus,d.log("Added situational bonus to initiative dialog",[{bonus:i._initiativeSituationalBonus,rolls:t.rolls}]),delete i._initiativeSituationalBonus)}}static _onRenderSkillToolDialog(t,e,s){var a,r;if(d.log("_onRenderSkillToolDialog triggered",[t]),!((a=t.config)!=null&&a.isRollRequest)||!((r=t.config)!=null&&r.ability))return;const i=e.querySelector('select[name="ability"]');if(!i)return;const o=i.value,l=t.config.ability;o===l&&setTimeout(()=>{const u=new Event("change",{bubbles:!0,cancelable:!0});i.dispatchEvent(u)},50)}static _onRenderHitDieDialog(t,e,s){var r,u,f,g,R;const i=(r=e.querySelector(".window-title"))==null?void 0:r.textContent;if(!i||!i.includes("Hit Die"))return;const o=(u=t.config)==null?void 0:u.subject;if(!o)return;d.log("_onRenderHitDieDialog triggered",[{app:t,actor:o.name,hd:o.system.attributes.hd}]);const l=o.system.attributes.hd,a=[];for(const h of Object.values(o.classes||{})){const p=h.system.hitDice,m=h.system.levels,C=h.system.hitDiceUsed||0,b=m-C;if(b>0){const T=a.find(_=>_.denomination===p);T?(T.available+=b,T.classes.push(h.name)):a.push({denomination:p,available:b,max:m,classes:[h.name]})}}if(a.length>1){const h=e.querySelector(".formulas");if(!h)return;const p=((R=(g=(f=t.config.rolls)==null?void 0:f[0])==null?void 0:g.options)==null?void 0:R.denomination)||l.largestAvailable,m=`
        <div class="form-group">
          <label>${game.i18n.localize("DND5E.HitDice")}</label>
          <select name="hitDieSelector" class="hit-die-selector">
            ${a.map(b=>`
              <option value="${b.denomination}" ${b.denomination===p?"selected":""}>
                ${b.denomination} (${b.available} ${game.i18n.localize("DND5E.available")}) - ${b.classes.join(", ")}
              </option>
            `).join("")}
          </select>
        </div>
      `,C=h.querySelector(".form-group");if(C){C.insertAdjacentHTML("beforebegin",m);const b=e.querySelector(".hit-die-selector");b==null||b.addEventListener("change",async T=>{var G,k,M;const _=T.target.value;(k=(G=t.config.rolls)==null?void 0:G[0])!=null&&k.options&&(t.config.rolls[0].options.denomination=_);const y=o.system.abilities.con.mod,S=`max(0, 1${_} + ${y})`;if((M=t.config.rolls)!=null&&M[0]){t.config.rolls[0].formula=S;const L=new CONFIG.Dice.D20Roll(S,o.getRollData());await L.evaluate({async:!1}),t.config.rolls[0]=L}t.render(!0),d.log("Updated hit die denomination",[{newDenom:_,newFormula:S,conMod:y}])})}}}}I(Ce,"registeredHooks",new Map);class ne{static async handleRequest(t){var s;if(d.log("handleRequest",[t]),game.user.isGM)return;const e=game.actors.get(t.actorId);!e||!e.isOwner||(t.preserveTargets&&((s=t.targetTokenIds)==null?void 0:s.length)>0&&game.user.targets.size===0&&ke(t.targetTokenIds),N.notify("info","",{batch:!0,batchData:{actor:e.name,rollType:t.rollType,rollKey:t.rollKey,gm:t.rollProcessConfig._requestedBy||"GM"}}),ne.executeRequest(e,t))}static async executeRequest(t,e){var s,i,o;d.log("executeRequest",[t,e]),d.log("executeRequest - Debug",[{rollType:e.rollType,rollKey:e.rollKey,actorName:t.name,handlers:Object.keys(Y)}]);try{const l=(s=e.rollType)==null?void 0:s.toLowerCase(),a=((i=e.rollProcessConfig.rolls)==null?void 0:i[0])||{parts:[],data:{},options:{}},u={configure:!(game.user.isGM?e.skipDialog:!1),options:{defaultButton:e.rollProcessConfig.advantage?"advantage":e.rollProcessConfig.disadvantage?"disadvantage":"normal",window:{title:be(l,e.rollKey),subtitle:t.name}}},f={rollMode:e.rollProcessConfig.rollMode||game.settings.get("core","rollMode"),create:e.rollProcessConfig.chatMessage!==!1};l==="hitdie"&&d.log("RollRequestUtil - Hit Die Debug",[{normalizedRollType:l,requestData:e,rollConfig:a,handlers:Object.keys(Y)}]);const g={rollKey:e.rollKey,config:{advantage:e.rollProcessConfig.advantage,disadvantage:e.rollProcessConfig.disadvantage,situational:((o=a.data)==null?void 0:o.situational)||"",rollMode:e.rollProcessConfig.rollMode,target:e.rollProcessConfig.target,ability:e.rollProcessConfig.ability,requestedBy:e.rollProcessConfig._requestedBy}},R=Y[l];R?await R(t,g,a,u,f):(d.warn(`No handler found for roll type: ${l}`),N.notify("warn",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:t.name||"Unknown Actor"})))}catch(l){d.error("Error executing roll request:",[l]),N.notify("error",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:t.name||"Unknown Actor"}))}}}class J{static init(){z.initialize(J.registerSocketCalls),Ce.initialize()}static getDiceConfig(){return j.getDiceConfig()}static receiveDiceConfig(t,e){j.receiveDiceConfig(t,e)}static async handleRollRequest(t){return ne.handleRequest(t)}static registerSocketCalls(){z.registerCall(le.getDiceConfig,J.getDiceConfig),z.registerCall(le.receiveDiceConfig,J.receiveDiceConfig),z.registerCall(le.handleRollRequest,J.handleRollRequest)}}J.init();
//# sourceMappingURL=crlngn-roll-requests.js.map
