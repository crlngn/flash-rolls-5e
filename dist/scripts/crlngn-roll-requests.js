var Ae=Object.defineProperty;var be=u=>{throw TypeError(u)};var Oe=(u,t,e)=>t in u?Ae(u,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):u[t]=e;var y=(u,t,e)=>Oe(u,typeof t!="symbol"?t+"":t,e),Te=(u,t,e)=>t.has(u)||be("Cannot "+e);var Q=(u,t,e)=>(Te(u,t,"read from private field"),e?e.call(u):t.get(u)),Ce=(u,t,e)=>t.has(u)?be("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(u):t.set(u,e),_e=(u,t,e,s)=>(Te(u,t,"write to private field"),s?s.call(u,e):t.set(u,e),e);const Z={checkbox:"checkbox"},X={client:"client",world:"world"},O=()=>({debugMode:{tag:"debug-mode",label:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.hint"),propType:Boolean,inputType:Z.checkbox,default:!0,scope:X.client,config:!0},rollRequestsEnabled:{tag:"roll-requests-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.hint"),propType:Boolean,inputType:Z.checkbox,default:!0,scope:X.world,config:!0},skipDialogs:{tag:"skip-dialogs",label:game.i18n.localize("CRLNGN_ROLLS.settings.skipDialogs.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.skipDialogs.hint"),propType:Boolean,inputType:Z.checkbox,default:!1,scope:X.world,config:!0},useGMTargetTokens:{tag:"use-gm-target-tokens",label:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.hint"),propType:Boolean,inputType:Z.checkbox,default:!1,scope:X.world,config:!0},rollInterceptionEnabled:{tag:"roll-interception-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollInterceptionEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollInterceptionEnabled.hint"),propType:Boolean,inputType:Z.checkbox,default:!0,scope:X.world,config:!0},showOfflineNotifications:{tag:"show-offline-notifications",label:game.i18n.localize("CRLNGN_ROLLS.settings.showOfflineNotifications.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.showOfflineNotifications.hint"),propType:Boolean,inputType:Z.checkbox,default:!0,scope:X.world,config:!0}}),F="crlngn-roll-requests",ne=["%cFlash Rolls 5e","color:rgb(47, 151, 161); font-weight: bold;","|"],ge={receiveDiceConfig:"receiveDiceConfig",getDiceConfig:"getDiceConfig",handleRollRequest:"handleRollRequest"},n={ABILITY:"ability",ABILITY_CHECK:"abilitycheck",SAVE:"save",SAVING_THROW:"savingthrow",SKILL:"skill",TOOL:"tool",CONCENTRATION:"concentration",ATTACK:"attack",DAMAGE:"damage",INITIATIVE:"initiative",INITIATIVE_DIALOG:"initiativedialog",DEATH_SAVE:"deathsave",HIT_DIE:"hitdie",ITEM_SAVE:"itemSave",CUSTOM:"custom",HEALING:"healing",FORMULA:"formula"},De={ABILITY_CHECK:{name:n.ABILITY_CHECK,label:"Ability Check",subList:"abilities",actorPath:"system.abilities"},SAVING_THROW:{name:n.SAVING_THROW,label:"Saving Throw",subList:"abilities",actorPath:"system.abilities"},SKILL:{name:n.SKILL,label:"Skill Check",subList:"skills",actorPath:"system.skills"},TOOL:{name:n.TOOL,label:"Tool Check",subList:"tools",actorPath:"system.tools"},CONCENTRATION:{name:n.CONCENTRATION,label:"Concentration Check",subList:null,actorPath:""},INITIATIVE:{name:n.INITIATIVE_DIALOG,label:"Initiative Roll",subList:null,actorPath:""},DEATH_SAVE:{name:n.DEATH_SAVE,label:"Death Save",subList:null,actorPath:""},HIT_DIE:{name:n.HIT_DIE,label:"Hit Die",subList:null,actorPath:""},CUSTOM:{name:n.CUSTOM,label:"Custom Roll",subList:null,actorPath:""}},H={ID:F,ROLL_REQUEST_OPTIONS:De},ee={INIT:"init",READY:"ready",RENDER_SIDEBAR_TAB:"renderSidebarTab",USER_CONNECTED:"userConnected",PRE_CREATE_CHAT_MESSAGE:"preCreateChatMessage"},Ne={READY:"socketlib.ready"},q={PRE_ROLL_ABILITY_CHECK:"dnd5e.preRollAbilityCheckV2",PRE_ROLL_SAVING_THROW:"dnd5e.preRollSavingThrowV2",PRE_ROLL_DEATH_SAVE_V2:"dnd5e.preRollDeathSaveV2",PRE_ROLL_SKILL_V2:"dnd5e.preRollSkillV2",PRE_ROLL_TOOL_V2:"dnd5e.preRollToolV2",PRE_ROLL_HIT_DIE_V2:"dnd5e.preRollHitDieV2",PRE_ROLL_INITIATIVE_DIALOG_V2:"dnd5e.preRollInitiativeDialogV2",PRE_ROLL_INITIATIVE:"dnd5e.preRollInitiative",PRE_ROLL_ATTACK_V2:"dnd5e.preRollAttackV2",PRE_ROLL_DAMAGE_V2:"dnd5e.preRollDamageV2",POST_ROLL_CONFIG:"dnd5e.postRollConfiguration",RENDER_ROLL_CONFIGURATION_DIALOG:"renderRollConfigurationDialog"},se=class se{static log(t="",e=[],s=!1){try{const i=game.settings.get(F,"debug-mode")||se.debugOn;if(!(s||i))return;console.log(...ne,t,...e)}catch{(s||se.debugOn)&&console.log(...ne,t,...e)}}static warn(t="",e=[]){console.warn(...ne,t,...e)}static error(t,e={ui:!1,console:!0,permanent:!1}){var s;e.ui&&((s=ui.notifications)==null||s.error(t,{localize:!0,permanent:e.permanent})),e.console&&console.error(...ne,t)}static method(t,e){var o;const i=`${((o=t.constructor)==null?void 0:o.name)||t.name||"Unknown"}.${e}`;return(a="",r=[],l=!1)=>{const c=a?`${i} - ${a}`:i;this.log(c,r,l)}}static traced(t,e,s){return function(...i){return se.log(`${e}.${s}`,["called with args:",i]),t.apply(this,i)}}};y(se,"debugOn",!1);let d=se;const T=class T{static serializeForTransport(t,e=!1){return d.method(T,"serializeForTransport")("serializing for transport",[t,e]),t==null||e&&t.rolls&&Array.isArray(t.rolls)&&(t.rolls=t.rolls.map(i=>i instanceof Roll?i.toJSON():i)),t}static deserializeFromTransport(t,e=!1){d.method(T,"deserializeFromTransport")("deserializing from transport",[t,e]);let i={...t};if(!t)return i;if(e&&t.rolls&&t.rolls.length>0){const o=i.rolls.map(a=>{let r=a;return typeof a=="string"?r=Roll.fromJSON(a):r=Roll.fromJSON(JSON.stringify(a)),r});return i.rolls=[...o],i}return i}};y(T,"socket"),y(T,"_activeExecutions",new Map),y(T,"initialize",t=>{d.method(T,"initialize")("initializing socket",[t]),Hooks.once(Ne.READY,()=>{if(typeof socketlib>"u"){d.error("SocketUtil Error: socketlib is not loaded. Ensure it is installed and enabled."),ui.notifications.error(game.i18n.localize("CRLNGN_ROLLS.notifications.socketlibMissing"),{permanent:!0});return}try{T.socket=socketlib.registerModule(F),t&&t()}catch{}})}),y(T,"registerCall",(t,e)=>{d.method(T,"registerCall")("registering call",[t]),T.socket&&T.socket.register(t,e)}),y(T,"sendMessage",(t,e)=>{d.method(T,"sendMessage")("sending message",[t]),e&&e()}),y(T,"execForGMs",async(t,...e)=>{if(d.method(T,"execForGMs")("executing for GMs",[t,...e]),!!T.socket)return await T.socket.executeForAllGMs(t,...e)}),y(T,"execForAll",async(t,...e)=>{if(T.socket)return await T.socket.executeForEveryone(t,...e)}),y(T,"execForUser",async(t,e,...s)=>{if(d.method(T,"execForUser")("executing for user",[t,e,...s]),!T.socket)return;if(e===game.user.id)return null;const o=`${t}-${e}`;if(T._activeExecutions.has(o))return null;T._activeExecutions.set(o,!0);try{return await T.socket.executeAsUser(t,e,...s)}catch{return null}finally{T._activeExecutions.delete(o)}});let B=T;class K{static initialize(){this.setDiceConfig()}static setDiceConfig(){if(!game.user)return{};const t=game.settings.storage.get("client");return this.diceConfig=t["core.diceConfiguration"]||"",this.diceConfig}static getDiceConfig(){return game.user?(this.setDiceConfig(),game.user.isGM&&this._sendDiceConfigToGMs(),this.diceConfig):{}}static _sendDiceConfigToGMs(){B.execForGMs("receiveDiceConfig",game.user.id,this.diceConfig)}static receiveDiceConfig(t,e){var s,i;((s=game.user)!=null&&s.isGM||t===((i=game.user)==null?void 0:i.id))&&(this.playerDiceConfigs[t]=e?JSON.parse(e):{})}static getUserDiceConfig(t){var e;return t===((e=game.user)==null?void 0:e.id)?this.diceConfig:this.playerDiceConfigs[t]||{}}static requestDiceConfigFromUser(t){B.execForUser("getDiceConfig",t)}static requestDiceConfigFromAllPlayers(){var t;(t=game.user)!=null&&t.isGM&&game.users.forEach(e=>{e.active&&!e.isGM&&e.id!==game.user.id&&this.requestDiceConfigFromUser(e.id)})}static clearPlayerConfigs(){this.playerDiceConfigs={}}static hasUserConfig(t){var e;return t===((e=game.user)==null?void 0:e.id)?!!this.diceConfig:!!this.playerDiceConfigs[t]}}y(K,"diceConfig",{}),y(K,"playerDiceConfigs",{});class I{static registerSettings(){const t=O();Object.entries(t).forEach(async s=>{const i=s[1],o={name:i.label,hint:i.hint,default:i.default,type:i.propType,scope:i.scope,config:i.config,requiresReload:i.requiresReload||!1,onChange:a=>I.apply(i.tag,a)};i.choices&&(o.choices=i.choices),await game.settings.register(F,i.tag,o),(I.get(i.tag)===void 0||I.get(i.tag)===null)&&I.set(i.tag,i.default)})}static get(t,e=F){if(!t)return null;let s=!1;if(e===F)s=game.settings.get(e,t);else{let o=game.settings.storage.get("client")[`${e}.${t}`];o===void 0&&(o=game.settings.storage.get("world").getSetting(`${e}.${t}`),s=o==null?void 0:o.value)}return s}static set(t,e,s=F){if(!t)return!1;let i=game.settings.storage.get("client")[`${s}.${t}`];i||(i=game.settings.storage.get("world").getSetting(`${s}.${t}`));try{game.settings.set(s,t,e)}catch{}return!0}static apply(t,e){const s=O();switch(t){case s.rollRequestsEnabled.tag:I.applyRollRequestsEnabled(e);break}}static applyRollRequestsEnabled(t){const e=document.querySelector("#chat-controls .chat-control-icon.roll-requests-icon");e&&(t?e.classList.add("active"):e.classList.remove("active"))}}class ${static findActivityForRoll(t,e){var o;if(!((o=t==null?void 0:t.system)!=null&&o.activities))return null;const s=t.system.activities;switch(e==null?void 0:e.toLowerCase()){case n.ATTACK:const a=s.getByType("attack");return(a==null?void 0:a[0])||null;case n.DAMAGE:const r=s.getByType("attack");if((r==null?void 0:r.length)>0)return r[0];const l=s.getByType("damage");if((l==null?void 0:l.length)>0)return l[0];const c=s.getByType("save");return(c==null?void 0:c.length)>0?c[0]:null;case n.ITEM_SAVE:const g=s.getByType("save");return(g==null?void 0:g[0])||null;default:return null}}static getActivitiesByType(t,e){var s;return(s=t==null?void 0:t.system)!=null&&s.activities?t.system.activities.getByType(e):[]}static hasActivityForRoll(t,e){return d.method($,"hasActivityForRoll")("checking activity",[t,e]),!!this.findActivityForRoll(t,e)}static async executeActivityRoll(t,e,s,i,o){var g,h;d.method($,"executeActivityRoll")("executing activity roll",[t,e,s,i,o]);const r=t.items.get(s);if(!r)throw new Error(`Item ${s} not found on actor ${t.name}`);let l=null;i&&(l=(g=r.system.activities)==null?void 0:g.get(i)),l||(l=this.findActivityForRoll(r,e));const c=e==null?void 0:e.toLowerCase();if(l)switch(c){case n.ATTACK:const R={configure:!0};if(MidiQOL){await $.syntheticItemRoll(r,{...o});return}else return await l.use(usageConfig,R);case n.DAMAGE:if(MidiQOL){const p=(h=MidiQOL==null?void 0:MidiQOL.Workflow)==null?void 0:h.getWorkflow(l.uuid);await p.activity.rollDamage({...o,workflow:p});return}else return await l.rollDamage(o);case n.ITEM_SAVE:return await r.use({activity:l.id},{skipDialog:o.fastForward});default:throw new Error(`Unknown roll type: ${c}`)}else{switch(c){case n.ATTACK:if(r.rollAttack)return await r.rollAttack(o);break;case n.DAMAGE:if(r.rollDamage)return await r.rollDamage(o);break;case n.ITEM_SAVE:return await r.use({},{skipDialog:o.fastForward})}throw new Error(`No suitable method found for ${c} on item ${r.name}`)}}static getActivityDisplayInfo(t){return d.method($,"getActivityDisplayInfo")("getting activity display info",[t]),t?{name:t.name||t.constructor.metadata.label,type:t.type,icon:t.constructor.metadata.icon,canAttack:t.type==="attack",canDamage:["attack","damage","save"].includes(t.type),canSave:t.type==="save"}:null}static getDamageFormula(t){var i,o;if(d.method($,"getDamageFormula")("getting damage formula",[t]),!((o=(i=t==null?void 0:t.damage)==null?void 0:i.parts)!=null&&o.length))return null;const s=t.damage.parts.map(a=>a.formula).filter(a=>a);return s.length>0?s.join(" + "):null}static async syntheticItemRoll(t,e={}){d.method($,"syntheticItemRoll")("performing synthetic item roll",[t,e]);let i={consumeUsage:!1,consumeSpellSlot:!1},o={configureDialog:!0,workflowOptions:{autoRollAttack:!1,autoFastAttack:!1,autoRollDamage:"none",autoFastDamage:!1}};return e={...i,...e},await MidiQOL.completeItemUse(t,e,o)}static async replaceDamage(t,e,{ignoreCrit:s=!1,damageType:i}={}){e=String(e),t.isCritical&&!s&&(e=await rollUtils.getCriticalFormula(e,t.item.getRollData()));let o=await new CONFIG.Dice.DamageRoll(e).evaluate();return await t.setDamageRolls([o]),o}}class z extends dnd5e.applications.dice.D20RollConfigurationDialog{constructor(t={},e={},s={}){s.rollType=s.rollType||CONFIG.Dice.D20Roll,super(t,e,s),d.method(this,"constructor")("initializing GM Dialog",[t,e,s]),this.actors=s.actors||[],this.sendRequest=s.defaultSendRequest??s.sendRequest??!0,this.showDC=s.showDC||!1,this.dcValue=s.dcValue||null}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}_prepareConfigurationData(t,e,s,i){d.method(this,"_prepareConfigurationData")("preparing",[t,e,s,i]);const a=super._prepareConfigurationData(t,e,s,i);return a.showDC=this.showDC,a.dcValue=this.dcValue,a.sendRequest=this.sendRequest,a.actorCount=this.actors.length,a}async _preparePartContext(t,e,s){return d.method(this,"_preparePartContext")("preparing part context",[t,e,s]),e=await super._preparePartContext(t,e,s),t==="configuration"&&(e.showDC=this.showDC,e.dcValue=this.dcValue,e.sendRequest=this.sendRequest,e.actorCount=this.actors.length),e}async _onRender(t,e){var o,a,r;if(d.method(this,"_onRender")("rendering dialog",[t,e]),super._onRender(t,e),this.element.querySelector(".gm-roll-config-fields"))return;let i=this.element.querySelector(".rolls .formulas");if(i&&(this.showDC||this.actors.length>0)){const l={showDC:this.showDC,dcValue:this.dcValue,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},c=await renderTemplate(`modules/${F}/templates/gm-roll-config-fields.hbs`,l),g=document.createElement("div");g.className="gm-roll-config-fields",g.innerHTML=c,i.parentNode.insertBefore(g,i)}this._attachButtonListeners(),((r=(a=(o=this.config.rolls)==null?void 0:o[0])==null?void 0:a.data)!=null&&r.situational||this.config.situational)&&(d.log("GMRollConfigDialog._onRender",["Triggering rebuild for initial situational bonus"]),setTimeout(()=>{this.rebuild()},100))}_attachButtonListeners(){d.method(this,"_attachButtonListeners")("attaching button listeners"),this.element.querySelectorAll('[data-action="advantage"], [data-action="normal"], [data-action="disadvantage"]').forEach(s=>{s.addEventListener("click",i=>{i.currentTarget.dataset.action})})}_onChangeForm(t,e){d.method(this,"_onChangeForm")("form changed",[t,e]),super._onChangeForm(t,e);const i=this.element.querySelector('input[name="crlngn-send-request"]');i&&(this.sendRequest=i.checked);const o=this.element.querySelector('input[name="dc"]');o&&o.value&&(this.dcValue=parseInt(o.value)||null)}_buildConfig(t,e,s){d.method(this,"_buildConfig")("building config",[t,e,s]);const o=e==null?void 0:e.get("ability"),a=e==null?void 0:e.get("dc");o&&(t.ability=o,this.config.ability=o);const r=super._buildConfig(t,e,s);if(a){const l=parseInt(a);isNaN(l)||(r.options=r.options||{},r.options.target=l)}else this.dcValue!==void 0&&this.dcValue!==null&&(r.options=r.options||{},r.options.target=this.dcValue);return r}async _processSubmitData(t,e,s){if(d.method(this,"_processSubmitData")("processing submit",[t,e,s]),await super._processSubmitData(t,e,s),s.has("dc")&&s.get("dc")!==""){const o=parseInt(s.get("dc"));if(!isNaN(o)&&(this.dcValue=o,this.config.rolls&&this.config.rolls.length>0))for(const a of this.config.rolls)a.options.target=o}this.sendRequest=s.get("crlngn-send-request")!=="false"}_finalizeRolls(t){d.method(this,"_finalizeRolls")("finalizing rolls",[t]);const s=super._finalizeRolls(t);if(this.dcValue!==void 0&&this.dcValue!==null)for(const i of s)i.options.target=this.dcValue;return this.config.sendRequest=this.sendRequest,s}static async getConfiguration(t,e,s,i={}){var E,G,A,Y,W,M,U,x,ie,oe,S,me,pe,Re;d.method(z,"getConfiguration")("getting configuration",[t,e,s,i]),d.log("GMRollConfigDialog.getConfiguration - Detailed input",{actorNames:t.map(V=>V.name),rollType:e,rollKey:s,options:i,firstActorData:t[0]?{name:t[0].name,abilities:Object.keys(t[0].system.abilities||{}),skills:Object.keys(t[0].system.skills||{}),initAbility:(G=(E=t[0].system.attributes)==null?void 0:E.init)==null?void 0:G.ability}:null});const a=e==null?void 0:e.toLowerCase(),r=[n.SAVE,n.SAVING_THROW,n.ABILITY,n.ABILITY_CHECK,n.CONCENTRATION].includes(a),l=t[0];if(!l)return null;let c=CONFIG.Dice.D20Roll;[n.DAMAGE,n.HEALING].includes(a)?c=CONFIG.Dice.DamageRoll||CONFIG.Dice.BasicRoll:[n.FORMULA,n.CUSTOM,n.HIT_DIE].includes(a)&&(c=CONFIG.Dice.BasicRoll),c||(c=CONFIG.Dice.D20Roll);const g={data:l.getRollData(),subject:l,rolls:[{parts:[],data:l.getRollData(),options:{}}]};switch(a){case n.SKILL:g.skill=s;break;case n.SAVE:case n.SAVING_THROW:g.ability=s;break;case n.ABILITY:case n.ABILITY_CHECK:g.ability=s;break;case n.HIT_DIE:g.rolls[0].parts=[],g.rolls[0].options.flavor="Hit Die Roll";break}const h={create:!1,data:{speaker:ChatMessage.getSpeaker({actor:l})}},R={options:{actors:t,sendRequest:t.some(V=>this._isPlayerOwned(V)),showDC:r,rollKey:s,rollType:c,window:{title:z._getRollTitle(a,s,l),subtitle:t.map(V=>V.name).join(", ")},...i}},p=new this(g,h,R.options),m=await new Promise(V=>{p.addEventListener("close",()=>{V({rolls:p.rolls,config:p.config,message:p.message,sendRequest:p.sendRequest})},{once:!0}),p.render({force:!0})});if(!m.rolls||m.rolls.length===0)return null;const f=m.rolls[0];let b=!1,_=!1;((A=f==null?void 0:f.options)==null?void 0:A.advantageMode)!==void 0&&(b=f.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE,_=f.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE);const C={chatMessage:!0,isRollRequest:m.sendRequest,skipDialog:i.skipDialogs||!1,sendRequest:m.sendRequest};b&&(C.advantage=!0),_&&(C.disadvantage=!0);const L=game.settings.get("core","rollMode");m.message.rollMode&&m.message.rollMode!==L&&(C.rollMode=m.message.rollMode);let v=((Y=f==null?void 0:f.options)==null?void 0:Y.situational)||((W=f==null?void 0:f.data)==null?void 0:W.situational)||((U=(M=m.config)==null?void 0:M.data)==null?void 0:U.situational)||"";if(!v&&((x=f==null?void 0:f.parts)==null?void 0:x.length)>0&&f.parts.find(Se=>Se.includes("@situational"))&&(ie=f.data)!=null&&ie.situational&&(v=f.data.situational),v&&(C.situational=v,C.parts=["@situational"]),(oe=f==null?void 0:f.options)!=null&&oe.target&&(C.target=f.options.target),m.config.ability&&[n.SKILL,n.TOOL].includes(a)){const V=((me=(S=l.system.skills)==null?void 0:S[s])==null?void 0:me.ability)||((Re=(pe=CONFIG.DND5E.skills)==null?void 0:pe[s])==null?void 0:Re.ability);m.config.ability!==V&&(C.ability=m.config.ability)}return C.rollTitle=R.options.window.title,C}static _isPlayerOwned(t){return d.method(z,"_isPlayerOwned")("checking ownership",[t]),Object.entries(t.ownership).some(([s,i])=>{const o=game.users.get(s);return o&&!o.isGM&&i>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})}static _getRollTitle(t,e,s){var r,l,c,g,h,R,p,m,f,b,_,C,L;d.method(z,"_getRollTitle")("getting title",[t,e,s]),d.log("GMRollConfigDialog._getRollTitle - Detailed",{rollType:t,rollKey:e,actorName:s==null?void 0:s.name,actorAbilities:(r=s==null?void 0:s.system)!=null&&r.abilities?Object.keys(s.system.abilities):[],actorSkills:(l=s==null?void 0:s.system)!=null&&l.skills?Object.keys(s.system.skills):[],actorInitAbility:(h=(g=(c=s==null?void 0:s.system)==null?void 0:c.attributes)==null?void 0:g.init)==null?void 0:h.ability});let o="";const a=t==null?void 0:t.toLowerCase();switch([n.SAVE,n.ABILITY,n.ABILITY_CHECK].includes(a)&&!e&&d.warn("Missing rollKey for roll type",[a,e]),a){case n.SKILL:const v=((R=CONFIG.DND5E.skills[e])==null?void 0:R.label)||e,E=(p=s==null?void 0:s.system.skills)==null?void 0:p[e],G=(E==null?void 0:E.ability)||((m=CONFIG.DND5E.skills[e])==null?void 0:m.ability)||"int",A=((f=CONFIG.DND5E.abilities[G])==null?void 0:f.label)||G;o=game.i18n.format("DND5E.SkillPromptTitle",{skill:v,ability:A});break;case n.SAVE:case n.SAVING_THROW:const Y=((b=CONFIG.DND5E.abilities[e])==null?void 0:b.label)||e;o=game.i18n.format("DND5E.SavePromptTitle",{ability:Y});break;case n.ABILITY:case n.ABILITY_CHECK:const W=((_=CONFIG.DND5E.abilities[e])==null?void 0:_.label)||e;o=game.i18n.format("DND5E.AbilityPromptTitle",{ability:W});break;case n.CONCENTRATION:o=game.i18n.localize("DND5E.Concentration");break;case n.TOOL:const M=(L=(C=CONFIG.DND5E.enrichmentLookup)==null?void 0:C.tools)==null?void 0:L[e];let U=e;if(M!=null&&M.id){const x=dnd5e.documents.Trait.getBaseItem(M.id,{indexOnly:!0});U=(x==null?void 0:x.name)||e}o=game.i18n.format("DND5E.ToolPromptTitle",{tool:U});break;case n.DEATH_SAVE:o=game.i18n.localize("DND5E.DeathSave");break;case n.INITIATIVE:case n.INITIATIVE_DIALOG:o=game.i18n.localize("DND5E.Initiative");break;default:o=game.i18n.localize("DND5E.Roll")}return d.log("_getRollTitle",[a,o]),o}}class ue extends dnd5e.applications.dice.RollConfigurationDialog{constructor(t={},e={},s={}){s.rollType=CONFIG.Dice.BasicRoll||Roll,super(t,e,s),d.method(this,"constructor")("initializing hit die dialog",[t,e,s]),this.actors=s.actors||[],this.sendRequest=s.defaultSendRequest??s.sendRequest??!0,this.showDC=!1}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config","hit-die-config"]})}_prepareConfigurationData(t,e,s,i){d.method(this,"_prepareConfigurationData")("preparing hit die config",[t,e,s,i]);const a=super._prepareConfigurationData(t,e,s,i);return a.formula="Hit Die (varies by actor)",a.sendRequest=this.sendRequest,a.actorCount=this.actors.length,a}async _preparePartContext(t,e,s){return e=await super._preparePartContext(t,e,s),t==="configuration"&&(e.sendRequest=this.sendRequest,e.actorCount=this.actors.length,e.formula="Hit Die (varies by actor)"),e}async _onRender(t,e){if(super._onRender(t,e),this.element.querySelector(".gm-roll-config-fields"))return;let s=this.element.querySelector(".rolls .formulas");if(s&&this.actors.length>0){const i={showDC:!1,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},o=await renderTemplate(`modules/${F}/templates/gm-roll-config-fields.hbs`,i),a=document.createElement("div");a.className="gm-roll-config-fields",a.innerHTML=o,s.parentNode.insertBefore(a,s)}}_onChangeForm(t,e){super._onChangeForm(t,e);const s=this.element.querySelector('input[name="crlngn-send-request"]');s&&(this.sendRequest=s.checked)}async _processSubmitData(t,e,s){await super._processSubmitData(t,e,s),this.sendRequest=s.get("crlngn-send-request")!=="false"}_finalizeRolls(t){const e=super._finalizeRolls(t);return this.config.sendRequest=this.sendRequest,e}static async getConfiguration(t,e,s,i={}){var b,_;d.method(ue,"getConfiguration")("getting hit die configuration",[t,e,s,i]);const a=t[0];if(!a)return null;const r={data:a.getRollData(),subject:a,rolls:[{parts:[],data:a.getRollData(),options:{flavor:"Hit Die Roll"}}]},l={create:!1,data:{speaker:ChatMessage.getSpeaker({actor:a})}},c={options:{actors:t,sendRequest:t.some(C=>z._isPlayerOwned(C)),rollKey:s,rollType:CONFIG.Dice.BasicRoll||Roll,window:{title:game.i18n.localize("DND5E.HitDice"),subtitle:t.map(C=>C.name).join(", ")},...i}},g=new this(r,l,c.options),h=await new Promise(C=>{g.addEventListener("close",()=>{C({rolls:g.rolls,config:g.config,message:g.message,sendRequest:g.sendRequest})},{once:!0}),g.render({force:!0})});if(!h.rolls||h.rolls.length===0)return null;const R={chatMessage:!0,isRollRequest:h.sendRequest,skipDialog:i.skipDialogs||!1,sendRequest:h.sendRequest},p=game.settings.get("core","rollMode");h.message.rollMode&&h.message.rollMode!==p&&(R.rollMode=h.message.rollMode);const m=h.rolls[0],f=((b=m==null?void 0:m.options)==null?void 0:b.situational)||((_=m==null?void 0:m.data)==null?void 0:_.situational)||"";return f&&(R.situational=f,R.parts=["@situational"]),R}}class de extends dnd5e.applications.dice.SkillToolRollConfigurationDialog{constructor(t={},e={},s={}){const i=foundry.utils.mergeObject(t,{chooseAbility:!0});s.rollType=s.rollType||CONFIG.Dice.D20Roll,super(i,e,s),d.method(this,"constructor")("initializing skill/tool dialog",[t,e,s]),this.actors=s.actors||[],this.sendRequest=s.defaultSendRequest??s.sendRequest??!0,this.showDC=s.showDC||!1,this.dcValue=s.dcValue||null}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}_prepareConfigurationData(t,e,s,i){d.method(this,"_prepareConfigurationData")("preparing skill/tool config data",[t,e,s,i]);const a=super._prepareConfigurationData(t,e,s,i);return a.showDC=this.showDC,a.dcValue=this.dcValue,a.sendRequest=this.sendRequest,a.actorCount=this.actors.length,a}async _preparePartContext(t,e,s){return d.method(this,"_preparePartContext")("preparing part context",[t,e,s]),e=await super._preparePartContext(t,e,s),t==="configuration"&&(e.showDC=this.showDC,e.dcValue=this.dcValue,e.sendRequest=this.sendRequest,e.actorCount=this.actors.length),e}async _onRender(t,e){var o,a,r;if(d.method(this,"_onRender")("rendering dialog",[t,e]),super._onRender(t,e),this.element.querySelector(".gm-roll-config-fields"))return;let i=this.element.querySelector(".rolls .formulas");if(i&&(this.showDC||this.actors.length>0)){const l={showDC:this.showDC,dcValue:this.dcValue,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},c=await renderTemplate(`modules/${F}/templates/gm-roll-config-fields.hbs`,l),g=document.createElement("div");g.className="gm-roll-config-fields",g.innerHTML=c,i.parentNode.insertBefore(g,i)}this._attachButtonListeners(),((r=(a=(o=this.config.rolls)==null?void 0:o[0])==null?void 0:a.data)!=null&&r.situational||this.config.situational)&&setTimeout(()=>{this.rebuild()},100)}_attachButtonListeners(){d.method(this,"_attachButtonListeners")("attaching button listeners"),this.element.querySelectorAll('[data-action="advantage"], [data-action="normal"], [data-action="disadvantage"]').forEach(s=>{s.addEventListener("click",i=>{i.currentTarget.dataset.action})})}_onChangeForm(t,e){var a,r;d.method(this,"_onChangeForm")("skill/tool form changed",[t,e]),super._onChangeForm(t,e);const i=this.element.querySelector('input[name="crlngn-send-request"]');i&&(this.sendRequest=i.checked);const o=this.element.querySelector('input[name="dc"]');o&&o.value&&(this.dcValue=parseInt(o.value)||null),((a=e.target)==null?void 0:a.name)==="ability"&&((r=e.target)!=null&&r.value)&&(this.config.ability=e.target.value)}_buildConfig(t,e,s){d.method(this,"_buildConfig")("building skill/tool config",[t,e,s]);const o=e==null?void 0:e.get("ability"),a=e==null?void 0:e.get("dc");o&&(t.ability=o,this.config.ability=o);const r=super._buildConfig(t,e,s);if(a){const l=parseInt(a);isNaN(l)||(r.options=r.options||{},r.options.target=l)}else this.dcValue!==void 0&&this.dcValue!==null&&(r.options=r.options||{},r.options.target=this.dcValue);return r}async _processSubmitData(t,e,s){if(d.method(this,"_processSubmitData")("processing skill/tool submit",[t,e,s]),await super._processSubmitData(t,e,s),s.has("dc")&&s.get("dc")!==""){const o=parseInt(s.get("dc"));if(!isNaN(o)&&(this.dcValue=o,this.config.rolls&&this.config.rolls.length>0))for(const a of this.config.rolls)a.options.target=o}this.sendRequest=s.get("crlngn-send-request")!=="false"}_finalizeRolls(t){d.method(this,"_finalizeRolls")("finalizing skill/tool rolls",[t]);const s=super._finalizeRolls(t);if(this.dcValue!==void 0&&this.dcValue!==null)for(const i of s)i.options.target=this.dcValue;return this.config.sendRequest=this.sendRequest,s}static async getConfiguration(t,e,s,i={}){var G,A,Y,W,M,U,x,ie,oe;d.method(de,"getConfiguration")("getting skill/tool configuration",[t,e,s,i]);const a=e==null?void 0:e.toLowerCase(),r=[n.SKILL,n.TOOL].includes(a),l=t[0];if(!l)return null;const c=CONFIG.Dice.D20Roll;let g=null;if(a===n.SKILL){const S=l.system.skills[s];g=(S==null?void 0:S.ability)||((G=CONFIG.DND5E.skills[s])==null?void 0:G.ability)||"int"}else if(a===n.TOOL){const S=(A=l.system.tools)==null?void 0:A[s];g=(S==null?void 0:S.ability)||((M=(W=(Y=CONFIG.DND5E.enrichmentLookup)==null?void 0:Y.tools)==null?void 0:W[s])==null?void 0:M.ability)||"int"}const h={data:l.getRollData(),subject:l,ability:g,chooseAbility:!0,rolls:[{parts:[],data:l.getRollData(),options:{}}]};a===n.SKILL?h.skill=s:a===n.TOOL&&(h.tool=s);const R={create:!1,data:{speaker:ChatMessage.getSpeaker({actor:l})}},p={options:{actors:t,sendRequest:t.some(S=>z._isPlayerOwned(S)),showDC:r,rollKey:s,rollType:c,window:{title:z._getRollTitle(a,s,l),subtitle:t.map(S=>S.name).join(", ")},...i}},m=new this(h,R,p.options),f=await new Promise(S=>{m.addEventListener("close",()=>{S({rolls:m.rolls,config:m.config,message:m.message,sendRequest:m.sendRequest})},{once:!0}),m.render({force:!0})});if(!f.rolls||f.rolls.length===0)return null;const b=f.rolls[0];let _=!1,C=!1;((U=b==null?void 0:b.options)==null?void 0:U.advantageMode)!==void 0&&(_=b.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE,C=b.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE);const L={chatMessage:!0,isRollRequest:f.sendRequest,skipDialog:i.skipDialogs||!1,sendRequest:f.sendRequest};_&&(L.advantage=!0),C&&(L.disadvantage=!0);const v=game.settings.get("core","rollMode");f.message.rollMode&&f.message.rollMode!==v&&(L.rollMode=f.message.rollMode);const E=((x=b==null?void 0:b.options)==null?void 0:x.situational)||((ie=b==null?void 0:b.data)==null?void 0:ie.situational)||"";return E&&(L.situational=E,L.parts=[E]),(oe=b==null?void 0:b.options)!=null&&oe.target&&(L.target=b.options.target),f.config.ability&&[n.SKILL,n.TOOL].includes(a)&&(L.ability=f.config.ability),L.rollTitle=p.options.window.title,L}}const w=class w{static initialize(){d.method(w,"initialize")("initializing"),game.user.isGM&&this.registerHooks()}static registerHooks(){d.method(w,"registerHooks")("registering hooks"),this._registerHook(q.PRE_ROLL_ABILITY_CHECK,this._handlePreRoll.bind(this,n.ABILITY)),this._registerHook(q.PRE_ROLL_SAVING_THROW,this._handlePreRoll.bind(this,n.SAVE)),this._registerHook(q.PRE_ROLL_SKILL_V2,this._handlePreRoll.bind(this,n.SKILL)),this._registerHook(q.PRE_ROLL_TOOL_V2,this._handlePreRoll.bind(this,n.TOOL)),this._registerHook(q.PRE_ROLL_ATTACK_V2,this._handlePreRoll.bind(this,n.ATTACK)),this._registerHook(q.PRE_ROLL_DAMAGE_V2,this._handlePreRoll.bind(this,n.DAMAGE)),this._registerHook(q.PRE_ROLL_INITIATIVE,this._handlePreRoll.bind(this,n.INITIATIVE)),this._registerHook(q.PRE_ROLL_INITIATIVE_DIALOG_V2,this._handlePreRoll.bind(this,n.INITIATIVE)),this._registerHook(q.PRE_ROLL_DEATH_SAVE_V2,this._handlePreRoll.bind(this,n.DEATH_SAVE)),this._registerHook(q.PRE_ROLL_HIT_DIE_V2,this._handlePreRoll.bind(this,n.HIT_DIE))}static _registerHook(t,e){d.method(w,"_registerHook")("registering hook",[t]);const i=Hooks.on(t,e);this.registeredHooks.add({hookName:t,hookId:i})}static unregisterHooks(){d.method(w,"unregisterHooks")("unregistering all hooks");for(const{hookName:e,hookId:s}of this.registeredHooks)Hooks.off(e,s);this.registeredHooks.clear()}static _handlePreRoll(t,e,s,i){var p,m;if(d.method(w,"_handlePreRoll")("handling pre-roll",[t,e,s,i]),(t===n.INITIATIVE||t===n.ABILITY)&&d.log("RollInterceptor._handlePreRoll - Initiative/Ability Debug",{rollType:t,configType:(p=e==null?void 0:e.constructor)==null?void 0:p.name,configAbility:e==null?void 0:e.ability,configSubject:e==null?void 0:e.subject,isActor:e instanceof Actor,configKeys:e?Object.keys(e):[]}),!game.user.isGM)return;const a=(e==null?void 0:e.hookNames)||(s==null?void 0:s.hookNames)||(i==null?void 0:i.hookNames)||[];(a.includes("initiativeDialog")||a.includes("initiative"))&&t===n.ABILITY&&(d.log("RollInterceptor._handlePreRoll - Overriding ability to initiative",{hookNames:a}),t=n.INITIATIVE);let l;if(t===n.INITIATIVE&&e instanceof Actor)l=e;else{if(e!=null&&e.isRollRequest||s!=null&&s.isRollRequest||i!=null&&i.isRollRequest)return;l=((m=e.subject)==null?void 0:m.actor)||e.subject||e.actor}const c=O(),g=I.get(c.rollInterceptionEnabled.tag),h=I.get(c.rollRequestsEnabled.tag);if(!g||!h||!l||l.documentName!=="Actor")return;const R=this._getActorOwner(l);if(!(!R||R.id===game.user.id)&&R.active)return this._showGMConfigDialog(l,R,t,e,s,i),!1}static async _showGMConfigDialog(t,e,s,i,o,a){var l,c,g,h,R,p,m;d.method(w,"_showGMConfigDialog")("showing GM config dialog",[t,e,s,i,o,a]),d.log("RollInterceptor._showGMConfigDialog - Detailed config",{rollType:s,configAbility:i==null?void 0:i.ability,configSubject:i==null?void 0:i.subject,configSubjectAbility:(l=i==null?void 0:i.subject)==null?void 0:l.ability,configSkill:i==null?void 0:i.skill,configTool:i==null?void 0:i.tool,fullConfig:i});try{const f=s==null?void 0:s.toLowerCase();let b;[n.SKILL,n.TOOL].includes(f)?b=de:f===n.HIT_DIE?b=ue:b=z;let _={rolls:[{parts:[],data:{},options:{}}]};switch(f){case n.ABILITY:_.ability=i.ability||((c=i.subject)==null?void 0:c.ability);break;case n.SAVE:_.ability=i.ability||((g=i.subject)==null?void 0:g.ability),i.ability==="con"&&i.targetValue!==void 0&&(s=n.CONCENTRATION);break;case n.SKILL:_.skill=i.skill,_.ability=i.ability;break;case n.TOOL:_.tool=i.tool,_.ability=i.ability;break;case n.CONCENTRATION:_.ability="con";break;case n.INITIATIVE:break;case n.HIT_DIE:_.denomination=i.denomination||((h=i.subject)==null?void 0:h.denomination);break}const C=O(),L=I.get(C.skipDialogs.tag),v={actors:[t],rollType:f,showDC:!0,defaultSendRequest:!0,skipDialogs:L};let E;if(L)E={sendRequest:!0,advantage:!1,disadvantage:!1,situational:"",rollMode:game.settings.get("core","rollMode")};else{let A=null;switch(f){case n.SKILL:A=i.skill;break;case n.TOOL:A=i.tool;break;case n.ABILITY:case n.SAVE:A=i.ability||((R=i.subject)==null?void 0:R.ability);break;case n.CONCENTRATION:A="con";break;case n.INITIATIVE:A=((m=(p=t.system.attributes)==null?void 0:p.init)==null?void 0:m.ability)||"dex";break}d.log("RollInterceptor._showGMConfigDialog - Calling getConfiguration",{actor:t.name,normalizedRollType:f,rollKey:A,config:i,DialogClass:b.name}),E=await b.getConfiguration([t],f,A,{skipDialogs:!1,defaultSendRequest:!0})}if(!E){d.log("RollInterceptor._showGMConfigDialog - Dialog cancelled");return}if(d.log("RollInterceptor._showGMConfigDialog - Dialog result",{sendRequest:E.sendRequest,rollType:f,result:E}),!E.sendRequest){await this._executeLocalRoll(t,s,i,E);return}const G={...i,...E,requestedBy:game.user.name};this._sendRollRequest(t,e,s,G)}catch{this._sendRollRequest(t,e,s,i)}}static async _executeLocalRoll(t,e,s,i){d.method(w,"_executeLocalRoll")("executing local roll",[t,e,s,i]);const a=e==null?void 0:e.toLowerCase(),r={...s,advantage:i.advantage||s.advantage,disadvantage:i.disadvantage||s.disadvantage,target:i.dc||s.target,rollMode:i.rollMode||s.rollMode,isRollRequest:!1},l={configure:!1,isRollRequest:!1},c={rollMode:r.rollMode,create:!0,isRollRequest:!1};try{switch(a){case n.SAVE:await t.rollSavingThrow(s.ability,r,l,c);break;case n.ABILITY:await t.rollAbilityCheck(s.ability,r,l,c);break;case n.SKILL:await t.rollSkill(s.skill,r,l,c);break;case n.TOOL:await t.rollToolCheck(s.tool,r,l,c);break;case n.CONCENTRATION:await t.rollConcentration(r,l,c);break;case n.INITIATIVE:await t.rollInitiative(r,l,c);break;case n.DEATH_SAVE:await t.rollDeathSave(r,l,c);break;case n.HIT_DIE:await t.rollHitDie(s.denomination,r,l,c);break}}catch{}}static async _showConfigurationDialog(t,e,s,i,o,a){d.method(w,"_showConfigurationDialog")("showing configuration dialog",[t,e,s,i,o,a]);try{const c={...i,_rollMethod:async p=>(this._sendRollRequest(t,e,s,p),new Roll("1d20").evaluate({async:!1})),configured:!1},g=o.cls,R=await new g(c,o.options).render(!0)}catch{this._sendRollRequest(t,e,s,i)}}static _getActorOwner(t){d.method(w,"_getActorOwner")("getting actor owner",[t]);const s=t.ownership||{};for(const[i,o]of Object.entries(s))if(o>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const a=game.users.get(i);if(a&&!a.isGM)return a}return null}static _sendRollRequest(t,e,s,i){var p;d.method(w,"_sendRollRequest")("sending roll request",[t,e,s,i]);const a=O(),r=I.get(a.skipDialogs.tag);let l=s==null?void 0:s.toLowerCase();l===n.INITIATIVE&&(l=n.INITIATIVE_DIALOG);let c=null,g=null;switch(l){case n.ABILITY:case n.SAVE:c=i.ability;break;case n.SKILL:c=i.skill;break;case n.TOOL:c=i.tool;break;case n.ATTACK:case n.DAMAGE:if((p=i.subject)!=null&&p.item){c=i.subject.item.id;const m=$.findActivityForRoll(i.subject.item,s);m&&(g=m.id)}break;case n.HIT_DIE:c=i.denomination;break;case n.INITIATIVE_DIALOG:case n.INITIATIVE:c=null;break;case n.DEATH_SAVE:c=null;break;default:d.warn(`Unknown roll type: ${s}`);return}const h={advantage:i.advantage||!1,disadvantage:i.disadvantage||!1,situational:i.situational||0,parts:i.parts||[],rollMode:i.rollMode||game.settings.get("core","rollMode"),elvenAccuracy:i.elvenAccuracy||!1,halflingLucky:i.halflingLucky||!1,reliableTalent:i.reliableTalent||!1,minimum:i.minimum,maximize:i.maximize,critical:i.critical,fumble:i.fumble,targetValue:i.targetValue,fastForward:i.fastForward||!1,chatMessage:i.chatMessage!==!1,flavor:i.flavor,title:i.title,dialogOptions:i.dialogOptions,messageData:i.messageData,ability:i.ability,denomination:i.denomination,requestedBy:i.requestedBy||game.user.name};Object.keys(h).forEach(m=>{h[m]===void 0&&delete h[m]});const R={type:"rollRequest",requestId:foundry.utils.randomID(),actorId:t.id,rollType:l,rollKey:c,activityId:g,config:h,skipDialog:r,targetTokenIds:Array.from(game.user.targets).map(m=>m.id),preserveTargets:I.get(a.useGMTargetTokens.tag)};l===n.HIT_DIE&&d.log("RollInterceptor._sendRollRequest - Hit Die Debug",{actor:t.name,owner:e.name,rollType:l,rollKey:c,requestData:R}),B.execForUser("handleRollRequest",e.id,R),ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestSent",{player:e.name,actor:t.name}))}};y(w,"registeredHooks",new Set);let he=w;function Le(u,t){var i,o,a,r,l;let e=game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${u}`)||u;const s=u==null?void 0:u.toLowerCase();if(t)switch(s){case n.SKILL:e+=` (${((i=CONFIG.DND5E.skills[t])==null?void 0:i.label)||t})`;break;case n.SAVE:e+=` (${((o=CONFIG.DND5E.abilities[t])==null?void 0:o.label)||t})`;break;case n.ABILITY:e+=` (${((a=CONFIG.DND5E.abilities[t])==null?void 0:a.label)||t})`;break;case n.TOOL:const c=(l=(r=CONFIG.DND5E.enrichmentLookup)==null?void 0:r.tools)==null?void 0:l[t];if(c!=null&&c.id){const g=dnd5e.documents.Trait.getBaseItem(c.id,{indexOnly:!0});e+=` (${(g==null?void 0:g.name)||t})`}else e+=` (${t})`;break;case n.CUSTOM:e=`${e}: ${t}`;break}return e}function we(u,t=Le){if(u.length===0)return;const e={};for(const i of u){const o=`${i.rollType}_${i.rollKey||""}`;e[o]||(e[o]={rollType:i.rollType,rollKey:i.rollKey,actors:[],gm:i.gm}),e[o].actors.push(i.actor)}const s=Object.values(e);if(s.length===1&&s[0].actors.length===1){const i=s[0];ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestReceived",{gm:i.gm,rollType:t(i.rollType,i.rollKey)}))}else{const i=[];for(const o of s){const a=t(o.rollType,o.rollKey),r=o.actors.join(", ");i.push(`${a} (${r})`)}ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsReceivedMultiple",{gm:s[0].gm,requests:i.join("; ")}))}}function ve(u){const t=u.ownership||{};for(const[e,s]of Object.entries(t))if(s>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const i=game.users.get(e);if(i&&!i.isGM)return i}return null}function qe(u,t=game.user){if(!(u!=null&&u.length))return;u.map(s=>canvas.tokens.get(s)).filter(s=>s).forEach(s=>s.setTarget(!0,{user:t}))}function le(u){return u.type!=="character"&&u.type!=="npc"?!1:Object.entries(u.ownership).some(([t,e])=>{const s=game.users.get(t);return s&&!s.isGM&&e>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})}function ye(u){if(u.type!=="character"&&u.type!=="npc")return!1;const t=game.scenes.active;return t&&t.tokens.some(e=>e.actorId===u.id)}function re(u,t){if(!game.scenes.active)return;const s=canvas.tokens.placeables.filter(i=>{var o;return((o=i.actor)==null?void 0:o.id)===u});for(const i of s)t?i.control({releaseOthers:!1}):i.release()}function Ie(u){return new Promise(t=>setTimeout(t,u))}function Ge(){var u;return!((u=ui==null?void 0:ui.sidebar)!=null&&u._collapsed)}function Me(u){const t=document.querySelector("body");u?t.classList.add("sidebar-expanded"):t.classList.remove("sidebar-expanded")}function Ve(u,t){var a;const e=[];if(!u||t.size===0)return e;const s=H.ROLL_REQUEST_OPTIONS[u];if(!s||!s.subList)return e;const i=Array.from(t)[0],o=game.actors.get(i);if(s.subList==="tools"){const r=((a=CONFIG.DND5E.enrichmentLookup)==null?void 0:a.tools)||CONFIG.DND5E.tools||{};for(const[l,c]of Object.entries(r)){let g=l;if(c!=null&&c.id){const h=dnd5e.documents.Trait.getBaseItem(c.id,{indexOnly:!0});g=(h==null?void 0:h.name)||l}else g=l.replace(/([A-Z])/g," $1").replace(/^./,h=>h.toUpperCase()).trim();e.push({id:l,name:g,rollable:!0})}e.sort((l,c)=>l.name.localeCompare(c.name))}else if(o&&s.actorPath){const r=foundry.utils.getProperty(o,s.actorPath)||{},l=CONFIG.DND5E[s.subList];for(const[c,g]of Object.entries(r)){let h="";s.subList==="skills"&&(l!=null&&l[c])||s.subList==="abilities"&&(l!=null&&l[c])?h=l[c].label:h=g.label||game.i18n.localize(g.name||c)||c,e.push({id:c,name:h,rollable:!0})}s.subList==="skills"&&e.sort((c,g)=>c.name.localeCompare(g.name))}return e}const k=class k{static notify(t,e,s={}){if(!s.batch){ui.notifications[t](e);return}s.batchData&&(k.pendingNotifications.push(s.batchData),k.notificationTimer&&clearTimeout(k.notificationTimer),k.notificationTimer=setTimeout(()=>{we(k.pendingNotifications),k.pendingNotifications=[],k.notificationTimer=null},k.NOTIFICATION_BATCH_DELAY))}static notifyRollRequestsSent(t,e){const s=Object.entries(t);if(s.length!==0)if(s.length===1){const i=Object.values(t)[0],o=i.actors.map(a=>a.name).join(", ");ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsSentSingle",{rollType:e,actors:o,player:i.player.name}))}else{const i=s.map(([o,a])=>{const r=a.actors.map(l=>l.name).join(", ");return`${a.player.name} (${r})`});ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsSentMultiple",{rollType:e,count:s.length,players:i.join("; ")}))}}static clearPending(){k.notificationTimer&&(clearTimeout(k.notificationTimer),k.notificationTimer=null),k.pendingNotifications=[]}};y(k,"pendingNotifications",[]),y(k,"notificationTimer",null),y(k,"NOTIFICATION_BATCH_DELAY",500);let D=k;function He(u){var s;const t=[],e=[];for(const i of u){const o=((s=i.system.attributes.hp)==null?void 0:s.value)||0,a=i.system.attributes.death||{},r=a.success||0,l=a.failure||0;o<=0&&r<3&&l<3?t.push(i):e.push(i.name)}return e.length>0&&D.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.actorsSkippingDeathSave",{actors:e.join(", ")})),t}function Pe(u){const t=[],e=[];for(const s of u){const i=ve(s);i?t.push({actor:s,owner:i}):e.push(s)}return{pcActors:t,npcActors:e}}class ce extends foundry.applications.api.HandlebarsApplicationMixin(foundry.applications.api.ApplicationV2){constructor(t={}){super(t),this.formula=t.formula||"",this.readonly=t.readonly||!1,this.actor=t.actor,this.callback=t.callback,this.diceCounts={}}_onClickAction(t,e){switch(e.dataset.action){case"rollDice":return this.rollDice(t,e);case"addDie":return this.addDie(t,e);case"cancel":return this.cancel(t,e)}}async _prepareContext(t={}){return{...await super._prepareContext(t),formula:this.formula,readonly:this.readonly}}_attachPartListeners(t,e,s){super._attachPartListeners(t,e,s);const i=e.querySelector("#custom-roll-formula"),o=e.querySelector("#formula-validation-message");i&&!this.readonly&&(i.addEventListener("input",a=>{this.formula=a.target.value.trim(),this.updateValidationMessage(o)}),this.formula&&this.updateValidationMessage(o))}updateValidationMessage(t){if(!t)return;if(!this.formula){t.textContent="&nbsp;",t.classList.remove("error","success");return}this.validateFormula(this.formula)?(t.textContent=game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.formulaValid"),t.classList.remove("error"),t.classList.add("success")):(t.textContent=game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.formulaInvalid"),t.classList.remove("success"),t.classList.add("error"))}addDie(t,e){const s=e.dataset.die,i=this.element.querySelector("#custom-roll-formula");if(!i)return;const o=i.value.trim();if(o){const a=/(\d*)d(\d+)/g,r=new Map;let l=o,c;for(;(c=a.exec(o))!==null;){const R=parseInt(c[1]||"1"),p=c[2];r.set(p,(r.get(p)||0)+R),l=l.replace(c[0],"").trim()}const g=s.substring(1);r.set(g,(r.get(g)||0)+1);const h=[];for(const[R,p]of r)h.push(`${p}d${R}`);l=l.replace(/^\+\s*|\s*\+\s*$|\s*\+\s*\+/g,"").trim(),l&&l!=="+"?this.formula=`${h.join(" + ")} + ${l}`:this.formula=h.join(" + ")}else this.formula=`1${s}`;i.value=this.formula,i.dispatchEvent(new Event("input"))}validateFormula(t){var e;if(!t||t.trim()==="")return!1;try{return Roll.validate(t)}catch{try{return new Roll(t,((e=this.actor)==null?void 0:e.getRollData())||{}),!0}catch{return!1}}}async rollDice(){if(d.method(this,"rollDice"),!this.validateFormula(this.formula)){ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:this.formula||"empty"}));return}this.callback&&await this.callback(this.formula),this.close()}cancel(){this.close()}static async prompt(t={}){return new Promise(e=>{const s=new this({...t,callback:i=>e(i)});s.addEventListener("close",()=>{s._resolved||e(null)}),s.render(!0)})}async close(t={}){return this._resolved=!0,super.close(t)}}y(ce,"DEFAULT_OPTIONS",{id:"crlngn-custom-roll-dialog",classes:["crlngn-rolls-dialog","crlngn-custom-roll-dialog"],tag:"div",window:{title:"CRLNGN_ROLLS.ui.dialogs.customRollTitle",icon:"fas fa-dice-d20",resizable:!1,positioned:!0,frame:!0},position:{width:400,height:"auto"}}),y(ce,"PARTS",{main:{template:`modules/${H.ID}/templates/custom-roll-dialog.hbs`},footer:{template:`modules/${H.ID}/templates/custom-roll-dialog-footer.hbs`}});const N={addSituationalBonus(u,t){return t&&(d.log("Flash Rolls 5e | Adding situational bonus:",[t,"to config:",u]),u.situational=t,(!u.rolls||u.rolls.length===0)&&(u.rolls=[{parts:[],data:{},options:{}}],u.rolls[0].data.situational=t),d.log("Flash Rolls 5e | Config after adding bonus:",[u])),u},buildAbilityConfig(u,t){return{ability:u.rollKey,advantage:u.config.advantage||!1,disadvantage:u.config.disadvantage||!1,target:u.config.target,isRollRequest:!0,_showRequestedBy:!0,_requestedBy:u.config.requestedBy||"GM"}},async executeActivityRoll(u,t,e,s,i,o){e.rollKey&&await $.executeActivityRoll(u,t,e.rollKey,e.activityId,{...s,dialog:i,message:o})},async handleCustomRoll(u,t){const e=t.rollKey;new ce({formula:e,readonly:!0,actor:u,callback:async i=>{try{const o=new Roll(i,u.getRollData());o.options=o.options||{},o.options.isRollRequest=!0,await o.evaluate({async:!0}),await o.toMessage({speaker:ChatMessage.getSpeaker({actor:u}),flavor:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${n.CUSTOM}`),rollMode:t.config.rollMode,isRollRequest:!0,_showRequestedBy:!0,_requestedBy:t.config.requestedBy||"GM"})}catch{ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:i}))}}}).render(!0)}},J={[n.ABILITY]:async(u,t,e,s,i)=>{const o=N.buildAbilityConfig(t,e);N.addSituationalBonus(o,t.config.situational),await u.rollAbilityCheck(o,s,i)},[n.ABILITY_CHECK]:async(u,t,e,s,i)=>J[n.ABILITY](u,t,e,s,i),[n.SAVE]:async(u,t,e,s,i)=>{const o=N.buildAbilityConfig(t,e);N.addSituationalBonus(o,t.config.situational),await u.rollSavingThrow(o,s,i)},[n.SAVING_THROW]:async(u,t,e,s,i)=>J[n.SAVE](u,t,e,s,i),[n.SKILL]:async(u,t,e,s,i)=>{e.legacy=!1,e.skill=t.rollKey,e.chooseAbility=!0,t.config.ability&&(e.ability=t.config.ability),N.addSituationalBonus(e,t.config.situational),d.log("TEST",[e]),await u.rollSkill(e,s,i)},[n.TOOL]:async(u,t,e,s,i)=>{e.legacy=!1,e.tool=t.rollKey,e.chooseAbility=!0,t.config.ability&&(e.ability=t.config.ability),N.addSituationalBonus(e,t.config.situational),d.log("TEST",[e]),await u.rollToolCheck(e,s,i)},[n.CONCENTRATION]:async(u,t,e,s,i)=>{e.legacy=!1,N.addSituationalBonus(e,t.config.situational),await u.rollConcentration(e,s,i)},[n.ATTACK]:async(u,t,e,s,i)=>{await N.executeActivityRoll(u,n.ATTACK,t,e,s,i)},[n.DAMAGE]:async(u,t,e,s,i)=>{await N.executeActivityRoll(u,n.DAMAGE,t,e,s,i)},[n.ITEM_SAVE]:async(u,t,e,s,i)=>{await N.executeActivityRoll(u,n.ITEM_SAVE,t,e,s,i)},[n.INITIATIVE]:async(u,t,e,s,i)=>{if(!game.combat){ui.notifications.warn(game.i18n.localize("COMBAT.NoneActive"));return}const o=u.getInitiativeRollConfig(e);N.addSituationalBonus(o,t.config.situational),await u.rollInitiative(o)},[n.INITIATIVE_DIALOG]:async(u,t,e,s,i)=>J[n.INITIATIVE](u,t,e,s,i),[n.DEATH_SAVE]:async(u,t,e,s,i)=>{e.legacy=!1,N.addSituationalBonus(e,t.config.situational),await u.rollDeathSave(e,s,i)},[n.HIT_DIE]:async(u,t,e,s,i)=>{d.log("HIT_DIE handler called",{actor:u.name,requestData:t,rollConfig:e,dialogConfig:s,messageConfig:i});const o=t.rollKey;await u.rollHitDie(o,e,s,i)},[n.CUSTOM]:async(u,t,e,s,i)=>{await N.handleCustomRoll(u,t)}};async function Fe(){return game.combat?!0:await Dialog.confirm({title:game.i18n.localize("COMBAT.Create"),content:"<p>"+game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.noCombatActive")+"</p>",yes:()=>!0,no:()=>!1,defaultYes:!0,options:{classes:["crlngn-rolls-dialog"]}})?(await(await game.combats.documentClass.create({scene:game.scenes.active.id})).activate(),D.notify("info",game.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.combatCreated")),!0):!1}async function Be(u,t){if(!t.combat)return u;const e=u.map(o=>t.actors.get(o)).filter(o=>o),s=[],i=new Set;for(const o of e){const a=t.combat.getCombatantByActor(o.id);a&&a.initiative!==null&&(s.push(o.name),i.add(o.id))}if(s.length>0)if(await Dialog.confirm({title:t.i18n.localize("CRLNGN_ROLLS.ui.dialogs.rerollInitiativeTitle"),content:"<p>"+t.i18n.format("CRLNGN_ROLLS.ui.dialogs.rerollInitiative",{actors:s.join(", ")})+"</p>",yes:()=>!0,no:()=>!1,defaultYes:!1,options:{classes:["crlngn-rolls-dialog"]}})){for(const a of i){const r=t.combat.getCombatantByActor(a);r&&await r.update({initiative:null})}return u}else{const a=u.filter(r=>!i.has(r));return a.length===0&&D.notify("info",t.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.allActorsHaveInitiative")),a}return u}var P;const j=class j extends foundry.applications.api.HandlebarsApplicationMixin(foundry.applications.api.ApplicationV2){constructor(e={}){d.method(j,"constructor");super(e);y(this,"_onClickOutside",e=>{if(d.method(this,"_onClickOutside"),this.isLocked)return;const s=this.element;s&&(e.target.closest(".roll-requests-menu")||s.contains(e.target)||e.target.closest("#crlngn-requests-icon")||e.target.closest(".dialog, .app, .notification")||this.close())});this.selectedActors=new Set,this.currentTab="pc",this.selectedRequestType=null,this.isLocked=!1,this.optionsExpanded=game.user.getFlag(H.ID,"menuOptionsExpanded")??!1,this._initializeFromSelectedTokens()}async _prepareContext(e){d.method(this,"_prepareContext");const s=await super._prepareContext(e),i=game.actors.contents,o=[],a=[],r=game.scenes.active;for(const f of i){if(f.type!=="character"&&f.type!=="npc")continue;const b={id:f.id,uuid:f.uuid,name:f.name,img:f.img,selected:this.selectedActors.has(f.id),crlngnStats:this._getActorStats(f)};Object.entries(f.ownership).some(([C,L])=>{const v=game.users.get(C);return v&&!v.isGM&&L>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})?o.push(b):r&&r.tokens.some(L=>L.actorId===f.id)&&a.push(b)}const l=O(),c=I.get(l.rollRequestsEnabled.tag),g=I.get(l.skipDialogs.tag),h=this.currentTab==="pc"?o:a,R=h.length>0&&h.every(f=>this.selectedActors.has(f.id)),p=[];if(this.selectedActors.size>0)for(const[f,b]of Object.entries(H.ROLL_REQUEST_OPTIONS))p.push({id:f,name:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${b.name}`)||b.label,rollable:b.subList==null,hasSubList:!!b.subList,selected:this.selectedRequestType===f});const m=Ve(this.selectedRequestType,this.selectedActors);return{...s,actors:h,currentTab:this.currentTab,isPCTab:this.currentTab==="pc",isNPCTab:this.currentTab==="npc",selectedTab:this.currentTab,rollRequestsEnabled:c,skipDialogs:g,selectAllOn:R,hasSelectedActors:this.selectedActors.size>0,requestTypes:p,rollTypes:m,showNames:!0,actorsLocked:this.isLocked,optionsExpanded:this.optionsExpanded}}_getActorStats(e){var o,a,r,l,c;d.method(this,"_getActorStats");const s=e.system,i=[];return(o=s.attributes)!=null&&o.hp&&i.push({abbrev:"HP",value:s.attributes.hp.value}),(a=s.attributes)!=null&&a.ac&&i.push({abbrev:"AC",value:s.attributes.ac.value}),(r=s.attributes)!=null&&r.spelldc&&i.push({abbrev:"DC",value:s.attributes.spelldc}),(c=(l=s.skills)==null?void 0:l.prc)!=null&&c.passive&&i.push({abbrev:"PP",value:s.skills.prc.passive}),i}_onRender(e,s){if(d.method(this,"_onRender"),super._onRender(e,s),this._attachListeners(),this.optionsExpanded){const i=this.element.querySelector(".options-toggle"),o=this.element.querySelector("li.options");i&&i.classList.add("expanded"),o&&o.classList.add("expanded")}setTimeout(()=>{document.addEventListener("click",this._onClickOutside,!0)},100),this._tokenControlHook=Hooks.on("controlToken",this._onTokenControlChange.bind(this))}_onTokenControlChange(e,s){d.method(this,"_onTokenControlChange"),this.rendered&&(this._ignoreTokenControl||(this._tokenUpdateTimeout&&clearTimeout(this._tokenUpdateTimeout),this._tokenUpdateTimeout=setTimeout(()=>{this._initializeFromSelectedTokens(),this.render(),this._tokenUpdateTimeout=null},100)))}_attachListeners(){var a,r,l,c,g;d.method(this,"_attachListeners");const e=this.element;(a=e.querySelector("#crlngn-requests-toggle"))==null||a.addEventListener("change",this._onToggleRollRequests.bind(this)),(r=e.querySelector("#crlngn-skip-dialogs"))==null||r.addEventListener("change",this._onToggleSkipDialogs.bind(this)),(l=e.querySelector("#crlngn-actors-all"))==null||l.addEventListener("change",this._onToggleSelectAll.bind(this)),(c=e.querySelector("#crlngn-actors-lock"))==null||c.addEventListener("click",this._onToggleLock.bind(this)),(g=e.querySelector(".options-toggle"))==null||g.addEventListener("click",this._onToggleOptions.bind(this)),e.querySelectorAll(".actor-tab").forEach(h=>{h.addEventListener("click",this._onTabClick.bind(this))}),e.querySelectorAll(".actor").forEach(h=>{h.addEventListener("click",this._onActorClick.bind(this))}),e.querySelectorAll(".actor-select").forEach(h=>{h.addEventListener("click",this._onActorSelectClick.bind(this))});const i=e.querySelector(".request-types");i&&i.addEventListener("click",h=>{const R=h.target.closest("li");if(R&&R.dataset.id){const p={...h,currentTarget:R};this._onRequestTypeClick(p)}});const o=e.querySelector(".roll-types");o&&o.addEventListener("click",h=>{const R=h.target.closest("li");if(R&&R.dataset.id){const p={...h,currentTarget:R};this._onRollTypeClick(p)}})}async _onToggleRollRequests(e){d.method(this,"_onToggleRollRequests");const s=O(),i=e.target.checked;await I.set(s.rollRequestsEnabled.tag,i),Ee.updateRollRequestsIcon(i)}async _onToggleSkipDialogs(e){d.method(this,"_onToggleSkipDialogs");const s=O(),i=e.target.checked;await I.set(s.skipDialogs.tag,i)}_onToggleSelectAll(e){d.method(this,"_onToggleSelectAll");const s=e.target.checked;this._ignoreTokenControl=!0,(this.currentTab==="pc"?game.actors.contents.filter(o=>le(o)):game.actors.contents.filter(o=>!le(o)&&ye(o))).forEach(o=>{s?(this.selectedActors.add(o.id),re(o.id,!0)):(this.selectedActors.delete(o.id),re(o.id,!1))}),setTimeout(()=>{this._ignoreTokenControl=!1},200),this.render(),this._updateRequestTypesVisibility()}_onToggleLock(e){d.method(this,"_onToggleLock"),e.preventDefault(),this.isLocked=!this.isLocked;const s=e.currentTarget;s.classList.remove("fa-lock-keyhole","fa-lock-keyhole-open"),s.classList.add(this.isLocked?"fa-lock-keyhole":"fa-lock-keyhole-open")}async _onToggleOptions(e){d.method(this,"_onToggleOptions"),e.preventDefault(),this.optionsExpanded=!this.optionsExpanded,await game.user.setFlag(H.ID,"menuOptionsExpanded",this.optionsExpanded);const s=e.currentTarget||e.target.closest(".options-toggle");s&&s.classList.toggle("expanded",this.optionsExpanded);const i=this.element.querySelector("li.options");i&&i.classList.toggle("expanded",this.optionsExpanded)}_initializeFromSelectedTokens(){var s;d.method(this,"_initializeFromSelectedTokens");const e=((s=canvas.tokens)==null?void 0:s.controlled)||[];this.selectedActors.clear();for(const i of e)if(i.actor&&(this.selectedActors.add(i.actor.id),this.selectedActors.size===1)){const o=le(i.actor);this.currentTab=o?"pc":"npc"}}async _onTabClick(e){var i;d.method(this,"_onTabClick");const s=e.currentTarget.dataset.tab;s!==this.currentTab&&(this.selectedActors.clear(),(i=canvas.tokens)==null||i.releaseAll(),this.selectedRequestType=null,this.currentTab=s,await this.render())}_onActorClick(e){if(d.method(this,"_onActorClick"),e.target.closest(".actor-select"))return;const i=e.currentTarget.dataset.id;this._toggleActorSelection(i)}_onActorSelectClick(e){d.method(this,"_onActorSelectClick"),e.stopPropagation();const s=e.currentTarget.dataset.id;this._toggleActorSelection(s)}_toggleActorSelection(e){d.method(this,"_toggleActorSelection"),this._ignoreTokenControl=!0,this.selectedActors.has(e)?(this.selectedActors.delete(e),re(e,!1)):(this.selectedActors.add(e),re(e,!0)),setTimeout(()=>{this._ignoreTokenControl=!1},100),this.render(),this._updateRequestTypesVisibility(),this._updateSelectAllState()}_updateRequestTypesVisibility(){d.method(this,"_updateRequestTypesVisibility"),this.render()}_updateSelectAllState(){d.method(this,"_updateSelectAllState");const e=this.element.querySelector("#crlngn-actors-all"),s=this.currentTab==="pc"?"pc":"npc",i=this.element.querySelectorAll(`.${s}-actors .actor-item input[type="checkbox"]`),o=Array.from(i).filter(a=>a.checked).length;e.checked=o>0&&o===i.length,e.indeterminate=o>0&&o<i.length}async _onRequestTypeClick(e){d.method(this,"_onRequestTypeClick");const i=e.currentTarget.dataset.id,o=H.ROLL_REQUEST_OPTIONS[i];if(!o){d.error("Unknown request type:",i);return}this.selectedRequestType===i?this.selectedRequestType=null:this.selectedRequestType=i,o.subList?await this.render():this.selectedRequestType&&this._triggerRoll(i,null)}_onRollTypeClick(e){d.method(this,"_onRollTypeClick");const s=e.currentTarget.dataset.id;this._triggerRoll(this.selectedRequestType,s)}_getValidActorIds(e){return e.filter(s=>{const i=game.actors.get(s);if(!i)return!1;const o=le(i),a=!o&&ye(i);return this.currentTab==="pc"&&o||this.currentTab==="npc"&&a})}async _handleCustomRoll(){return await this._showCustomRollDialog()}async _getRollConfiguration(e,s,i,o,a){const r=O(),l=I.get(r.rollRequestsEnabled.tag);if(!o&&s!==n.CUSTOM){let c;return[n.SKILL,n.TOOL].includes(s)?c=de:s===n.HIT_DIE?c=ue:c=z,await c.getConfiguration(e,s,i,{skipDialogs:o,defaultSendRequest:l})}else{const c={advantage:!1,disadvantage:!1,situational:"",parts:[],rollMode:game.settings.get("core","rollMode"),chatMessage:!0,isRollRequest:!1,skipDialog:!0,sendRequest:l&&a.length>0};return s===n.DEATH_SAVE&&(c.target=10),c}}async _executeRollRequests(e,s,i,o,a){const r=O(),l=[],c=[];if(e.sendRequest){for(const{actor:g,owner:h}of s){if(!h.active){I.get(r.showOfflineNotifications.tag)&&D.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.playerOffline",{player:h.name})),c.push(g);continue}this._sendRollRequestToPlayer(g,h,o,a,e,!0),l.push({actor:g,owner:h}),await Ie(100)}l.length>0&&this._sendConsolidatedNotification(l,o,a)}else i.push(...s.map(({actor:g})=>g));if(c.length>0){const g={...e,skipDialog:!0};await this._handleNPCRolls(c,o,a,g)}if(i.length>0){const g={...e};g.fastForward=!0,g.skipDialog=!0,await this._handleNPCRolls(i,o,a,g)}}async _triggerRoll(e,s){var f;d.method(this,"_triggerRoll");const i=O(),o=Array.from(this.selectedActors),a=I.get(i.skipDialogs.tag),r=this._getValidActorIds(o),l=H.ROLL_REQUEST_OPTIONS[e],c=(f=(l==null?void 0:l.name)||e)==null?void 0:f.toLowerCase();if(c===n.CUSTOM&&(s=await this._handleCustomRoll(),!s)||c===n.INITIATIVE_DIALOG&&!await Fe())return;let g=r;if(c===n.INITIATIVE_DIALOG&&game.combat&&(g=await Be(r,game),!g.length))return;let h=g.map(b=>game.actors.get(b)).filter(b=>b);if(c===n.DEATH_SAVE&&(h=await He(h)),!h.length){D.notify("warn","No valid actors selected");return}const{pcActors:R,npcActors:p}=Pe(h),m=await this._getRollConfiguration(h,c,s,a,R);m&&(await this._executeRollRequests(m,R,p,c,s),setTimeout(()=>this.close(),500))}_sendRollRequestToPlayer(e,s,i,o,a,r=!1){var R;d.method(this,"_sendRollRequestToPlayer");const l=O(),c=i==null?void 0:i.toLowerCase();let g=c;if(c===n.ABILITY_CHECK?g=n.ABILITY:c===n.SAVING_THROW?g=n.SAVE:c===n.INITIATIVE_DIALOG&&(g=n.INITIATIVE),c===n.HIT_DIE){const p=e.system.attributes.hd;if(p){const m=["d6","d8","d10","d12","d20"];for(const f of m)if((((R=p[f])==null?void 0:R.value)||0)>0){o=f;break}}if(!o)return}d.log("_sendRollRequestToPlayer - Hit Die Debug",{normalizedRequestType:c,rollType:g,rollKey:o,actor:e.name});const h={type:"rollRequest",requestId:foundry.utils.randomID(),actorId:e.id,rollType:g,rollKey:o,activityId:null,config:{rollMode:a.rollMode||game.settings.get("core","rollMode"),advantage:a.advantage||!1,disadvantage:a.disadvantage||!1,situational:a.situational||"",parts:a.parts||[],chatMessage:a.chatMessage!==!1,target:a.target,ability:a.ability,attackMode:a.attackMode,rollTitle:a.rollTitle,requestedBy:game.user.name},skipDialog:a.skipDialog||!1,targetTokenIds:Array.from(game.user.targets).map(p=>p.id),preserveTargets:I.get(l.useGMTargetTokens.tag)};B.execForUser("handleRollRequest",s.id,h),r||D.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestSent",{player:s.name,actor:e.name}))}_sendConsolidatedNotification(e,s,i){var l,c,g,h,R;d.method(this,"_sendConsolidatedNotification");const o={};for(const{actor:p,owner:m}of e)o[m.id]||(o[m.id]={player:m,actors:[]}),o[m.id].actors.push(p);for(const[p,m]of Object.entries(H.ROLL_REQUEST_OPTIONS))if(m.name===s)break;const a=s;let r=game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${a}`)||a;if(i){const p=a.toLowerCase();if(p===n.SKILL)r=`${r} (${((l=CONFIG.DND5E.skills[i])==null?void 0:l.label)||i})`;else if(p===n.SAVING_THROW)r=`${r} (${((c=CONFIG.DND5E.abilities[i])==null?void 0:c.label)||i})`;else if(p===n.ABILITY_CHECK)r=`${r} (${((g=CONFIG.DND5E.abilities[i])==null?void 0:g.label)||i})`;else if(p===n.TOOL){const m=(R=(h=CONFIG.DND5E.enrichmentLookup)==null?void 0:h.tools)==null?void 0:R[i];if(m!=null&&m.id){const f=dnd5e.documents.Trait.getBaseItem(m.id,{indexOnly:!0});r=`${r} (${(f==null?void 0:f.name)||i})`}else r=`${r} (${i})`}else p===n.CUSTOM&&(r=`${r}: ${i}`)}D.notifyRollRequestsSent(o,r)}async _handleNPCRolls(e,s,i,o){d.method(this,"_handleNPCRolls");const a={advantage:o.advantage||!1,disadvantage:o.disadvantage||!1,situational:o.situational||"",parts:o.parts||[],rollMode:o.rollMode||game.settings.get("core","rollMode"),fastForward:o.skipDialog||!1,skipDialog:o.skipDialog||!1,chatMessage:o.chatMessage!==!1,isRollRequest:!1,target:o.target,ability:o.ability,attackMode:o.attackMode};for(const r of e)await this._executeActorRoll(r,s,i,a),await Ie(100)}async _executeActorRoll(e,s,i,o){var a;d.method(this,"_executeActorRoll");try{const r=s.toLowerCase();let l=i;if(r===n.HIT_DIE){const p=e.system.attributes.hd;if(p){const m=["d6","d8","d10","d12","d20"];for(const f of m)if((((a=p[f])==null?void 0:a.value)||0)>0){l=f;break}}if(!l){D.notify("warn",game.i18n.format("DND5E.HitDiceWarn",{name:e.name}));return}}const c={rollKey:l,config:o},g={configure:!o.fastForward&&!o.skipDialog},h={rollMode:o.rollMode||game.settings.get("core","rollMode"),create:o.chatMessage!==!1},R=J[r];R?await R(e,c,o,g,h):D.notify("warn",`Unknown roll type: ${s}`)}catch{D.notify("error",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:e.name}))}}async _onClose(e){d.method(this,"_onClose"),await super._onClose(e),this.selectedActors.clear(),this.selectedRequestType=null,document.removeEventListener("click",this._onClickOutside,!0),this._tokenControlHook&&(Hooks.off("controlToken",this._tokenControlHook),this._tokenControlHook=null),this._tokenUpdateTimeout&&(clearTimeout(this._tokenUpdateTimeout),this._tokenUpdateTimeout=null)}setPosition(e={}){return d.method(this,"setPosition"),this}async _showCustomRollDialog(){return d.method(this,"_showCustomRollDialog"),ce.prompt({formula:"",readonly:!1})}static toggle(){d.method(j,"toggle"),Q(this,P)?Q(this,P).rendered?Q(this,P).close():(Q(this,P)._initializeFromSelectedTokens(),Q(this,P).render(!0)):(_e(this,P,new j),Q(this,P).render(!0))}};P=new WeakMap,Ce(j,P,null),y(j,"DEFAULT_OPTIONS",{id:"crlngn-requests-menu",classes:["roll-requests-menu"],tag:"div",window:{frame:!1,resizable:!1,minimizable:!1},position:null}),y(j,"PARTS",{main:{template:`modules/${H.ID}/templates/requests-menus.hbs`}});let fe=j;class Ee{static addSidebarControls(t,e,s){if(!game.user.isGM||t.id!=="chat")return;const o=(e[0]||e).querySelector("#chat-controls");if(!o||o.querySelector(".roll-requests-icon"))return;const a=O(),r=I.get(a.rollRequestsEnabled.tag),l=document.createElement("a");l.id="crlngn-requests-icon",l.setAttribute("data-tooltip-direction","RIGHT"),l.className=`chat-control-icon roll-requests-icon${r?" active":""}`,l.title=game.i18n.localize("CRLNGN_ROLLS.ui.menus.rollRequestsTitle"),l.innerHTML=`<i class="fas fa-bolt${r?"":"-slash"}"></i>`;const c=o.querySelector(".chat-control-icon");c?c.parentNode.insertBefore(l,c):o.insertBefore(l,o.firstChild),l.addEventListener("click",()=>{fe.toggle()})}static updateRollRequestsIcon(t){const e=document.querySelector("#crlngn-requests-icon i");e&&(e.className=`fas fa-bolt${t?"":"-slash"}`)}}class ke{static initialize(){Hooks.once(ee.INIT,this._onInit.bind(this)),Hooks.once(ee.READY,this._onReady.bind(this))}static _onInit(){O(),document.body.classList.add("crlngn-rolls"),I.registerSettings(),K.initialize(),this._registerHook(ee.RENDER_SIDEBAR_TAB,this._onRenderSidebarTab.bind(this))}static _onReady(){const t=O();I.get(t.debugMode.tag)&&(CONFIG.debug.hooks=!0),he.initialize(),this._registerDnd5eHooks(),game.user.isGM?this._registerGMHooks():K.getDiceConfig(),Me(Ge())}static _registerDnd5eHooks(){this._registerHook(q.POST_ROLL_CONFIG,this._onPostRollConfig.bind(this)),this._registerHook(ee.PRE_CREATE_CHAT_MESSAGE,this._onPreCreateChatMessage.bind(this)),this._registerHook(ee.PRE_CREATE_CHAT_MESSAGE,this._onPreCreateChatMessageFlavor.bind(this)),this._registerHook(q.RENDER_ROLL_CONFIGURATION_DIALOG,this._onRenderRollConfigDialog.bind(this))}static _registerGMHooks(){this._registerHook(ee.USER_CONNECTED,this._onUserConnected.bind(this)),game.users.forEach(t=>{this._onUserConnected(t)})}static _onPostRollConfig(t,e,s,i){e._showRequestedBy&&t.length>0&&(i.data=i.data||{},i.data._showRequestedBy=!0,i.data._requestedBy=e._requestedBy)}static _onPreCreateChatMessage(t,e,s,i){var o;if(e._showRequestedBy&&((o=e.rolls)==null?void 0:o.length)>0){const a=e._requestedBy||"GM",r=game.i18n.format("CRLNGN_ROLL_REQUESTS.chat.requestedBy",{gm:a}),l=e.flavor||"";e.flavor=l?`${l} ${r}`:r}}static _onPreCreateChatMessageFlavor(t,e,s,i){var o,a;if(((o=e.rolls)==null?void 0:o.length)>0&&e.rolls[0])try{const r=e.rolls[0];(a=r.options)!=null&&a._customFlavor&&(e.flavor=r.options._customFlavor)}catch{}}static _onRenderRollConfigDialog(t,e,s){var a,r;if(d.log("_onRenderRollConfigDialog triggered",[{app:t,config:t.config,rolls:(a=t.config)==null?void 0:a.rolls,situational:(r=t.config)==null?void 0:r.situational,data:s}]),t._situationalTriggered)return;const i=e.querySelectorAll('input[name*="situational"]');d.log("Found situational inputs:",[i.length]);let o=!1;i.forEach((l,c)=>{var g,h,R,p,m;d.log(`Situational input ${c}:`,[{name:l.name,value:l.value,type:l.type}]),!l.value&&((p=(R=(h=(g=t.config)==null?void 0:g.rolls)==null?void 0:h[0])==null?void 0:R.data)!=null&&p.situational)&&((m=t.config)!=null&&m.isConcentration)&&(d.log("Populating concentration situational bonus:",t.config.bonus),l.value=t.config.rolls[0].data.situational,o=!0),l.value&&!o&&(t._situationalTriggered=!0,o=!0,setTimeout(()=>{var f,b,_;l.dispatchEvent(new Event("change",{bubbles:!0,cancelable:!1})),(_=(b=(f=t.config)==null?void 0:f.rolls)==null?void 0:b[0])!=null&&_.data&&delete t.config.rolls[0].data.situational},50))})}static _onUserConnected(t){t.active&&t.id!==game.user.id&&K.requestDiceConfigFromUser(t.id)}static _onRenderSidebarTab(t,e,s){Ee.addSidebarControls(t,e,s)}static _onPreConfigureInitiative(t,e){t._initiativeSituationalBonus&&(d.log("Adding situational bonus to initiative:",["actor:",t.name,"situational:",t._initiativeSituationalBonus,"config before:",e]),(!e.rolls||e.rolls.length===0)&&(e.rolls=[{parts:[],data:{},options:{}}]),e.rolls[0].data.situational=t._initiativeSituationalBonus,d.log("Flash Rolls 5e | Initiative config after adding situational:",e))}static _registerHook(t,e){const s=Hooks.on(t,e);return this.registeredHooks.set(`${t}_${s}`,s),s}static unregisterAll(){this.registeredHooks.forEach((t,e)=>{const s=e.split("_")[0];Hooks.off(s,t)}),this.registeredHooks.clear()}static isRegistered(t){for(const e of this.registeredHooks.keys())if(e.startsWith(`${t}_`))return!0;return!1}}y(ke,"registeredHooks",new Map);class ae{static async handleRequest(t){var i;if(d.method(ae,"handleRequest")("handling roll request",[t]),game.user.isGM)return;const s=game.actors.get(t.actorId);!s||!s.isOwner||(t.preserveTargets&&((i=t.targetTokenIds)==null?void 0:i.length)>0&&game.user.targets.size===0&&qe(t.targetTokenIds),D.notify("info","",{batch:!0,batchData:{actor:s.name,rollType:t.rollType,rollKey:t.rollKey,gm:t.config.requestedBy||"GM"}}),ae.executeRequest(s,t))}static async executeRequest(t,e){var i;d.method(ae,"executeRequest")("executing roll request",[t,e]),d.log("RollRequestUtil.executeRequest - Debug",{rollType:e.rollType,rollKey:e.rollKey,actorName:t.name,handlers:Object.keys(J)});try{const o=(i=e.rollType)==null?void 0:i.toLowerCase(),a={advantage:e.config.advantage||!1,disadvantage:e.config.disadvantage||!1,isRollRequest:!0,target:e.config.target,_showRequestedBy:!0,_requestedBy:e.config.requestedBy||"GM"};e.config.ability&&[n.SKILL,n.TOOL].includes(o)&&(a.ability=e.config.ability);const l={configure:!(e.skipDialog||o===n.CUSTOM),options:{defaultButton:e.config.advantage?"advantage":e.config.disadvantage?"disadvantage":"normal",window:{title:e.config.rollTitle||Le(o,e.rollKey),subtitle:t.name}}},c={rollMode:e.config.rollMode||game.settings.get("core","rollMode"),create:e.config.chatMessage!==!1};(o==="hitdie"||o==="hit_die")&&d.log("RollRequestUtil - Hit Die Debug",{normalizedRollType:o,requestData:e,rollConfig:a,handlers:Object.keys(J)});const g=J[o];g?await g(t,e,a,l,c):(d.warn(`No handler found for roll type: ${o}`),D.notify("warn",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:t.name||"Unknown Actor"})))}catch(o){d.error("Error executing roll request:",o),D.notify("error",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:t.name||"Unknown Actor"}))}}}class te{static init(){B.initialize(te.registerSocketCalls),ke.initialize()}static getDiceConfig(){return K.getDiceConfig()}static receiveDiceConfig(t,e){K.receiveDiceConfig(t,e)}static async handleRollRequest(t){return ae.handleRequest(t)}static registerSocketCalls(){B.registerCall(ge.getDiceConfig,te.getDiceConfig),B.registerCall(ge.receiveDiceConfig,te.receiveDiceConfig),B.registerCall(ge.handleRollRequest,te.handleRollRequest)}}te.init();
//# sourceMappingURL=crlngn-roll-requests.js.map
