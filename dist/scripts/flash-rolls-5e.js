var Pe=Object.defineProperty;var _e=a=>{throw TypeError(a)};var Fe=(a,e,t)=>e in a?Pe(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t;var N=(a,e,t)=>Fe(a,typeof e!="symbol"?e+"":e,t),fe=(a,e,t)=>e.has(a)||_e("Cannot "+t);var Q=(a,e,t)=>(fe(a,e,"read from private field"),t?t.call(a):e.get(a)),he=(a,e,t)=>e.has(a)?_e("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(a):e.set(a,t),me=(a,e,t,i)=>(fe(a,e,"write to private field"),i?i.call(a,t):e.set(a,t),t),Te=(a,e,t)=>(fe(a,e,"access private method"),t);const X={checkbox:"checkbox"},ee={client:"client",world:"world"},O=()=>({debugMode:{tag:"debug-mode",label:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.hint"),propType:Boolean,inputType:X.checkbox,default:!0,scope:ee.client,config:!0},rollRequestsEnabled:{tag:"flash-rolls-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.hint"),propType:Boolean,inputType:X.checkbox,default:!0,scope:ee.world,config:!0},skipDialogs:{tag:"skip-dialogs",label:game.i18n.localize("CRLNGN_ROLLS.settings.skipDialogs.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.skipDialogs.hint"),propType:Boolean,inputType:X.checkbox,default:!1,scope:ee.world,config:!0},useGMTargetTokens:{tag:"use-gm-target-tokens",label:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.hint"),propType:Boolean,inputType:X.checkbox,default:!1,scope:ee.world,config:!0},rollInterceptionEnabled:{tag:"roll-interception-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollInterceptionEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollInterceptionEnabled.hint"),propType:Boolean,inputType:X.checkbox,default:!0,scope:ee.world,config:!0},publicPlayerRolls:{tag:"public-player-rolls",label:game.i18n.localize("CRLNGN_ROLLS.settings.publicPlayerRolls.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.publicPlayerRolls.hint"),propType:Boolean,inputType:X.checkbox,default:!0,scope:ee.world,config:!0},showOfflineNotifications:{tag:"show-offline-notifications",label:game.i18n.localize("CRLNGN_ROLLS.settings.showOfflineNotifications.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.showOfflineNotifications.hint"),propType:Boolean,inputType:X.checkbox,default:!0,scope:ee.world,config:!0}}),F="flash-rolls-5e",ae=["%cFlash Rolls 5e","color:rgb(47, 151, 161); font-weight: bold;","|"],Re={receiveDiceConfig:"receiveDiceConfig",getDiceConfig:"getDiceConfig",handleRollRequest:"handleRollRequest"},d={ABILITY:"ability",ABILITY_CHECK:"abilitycheck",ATTACK:"attack",CONCENTRATION:"concentration",CUSTOM:"custom",DEATH_SAVE:"deathsave",FORMULA:"formula",DAMAGE:"damage",HEALING:"healing",HIT_DIE:"hitdie",INITIATIVE:"initiative",INITIATIVE_DIALOG:"initiativedialog",ITEM_SAVE:"itemsave",SAVE:"save",SAVING_THROW:"savingthrow",SKILL:"skill",TOOL:"tool"},He={ABILITY_CHECK:{name:d.ABILITY_CHECK,label:"Ability Check",subList:"abilities",actorPath:"system.abilities"},SAVING_THROW:{name:d.SAVING_THROW,label:"Saving Throw",subList:"abilities",actorPath:"system.abilities"},SKILL:{name:d.SKILL,label:"Skill Check",subList:"skills",actorPath:"system.skills"},TOOL:{name:d.TOOL,label:"Tool Check",subList:"tools",actorPath:"system.tools"},CONCENTRATION:{name:d.CONCENTRATION,label:"Concentration Check",subList:null,actorPath:""},INITIATIVE:{name:d.INITIATIVE,label:"Initiative Roll",subList:null,actorPath:""},DEATH_SAVE:{name:d.DEATH_SAVE,label:"Death Save",subList:null,actorPath:""},HIT_DIE:{name:d.HIT_DIE,label:"Hit Die",subList:null,actorPath:""},CUSTOM:{name:d.CUSTOM,label:"Custom Roll",subList:null,actorPath:""}},j={ID:F,ROLL_REQUEST_OPTIONS:He},J={INIT:"init",READY:"ready",CHANGE_SIDEBAR_TAB:"changeSidebarTab",RENDER_SIDEBAR:"renderSidebar",USER_CONNECTED:"userConnected",PRE_CREATE_CHAT_MESSAGE:"preCreateChatMessage",COLLAPSE_SIDE_BAR:"collapseSidebar"},Ve={READY:"socketlib.ready"},q={PRE_USE_ACTIVITY:"dnd5e.preUseActivity",PRE_ROLL_ABILITY_CHECK:"dnd5e.preRollAbilityCheckV2",PRE_ROLL_SAVING_THROW:"dnd5e.preRollSavingThrowV2",PRE_ROLL_DEATH_SAVE_V2:"dnd5e.preRollDeathSaveV2",PRE_ROLL_SKILL_V2:"dnd5e.preRollSkillV2",PRE_ROLL_TOOL_V2:"dnd5e.preRollToolV2",PRE_ROLL_HIT_DIE_V2:"dnd5e.preRollHitDieV2",PRE_ROLL_INITIATIVE_DIALOG_V2:"dnd5e.preRollInitiativeDialogV2",PRE_ROLL_INITIATIVE:"dnd5e.preRollInitiative",ROLL_INITIATIVE:"dnd5e.rollInitiative",PRE_ROLL_ATTACK_V2:"dnd5e.preRollAttackV2",PRE_ROLL_DAMAGE_V2:"dnd5e.preRollDamageV2",POST_ROLL_CONFIG:"dnd5e.postRollConfiguration",RENDER_ROLL_CONFIGURATION_DIALOG:"renderRollConfigurationDialog",RENDER_SKILL_TOOL_ROLL_DIALOG:"renderSkillToolRollConfigurationDialog"},le=class le{static log(e="",t=[],i=!1){try{const s=game.settings.get(F,"debug-mode")||le.debugOn;if(!(i||s))return;console.log(...ae,e,...t)}catch{(i||le.debugOn)&&console.log(...ae,e,...t)}}static warn(e="",t=[]){console.warn(...ae,e,...t)}static error(e,t=[],i={ui:!1,console:!0,permanent:!1}){var s;i.ui&&((s=ui.notifications)==null||s.error(e,{localize:!0,permanent:i.permanent})),i.console&&console.error(...ae,e,...t)}};N(le,"debugOn",!1);let r=le;const w=class w{static serializeForTransport(e,t=!1){return r.log("serializeForTransport",[e,t]),e==null||t&&e.rolls&&Array.isArray(e.rolls)&&(e.rolls=e.rolls.map(i=>i instanceof Roll?i.toJSON():i)),e}static deserializeFromTransport(e,t=!1){r.log("deserializeFromTransport",[e,t]);let i={...e};if(!e)return i;if(t&&e.rolls&&e.rolls.length>0){const s=i.rolls.map(o=>{let l=o;return typeof o=="string"?l=Roll.fromJSON(o):l=Roll.fromJSON(JSON.stringify(o)),l});return i.rolls=[...s],i}return i}};N(w,"socket"),N(w,"_activeExecutions",new Map),N(w,"initialize",e=>{r.log("initialize",[e]),Hooks.once(Ve.READY,()=>{if(typeof socketlib>"u"){r.error("SocketUtil Error: socketlib is not loaded. Ensure it is installed and enabled."),ui.notifications.error(game.i18n.localize("CRLNGN_ROLLS.notifications.socketlibMissing"),{permanent:!0});return}try{w.socket=socketlib.registerModule(F),e&&e()}catch{}})}),N(w,"registerCall",(e,t)=>{r.log("registerCall",[e]),w.socket&&w.socket.register(e,t)}),N(w,"sendMessage",(e,t)=>{r.log("sendMessage",[e]),t&&t()}),N(w,"execForGMs",async(e,...t)=>{if(r.log("execForGMs",[e,...t]),!!w.socket)return await w.socket.executeForAllGMs(e,...t)}),N(w,"execForAll",async(e,...t)=>{if(w.socket)return await w.socket.executeForEveryone(e,...t)}),N(w,"execForUser",async(e,t,...i)=>{if(r.log("execForUser",[e,t,...i]),!w.socket)return;if(t===game.user.id)return null;const s=`${e}-${t}`;if(w._activeExecutions.has(s))return null;w._activeExecutions.set(s,!0);try{return await w.socket.executeAsUser(e,t,...i)}catch{return null}finally{w._activeExecutions.delete(s)}});let U=w;class te{static initialize(){this.setDiceConfig()}static setDiceConfig(){if(!game.user)return{};const e=game.settings.storage.get("client");return this.diceConfig=e["core.diceConfiguration"]||"",this.diceConfig}static getDiceConfig(){return game.user?(this.setDiceConfig(),game.user.isGM&&this._sendDiceConfigToGMs(),this.diceConfig):{}}static _sendDiceConfigToGMs(){U.execForGMs("receiveDiceConfig",game.user.id,this.diceConfig)}static receiveDiceConfig(e,t){var i,s;((i=game.user)!=null&&i.isGM||e===((s=game.user)==null?void 0:s.id))&&(this.playerDiceConfigs[e]=t?JSON.parse(t):{})}static getUserDiceConfig(e){var t;return e===((t=game.user)==null?void 0:t.id)?this.diceConfig:this.playerDiceConfigs[e]||{}}static requestDiceConfigFromUser(e){U.execForUser("getDiceConfig",e)}static requestDiceConfigFromAllPlayers(){var e;(e=game.user)!=null&&e.isGM&&game.users.forEach(t=>{t.active&&!t.isGM&&t.id!==game.user.id&&this.requestDiceConfigFromUser(t.id)})}static clearPlayerConfigs(){this.playerDiceConfigs={}}static hasUserConfig(e){var t;return e===((t=game.user)==null?void 0:t.id)?!!this.diceConfig:!!this.playerDiceConfigs[e]}}N(te,"diceConfig",{}),N(te,"playerDiceConfigs",{});class E{static registerSettings(){const e=O();Object.entries(e).forEach(async i=>{const s=i[1],o={name:s.label,hint:s.hint,default:s.default,type:s.propType,scope:s.scope,config:s.config,requiresReload:s.requiresReload||!1,onChange:l=>E.apply(s.tag,l)};s.choices&&(o.choices=s.choices),await game.settings.register(F,s.tag,o),(E.get(s.tag)===void 0||E.get(s.tag)===null)&&E.set(s.tag,s.default)})}static get(e,t=F){if(!e)return null;let i=!1;if(t===F)i=game.settings.get(t,e);else{let o=game.settings.storage.get("client")[`${t}.${e}`];o===void 0&&(o=game.settings.storage.get("world").getSetting(`${t}.${e}`),i=o==null?void 0:o.value)}return i}static set(e,t,i=F){if(!e)return!1;let s=game.settings.storage.get("client")[`${i}.${e}`];s||(s=game.settings.storage.get("world").getSetting(`${i}.${e}`));try{game.settings.set(i,e,t)}catch{}return!0}static apply(e,t){const i=O();switch(e){case i.rollRequestsEnabled.tag:E.applyRollRequestsEnabled(t);break}}static applyRollRequestsEnabled(e){const t=document.querySelector(".chat-controls .flash-rolls-icon");t&&(e?t.classList.add("active"):t.classList.remove("active"))}}var ue,De;const se=class se{static isModuleOn(e){var i;const t=(i=game.modules)==null?void 0:i.get(e);return!!(t!=null&&t.active)}static html(e,t){return e.querySelector(t)}static getFullWidth(e){return window.getComputedStyle(e).width==="0px"?0:e.offsetWidth}static addCSSVars(e,t){let i=document.querySelector("#crlngn-ui-vars");if(!i){const f=document.querySelector("body.crlngn-ui");if(!f)return;i=document.createElement("style"),i.id="crlngn-ui-vars",i.textContent=`body.crlngn-ui {
}
`,f.prepend(i)}let s=i.textContent,o=s.indexOf("body.crlngn-ui {"),l=s.indexOf("}",o);o===-1&&(s=`body.crlngn-ui {
}
`,o=0,l=s.indexOf("}"));const c=s.substring(o+16,l).split(";").map(f=>f.trim()).filter(f=>f!==""),u={};c.forEach(f=>{const m=f.split(":");if(m.length>=2){const p=m[0].trim(),R=m.slice(1).join(":").trim();p&&(u[p]=R)}}),e.includes("i18n")&&typeof t=="string"&&!t.startsWith('"')&&!t.startsWith("'")&&!t.match(/^url\(|^rgba?\(|^hsla?\(/)&&(t=`"${t}"`),u[e]=t;const g=Object.entries(u).map(([f,m])=>`  ${f}: ${m};`).join(`
`),h=s.substring(0,o)+`body.crlngn-ui {
`+g+`
}`+s.substring(l+1);i.textContent=h}static async processStyleSheetRules(e,t){var i;try{if(((i=e.ownerNode)==null?void 0:i.tagName)==="STYLE"){const s=e.ownerNode.textContent;this.extractFontsFromCSSText(s,t)}try{const s=e.cssRules||e.rules;if(!s)return;for(let o=0;o<s.length;o++){const l=s[o];if(l instanceof CSSFontFaceRule){const n=l.style.getPropertyValue("font-family");n&&(t.add(n),r.log("Found font-face rule:",[n]))}else if(l instanceof CSSImportRule){if(r.log("Found import rule:",[l.href]),l.styleSheet)await this.processStyleSheetRules(l.styleSheet,t);else if(l.href)try{const c=await(await fetch(l.href)).text();this.extractFontsFromCSSText(c,t)}catch(n){r.warn("Error fetching imported CSS:",[n])}}}}catch(s){if(s.name==="SecurityError"&&e.href){r.log("Security restriction on stylesheet, trying to fetch directly:",[e.href]);try{const l=await(await fetch(e.href)).text();this.extractFontsFromCSSText(l,t)}catch(o){r.warn("Error fetching cross-origin stylesheet:",[o])}}else r.warn("Error accessing CSS rules:",[s])}}catch(s){r.warn("Error in processStyleSheetRules:",[s])}}static extractFontsFromCSSText(e,t){if(!e)return;const i=/@font-face\s*{[^}]*font-family\s*:\s*(['"])(.+?)\1[^}]*}/gs;(e.match(i)||[]).forEach(o=>{const l=/font-family\s*:\s*(['"])(.+?)\1/,n=o.match(l);if(n&&n[2]){const c=n[2].trim();t.add(c)}})}static getOffsetBottom(e){const t=e.offsetTop,i=e.offsetHeight;return window.innerHeight-(t+i)}static async getAllFonts(){const e=new Set(Object.keys(CONFIG.fontDefinitions)),t=game.settings.get("core","fonts")||{},i=Object.entries(t).map(([l])=>l),s=await this.processStyleSheets();return Array.from(new Set([...e,...i,...s])).filter(l=>!/FontAwesome|Font Awesome|FoundryVTT/.test(l)).map(l=>l.replace(/['"]/g,"").trim()).sort((l,n)=>l.toLowerCase().localeCompare(n.toLowerCase()))||[]}static addCustomCSS(e,t="crlngn-ui-custom-css",i=!0){if(!e)return;let s=document.querySelector("#"+t);s||(s=document.createElement("style"),s.id=t,s.textContent="",document.head.appendChild(s));const o=/@import\s+(?:url\()?\s*['"]?[^'")]+['"]?\s*\)?\s*;/g,l=[];let n=e,c;for(;(c=o.exec(e))!==null;)l.push(c[0]);if(n=e.replace(o,"").trim(),!i){s.textContent=l.join(`
`)+(l.length?`

`:"")+n;return}if(!s.textContent.includes(n)){const u=s.textContent,g=[];let h;for(;(h=o.exec(u))!==null;)g.push(h[0]);const f=u.replace(o,"").trim(),m=l.filter(R=>!g.includes(R)),p=[...g,...m];s.textContent=p.join(`
`)+(p.length?`

`:"")+f+(f&&n?`

`:"")+n}}static smoothScrollTo(e,t,i="horizontal",s=300,o=null){const l=e.dataset.scrollAnimationId;l&&cancelAnimationFrame(Number(l));const n=i==="horizontal",c=n?e.scrollLeft:e.scrollTop,u=t-c;if(u===0)return o&&o(),null;const g=performance.now(),h=m=>{const p=m-g;if(p>=s){n?e.scrollLeft=t:e.scrollTop=t,delete e.dataset.scrollAnimationId,o&&o();return}const R=p/s,C=R<.5?2*R*R:1-Math.pow(-2*R+2,2)/2;n?e.scrollLeft=c+u*C:e.scrollTop=c+u*C;const y=requestAnimationFrame(h);return e.dataset.scrollAnimationId=y,y},f=requestAnimationFrame(h);return e.dataset.scrollAnimationId=f,f}static confirmReload(e=game.i18n.localize("CRLNGN_UI.ui.reloadRequiredTitle"),t=game.i18n.localize("CRLNGN_UI.ui.reloadRequiredLabel"),i={}){const s={title:e,content:t,yes:{label:game.i18n.localize("CRLNGN_UI.ui.reloadButton"),callback:()=>(r.log("Reloading page after confirmation"),window.location.reload(),!0)},no:{label:game.i18n.localize("CRLNGN_UI.ui.cancelButton"),callback:()=>!1},defaultYes:!1,rejectClose:!1};return mergeObject(s,i),foundry.applications.api.DialogV2.confirm(s)}static renderTemplate(e,t){return foundry.applications.handlebars.renderTemplate(e,t)}static loadTemplate(e){return foundry.applications.handlebars.loadTemplate(e)}static isValidCSSRule(e){if(!e||typeof e!="string")return!1;const t=e.trim();if(!t)return!1;try{const i=document.createElement("style"),s=`${t} { color: inherit; }`;i.textContent=s,document.head.appendChild(i);const o=!!(i.sheet&&i.sheet.cssRules&&i.sheet.cssRules.length>0);return document.head.removeChild(i),o}catch(i){return r.log("CSS validation error:",[i,e]),!1}}static processCSSRules(e,t){if(!e||!t)return"";const i=Te(this,ue,De).call(this,e),s=t+` {
`+i.baseProperties.join(`
`)+`
}`,o=[],l=new Map;return i.nestedRules.forEach(n=>{const{selector:c,content:u}=n;if(c.startsWith("&")){const f=c.substring(1),m=t.split(",").map(p=>p.trim()).filter(Boolean).map(p=>p+f).join(", ");o.push(`${m} {
${u}
}`);return}l.has(u)||l.set(u,[]);const g=c.split(",").map(f=>f.trim()),h=t.split(",").map(f=>f.trim()).filter(Boolean);g.forEach(f=>{h.forEach(m=>{l.get(u).push(`${m} ${f}`)})})}),l.forEach((n,c)=>{o.push(`${n.join(", ")} {
${c}
}`)}),s+`

`+o.join(`

`)}static getActorOwner(e){const t=e.ownership||{};for(const[i,s]of Object.entries(t))if(r.log("getActorOwner #1",[i,s,CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER]),s>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const o=game.users.get(i);if(o&&!o.isGM)return o}if((t==null?void 0:t.default)>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const i=game.users.filter(s=>!s.isGM)[0];if(r.log("getActorOwner #2",[i]),i)return i}return null}};ue=new WeakSet,De=function(e){const t=[],i=[],s=e.split(`
`);let o=null,l=0;for(let n=0;n<s.length;n++){const c=s[n].trim();if(!c)continue;const u=(c.match(/{/g)||[]).length,g=(c.match(/}/g)||[]).length;if(c.includes("{")&&!o){o={selector:c.substring(0,c.indexOf("{")).trim(),content:"",startLine:n},l=1;const f=c.substring(c.indexOf("{")+1).trim();f&&!f.includes("}")&&(o.content+=f+`
`)}else o?(l+=u-g,l>0?o.content+=c+`
`:(o.content=o.content.replace(/}\s*$/,"").trim(),i.push(o),o=null)):!c.includes("{")&&!c.includes("}")&&t.push(c)}return{baseProperties:t,nestedRules:i}},he(se,ue),N(se,"processStyleSheets",async()=>{const e=new Set(Object.keys(CONFIG.fontDefinitions)),t=game.settings.get("core","fonts")||{},i=Object.entries(t).map(([l])=>l),s=new Set;for(const l of document.styleSheets)try{if(l.ownerNode){const n=l.href||"",c=n.includes("css/")||n.includes("styles/"),u=n.includes("modules/crlngn-ui/"),g=n.includes("systems/");if(n&&!c&&!u&&!g)continue;await se.processStyleSheetRules(l,s)}}catch(n){r.warn("Error processing stylesheet:",[n])}return r.log("Found fonts:",[{foundry:Array.from(e),custom:i,cssImported:Array.from(s)}]),Array.from(new Set([...e,...i,...s])).filter(l=>!/FontAwesome|Font Awesome|FoundryVTT/.test(l)).map(l=>l.replace(/['"]/g,"").trim()).sort((l,n)=>l.toLowerCase().localeCompare(n.toLowerCase()))}),N(se,"wrapFontName",e=>{const t=e.replace(/['"`]/g,"");return t.includes(" ")?`"${t}"`:t});let W=se;Hooks.once("ready",()=>{dnd5e.applications.dice.DamageRollConfigurationDialog||r.warn("DamageRollConfigurationDialog not found in dnd5e.applications.dice")});function ne(a){return class extends a{constructor(e={},t={},i={}){var s,o;super(e,t,i),this.actors=i.actors||[],this.sendRequest=i.sendRequest??i.sendRequest??!0,this.showDC=i.showDC||!1,this.dcValue=i.dcValue||null,this.rollKey=i.rollKey||e.skill||e.ability||null,this.rollTypeString=i.rollTypeString||null,this.windowTitle=((s=i.window)==null?void 0:s.title)||"",this.windowSubtitle=((o=i.window)==null?void 0:o.subtitle)||""}_buildConfig(e,t,i){const s=t==null?void 0:t.get("ability"),o=t==null?void 0:t.get("dc"),l=t==null?void 0:t.get(`rolls.${i}.situational`);if(r.log("_buildConfig",[l,t,e]),l)e.parts||(e.parts=[]),e.parts.push("@situational"),e.data||(e.data={}),e.data.situational=l;else if(e.parts){const c=e.parts.indexOf("@situational");c!==-1&&e.parts.splice(c,1)}s&&(e.ability=s,this.config.ability=s);const n=super._buildConfig(e,t,i);if(o){const c=parseInt(o);isNaN(c)||(n.options=n.options||{},n.options.target=c)}else this.dcValue!==void 0&&this.dcValue!==null&&(n.options=n.options||{},n.options.target=this.dcValue);return r.log(`${this.constructor.name}._buildConfig`,[this.config,t,n]),n}_onChangeForm(e,t){r.log("_onChangeForm",[t.target.value]),super._onChangeForm(e,t);const i=this.element.querySelector('input[name="crlngn-send-request"]');i&&(this.sendRequest=i.checked);const s=this.element.querySelector('input[name="dc"]');s&&s.value&&(this.dcValue=parseInt(s.value)||null)}_finalizeRolls(e){const t=super._finalizeRolls(e);if(r.log("_finalizeRolls #1",[t,this.sendRequest]),this.dcValue!==void 0&&this.dcValue!==null)for(const i of t)i.options.target=this.dcValue;return this.config.sendRequest=this.sendRequest,t}async _onRender(e,t){var i,s,o;await super._onRender(e,t),((o=(s=(i=this.config.rolls)==null?void 0:i[0])==null?void 0:s.data)!=null&&o.situational||this.config.situational)&&(r.log(`${this.constructor.name}._onRender`,["Triggering rebuild for initial situational bonus"]),setTimeout(()=>{this.rebuild()},100))}}}const T={addSituationalBonus(a,e){var t;return r.log("Config before adding bonus:",[e,a]),e&&((t=a.rolls)!=null&&t[0])&&(a.rolls[0].parts||(a.rolls[0].parts=[]),a.rolls[0].data||(a.rolls[0].data={}),a.rolls[0].data.situational=e,a.rolls[0].parts.includes("@situational")||a.rolls[0].parts.push("@situational"),r.log("Config after adding bonus:",[a])),a},buildRollConfig(a,e,t={}){var o;const i={rolls:[{parts:e.parts||[],data:e.data||{},options:{...e.options||{},...((o=e.options)==null?void 0:o._fromFlashRolls)&&{_fromFlashRolls:!0}}}],advantage:a.config.advantage||!1,disadvantage:a.config.disadvantage||!1,target:a.config.target,subject:null,chatMessage:!0,legacy:!1,...a.config.rollMode&&{rollMode:a.config.rollMode},...t},s=a.config.situational;return s&&this.addSituationalBonus(i,s),this.ensureRollFlags(i,a)},ensureRollFlags(a,e){return a.isRollRequest=!game.user.isGM,a._showRequestedBy=!0,a._requestedBy=e.config.requestedBy||"GM",a},validateAndNormalizeActors(a){return!a||a.length===0?null:(typeof a[0]=="string"&&(a=a.map(e=>game.actors.get(e)).filter(e=>e)),a.length>0?a:null)},getRollClass(a){const e=a==null?void 0:a.toLowerCase();return[d.DAMAGE,d.HEALING].includes(e)?CONFIG.Dice.DamageRoll||CONFIG.Dice.BasicRoll:[d.FORMULA,d.CUSTOM,d.HIT_DIE].includes(e)?CONFIG.Dice.BasicRoll:CONFIG.Dice.D20Roll},shouldShowDC(a){const e=a==null?void 0:a.toLowerCase();return[d.SAVE,d.SAVING_THROW,d.ABILITY,d.ABILITY_CHECK,d.CONCENTRATION,d.SKILL,d.TOOL].includes(e)},createBaseRollConfig(a,e,t){const i=e==null?void 0:e.toLowerCase(),s={data:a.getRollData(),subject:a,rolls:[{parts:[],data:a.getRollData(),options:{}}]};switch(i){case d.SKILL:s.skill=t;break;case d.TOOL:s.tool=t;break;case d.SAVE:case d.SAVING_THROW:case d.ABILITY:case d.ABILITY_CHECK:s.ability=t;break;case d.HIT_DIE:s.rolls[0].options.flavor="Hit Die";break}return s},createMessageConfig(a,e=null){const t={create:!1,data:{speaker:ChatMessage.getSpeaker({actor:a})}};return e&&(t.rollMode=e),t},async executeRollDialog(a,e,t,i){const s=new a(e,t,i);return await new Promise(l=>{s.addEventListener("close",()=>{l({rolls:s.rolls,config:s.config,message:s.message,sendRequest:s.sendRequest})},{once:!0}),s.render({force:!0})})},processDialogResult(a,e,t,i,s={}){var R,C,y,b,_,I;if(!(a!=null&&a.rolls)||a.rolls.length===0)return null;const o=t==null?void 0:t.toLowerCase(),l=a.rolls[0];let n=!1,c=!1;((R=l==null?void 0:l.options)==null?void 0:R.advantageMode)!==void 0&&(n=l.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE,c=l.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE);const u=((C=l==null?void 0:l.data)==null?void 0:C.situational)||"",g=(y=l==null?void 0:l.options)==null?void 0:y.target,h={rolls:[{parts:((b=l==null?void 0:l.parts)==null?void 0:b.slice())||[],data:u?{situational:u}:{},options:g?{target:g}:{}}],subject:e[0],advantage:n,disadvantage:c,target:g,sendRequest:a.sendRequest,isRollRequest:a.sendRequest,skipDialog:s.skipDialogs||!1,chatMessage:!0},f=O(),m=E.get(f.publicPlayerRolls.tag)===!0,p=this.determineRollMode(m,(_=a.message)==null?void 0:_.rollMode);return h.rollMode=p,(I=a.config)!=null&&I.ability&&[d.SKILL,d.TOOL].includes(o)&&(h.ability=a.config.ability),h},determineRollMode(a,e){return e||(a?CONST.DICE_ROLL_MODES.PUBLIC:game.settings.get("core","rollMode"))},isPlayerOwned(a){return Object.entries(a.ownership).some(([e,t])=>{const i=game.users.get(e);return i&&!i.isGM&&t>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})}};class $ extends ne(dnd5e.applications.dice.D20RollConfigurationDialog){constructor(e={},t={},i={}){i.rollType=i.rollType||CONFIG.Dice.D20Roll,super(e,t,i),r.log("constructor - initializing GM Dialog",[e,t,i])}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}get title(){return this.windowTitle||super.title}_prepareConfigurationData(e,t,i,s){r.log("_prepareConfigurationData",[e,t,i,s]);const o=super._prepareConfigurationData(e,t,i,s);return o.showDC=this.showDC,o.dcValue=this.dcValue,o.sendRequest=this.sendRequest,o.actorCount=this.actors.length,o}async _preparePartContext(e,t,i){return r.log("_preparePartContext",[e,t,i]),t=await super._preparePartContext(e,t,i),e==="configuration"&&(t.showDC=this.showDC,t.dcValue=this.dcValue,t.sendRequest=this.sendRequest,t.actorCount=this.actors.length),t}async _onRender(e,t){if(r.log("_onRender",[e,t]),super._onRender(e,t),this.element.querySelector(".gm-roll-config-fields"))return;let i=this.element.querySelector(".rolls .formulas");if(i&&(this.showDC||this.actors.length>0)){const s={showDC:this.showDC,dcValue:this.dcValue,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},o=await W.renderTemplate(`modules/${F}/templates/gm-roll-config-fields.hbs`,s),l=document.createElement("div");l.className="gm-roll-config-fields",l.innerHTML=o,i.parentNode.insertBefore(l,i)}this._attachButtonListeners()}_attachButtonListeners(){r.log("_attachButtonListeners",[this.element]),this.element.querySelectorAll('[data-action="advantage"], [data-action="normal"], [data-action="disadvantage"]').forEach(t=>{t.addEventListener("click",i=>{i.currentTarget.dataset.action})})}static async initConfiguration(e,t,i,s={}){var b,_,I,A,S,D,L,V,v;if(e=T.validateAndNormalizeActors(e),!e)return null;const o=e[0];r.log("GMRollConfigDialog, initConfiguration",[]);const l=t==null?void 0:t.toLowerCase(),n=O(),c=E.get(n.publicPlayerRolls.tag)===!0,u=T.determineRollMode(c),g=T.shouldShowDC(l),h=T.getRollClass(l),f=T.createBaseRollConfig(o,t,i),m=T.createMessageConfig(o,u),p={options:{actors:e,sendRequest:e.some(H=>T.isPlayerOwned(H)),showDC:g,rollKey:i,rollType:h,rollTypeString:l,window:{title:$._getRollTitle(l,i,o),subtitle:$._getSubtitle(e)},...s}},R=await T.executeRollDialog(this,f,m,p.options),C=T.processDialogResult(R,e,t,i,s);if(!C)return null;if((b=R.config)!=null&&b.ability&&[d.SKILL,d.TOOL].includes(l)){const H=((I=(_=o.system.skills)==null?void 0:_[i])==null?void 0:I.ability)||((S=(A=CONFIG.DND5E.skills)==null?void 0:A[i])==null?void 0:S.ability);R.config.ability!==H&&(C.ability=R.config.ability)}let y=p.options.window.title;if(R.config.ability&&[d.SKILL,d.TOOL].includes(l)){const H=((D=CONFIG.DND5E.abilities[R.config.ability])==null?void 0:D.label)||R.config.ability;if(l===d.SKILL){const k=((L=CONFIG.DND5E.skills[i])==null?void 0:L.label)||i;y=game.i18n.format("DND5E.SkillPromptTitle",{skill:k,ability:H})}else if(l===d.TOOL){const k=(v=(V=CONFIG.DND5E.enrichmentLookup)==null?void 0:V.tools)==null?void 0:v[i];let Y=i;if(k!=null&&k.id){const x=dnd5e.documents.Trait.getBaseItem(k.id,{indexOnly:!0});Y=(x==null?void 0:x.name)||i}y=game.i18n.format("DND5E.ToolPromptTitle",{tool:Y,ability:H})}}return C.rollTitle=y,C.rollType=l,C.rollKey=i,C}static _getRollTitle(e,t,i){var l,n,c,u,g,h,f,m,p,R,C,y,b,_,I,A,S,D;r.log("GMRollConfigDialog._getRollTitle",[e,t,i]),r.log("GMRollConfigDialog._getRollTitle - Detailed",{rollType:e,rollKey:t,actorName:i==null?void 0:i.name,actorAbilities:(l=i==null?void 0:i.system)!=null&&l.abilities?Object.keys(i.system.abilities):[],actorSkills:(n=i==null?void 0:i.system)!=null&&n.skills?Object.keys(i.system.skills):[],actorInitAbility:(g=(u=(c=i==null?void 0:i.system)==null?void 0:c.attributes)==null?void 0:u.init)==null?void 0:g.ability});let s="";const o=e==null?void 0:e.toLowerCase();switch([d.SAVE,d.ABILITY,d.ABILITY_CHECK].includes(o)&&!t&&r.warn("Missing rollKey for roll type",[o,t]),o){case d.SKILL:const L=((h=CONFIG.DND5E.skills[t])==null?void 0:h.label)||t,V=(f=i==null?void 0:i.system.skills)==null?void 0:f[t],v=(V==null?void 0:V.ability)||((m=CONFIG.DND5E.skills[t])==null?void 0:m.ability)||"int",H=((p=CONFIG.DND5E.abilities[v])==null?void 0:p.label)||v;s=game.i18n.format("DND5E.SkillPromptTitle",{skill:L,ability:H});break;case d.SAVE:case d.SAVING_THROW:const k=((R=CONFIG.DND5E.abilities[t])==null?void 0:R.label)||t;s=game.i18n.format("DND5E.SavePromptTitle",{ability:k});break;case d.ABILITY:case d.ABILITY_CHECK:const Y=((C=CONFIG.DND5E.abilities[t])==null?void 0:C.label)||t;s=game.i18n.format("DND5E.AbilityPromptTitle",{ability:Y});break;case d.CONCENTRATION:s=game.i18n.localize("DND5E.Concentration");break;case d.TOOL:const x=(b=(y=CONFIG.DND5E.enrichmentLookup)==null?void 0:y.tools)==null?void 0:b[t];let K=t;if(x!=null&&x.id){const ge=dnd5e.documents.Trait.getBaseItem(x.id,{indexOnly:!0});K=(ge==null?void 0:ge.name)||t}const M=(_=i==null?void 0:i.system.tools)==null?void 0:_[t],de=(M==null?void 0:M.ability)||((S=(A=(I=CONFIG.DND5E.enrichmentLookup)==null?void 0:I.tools)==null?void 0:A[t])==null?void 0:S.ability)||"int",qe=((D=CONFIG.DND5E.abilities[de])==null?void 0:D.label)||de;s=game.i18n.format("DND5E.ToolPromptTitle",{tool:K,ability:qe});break;case d.DEATH_SAVE:s=game.i18n.localize("DND5E.DeathSave");break;case d.INITIATIVE:case d.INITIATIVE_DIALOG:s=game.i18n.localize("DND5E.Initiative");break;default:s=game.i18n.localize("DND5E.Roll")}return r.log("_getRollTitle",[o,s]),s}static _getSubtitle(e=[]){return e.length===1?e[0].name:e.length>1?game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.multipleActors"):""}}class Ae extends ne(dnd5e.applications.dice.RollConfigurationDialog){constructor(e={},t={},i={}){i.rollType=CONFIG.Dice.BasicRoll||Roll,i.showDC=!1,super(e,t,i),r.log("constructor",[e,t,i])}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config","hit-die-config"]})}_prepareConfigurationData(e,t,i,s){const o=super._prepareConfigurationData(e,t,i,s);return r.log("GMHitDieConfigDialog._prepareConfigurationData",[o]),o.formula="Hit Die (varies by actor)",o.sendRequest=this.sendRequest,o.actorCount=this.actors.length,o}async _preparePartContext(e,t,i){return t=await super._preparePartContext(e,t,i),e==="configuration"&&(t.sendRequest=this.sendRequest,t.actorCount=this.actors.length,t.formula="Hit Die (varies by actor)"),t}async _onRender(e,t){if(super._onRender(e,t),this.element.querySelector(".gm-roll-config-fields"))return;let i=this.element.querySelector(".rolls .formulas");if(i&&this.actors.length>0){const s={showDC:!1,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},o=await W.renderTemplate(`modules/${F}/templates/gm-roll-config-fields.hbs`,s),l=document.createElement("div");l.className="gm-roll-config-fields",l.innerHTML=o,i.parentNode.insertBefore(l,i)}}async _processSubmitData(e,t,i){await super._processSubmitData(e,t,i),this.sendRequest=i.get("crlngn-send-request")!=="false",r.log("_processSubmitData",[i,this.config])}_finalizeRolls(e){const t=super._finalizeRolls(e);return this.config.sendRequest=this.sendRequest,r.log("GMHitDieConfigDialog._finalizeRolls - before merge",[t]),t}static async initConfiguration(e,t,i,s={}){var p;if(e=T.validateAndNormalizeActors(e),!e)return null;const o=e[0];r.log("GMHitDieConfigDialog, initConfiguration",[]);const l=O(),n=E.get(l.publicPlayerRolls.tag)===!0,c=T.determineRollMode(n),u={data:o.getRollData(),subject:o,rolls:[{parts:[],data:o.getRollData(),options:{flavor:"Hit Die Roll"}}]},g=T.createMessageConfig(o,c),h={options:{actors:e,sendRequest:e.some(R=>T.isPlayerOwned(R)),rollKey:i,rollType:CONFIG.Dice.BasicRoll||Roll,window:{title:game.i18n.localize("DND5E.HitDice"),subtitle:$._getSubtitle(e)},...s}},f=await T.executeRollDialog(this,u,g,h.options);if(!(f!=null&&f.rolls)||f.rolls.length===0)return null;r.log("GMHitDieConfigDialog - dialog result",[f.rolls]);const m=T.processDialogResult(f,e,t,i,s);return m?((p=f.config)!=null&&p.ability&&(m.ability=f.config.ability),m):null}}class Oe extends ne(dnd5e.applications.dice.SkillToolRollConfigurationDialog){constructor(e={},t={},i={}){const s=foundry.utils.mergeObject(e,{chooseAbility:!0});i.rollType=i.rollType||CONFIG.Dice.D20Roll,super(s,t,i),r.log("constructor",[e,t,i])}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}_prepareConfigurationData(e,t,i,s){r.log("_prepareConfigurationData",[e,t,i,s]);const o=super._prepareConfigurationData(e,t,i,s);return o.showDC=this.showDC,o.dcValue=this.dcValue,o.sendRequest=this.sendRequest,o.actorCount=this.actors.length,o}async _preparePartContext(e,t,i){return r.log("_preparePartContext",[e,t,i]),t=await super._preparePartContext(e,t,i),e==="configuration"&&(t.showDC=this.showDC,t.dcValue=this.dcValue,t.sendRequest=this.sendRequest,t.actorCount=this.actors.length),t}async _onRender(e,t){if(r.log("_onRender",[e,t]),super._onRender(e,t),this.element.querySelector(".gm-roll-config-fields"))return;let i=this.element.querySelector(".rolls .formulas");if(i&&(this.showDC||this.actors.length>0)){const s={showDC:this.showDC,dcValue:this.dcValue,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},o=await W.renderTemplate(`modules/${F}/templates/gm-roll-config-fields.hbs`,s),l=document.createElement("div");l.className="gm-roll-config-fields",l.innerHTML=o,i.parentNode.insertBefore(l,i)}this._attachButtonListeners()}_attachButtonListeners(){r.log("_attachButtonListeners",[]),this.element.querySelectorAll('[data-action="advantage"], [data-action="normal"], [data-action="disadvantage"]').forEach(t=>{t.addEventListener("click",i=>{i.currentTarget.dataset.action})})}static async initConfiguration(e,t,i,s={}){var b,_,I,A,S,D;if(e=T.validateAndNormalizeActors(e),!e)return null;const o=e[0];r.log("GMSkillToolConfigDialog, initConfiguration",[]);const l=t==null?void 0:t.toLowerCase(),n=O(),c=E.get(n.publicPlayerRolls.tag)===!0,u=T.determineRollMode(c),g=T.shouldShowDC(l),h=CONFIG.Dice.D20Roll;let f=null;if(l===d.SKILL){const L=o.system.skills[i];f=(L==null?void 0:L.ability)||((b=CONFIG.DND5E.skills[i])==null?void 0:b.ability)||"int"}else if(l===d.TOOL){const L=(_=o.system.tools)==null?void 0:_[i];f=(L==null?void 0:L.ability)||((S=(A=(I=CONFIG.DND5E.enrichmentLookup)==null?void 0:I.tools)==null?void 0:A[i])==null?void 0:S.ability)||"int"}const m={data:o.getRollData(),subject:o,ability:f,chooseAbility:!0,rolls:[{parts:[],data:o.getRollData(),options:{}}]};l===d.SKILL?m.skill=i:l===d.TOOL&&(m.tool=i);const p=T.createMessageConfig(o,u),R={options:{actors:e,sendRequest:e.some(L=>T.isPlayerOwned(L)),showDC:g,rollKey:i,rollType:h,rollTypeString:l,window:{title:$._getRollTitle(l,i,o),subtitle:$._getSubtitle(e)},...s}},C=await T.executeRollDialog(this,m,p,R.options),y=T.processDialogResult(C,e,t,i,s);return y?((D=C.config)!=null&&D.ability&&[d.SKILL,d.TOOL].includes(l)&&(y.ability=C.config.ability),y.rollTitle=R.options.window.title,y.rollType=l,y.rollKey=i,y):null}}class xe extends ne(dnd5e.applications.dice.DamageRollConfigurationDialog){constructor(e={},t={},i={}){const s=foundry.utils.mergeObject({configure:!0},e);super(s,t,i),r.log("GMDamageConfigDialog.constructor",[s,t,i])}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","damage-roll","gm-roll-config"]})}_prepareConfigurationData(e,t,i,s){r.log("GMDamageConfigDialog._prepareConfigurationData",[e,t,i,s]);const o=super._prepareConfigurationData(e,t,i,s);return o.sendRequest=this.sendRequest,o.actorCount=this.actors.length,o}async _onRender(e,t){if(await super._onRender(e,t),this.actors.length>0){const i=this.element.querySelector(".rolls + .dialog-buttons");if(i&&!this.element.querySelector(".gm-roll-config-fields")){const s=document.createElement("div");s.className="gm-roll-config-fields",s.innerHTML=`
          <div class="form-group">
            <label class="checkbox">
              <input type="checkbox" name="crlngn-send-request" ${this.sendRequest?"checked":""}>
              ${game.i18n.localize("CRLNGN_ROLL_REQUESTS.ui.dialogs.sendRequestToPlayers")}
            </label>
          </div>
        `,i.insertAdjacentElement("beforebegin",s)}}}static async initConfiguration(e,t,i,s={},o={},l={}){var _,I,A;if(e=T.validateAndNormalizeActors(e),!e)return null;const n=e[0];r.log("GMDamageConfigDialog, initConfiguration",[]);const c=O(),u=E.get(c.publicPlayerRolls.tag)===!0,g=t==null?void 0:t.toLowerCase(),h=T.determineRollMode(u,(_=y.message)==null?void 0:_.rollMode),f={subject:o.subject,data:n.getRollData(),critical:o.critical||!1,rolls:o.rolls||[{parts:[],data:n.getRollData(),options:{}}]},m=T.createMessageConfig(n,h),{position:p,...R}=(l==null?void 0:l.options)||{},C={options:{actors:e,sendRequest:e.some(S=>T.isPlayerOwned(S)),rollKey:i,rollType:CONFIG.Dice.DamageRoll||CONFIG.Dice.BasicRoll,rollTypeString:g,window:{title:game.i18n.localize("DND5E.DamageRoll"),subtitle:$._getSubtitle(e)},...R,...s}},y=await T.executeRollDialog(this,f,m,C.options);if(!((I=y==null?void 0:y.rolls)!=null&&I.length))return r.log("GMDamageConfigDialog, initConfiguration - cancelled"),null;r.log("GMDamageConfigDialog, initConfiguration - result",[y]);const b={rolls:y.rolls,sendRequest:y.sendRequest,critical:((A=y.config)==null?void 0:A.critical)||!1,skipDialog:s.skipDialogs||!1,chatMessage:!0};return b.rollMode=h,b.rollTitle=C.options.window.title,b.rollType=g,b.rollKey=i,r.log("GMDamageConfigDialog, initConfiguration - final result",[b]),b}}class Be extends ne(dnd5e.applications.dice.AttackRollConfigurationDialog){constructor(e={},t={},i={}){super(e,t,i),r.log("GMAttackConfigDialog.constructor",[e,t,i])}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}_prepareConfigurationData(e,t,i,s){r.log("GMAttackConfigDialog._prepareConfigurationData",[e,t,i,s]);const o=super._prepareConfigurationData(e,t,i,s);return o.sendRequest=this.sendRequest,o.actorCount=this.actors.length,o}async _preparePartContext(e,t,i){return t=await super._preparePartContext(e,t,i),e==="configuration"&&(t.sendRequest=this.sendRequest,t.actorCount=this.actors.length),t}async _onRender(e,t){if(await super._onRender(e,t),this.element.querySelector(".gm-roll-config-fields"))return;let i=this.element.querySelector(".rolls .formulas");if(i&&this.actors.length>0){const s={showDC:!1,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},o=await W.renderTemplate(`modules/${F}/templates/gm-roll-config-fields.hbs`,s),l=document.createElement("div");l.className="gm-roll-config-fields",l.innerHTML=o,i.parentNode.insertBefore(l,i)}}_finalizeRolls(e){return this.config.sendRequest=this.sendRequest,!this.sendRequest&&this.config.isRollRequest&&(this.config.isRollRequest=!1),super._finalizeRolls(e)}static async initConfiguration(e,t,i,s={},o={},l={}){var V,v,H,k,Y,x,K;if(e=T.validateAndNormalizeActors(e),!e)return null;const n=e[0];r.log("GMAttackConfigDialog, initConfiguration",[]);const c=O(),u=E.get(c.publicPlayerRolls.tag)===!0,g=t==null?void 0:t.toLowerCase(),h={subject:o.subject||n,data:n.getRollData(),rolls:[{parts:[],data:n.getRollData(),options:{}}]},f=T.determineRollMode(u),m=T.createMessageConfig(n,f),{position:p,...R}=(l==null?void 0:l.options)||{},C={options:{actors:e,sendRequest:e.some(M=>T.isPlayerOwned(M)),rollKey:i,rollType:CONFIG.Dice.D20Roll,rollTypeString:g,window:{title:game.i18n.localize("DND5E.Attack"),subtitle:$._getSubtitle(e)},...R,...s}},y=await T.executeRollDialog(this,h,m,C.options);if(r.log("GMAttackConfigDialog, initConfiguration",[y==null?void 0:y.sendRequest]),!(y!=null&&y.rolls)||y.rolls.length===0)return null;const b=y.rolls[0];let _=!1,I=!1;((V=b==null?void 0:b.options)==null?void 0:V.advantageMode)!==void 0&&(_=b.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE,I=b.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE);const A=((v=b==null?void 0:b.data)==null?void 0:v.situational)||"",S=(H=b==null?void 0:b.options)==null?void 0:H.target,D={rolls:[{parts:[],data:A?{situational:A}:{},options:{...S&&{target:S},...((k=b==null?void 0:b.options)==null?void 0:k.ammunition)&&{ammunition:b.options.ammunition},...((Y=b==null?void 0:b.options)==null?void 0:Y.attackMode)&&{attackMode:b.options.attackMode},...((x=b==null?void 0:b.options)==null?void 0:x.mastery)!==void 0&&{mastery:b.options.mastery}}}],subject:o.subject||n,advantage:_,disadvantage:I,target:S,sendRequest:y.sendRequest,isRollRequest:y.sendRequest,skipDialog:s.skipDialogs||!1,chatMessage:!0},L=T.determineRollMode(u,(K=y.message)==null?void 0:K.rollMode);return D.rollMode=L,D.rollTitle=C.options.window.title,D.rollType=g,D.rollKey=i,r.log("GMAttackConfigDialog, initConfiguration - SIMPLIFIED result",[D]),D}}class oe{static isModuleActive(e){const t=game.modules.get(e);return t&&t.active}static getMidiQOL(){return this.isMidiQOLActive()&&typeof MidiQOL<"u"?MidiQOL:null}}class be{static findActivityForRoll(e,t){var o;if(!((o=e==null?void 0:e.system)!=null&&o.activities))return null;const i=e.system.activities;switch(t==null?void 0:t.toLowerCase()){case d.ATTACK:const l=i.getByType("attack");return(l==null?void 0:l[0])||null;case d.DAMAGE:const n=i.getByType("attack");if((n==null?void 0:n.length)>0)return n[0];const c=i.getByType("damage");if((c==null?void 0:c.length)>0)return c[0];const u=i.getByType("save");return(u==null?void 0:u.length)>0?u[0]:null;case d.ITEM_SAVE:const g=i.getByType("save");return(g==null?void 0:g[0])||null;default:return null}}static getActivitiesByType(e,t){var i;return(i=e==null?void 0:e.system)!=null&&i.activities?e.system.activities.getByType(t):[]}static hasActivityForRoll(e,t){return r.log("hasActivityForRoll",[e,t]),!!this.findActivityForRoll(e,t)}static async executeActivityRoll(e,t,i,s,o){var u,g,h,f,m,p,R,C,y,b;r.log("executeActivityRoll",[e,t,i,s,o]);const l=e.items.get(i);if(!l)throw new Error(`Item ${i} not found on actor ${e.name}`);let n=null;if(s&&(n=(u=l.system.activities)==null?void 0:u.get(s)),n=n||this.findActivityForRoll(l,t),!n)throw new Error(`Activity not found on item ${l.name}`);r.log("executeActivityRoll - activity",[n,t]);const c=t==null?void 0:t.toLowerCase();if(n)switch(c){case d.ATTACK:r.log("executeActivityRoll - is attack activity",[o]);const _={attackMode:o.usage.attackMode,ammunition:o.usage.ammunition,mastery:o.usage.mastery,situational:(f=(h=(g=o.usage.rolls)==null?void 0:g[0])==null?void 0:h.data)==null?void 0:f.situational,advantage:o.usage.advantage,disadvantage:o.usage.disadvantage};await n.item.setFlag(F,"tempAttackConfig",_),r.log("executeActivityRoll - stored temp config as flag",[_]);try{if(oe.isModuleActive("midi-qol")&&oe.getMidiQOL()){const S=await be.syntheticItemRoll(l,{...o});return}await n.use(o.usage,o.dialog,{...o.message,create:!0})}finally{await n.item.unsetFlag(F,"tempAttackConfig")}return;case d.DAMAGE:if(oe.isModuleActive("midi-qol")){const A=oe.getMidiQOL();if(A){const S=(m=A.Workflow)==null?void 0:m.getWorkflow(n.uuid);await S.activity.rollDamage({...o,workflow:S});return}}r.log("executeActivityRoll - damage roll",[n,o]);const I={critical:o.usage.critical||!1,event:o.usage.event,rollMode:(p=o.message)==null?void 0:p.rollMode,create:((R=o.message)==null?void 0:R.create)!==!1};return(b=(y=(C=o.usage.rolls)==null?void 0:C[0])==null?void 0:y.data)!=null&&b.situational&&(I.data||(I.data={}),I.data.situational=o.usage.rolls[0].data.situational),r.log("executeActivityRoll - damage config with situational",[I]),n!=null&&n.previousAttack||n!=null&&n.damageOnly?await n.rollDamage(I,o.dialog,o.message):await n.rollDamage(I,o.dialog,o.message);case d.ITEM_SAVE:return await l.use({activity:n.id},{skipDialog:o.fastForward});default:r.log("executeActivityRoll - unknown roll type",[c]);return}throw new Error(`No suitable method found for ${c} on item ${l.name}`)}static getActivityDisplayInfo(e){return r.log("getActivityDisplayInfo",[e]),e?{name:e.name||e.constructor.metadata.label,type:e.type,icon:e.constructor.metadata.icon,canAttack:e.type==="attack",canDamage:["attack","damage","save"].includes(e.type),canSave:e.type==="save"}:null}static getDamageFormula(e){var i,s;if(r.log("getDamageFormula",[e]),!((s=(i=e==null?void 0:e.damage)==null?void 0:i.parts)!=null&&s.length))return null;const t=e.damage.parts.map(o=>o.formula).filter(o=>o);return t.length>0?t.join(" + "):null}static async syntheticItemRoll(e,t={}){r.log("syntheticItemRoll",[e,t]);const i=oe.getMidiQOL();if(!i){r.warn("MidiQOL is not active");return}let s={consumeUsage:!1,consumeSpellSlot:!1},o={configureDialog:!0,workflowOptions:{autoRollAttack:!1,autoFastAttack:!1,autoRollDamage:"none",autoFastDamage:!1}};return t={...s,...t},await i.completeItemUse(e,t,o)}static async replaceDamage(e,t,{ignoreCrit:i=!1,damageType:s}={}){t=String(t),e.isCritical&&!i&&(t=await rollUtils.getCriticalFormula(t,e.item.getRollData()));let o=await new CONFIG.Dice.DamageRoll(t).evaluate();return await e.setDamageRolls([o]),o}}const{ApplicationV2:ze,HandlebarsApplicationMixin:$e}=foundry.applications.api;class ye extends $e(ze){constructor(e={}){super(e),this.formula=e.formula||"",this.readonly=e.readonly||!1,this.actor=e.actor,this.callback=e.callback,this.diceCounts={}}static get DEFAULT_OPTIONS(){return foundry.utils.mergeObject(super.DEFAULT_OPTIONS,{id:"crlngn-custom-roll-dialog",classes:["flash-rolls-5e-dialog","crlngn-custom-roll-dialog"],tag:"div",window:{title:"CRLNGN_ROLLS.ui.dialogs.customRollTitle",icon:"fas fa-dice-d20",resizable:!1,positioned:!0,frame:!0},position:{width:420,height:"auto"}})}_onClickAction(e,t){switch(t.dataset.action){case"rollDice":return this.rollDice(e,t);case"addDie":return this.addDie(e,t);case"cancel":return this.cancel(e,t)}}async _prepareContext(e={}){return{...await super._prepareContext(e),formula:this.formula,readonly:this.readonly}}_attachPartListeners(e,t,i){super._attachPartListeners(e,t,i);const s=t.querySelector("#custom-roll-formula"),o=t.querySelector("#formula-validation-message");s&&!this.readonly&&(s.addEventListener("input",l=>{this.formula=l.target.value.trim(),this.updateValidationMessage(o)}),this.formula&&this.updateValidationMessage(o))}updateValidationMessage(e){if(!e)return;if(!this.formula){e.textContent="&nbsp;",e.classList.remove("error","success");return}this.validateFormula(this.formula)?(e.textContent=game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.formulaValid"),e.classList.remove("error"),e.classList.add("success")):(e.textContent=game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.formulaInvalid"),e.classList.remove("success"),e.classList.add("error"))}addDie(e,t){const i=t.dataset.die,s=this.element.querySelector("#custom-roll-formula");if(!s)return;const o=s.value.trim();if(o){const l=/(\d*)d(\d+)/g,n=new Map;let c=o,u;for(;(u=l.exec(o))!==null;){const f=parseInt(u[1]||"1"),m=u[2];n.set(m,(n.get(m)||0)+f),c=c.replace(u[0],"").trim()}const g=i.substring(1);n.set(g,(n.get(g)||0)+1);const h=[];for(const[f,m]of n)h.push(`${m}d${f}`);c=c.replace(/^\+\s*|\s*\+\s*$|\s*\+\s*\+/g,"").trim(),c&&c!=="+"?this.formula=`${h.join(" + ")} + ${c}`:this.formula=h.join(" + ")}else this.formula=`1${i}`;s.value=this.formula,s.dispatchEvent(new Event("input"))}validateFormula(e){var t;if(!e||e.trim()==="")return!1;try{return Roll.validate(e)}catch{try{return new Roll(e,((t=this.actor)==null?void 0:t.getRollData())||{}),!0}catch{return!1}}}async rollDice(){if(r.log("rollDice"),!this.validateFormula(this.formula)){ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:this.formula||"empty"}));return}this.callback&&await this.callback(this.formula),this.close()}cancel(){this.close()}static async prompt(e={}){return new Promise(t=>{const i=new this({...e,callback:s=>t(s)});i.addEventListener("close",()=>{i._resolved||t(null)}),i.render(!0)})}async close(e={}){return this._resolved=!0,super.close(e)}}N(ye,"PARTS",{main:{template:`modules/${j.ID}/templates/custom-roll-dialog.hbs`},footer:{template:`modules/${j.ID}/templates/custom-roll-dialog-footer.hbs`}});const B={ability:async(a,e,t,i,s)=>{var l;r.log("RollHandlers.ability #1",[t]);const o=T.buildRollConfig(e,t,{ability:e.rollKey});r.log("RollHandlers.ability #2",[(l=o.rolls)==null?void 0:l[0]]),r.log("RollHandlers.ability - messageConfig",s),await a.rollAbilityCheck(o,i,s)},abilitycheck:async(a,e,t,i,s)=>B.ability(a,e,t,i,s),save:async(a,e,t,i,s)=>{var l;const o=T.buildRollConfig(e,t,{ability:((l=e.config)==null?void 0:l.ability)||e.rollKey});await a.rollSavingThrow(o,i,s)},savingthrow:async(a,e,t,i,s)=>B.save(a,e,t,i,s),skill:async(a,e,t,i,s)=>{var n,c,u,g,h,f;r.log("RollHandlers.skill #1",[e,t,i]);const o=((c=(n=a.system.skills)==null?void 0:n[e.rollKey])==null?void 0:c.ability)||((g=(u=CONFIG.DND5E.skills)==null?void 0:u[e.rollKey])==null?void 0:g.ability)||void 0,l=T.buildRollConfig(e,t,{skill:e.rollKey,chooseAbility:i.configure!==!1,ability:e.config.ability||o});if(e.config.ability&&i.configure===!1){const m=((h=CONFIG.DND5E.skills[e.rollKey])==null?void 0:h.label)||e.rollKey,p=((f=CONFIG.DND5E.abilities[e.config.ability])==null?void 0:f.label)||e.config.ability,R=game.i18n.format("DND5E.SkillPromptTitle",{skill:m,ability:p});s.data=s.data||{},s.data.flavor=R}r.log("RollHandlers.skill #2",[l,i,s]),await a.rollSkill(l,i,s)},tool:async(a,e,t,i,s)=>{var c,u,g,h,f,m,p;r.log("RollHandlers.tool #1",[e,t]);const o=(c=a.system.tools)==null?void 0:c[e.rollKey],l=(o==null?void 0:o.ability)||((h=(g=(u=CONFIG.DND5E.enrichmentLookup)==null?void 0:u.tools)==null?void 0:g[e.rollKey])==null?void 0:h.ability)||"int",n=T.buildRollConfig(e,t,{tool:e.rollKey,chooseAbility:i.configure!==!1,ability:e.config.ability||l});if(e.config.ability&&i.configure===!1){const R=(m=(f=CONFIG.DND5E.enrichmentLookup)==null?void 0:f.tools)==null?void 0:m[e.rollKey];let C=e.rollKey;if(R!=null&&R.id){const _=dnd5e.documents.Trait.getBaseItem(R.id,{indexOnly:!0});C=(_==null?void 0:_.name)||e.rollKey}const y=((p=CONFIG.DND5E.abilities[e.config.ability])==null?void 0:p.label)||e.config.ability,b=game.i18n.format("DND5E.ToolPromptTitle",{tool:C,ability:y});s.data=s.data||{},s.data.flavor=b}r.log("RollHandlers.tool #2",[n,i,s]),await a.rollToolCheck(n,i,s)},concentration:async(a,e,t,i,s)=>{const o=T.buildRollConfig(e,t);await a.rollConcentration(o,i,s)},attack:async(a,e,t,i,s)=>{await B.handleActivityRoll(a,d.ATTACK,e,t,i,s)},damage:async(a,e,t,i,s)=>{await B.handleActivityRoll(a,d.DAMAGE,e,t,i,s)},itemsave:async(a,e,t,i,s)=>{await B.handleActivityRoll(a,d.ITEM_SAVE,e,t,i,s)},initiative:async(a,e,t,i,s)=>{if(!game.combat){ui.notifications.warn(game.i18n.localize("COMBAT.NoneActive"));return}const o=T.buildRollConfig(e,t),l=e.config.situational||t.data.situational||"";if(l&&i.configure&&!game.user.isGM&&(a._initiativeSituationalBonus=l),r.log("RollHandlers.initiative #1",[a,e,t,i,s]),i.configure&&!game.user.isGM)await a.rollInitiativeDialog();else{if(!game.combat.getCombatantsByActor(a.id)){r.log("RollHandlers.initiative - combatant not found",[a,game.combat]);return}await a.rollInitiative({createCombatants:!0,rerollInitiative:!0},o)}},initiativedialog:async(a,e,t,i,s)=>B.initiative(a,e,t,i,s),deathsave:async(a,e,t,i,s)=>{const o=T.buildRollConfig(e,t);await a.rollDeathSave(o,i,s)},hitdie:async(a,e,t,i,s)=>{i.configure=game.user.isGM?i.configure:!0;const o=T.buildRollConfig(e,t,{denomination:e.rollKey});r.log("RollHandlers.hitdie",[o,i,s]),await a.rollHitDie(o,i,s)},custom:async(a,e,t,i,s)=>{await B.handleCustomRoll(a,e,i,s)},async handleActivityRoll(a,e,t,i,s,o){var l,n;if(r.log("RollHandlers.handleActivityRoll",[e,t,i]),t.rollKey){const c=T.buildRollConfig(t,i),u=((n=(l=c.rolls)==null?void 0:l[0])==null?void 0:n.options)||{},g={usage:{...t.config,rolls:c.rolls,...u.attackMode&&{attackMode:u.attackMode},...u.ammunition&&{ammunition:u.ammunition},...u.mastery!==void 0&&{mastery:u.mastery}},dialog:s,message:o};r.log("handleActivityRoll - final activity config",[g]),await be.executeActivityRoll(a,e,t.rollKey,t.activityId,g)}},async handleCustomRoll(a,e,t,i){var l,n,c;const s=e.rollKey;if((t==null?void 0:t.configure)===!1){try{const u=new Roll(s,a.getRollData());u.options=u.options||{},u.options.isRollRequest=((l=e.config)==null?void 0:l.isRollRequest)!==!1,await u.evaluate({async:!0}),await u.toMessage({speaker:ChatMessage.getSpeaker({actor:a}),flavor:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${d.CUSTOM}`),rollMode:(i==null?void 0:i.rollMode)||((n=e.config)==null?void 0:n.rollMode)||game.settings.get("core","rollMode"),isRollRequest:((c=e.config)==null?void 0:c.isRollRequest)!==!1,create:(i==null?void 0:i.create)!==!1})}catch{ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:s}))}return}new ye({formula:s,readonly:!0,actor:a,callback:async u=>{try{const g=new Roll(u,a.getRollData());g.options=g.options||{},g.options.isRollRequest=!0,await g.evaluate({async:!0}),await g.toMessage({speaker:ChatMessage.getSpeaker({actor:a}),flavor:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${d.CUSTOM}`),rollMode:e.config.rollMode,isRollRequest:!0,_showRequestedBy:!0,_requestedBy:e.config.requestedBy||"GM"})}catch{ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:u}))}}}).render(!0)},async handleHitDieRecovery(a){const e=foundry.utils.mergeObject({type:"long",deltas:{hitDice:0},newDay:!1,rolls:[],updateData:{},updateItems:[]},{});"dhd"in e&&(e.deltas.hitDice=e.dhd),a._getRestHitDiceRecovery({maxHitDice:a.system.attributes.hd.max,type:"long"},e),e.dhd=e.deltas.hitDice,e.longRest=!0;try{if(e.updateData&&Object.keys(e.updateData).length>0){const t=await a.update(e.updateData,{isRest:!1})}else r.log("No actor updates to perform",[]);if(e.updateItems&&e.updateItems.length>0){const t=await a.updateEmbeddedDocuments("Item",e.updateItems,{isRest:!1})}else r.log("No item updates to perform",[])}catch(t){throw r.error("Error during updates in handleHitDieRecovery:",[t]),t}return r.log("handleHitDieRecovery #3",[e]),e}};function je(a,e){var s,o,l,n,c;let t=game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${a}`)||a;const i=a==null?void 0:a.toLowerCase();if(e)switch(i){case d.SKILL:t+=` (${((s=CONFIG.DND5E.skills[e])==null?void 0:s.label)||e})`;break;case d.SAVE:t+=` (${((o=CONFIG.DND5E.abilities[e])==null?void 0:o.label)||e})`;break;case d.ABILITY:t+=` (${((l=CONFIG.DND5E.abilities[e])==null?void 0:l.label)||e})`;break;case d.TOOL:const u=(c=(n=CONFIG.DND5E.enrichmentLookup)==null?void 0:n.tools)==null?void 0:c[e];if(u!=null&&u.id){const g=dnd5e.documents.Trait.getBaseItem(u.id,{indexOnly:!0});t+=` (${(g==null?void 0:g.name)||e})`}else t+=` (${e})`;break;case d.CUSTOM:t=`${t}: ${e}`;break}return t}function Ue(a,e=je){if(a.length===0)return;const t={};for(const s of a){const o=`${s.rollType}_${s.rollKey||""}`;t[o]||(t[o]={rollType:s.rollType,rollKey:s.rollKey,actors:[],gm:s.gm}),t[o].actors.push(s.actor)}const i=Object.values(t);if(i.length===1&&i[0].actors.length===1){const s=i[0];ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestReceived",{gm:s.gm,rollType:e(s.rollType,s.rollKey)}))}else{const s=[];for(const o of i){const l=e(o.rollType,o.rollKey),n=o.actors.join(", ");s.push(`${l} (${n})`)}ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsReceivedMultiple",{gm:i[0].gm,requests:s.join("; ")}))}}function We(a){const e=a.ownership||{};for(const[t,i]of Object.entries(e))if(i>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const s=game.users.get(t);if(s&&!s.isGM)return s}return null}function Ke(a,e=game.user){if(!(a!=null&&a.length))return;a.map(i=>canvas.tokens.get(i)).filter(i=>i).forEach(i=>i.setTarget(!0,{user:e}))}function re(a){return a.type!=="character"&&a.type!=="npc"?!1:Object.entries(a.ownership).some(([e,t])=>{const i=game.users.get(e);return i&&!i.isGM&&t>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})}function Le(a){if(a.type!=="character"&&a.type!=="npc")return!1;const e=game.scenes.active;return e&&e.tokens.some(t=>t.actorId===a.id)}function ce(a,e){if(!game.scenes.active)return;const i=canvas.tokens.placeables.filter(s=>{var o;return((o=s.actor)==null?void 0:o.id)===a});for(const s of i)e?s.control({releaseOthers:!1}):s.release()}function Ie(a){return new Promise(e=>setTimeout(e,a))}function Se(){var a;return((a=ui==null?void 0:ui.sidebar)==null?void 0:a.expanded)||!1}function Ee(a){const e=document.querySelector("body");a?e.classList.add("crlngn-sidebar-expanded"):e.classList.remove("crlngn-sidebar-expanded"),ke()}function Ye(a,e){var l;const t=[];if(!a||e.size===0)return t;const i=j.ROLL_REQUEST_OPTIONS[a];if(!i||!i.subList)return t;const s=Array.from(e)[0],o=game.actors.get(s);if(i.subList==="tools"){const n=((l=CONFIG.DND5E.enrichmentLookup)==null?void 0:l.tools)||CONFIG.DND5E.tools||{};for(const[c,u]of Object.entries(n)){let g=c;if(u!=null&&u.id){const h=dnd5e.documents.Trait.getBaseItem(u.id,{indexOnly:!0});g=(h==null?void 0:h.name)||c}else g=c.replace(/([A-Z])/g," $1").replace(/^./,h=>h.toUpperCase()).trim();t.push({id:c,name:g,rollable:!0})}t.sort((c,u)=>c.name.localeCompare(u.name))}else if(o&&i.actorPath){const n=foundry.utils.getProperty(o,i.actorPath)||{},c=CONFIG.DND5E[i.subList];for(const[u,g]of Object.entries(n)){let h="";i.subList==="skills"&&(c!=null&&c[u])||i.subList==="abilities"&&(c!=null&&c[u])?h=c[u].label:h=g.label||game.i18n.localize(g.name||u)||u,t.push({id:u,name:h,rollable:!0})}i.subList==="skills"&&t.sort((u,g)=>u.name.localeCompare(g.name))}return t}const G=class G{static notify(e,t,i={}){if(!i.batch){ui.notifications[e](t);return}i.batchData&&(G.pendingNotifications.push(i.batchData),G.notificationTimer&&clearTimeout(G.notificationTimer),G.notificationTimer=setTimeout(()=>{Ue(G.pendingNotifications),G.pendingNotifications=[],G.notificationTimer=null},G.NOTIFICATION_BATCH_DELAY))}static notifyRollRequestsSent(e,t){const i=Object.entries(e);if(i.length!==0)if(i.length===1){const s=Object.values(e)[0],o=s.actors.map(l=>l.name).join(", ");ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsSentSingle",{rollType:t,actors:o,player:s.player.name}))}else{const s=i.map(([o,l])=>{const n=l.actors.map(c=>c.name).join(", ");return`${l.player.name} (${n})`});ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsSentMultiple",{rollType:t,count:i.length,players:s.join("; ")}))}}static clearPending(){G.notificationTimer&&(clearTimeout(G.notificationTimer),G.notificationTimer=null),G.pendingNotifications=[]}};N(G,"pendingNotifications",[]),N(G,"notificationTimer",null),N(G,"NOTIFICATION_BATCH_DELAY",500);let P=G;function Qe(a){var i;const e=[],t=[];for(const s of a){const o=((i=s.system.attributes.hp)==null?void 0:i.value)||0,l=s.system.attributes.death||{},n=l.success||0,c=l.failure||0;o<=0&&n<3&&c<3?e.push(s):t.push(s.name)}return t.length>0&&P.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.actorsSkippingDeathSave",{actors:t.join(", ")})),e}function Je(a){const e=[],t=[];for(const i of a){const s=We(i);s?e.push({actor:i,owner:s}):t.push(i)}return{pcActors:e,npcActors:t}}function ke(a=!0){const e=document.querySelector("#chat-notifications #roll-privacy"),t=e?W.getFullWidth(e):0;W.addCSSVars("--flash-rolls-menu-offset",t+"px")}async function Ne(){return game.combat||(await(await Combat.create({scene:game.scenes.active.id})).activate(),P.notify("info",game.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.combatCreated"))),game.combat}async function we(a,e){if(!e.combat)return a;const t=a.map(o=>e.actors.get(o)).filter(o=>o),i=[],s=new Set;for(const o of t)e.combat.getCombatantsByActor(o.id).some(c=>c.initiative!==null)&&(i.push(o.name),s.add(o.id));if(r.log("filterActorsForInitiative",[i]),i.length>0)if(await foundry.applications.api.DialogV2.confirm({window:{title:e.i18n.localize("CRLNGN_ROLLS.ui.dialogs.rerollInitiativeTitle"),classes:["flash-rolls-5e-dialog"]},content:"<p>"+e.i18n.format("CRLNGN_ROLLS.ui.dialogs.rerollInitiative",{actors:i.join(", ")})+"</p>",rejectClose:!1,modal:!0})){for(const l of s){const n=e.combat.getCombatantsByActor(l);r.log("filterActorsForInitiative - combatants",[n]),n.forEach(c=>{c.update({initiative:null})})}return a}else{const l=a.filter(n=>!s.has(n));return l.length===0&&P.notify("info",e.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.allActorsHaveInitiative")),l}return a}class ve{static initialize(){r.log("RollInterceptor.initialize"),game.user.isGM&&this.registerHooks()}static registerHooks(){r.log("RollInterceptor.registerHooks"),this._registerHook(q.PRE_ROLL_ABILITY_CHECK,this._handlePreRoll.bind(this,d.ABILITY)),this._registerHook(q.PRE_ROLL_SAVING_THROW,this._handlePreRoll.bind(this,d.SAVE)),this._registerHook(q.PRE_ROLL_SKILL_V2,this._handlePreRoll.bind(this,d.SKILL)),this._registerHook(q.PRE_ROLL_TOOL_V2,this._handlePreRoll.bind(this,d.TOOL)),this._registerHook(q.PRE_ROLL_ATTACK_V2,this._handlePreRoll.bind(this,d.ATTACK)),this._registerHook(q.PRE_ROLL_DAMAGE_V2,this._handlePreRoll.bind(this,d.DAMAGE)),this._registerHook(q.PRE_ROLL_DEATH_SAVE_V2,this._handlePreRoll.bind(this,d.DEATH_SAVE)),this._registerHook(q.PRE_ROLL_HIT_DIE_V2,this._handlePreRoll.bind(this,d.HIT_DIE)),this._registerHook(q.PRE_ROLL_INITIATIVE,this._handlePreRollInitiative.bind(this,d.INITIATIVE)),this._registerHook(q.ROLL_INITIATIVE,this._handleRollInitiative.bind(this,d.INITIATIVE))}static _registerHook(e,t){r.log("RollInterceptor._registerHook");const i=Hooks.on(e,t);this.registeredHooks.add({hookName:e,hookId:i})}static unregisterHooks(){r.log("RollInterceptor.unregisterHooks");for(const{hookName:e,hookId:t}of this.registeredHooks)Hooks.off(e,t);this.registeredHooks.clear()}static _handlePreRollInitiative(e,t,i){r.log("_handlePreRollInitiative",[e,t,i])}static _handlePreRoll(e,t,i,s){var h,f,m,p,R,C,y,b;if(r.log("_handlePreRoll #0",[e,t,i,s]),!game.user.isGM||t.isRollRequest===!1)return;const o=(t==null?void 0:t.hookNames)||(i==null?void 0:i.hookNames)||(s==null?void 0:s.hookNames)||[],l=o.includes("initiativeDialog")||o.includes("initiative");if(e===d.ATTACK){r.log("_handlePreRoll - is Attack roll",[(h=t.subject)==null?void 0:h.item]);const _=(m=(f=t.subject)==null?void 0:f.item)==null?void 0:m.getFlag(F,"tempAttackConfig");if(_){r.log("_handlePreRoll - found module flags, skipping interception",[_]);return}}if(e===d.DAMAGE){r.log("RollInterceptor._handlePreRoll - is Damage roll",[t]);const _=(R=(p=t.subject)==null?void 0:p.item)==null?void 0:R.getFlag(F,"tempDamageConfig");if(_){r.log("RollInterceptor._handlePreRoll - found module flags, skipping interception",[_]);return}}if(l&&e===d.ABILITY&&(r.log("RollInterceptor._handlePreRoll - Overriding ability to initiative",[o]),e=d.INITIATIVE),t!=null&&t.isRollRequest||t.sendRequest===!1||i!=null&&i.isRollRequest||s!=null&&s.isRollRequest)return;let n;if(e===d.INITIATIVE&&t instanceof Actor){if(n=t,r.log("_handlePreRoll - Initiative",[t,i,s]),(i==null?void 0:i.isRollRequest)===!1||(s==null?void 0:s.isRollRequest)===!1)return}else e===d.HIT_DIE?n=((C=i==null?void 0:i.subject)==null?void 0:C.actor)||(i==null?void 0:i.subject)||(i==null?void 0:i.actor):e===d.ATTACK||e===d.DAMAGE?n=(y=t.subject)==null?void 0:y.actor:n=((b=t.subject)==null?void 0:b.actor)||t.subject||t.actor;const c=O();if(!E.get(c.rollInterceptionEnabled.tag)||!n||n.documentName!=="Actor")return;r.log("_handlePreRoll",[t,s]);const g=W.getActorOwner(n);if(!(!g||!g.active||g.id===game.user.id||i.configure===!1||t.isRollRequest===!1||t.skipDialog===!0||t.fastForward===!0))return r.log("_handlePreRoll - intercepting roll #1",[t,s]),e===d.ATTACK&&(s={...s,rollMode:CONST.DICE_ROLL_MODES.PUBLIC}),r.log("_handlePreRoll - intercepting roll #2",[t,s]),this._showGMConfigDialog(n,g,e,t,i,s),!1}static _handleRollInitiative(e,t,i,s,o){r.log("_handleRollInitiative",[e,t,i,s,o])}static async _showGMConfigDialog(e,t,i,s,o,l){var u,g,h,f,m,p,R,C,y,b,_,I,A;r.log("_showGMConfigDialog - config",[i,s]);const n=O();E.get(n.rollInterceptionEnabled.tag);const c=E.get(n.rollRequestsEnabled.tag);try{const S=i==null?void 0:i.toLowerCase();if(S===d.INITIATIVE&&(!game.combat&&!await Ne()||(await we([e.id],game)).length===0))return;let D;[d.SKILL,d.TOOL].includes(S)?D=Oe:S===d.HIT_DIE?D=Ae:S===d.ATTACK?D=Be:S===d.DAMAGE&&(g=(u=dnd5e.applications)==null?void 0:u.dice)!=null&&g.DamageRollConfigurationDialog?D=xe:D=$;let L={rolls:[{parts:[],data:{},options:{}}]};const V=O(),v=E.get(V.skipDialogs.tag),H={actors:[e],rollType:S,showDC:!0,sendRequest:!0,skipDialogs:v};let k;if(v)k={sendRequest:!0,advantage:!1,disadvantage:!1,situational:"",rollMode:game.settings.get("core","rollMode")};else{let M=null;switch(S){case d.SKILL:L.skill=s.skill,L.ability=s.ability||((h=s.subject)==null?void 0:h.ability),M=L.skill;break;case d.TOOL:L.tool=s.tool,L.ability=s.ability||((f=s.subject)==null?void 0:f.ability),M=L.tool;break;case d.ABILITY:case d.SAVE:L.ability=s.ability||((m=s.subject)==null?void 0:m.ability),M=L.ability,L.ability==="con"&&s.targetValue!==void 0&&(i=d.CONCENTRATION);break;case d.CONCENTRATION:L.ability="con",M="con";break;case d.INITIATIVE:case d.INITIATIVE_DIALOG:M=((R=(p=e.system.attributes)==null?void 0:p.init)==null?void 0:R.ability)||"dex";break;case d.HIT_DIE:L.denomination=typeof s=="string"?s:s.denomination||((C=s.subject)==null?void 0:C.denomination),M=L.denomination;break;case d.ATTACK:o!=null&&o.options&&(L.ammunition=o.options.ammunition,L.attackMode=o.options.attackMode,L.mastery=o.options.mastery),M=(b=(y=s.subject)==null?void 0:y.item)==null?void 0:b.id;break;case d.DAMAGE:L.item=(_=s.subject)==null?void 0:_.item,L.subject=s.subject,L.critical=s.critical||!1,M=(A=(I=s.subject)==null?void 0:I.item)==null?void 0:A.id;break;default:break}if(!D.initConfiguration)throw r.error("DialogClass.initConfiguration not found",[D,D.name]),new Error(`DialogClass ${D.name} does not have initConfiguration method`);S===d.ATTACK||S===d.DAMAGE?k=await D.initConfiguration([e],S,M,{skipDialogs:!1,sendRequest:c},s,o):k=await D.initConfiguration([e],S,M,{skipDialogs:!1,sendRequest:c})}if(!k){r.log("_showGMConfigDialog - Dialog cancelled");return}if(r.log("_showGMConfigDialog - sending _executeInterceptedRoll",[i,s,k]),!k.sendRequest||!c){await this._executeInterceptedRoll(e,i,s,k);return}const{event:Y,...x}=s,K={...x,...k,rolls:k.rolls,requestedBy:game.user.name,...i===d.ATTACK&&{chatMessage:!1}};r.log("_showGMConfigDialog - finalConfig for damage roll",["rollType:",i,"result:",k,"result.rolls:",k.rolls,"finalConfig:",K,"finalConfig.rolls:",K.rolls]),this._sendRollRequest(e,t,i,K)}catch{this._sendRollRequest(e,t,i,s)}}static async _executeInterceptedRoll(e,t,i,s){var f,m,p,R,C,y,b,_,I,A,S,D,L,V;r.log("RollInterceptor._executeInterceptedRoll",[e,t,i,s]);const o=t==null?void 0:t.toLowerCase(),l=((f=s.rolls)==null?void 0:f[0])||{parts:[],data:{},options:{}},n=((m=l.data)==null?void 0:m.situational)||s.situational||"";let c;switch(o){case d.SKILL:c=i.skill;break;case d.TOOL:c=i.tool;break;case d.ABILITY:case d.SAVE:c=i.ability||((p=i.subject)==null?void 0:p.ability);break;case d.HIT_DIE:c=i.denomination;break;default:c=i.ability||i.skill||i.tool||i.denomination}const u={rollKey:c,config:{advantage:s.advantage||i.advantage,disadvantage:s.disadvantage||i.disadvantage,target:s.target||s.dc||i.target,rollMode:s.rollMode||i.rollMode,situational:n,isRollRequest:!1,ability:i.ability}};if(o===d.SKILL&&!u.config.ability)u.config.ability=((C=(R=e.system.skills)==null?void 0:R[u.rollKey])==null?void 0:C.ability)||((b=(y=CONFIG.DND5E.skills)==null?void 0:y[u.rollKey])==null?void 0:b.ability);else if(o===d.TOOL&&!u.config.ability){const v=(_=e.system.tools)==null?void 0:_[u.rollKey];u.config.ability=(v==null?void 0:v.ability)||((S=(A=(I=CONFIG.DND5E.enrichmentLookup)==null?void 0:I.tools)==null?void 0:A[u.rollKey])==null?void 0:S.ability)||"int"}else(o===d.ABILITY||o===d.SAVE)&&!u.config.ability&&(u.config.ability=u.rollKey);r.log("RollInterceptor._executeInterceptedRoll - requestData",[u,i,s]);const g={configure:!1,isRollRequest:!1},h={rollMode:u.config.rollMode,create:!0,isRollRequest:!1};try{const v=d,H=B[o];r.log("RollInterceptor._executeInterceptedRoll - handler 1",[H,o,B[o]]),H?((o===d.ATTACK||o===d.DAMAGE||o===d.SAVE)&&(u.rollKey=(L=(D=i.subject)==null?void 0:D.item)==null?void 0:L.id,u.activityId=(V=i.subject)==null?void 0:V.id),r.log("RollInterceptor._executeInterceptedRoll - handler 2",[u,l,g,h]),await H(e,u,l,g,h)):r.warn(`No handler found for roll type: ${o}`)}catch(v){r.error("RollInterceptor._executeInterceptedRoll",[v])}}static async _showConfigurationDialog(e,t,i,s,o,l){r.log("RollInterceptor._showConfigurationDialog",[e,t,i,s,o,l]);try{const c={...s,_rollMethod:async f=>(this._sendRollRequest(e,t,i,f),new Roll("1d20").evaluate({async:!1})),configured:!1},u=o.cls,h=await new u(c,o.options).render(!0)}catch{this._sendRollRequest(e,t,i,s)}}static _sendRollRequest(e,t,i,s){var h,f,m,p,R,C,y;r.log("_sendRollRequest",[e,t,i,s]),r.log("_sendRollRequest - config.rolls check",["config.rolls:",s.rolls,"config.rolls[0]:",(h=s.rolls)==null?void 0:h[0],"config.rolls[0].data:",(m=(f=s.rolls)==null?void 0:f[0])==null?void 0:m.data,"config.rolls[0].data.situational:",(C=(R=(p=s.rolls)==null?void 0:p[0])==null?void 0:R.data)==null?void 0:C.situational]);const o=O(),l=E.get(o.skipDialogs.tag);let n=i==null?void 0:i.toLowerCase();n===d.INITIATIVE&&(n=d.INITIATIVE_DIALOG);let c=null,u=null;switch(n){case d.ABILITY:case d.SAVE:c=s.ability;break;case d.SKILL:c=s.skill;break;case d.TOOL:c=s.tool;break;case d.ATTACK:case d.DAMAGE:r.log("_sendRollRequest - Attack/Damage roll config",[i,s]),c=(y=s.subject.item)==null?void 0:y.id,u=s.subject.id;break;case d.HIT_DIE:c=typeof s=="string"?s:s.denomination;break;case d.INITIATIVE_DIALOG:case d.INITIATIVE:c=null;break;case d.DEATH_SAVE:c=null;break;default:r.warn(`Unknown roll type: ${i}`);return}const g={type:"rollRequest",requestId:foundry.utils.randomID(),actorId:e.id,rollType:n,rollKey:c,activityId:u,rollProcessConfig:{...s,_requestedBy:game.user.name},skipDialog:l,targetTokenIds:Array.from(game.user.targets).map(b=>b.id),preserveTargets:E.get(o.useGMTargetTokens.tag)};U.execForUser("handleRollRequest",t.id,g),ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestSent",{player:t.name,actor:e.name}))}}N(ve,"registeredHooks",new Set);const{ApplicationV2:Ze,HandlebarsApplicationMixin:Xe}=foundry.applications.api;var z;const Z=class Z extends Xe(Ze){constructor(t={}){r.log("RollRequestsMenu.constructor",[t]);super(t);N(this,"_onClickOutside",t=>{if(r.log("_onClickOutside"),this.isLocked)return;const i=this.element;i&&(t.target.closest(".flash-rolls-menu")||i.contains(t.target)||t.target.closest("#flash-rolls-icon")||t.target.closest(".dialog, .app, .notification, .application")||this.close())});this.selectedActors=new Set,this.currentTab="pc",this.selectedRequestType=null,this.isLocked=!1,this.optionsExpanded=game.user.getFlag(j.ID,"menuOptionsExpanded")??!1,this._initializeFromSelectedTokens()}async _prepareContext(t){r.log("_prepareContext");const i=await super._prepareContext(t),s=game.actors.contents,o=[],l=[],n=game.scenes.active;for(const R of s){if(R.type!=="character"&&R.type!=="npc")continue;const C={id:R.id,uuid:R.uuid,name:R.name,img:R.img,selected:this.selectedActors.has(R.id),crlngnStats:this._getActorStats(R)};Object.entries(R.ownership).some(([b,_])=>{const I=game.users.get(b);return I&&!I.isGM&&_>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})?o.push(C):n!=null&&n.tokens.some(_=>_.actorId===R.id)&&l.push(C)}const c=O(),u=E.get(c.rollRequestsEnabled.tag),g=E.get(c.skipDialogs.tag),h=this.currentTab==="pc"?o:l,f=h.length>0&&h.every(R=>this.selectedActors.has(R.id)),m=[];if(this.selectedActors.size>0)for(const[R,C]of Object.entries(j.ROLL_REQUEST_OPTIONS))m.push({id:R,name:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${C.name}`)||C.label,rollable:C.subList==null,hasSubList:!!C.subList,selected:this.selectedRequestType===R});const p=Ye(this.selectedRequestType,this.selectedActors);return{...i,actors:h,currentTab:this.currentTab,isPCTab:this.currentTab==="pc",isNPCTab:this.currentTab==="npc",selectedTab:this.currentTab,rollRequestsEnabled:u,skipDialogs:g,selectAllOn:f,hasSelectedActors:this.selectedActors.size>0,requestTypes:m,rollTypes:p,showNames:!0,actorsLocked:this.isLocked,optionsExpanded:this.optionsExpanded}}_getActorStats(t){var l,n,c,u,g,h;r.log("_getActorStats");const i=t.system,s=[];(l=i.attributes)!=null&&l.hp&&s.push({abbrev:"HP",value:i.attributes.hp.value}),(n=i.attributes)!=null&&n.ac&&s.push({abbrev:"AC",value:i.attributes.ac.value});const o=(u=(c=i.attributes)==null?void 0:c.spell)==null?void 0:u.dc;return o&&s.push({abbrev:"DC",value:o}),(h=(g=i.skills)==null?void 0:g.prc)!=null&&h.passive&&s.push({abbrev:"PRC",value:i.skills.prc.passive}),s}async _renderFrame(t){const i=await super._renderFrame(t),s=document.querySelector("#chat-notifications");return s&&i&&s.insertBefore(i,s.firstChild),i}_onRender(t,i){if(r.log("_onRender"),super._onRender(t,i),this._attachListeners(),ke(),this.optionsExpanded){const s=this.element.querySelector(".options-toggle"),o=this.element.querySelector("li.options");s==null||s.classList.add("expanded"),o==null||o.classList.add("expanded")}setTimeout(()=>{document.addEventListener("click",this._onClickOutside,!0)},100),this._tokenControlHook=Hooks.on("controlToken",this._onTokenControlChange.bind(this))}_onTokenControlChange(t,i){r.log("_onTokenControlChange"),this.rendered&&(this._ignoreTokenControl||(this._tokenUpdateTimeout&&clearTimeout(this._tokenUpdateTimeout),this._tokenUpdateTimeout=setTimeout(()=>{this._initializeFromSelectedTokens(),this.render(),this._tokenUpdateTimeout=null},100)))}_attachListeners(){var l,n,c,u,g;r.log("_attachListeners");const t=this.element;(l=t.querySelector("#flash-rolls-toggle"))==null||l.addEventListener("change",this._onToggleRollRequests.bind(this)),(n=t.querySelector("#crlngn-skip-dialogs"))==null||n.addEventListener("change",this._onToggleSkipDialogs.bind(this)),(c=t.querySelector("#crlngn-actors-all"))==null||c.addEventListener("change",this._onToggleSelectAll.bind(this)),(u=t.querySelector("#crlngn-actors-lock"))==null||u.addEventListener("click",this._onToggleLock.bind(this)),(g=t.querySelector(".options-toggle"))==null||g.addEventListener("click",this._onToggleOptions.bind(this)),t.querySelectorAll(".actor-tab").forEach(h=>{h.addEventListener("click",this._onTabClick.bind(this))}),t.querySelectorAll(".actor").forEach(h=>{h.addEventListener("click",this._onActorClick.bind(this))}),t.querySelectorAll(".actor-select").forEach(h=>{h.addEventListener("click",this._onActorSelectClick.bind(this))});const s=t.querySelector(".request-types");s&&s.addEventListener("click",h=>{const f=h.target.closest("li");if(f&&f.dataset.id){const m={...h,currentTarget:f};this._onRequestTypeClick(m)}});const o=t.querySelector(".roll-types");o&&o.addEventListener("click",h=>{const f=h.target.closest("li");if(f&&f.dataset.id){const m={...h,currentTarget:f};this._onRollTypeClick(m)}})}async _onToggleRollRequests(t){r.log("_onToggleRollRequests");const i=O(),s=t.target.checked;await E.set(i.rollRequestsEnabled.tag,s),Me.updateRollRequestsIcon(s)}async _onToggleSkipDialogs(t){r.log("_onToggleSkipDialogs");const i=O(),s=t.target.checked;await E.set(i.skipDialogs.tag,s)}_onToggleSelectAll(t){r.log("_onToggleSelectAll");const i=t.target.checked;this._ignoreTokenControl=!0,(this.currentTab==="pc"?game.actors.contents.filter(o=>re(o)):game.actors.contents.filter(o=>!re(o)&&Le(o))).forEach(o=>{i?(this.selectedActors.add(o.id),ce(o.id,!0)):(this.selectedActors.delete(o.id),ce(o.id,!1))}),setTimeout(()=>{this._ignoreTokenControl=!1},200),this.render(),this._updateRequestTypesVisibility()}_onToggleLock(t){r.log("_onToggleLock"),t.preventDefault(),this.isLocked=!this.isLocked;const i=t.currentTarget;i.classList.remove("fa-lock-keyhole","fa-lock-keyhole-open"),i.classList.add(this.isLocked?"fa-lock-keyhole":"fa-lock-keyhole-open")}async _onToggleOptions(t){r.log("_onToggleOptions"),t.preventDefault(),this.optionsExpanded=!this.optionsExpanded,await game.user.setFlag(j.ID,"menuOptionsExpanded",this.optionsExpanded);const i=t.currentTarget||t.target.closest(".options-toggle");i&&i.classList.toggle("expanded",this.optionsExpanded);const s=this.element.querySelector("li.options");s&&s.classList.toggle("expanded",this.optionsExpanded)}_initializeFromSelectedTokens(){var i;r.log("_initializeFromSelectedTokens");const t=((i=canvas.tokens)==null?void 0:i.controlled)||[];this.selectedActors.clear();for(const s of t)if(s.actor&&(this.selectedActors.add(s.actor.id),this.selectedActors.size===1)){const o=re(s.actor);this.currentTab=o?"pc":"npc"}}async _onTabClick(t){var s;r.log("_onTabClick");const i=t.currentTarget.dataset.tab;i!==this.currentTab&&(this.selectedActors.clear(),(s=canvas.tokens)==null||s.releaseAll(),this.selectedRequestType=null,this.currentTab=i,await this.render())}_onActorClick(t){if(r.log("_onActorClick"),t.target.closest(".actor-select"))return;const s=t.currentTarget.dataset.id;this._toggleActorSelection(s)}_onActorSelectClick(t){r.log("_onActorSelectClick"),t.stopPropagation();const i=t.currentTarget.dataset.id;this._toggleActorSelection(i)}_toggleActorSelection(t){r.log("_toggleActorSelection"),this._ignoreTokenControl=!0,this.selectedActors.has(t)?(this.selectedActors.delete(t),ce(t,!1)):(this.selectedActors.add(t),ce(t,!0)),setTimeout(()=>{this._ignoreTokenControl=!1},100),this.render(),this._updateRequestTypesVisibility(),this._updateSelectAllState()}_updateRequestTypesVisibility(){r.log("_updateRequestTypesVisibility"),this.render()}_updateSelectAllState(){r.log("_updateSelectAllState");const t=this.element.querySelector("#crlngn-actors-all"),i=this.currentTab==="pc"?"pc":"npc",s=this.element.querySelectorAll(`.${i}-actors .actor-item input[type="checkbox"]`),o=Array.from(s).filter(l=>l.checked).length;t.checked=o>0&&o===s.length,t.indeterminate=o>0&&o<s.length}async _onRequestTypeClick(t){const i=t.currentTarget,s=i.dataset.id,o=j.ROLL_REQUEST_OPTIONS[s];if(r.log("_onRequestTypeClick",[s,i.dataset,o]),!o){r.error("Unknown request type:",[s]);return}this.selectedRequestType===s?this.selectedRequestType=null:this.selectedRequestType=s,o.subList?await this.render():this.selectedRequestType&&this._triggerRoll(s,null)}_onRollTypeClick(t){r.log("_onRollTypeClick");const i=t.currentTarget.dataset.id;this._triggerRoll(this.selectedRequestType,i)}_getValidActorIds(t){return t.filter(i=>{const s=game.actors.get(i);if(!s)return!1;const o=re(s),l=!o&&Le(s);return this.currentTab==="pc"&&o||this.currentTab==="npc"&&l})}async _handleCustomRoll(){return await this._showCustomRollDialog()}async _getRollConfiguration(t,i,s,o,l){const n=O(),c=E.get(n.rollRequestsEnabled.tag);if(!o&&i!==d.CUSTOM){let u;[d.SKILL,d.TOOL].includes(i)?u=Oe:i===d.HIT_DIE?u=Ae:u=$;const g=await u.initConfiguration(t,i,s,{skipDialogs:o,sendRequest:c||!1});return r.log("_getRollConfiguration",[g]),g}else{const u={rolls:[{parts:[],data:{},options:{}}],advantage:!1,disadvantage:!1,rollMode:game.settings.get("core","rollMode"),chatMessage:!0,isRollRequest:!1,skipDialog:!0,sendRequest:c&&l.length>0};return i===d.DEATH_SAVE&&(u.target=10),u}}async _orchestrateRollsForActors(t,i,s,o,l){const n=O(),c=[],u=[],g=[];if(r.log("_orchestrateRollsForActors",[t,i,s]),t.sendRequest)for(const{actor:f,owner:m}of i)m.active?g.push({actor:f,owner:m}):(E.get(n.showOfflineNotifications.tag)&&P.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.playerOffline",{player:m.name})),u.push(f));else s.push(...i.map(({actor:f})=>f));for(const{actor:f,owner:m}of g)await this._sendRollRequestToPlayer(f,m,o,l,t,!0),c.push({actor:f,owner:m}),await Ie(100);c.length>0&&this._showConsolidatedNotification(c,o,l);const h=[...u,...s];h.length>0&&(t.skipDialog=!0,await this._handleGMRolls(h,o,l,t))}async _triggerRoll(t,i){var p;r.log("_triggerRoll",[t,i]);const s=O(),o=Array.from(this.selectedActors),l=E.get(s.skipDialogs.tag),n=this._getValidActorIds(o);let c=n.map(R=>game.actors.get(R));const u=j.ROLL_REQUEST_OPTIONS[t],g=(p=(u==null?void 0:u.name)||t)==null?void 0:p.toLowerCase();switch(g){case d.CUSTOM:if(i=await this._handleCustomRoll(),!i)return;break;case d.INITIATIVE:case d.INITIATIVE_DIALOG:if(await Ne()){r.log("_triggerRoll",[n]);const C=await we(n,game);if(r.log("_triggerRoll filteredActorIds",[C,!C.length]),!C.length)return;c=C.map(y=>game.actors.get(y))}break;case d.DEATH_SAVE:c=await Qe(c);break}if(!c.length){P.notify("warn","No valid actors selected");return}const{pcActors:h,npcActors:f}=Je(c),m=await this._getRollConfiguration(c,g,i,l,h);r.log("_triggerRoll config",[m]),m&&(await this._orchestrateRollsForActors(m,h,f,g,i),setTimeout(()=>this.close(),500))}async _sendRollRequestToPlayer(t,i,s,o,l,n=!1){r.log("_sendRollRequestToPlayer #A",[s,o]);const c=O();let u=s==null?void 0:s.toLowerCase();if(u===d.ABILITY_CHECK?u=d.ABILITY:u===d.SAVING_THROW?u=d.SAVE:u===d.INITIATIVE_DIALOG&&(u=d.INITIATIVE),u===d.HIT_DIE){const h=t.system.attributes.hd;if(h.value>0)o=h.largestAvailable;else if(await foundry.applications.api.DialogV2.confirm({window:{title:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.hitDie.refillTitle")||"No Hit Dice Available",classes:["crlngn-hit-die-dialog"]},position:{width:420},content:`<p>${game.i18n.format("CRLNGN_ROLLS.ui.dialogs.hitDie.refillMessage",{actors:t.name})||""}</p>`,modal:!0,rejectClose:!1,yes:{label:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.hitDie.refillAndSend")||"Refill & Send",icon:""},no:{label:game.i18n.localize("Cancel")||"Cancel",icon:""}})){try{r.log("About to call handleHitDieRecovery for",[t.name]);const m=await B.handleHitDieRecovery(t);r.log("handleHitDieRecovery completed",[m])}catch(m){r.error("Error calling handleHitDieRecovery:",[m])}o=t.system.attributes.hd.largestAvailable,r.log("_sendRollRequestToPlayer - Hit Die REFILL",[{hdData:t.system.attributes.hd}]),P.notify("info",game.i18n.format("CRLNGN_ROLLS.ui.dialogs.hitDie.refilled",{actor:t.name})||`Hit dice refilled for ${t.name}`)}else return}const g={type:"rollRequest",requestId:foundry.utils.randomID(),actorId:t.id,rollType:u,rollKey:o,activityId:null,rollProcessConfig:{...l,_requestedBy:game.user.name},skipDialog:!1,targetTokenIds:Array.from(game.user.targets).map(h=>h.id),preserveTargets:E.get(c.useGMTargetTokens.tag)};U.execForUser("handleRollRequest",i.id,g),n||P.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestSent",{player:i.name,actor:t.name}))}_showConsolidatedNotification(t,i,s){var c,u,g,h,f;r.log("_showConsolidatedNotification");const o={};for(const{actor:m,owner:p}of t)o[p.id]||(o[p.id]={player:p,actors:[]}),o[p.id].actors.push(m);for(const[m,p]of Object.entries(j.ROLL_REQUEST_OPTIONS))if(p.name===i)break;const l=i;let n=game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${l}`)||l;if(s){const m=l.toLowerCase();if(m===d.SKILL)n=`${n} (${((c=CONFIG.DND5E.skills[s])==null?void 0:c.label)||s})`;else if(m===d.SAVING_THROW)n=`${n} (${((u=CONFIG.DND5E.abilities[s])==null?void 0:u.label)||s})`;else if(m===d.ABILITY_CHECK)n=`${n} (${((g=CONFIG.DND5E.abilities[s])==null?void 0:g.label)||s})`;else if(m===d.TOOL){const p=(f=(h=CONFIG.DND5E.enrichmentLookup)==null?void 0:h.tools)==null?void 0:f[s];if(p!=null&&p.id){const R=dnd5e.documents.Trait.getBaseItem(p.id,{indexOnly:!0});n=`${n} (${(R==null?void 0:R.name)||s})`}else n=`${n} (${s})`}else m===d.CUSTOM&&(n=`${n}: ${s}`)}P.notifyRollRequestsSent(o,n)}async _handleGMRolls(t,i,s,o){r.log("_handleGMRolls",[t,i,s,o]);for(const l of t)await this._initiateRoll(l,i,s,o),await Ie(100)}async _initiateRoll(t,i,s,o){var l,n,c,u,g;r.log("_initiateRoll",[i,s,o]);try{const h=i.toLowerCase();let f=s;if(h===d.HIT_DIE){const _=t.system.attributes.hd;if(_){const I=["d6","d8","d10","d12","d20"];for(const A of I)if((((l=_[A])==null?void 0:l.value)||0)>0){f=A;break}}if(!f)if(r.log("_initiateRoll - No hit dice available",[t.name]),await foundry.applications.api.DialogV2.confirm({window:{title:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.hitDie.refillTitle")||"No Hit Dice Available",classes:["crlngn-hit-die-dialog"]},position:{width:420},content:`<p>${game.i18n.format("CRLNGN_ROLLS.ui.dialogs.hitDie.refillMessageLocal",{actors:t.name})||""}</p>`,modal:!0,rejectClose:!1,yes:{label:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.hitDie.refillAndRoll")||"Refill & Roll",icon:""},no:{label:game.i18n.localize("Cancel")||"Cancel",icon:""}})){const A=await B.handleHitDieRecovery(t);if(r.log("Hit die recovery result",[A]),P.notify("info",game.i18n.format("CRLNGN_ROLLS.ui.dialogs.hitDie.refilled",{actor:t.name})),f=t.system.attributes.hd.largestAvailable,!f){P.notify("warn",game.i18n.format("DND5E.HitDiceWarn",{name:t.name}));return}}else return}const m=((u=(c=(n=o.rolls)==null?void 0:n[0])==null?void 0:c.data)==null?void 0:u.situational)||"",p={rollKey:f,config:{...o,situational:m,rollMode:o.rollMode||game.settings.get("core","rollMode"),advantage:o.advantage||!1,disadvantage:o.disadvantage||!1,target:o.target}},R={configure:!o.fastForward&&!o.skipDialog},C={rollMode:o.rollMode||game.settings.get("core","rollMode"),create:o.chatMessage!==!1},y=((g=o.rolls)==null?void 0:g[0])||{},b=B[h];b?await b(t,p,y,R,C):P.notify("warn",`Unknown roll type: ${i}`)}catch(h){r.error("executeActorRoll",[h]),P.notify("error",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:t.name}))}}async _onClose(t){r.log("_onClose",[t]),await super._onClose(t),this.selectedActors.clear(),this.selectedRequestType=null,document.removeEventListener("click",this._onClickOutside,!0),this._tokenControlHook&&(Hooks.off("controlToken",this._tokenControlHook),this._tokenControlHook=null),this._tokenUpdateTimeout&&(clearTimeout(this._tokenUpdateTimeout),this._tokenUpdateTimeout=null),Q(Z,z)===this&&me(Z,z,null)}setPosition(t={}){return r.log("setPosition"),this}async _showCustomRollDialog(){return r.log("_showCustomRollDialog"),ye.prompt({formula:"",readonly:!1})}static toggle(){r.log("RollRequestsMenu.toggle"),Q(this,z)?Q(this,z).rendered?Q(this,z).close():(Q(this,z)._initializeFromSelectedTokens(),Q(this,z).render(!0)):(me(this,z,new Z),Q(this,z).render(!0))}};z=new WeakMap,he(Z,z,null),N(Z,"DEFAULT_OPTIONS",{id:"flash-rolls-menu",classes:["flash-rolls-menu"],tag:"div",window:{frame:!1,resizable:!1,minimizable:!1},position:{}}),N(Z,"PARTS",{main:{template:`modules/${j.ID}/templates/requests-menus.hbs`}});let pe=Z;class Me{static addSidebarControls(e,t,i){if(!game.user.isGM||e.id!=="sidebar")return;const s=document.querySelector("#roll-privacy");if(r.log("addSidebarControls",[s]),!s||s.querySelector(".flash-rolls-icon"))return;const o=O(),l=E.get(o.rollRequestsEnabled.tag),n=document.createElement("button");n.id="flash-rolls-icon",n.setAttribute("data-tooltip-direction","RIGHT"),n.className=`ui-control icon chat-control-icon flash-rolls-icon${l?" active":""}`,n.title=game.i18n.localize("CRLNGN_ROLLS.ui.menus.rollRequestsTitle"),n.innerHTML=`<i class="fas fa-bolt${l?"":"-slash"}"></i>`;const c=s.firstChild;c?c.parentNode.insertBefore(n,c):s.insertBefore(n,s.firstChild),r.log("addSidebarControls",[c,n]),n.addEventListener("click",u=>{u.stopPropagation(),u.preventDefault(),pe.toggle()})}static updateRollRequestsIcon(e){const t=document.querySelector("#flash-rolls-icon i");t&&(t.className=`fas fa-bolt${e?"":"-slash"}`)}}class Ge{static initialize(){Hooks.once(J.INIT,this._onInit.bind(this)),Hooks.once(J.READY,this._onReady.bind(this))}static _onInit(){O(),document.body.classList.add("flash-rolls-5e"),E.registerSettings(),te.initialize(),this._registerHook(J.RENDER_SIDEBAR,this._onRenderSidebar.bind(this))}static _onReady(){const e=O();E.get(e.debugMode.tag)&&(CONFIG.debug.hooks=!0),ve.initialize(),this._registerDnd5eHooks(),game.user.isGM?this._registerGMHooks():(te.getDiceConfig(),this._registerPlayerHooks()),Ee(Se())}static _registerDnd5eHooks(){this._registerHook(q.POST_ROLL_CONFIG,this._onPostRollConfig.bind(this)),this._registerHook(J.PRE_CREATE_CHAT_MESSAGE,this._onPreCreateChatMessage.bind(this)),this._registerHook(J.PRE_CREATE_CHAT_MESSAGE,this._onPreCreateChatMessageFlavor.bind(this)),this._registerHook(J.CHANGE_SIDEBAR_TAB,this._onSidebarUpdate.bind(this)),this._registerHook(J.COLLAPSE_SIDE_BAR,this._onSidebarUpdate.bind(this)),this._registerHook(q.RENDER_ROLL_CONFIGURATION_DIALOG,this._onRenderRollConfigDialog.bind(this)),this._registerHook(q.RENDER_SKILL_TOOL_ROLL_DIALOG,this._onRenderSkillToolDialog.bind(this)),this._registerHook(q.PRE_USE_ACTIVITY,this._onPreUseActivity.bind(this)),this._registerHook(q.PRE_ROLL_HIT_DIE_V2,this._onPreRollHitDieV2.bind(this))}static _registerGMHooks(){this._registerHook(J.USER_CONNECTED,this._onUserConnected.bind(this)),game.users.forEach(e=>{this._onUserConnected(e)})}static _registerPlayerHooks(){this._registerHook(q.PRE_ROLL_INITIATIVE_DIALOG_V2,this._onPreRollInitiativeDialogV2.bind(this)),this._registerHook(q.PRE_ROLL_ATTACK_V2,this._onPreRollAttackV2.bind(this))}static _onSidebarUpdate(e){r.log("_onSidebarUpdate",[e]),Ee(Se())}static _onPostRollConfig(e,t,i,s){t._showRequestedBy&&e.length>0&&(s.data=s.data||{},s.data._showRequestedBy=!0,s.data._requestedBy=t._requestedBy)}static _onPreCreateChatMessage(e,t,i,s){var o,l,n;if((((o=t.rolls)==null?void 0:o.length)>0||(l=t.flavor)!=null&&l.includes("Initiative"))&&r.log("_onPreCreateChatMessage - Roll message",["flavor:",t.flavor,"rolls:",t.rolls,"speaker:",t.speaker,"type:",t.type,"flags:",t.flags]),t._showRequestedBy&&((n=t.rolls)==null?void 0:n.length)>0){const c=t._requestedBy||"GM",u=game.i18n.format("CRLNGN_ROLL_REQUESTS.chat.requestedBy",{gm:c}),g=t.flavor||"";t.flavor=g?`${g} ${u}`:u}}static _onPreCreateChatMessageFlavor(e,t,i,s){var o,l;if(((o=t.rolls)==null?void 0:o.length)>0&&t.rolls[0])try{const n=t.rolls[0];(l=n.options)!=null&&l._customFlavor&&(t.flavor=n.options._customFlavor)}catch{}}static _onRenderRollConfigDialog(e,t,i){if(r.log("_onRenderRollConfigDialog triggered",[e,i]),e._situationalTriggered)return;const s=t.querySelectorAll('input[name*="situational"]');let o=!1;s.forEach((l,n)=>{var c,u,g,h,f;!l.value&&((h=(g=(u=(c=e.config)==null?void 0:c.rolls)==null?void 0:u[0])==null?void 0:g.data)!=null&&h.situational)&&((f=e.config)!=null&&f.isConcentration)&&(l.value=e.config.rolls[0].data.situational,o=!0),l.value&&!o&&(e._situationalTriggered=!0,o=!0,setTimeout(()=>{var m,p,R;l.dispatchEvent(new Event("change",{bubbles:!0,cancelable:!1})),(R=(p=(m=e.config)==null?void 0:m.rolls)==null?void 0:p[0])!=null&&R.data&&delete e.config.rolls[0].data.situational},50))})}static _onUserConnected(e){e.active&&e.id!==game.user.id&&te.requestDiceConfigFromUser(e.id)}static _onRenderApplicationV2(e,t,i){r.log("_onRenderApplicationV2",[e,t,i])}static _onRenderSidebar(e,t,i){r.log("_onRenderSidebar",[e,t,i]),Me.addSidebarControls(e,t,i)}static _registerHook(e,t){const i=Hooks.on(e,t);return this.registeredHooks.set(`${e}_${i}`,i),i}static unregisterAll(){this.registeredHooks.forEach((e,t)=>{const i=t.split("_")[0];Hooks.off(i,e)}),this.registeredHooks.clear()}static isRegistered(e){for(const t of this.registeredHooks.keys())if(t.startsWith(`${e}_`))return!0;return!1}static _onPreRollHitDieV2(e,t,i){if(r.log("_onPreRollHitDieV2 triggered",[e,t,i]),e.rolls&&e.rolls.length>1){const s=[];for(let o=0;o<e.rolls.length;o++){const l=e.rolls[o];l&&l.data&&l.data.situational&&s.push(l.data.situational)}if(s.length>0){e.rolls[0].data||(e.rolls[0].data={});const o=[...new Set(s)];e.rolls[0].data.situational=o.map(l=>{const n=l.toString().trim();return n.startsWith("-")?`(${n})`:n.startsWith("+")?`${n.substring(1)}`:`${n}`}).join(" + "),game.user.isGM&&!e.rolls[0].parts.find(l=>l.includes("@situational"))&&e.rolls[0].parts.push("@situational")}e.rolls=e.rolls.slice(0,1),r.log("Cleaned up hit die rolls",e.rolls)}}static _onPreRollInitiativeDialogV2(e,t,i){r.log("_onPreRollInitiativeDialogV2 triggered",[e,t,i]);const s=e.subject;if(s&&s._initiativeSituationalBonus){if(!e.rolls||e.rolls.length===0){const o=s.getInitiativeRollConfig({});e.rolls=o.rolls||[]}e.rolls.length>0&&(e.rolls[0].data||(e.rolls[0].data={}),e.rolls[0].data.situational=s._initiativeSituationalBonus,r.log("Added situational bonus to initiative dialog",[{bonus:s._initiativeSituationalBonus,rolls:e.rolls}]),delete s._initiativeSituationalBonus)}}static _onPreRollAttackV2(e,t,i){var o,l;r.log("_onPreRollAttackV2 triggered",[e,t,i]);const s=(l=(o=e.subject)==null?void 0:o.item)==null?void 0:l.getFlag(F,"tempAttackConfig");if(s){if(r.log("_onPreRollAttackV2 - Found stored request config from flag",[s]),s.isRollRequest===!1||s.skipDialog===!0||s.sendRequest===!1){r.log("_onPreRollAttackV2 - Not a roll request, skipping",[s]);return}s.attackMode&&(e.attackMode=s.attackMode),s.ammunition&&(e.ammunition=s.ammunition),s.mastery!==void 0&&(e.mastery=s.mastery),s.advantage&&(e.advantage=!0),s.disadvantage&&(e.disadvantage=!0),s.situational&&((!e.rolls||e.rolls.length===0)&&(e.rolls=[{parts:[],data:{},options:{}}]),e.rolls[0].data||(e.rolls[0].data={}),e.rolls[0].data.situational=s.situational),r.log("_onPreRollAttackV2 - Applied stored configuration to attack roll",[e])}}static _onPreUseActivity(e,t,i,s){r.log("_onPreUseActivity triggered",[e,t,i,s]);const o=O(),l=E.get(o.rollRequestsEnabled.tag),n=E.get(o.rollInterceptionEnabled.tag);if(r.log("_onPreUseActivity - Settings",[l,n]),!game.user.isGM||!l||!n)return;e.item.unsetFlag(F,"tempAttackConfig");const c=e.actor;if(!c)return;const u=W.getActorOwner(c);u&&u.active&&!u.isGM&&(r.log("Preventing usage message for player-owned actor",[c.name]),s.create=!1)}static _onRenderSkillToolDialog(e,t,i){var o,l;if(r.log("_onRenderSkillToolDialog triggered",[e]),e._abilityFlavorFixed)return;const s=t.querySelector('select[name="ability"]');if(s&&(o=e.config)!=null&&o.isRollRequest&&(l=e.config)!=null&&l.ability){const n=s.value,c=e.config.ability;n===c&&(e._abilityFlavorFixed=!0,setTimeout(()=>{const u=new Event("change",{bubbles:!0,cancelable:!0});s.dispatchEvent(u)},50))}}}N(Ge,"registeredHooks",new Map);class Ce{static async handleRequest(e){var i;if(r.log("handleRequest",[e]),game.user.isGM)return;const t=game.actors.get(e.actorId);!t||!t.isOwner||(e.preserveTargets&&((i=e.targetTokenIds)==null?void 0:i.length)>0&&game.user.targets.size===0&&Ke(e.targetTokenIds),P.notify("info","",{batch:!0,batchData:{actor:t.name,rollType:e.rollType,rollKey:e.rollKey,gm:e.rollProcessConfig._requestedBy||"GM"}}),Ce.executePlayerRollRequest(t,e))}static async executePlayerRollRequest(e,t){var o,l;const i=O(),s=E.get(i.publicPlayerRolls.tag);r.log("executePlayerRollRequest",[e,t]);try{const n=(o=t.rollType)==null?void 0:o.toLowerCase(),c=((l=t.rollProcessConfig.rolls)==null?void 0:l[0])||{parts:[],data:{},options:{}},g={configure:!(game.user.isGM?t.skipDialog:!1)},h=t.rollProcessConfig.rollMode,f=game.settings.get("core","rollMode"),m=h||f;r.log("executePlayerRollRequest - Roll Mode Debug",{publicPlayerRolls:s,rollModeFromGM:h,defaultRollMode:f,finalRollMode:m,fullConfig:t.rollProcessConfig});const p={rollMode:m,create:t.rollProcessConfig.chatMessage!==!1},R={rollKey:t.rollKey,activityId:t.activityId,config:t.rollProcessConfig},C=B[n];C?await C(e,R,c,g,p):(r.warn(`No handler found for roll type: ${n}`),P.notify("warn",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:e.name||"Unknown Actor"})))}catch(n){r.error("Error executing roll request:",[n]),P.notify("error",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:e.name||"Unknown Actor"}))}}}class ie{static init(){U.initialize(ie.registerSocketCalls),Ge.initialize()}static getDiceConfig(){return te.getDiceConfig()}static receiveDiceConfig(e,t){te.receiveDiceConfig(e,t)}static async handleRollRequest(e){return Ce.handleRequest(e)}static registerSocketCalls(){U.registerCall(Re.getDiceConfig,ie.getDiceConfig),U.registerCall(Re.receiveDiceConfig,ie.receiveDiceConfig),U.registerCall(Re.handleRollRequest,ie.handleRollRequest)}}ie.init();
//# sourceMappingURL=flash-rolls-5e.js.map
