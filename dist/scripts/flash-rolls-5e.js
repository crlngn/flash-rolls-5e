var qe=Object.defineProperty;var Le=c=>{throw TypeError(c)};var Ve=(c,e,t)=>e in c?qe(c,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):c[e]=t;var k=(c,e,t)=>Ve(c,typeof e!="symbol"?e+"":e,t),he=(c,e,t)=>e.has(c)||Le("Cannot "+t);var Z=(c,e,t)=>(he(c,e,"read from private field"),t?t.call(c):e.get(c)),pe=(c,e,t)=>e.has(c)?Le("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(c):e.set(c,t),Re=(c,e,t,i)=>(he(c,e,"write to private field"),i?i.call(c,t):e.set(c,t),t),Se=(c,e,t)=>(he(c,e,"access private method"),t);const K={select:"select",checkbox:"checkbox"},J={client:"client",world:"world"},D=()=>({debugMode:{tag:"debug-mode",label:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.hint"),propType:Boolean,inputType:K.checkbox,default:!0,scope:J.client,config:!0},rollRequestsEnabled:{tag:"flash-rolls-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.hint"),propType:Boolean,inputType:K.checkbox,default:!0,scope:J.world,config:!0},groupRollsMsgEnabled:{tag:"group-roll-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.groupRollsMsgEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.groupRollsMsgEnabled.hint"),propType:Boolean,inputType:K.checkbox,default:!0,scope:J.world,config:!0},consumptionConfigMode:{tag:"consumption-config-mode",label:game.i18n.localize("CRLNGN_ROLLS.settings.consumptionConfigMode.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.consumptionConfigMode.hint"),propType:Number,inputType:K.select,choices:{1:"Skip dialog for player and GM",2:"Skip dialog for player",3:"Skip dialog for GM",4:"Do not skip dialog"},default:1,scope:J.world,config:!0},skipRollDialog:{tag:"skip-roll-dialog",label:game.i18n.localize("CRLNGN_ROLLS.settings.skipRollDialog.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.skipRollDialog.hint"),propType:Boolean,inputType:K.checkbox,default:!1,scope:J.world,config:!0},useGMTargetTokens:{tag:"use-gm-target-tokens",label:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.hint"),propType:Boolean,inputType:K.checkbox,default:!1,scope:J.world,config:!0},rollInterceptionEnabled:{tag:"roll-interception-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollInterceptionEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollInterceptionEnabled.hint"),propType:Boolean,inputType:K.checkbox,default:!0,scope:J.world,config:!0},publicPlayerRolls:{tag:"public-player-rolls",label:game.i18n.localize("CRLNGN_ROLLS.settings.publicPlayerRolls.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.publicPlayerRolls.hint"),propType:Boolean,inputType:K.checkbox,default:!0,scope:J.world,config:!0},showOfflineNotifications:{tag:"show-offline-notifications",label:game.i18n.localize("CRLNGN_ROLLS.settings.showOfflineNotifications.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.showOfflineNotifications.hint"),propType:Boolean,inputType:K.checkbox,default:!0,scope:J.world,config:!0}}),T="flash-rolls-5e",ce=["%cFlash Rolls 5e","color:rgb(47, 151, 161); font-weight: bold;","|"],me={receiveDiceConfig:"receiveDiceConfig",getDiceConfig:"getDiceConfig",handleRollRequest:"handleRollRequest"},be={SAVE:"save"},d={ABILITY:"ability",ABILITY_CHECK:"abilitycheck",ATTACK:"attack",CONCENTRATION:"concentration",CUSTOM:"custom",DEATH_SAVE:"deathsave",FORMULA:"formula",DAMAGE:"damage",HEALING:"healing",HIT_DIE:"hitdie",INITIATIVE:"initiative",INITIATIVE_DIALOG:"initiativedialog",ITEM_SAVE:"itemsave",SAVE:"save",SAVING_THROW:"savingthrow",SKILL:"skill",TOOL:"tool"},xe={ABILITY_CHECK:{name:d.ABILITY_CHECK,label:"Ability Check",subList:"abilities",actorPath:"system.abilities"},SAVING_THROW:{name:d.SAVING_THROW,label:"Saving Throw",subList:"abilities",actorPath:"system.abilities"},SKILL:{name:d.SKILL,label:"Skill Check",subList:"skills",actorPath:"system.skills"},TOOL:{name:d.TOOL,label:"Tool Check",subList:"tools",actorPath:"system.tools"},CONCENTRATION:{name:d.CONCENTRATION,label:"Concentration Check",subList:null,actorPath:""},INITIATIVE:{name:d.INITIATIVE,label:"Initiative Roll",subList:null,actorPath:""},DEATH_SAVE:{name:d.DEATH_SAVE,label:"Death Save",subList:null,actorPath:""},HIT_DIE:{name:d.HIT_DIE,label:"Hit Die",subList:null,actorPath:""},CUSTOM:{name:d.CUSTOM,label:"Custom Roll",subList:null,actorPath:""}},j={ID:T,ROLL_REQUEST_OPTIONS:xe},$={INIT:"init",READY:"ready",RENDER_CHAT_MESSAGE:"renderChatMessageHTML",CHANGE_SIDEBAR_TAB:"changeSidebarTab",RENDER_SIDEBAR:"renderSidebar",USER_CONNECTED:"userConnected",PRE_CREATE_CHAT_MESSAGE:"preCreateChatMessage",COLLAPSE_SIDE_BAR:"collapseSidebar"},Be={READY:"socketlib.ready"},G={PRE_ROLL_V2:"dnd5e.preRollV2",PRE_USE_ACTIVITY:"dnd5e.preUseActivity",POST_USE_ACTIVITY:"dnd5e.postUseActivity",PRE_ROLL_ABILITY_CHECK:"dnd5e.preRollAbilityCheckV2",PRE_ROLL_SAVING_THROW:"dnd5e.preRollSavingThrowV2",PRE_ROLL_DEATH_SAVE_V2:"dnd5e.preRollDeathSaveV2",PRE_ROLL_SKILL_V2:"dnd5e.preRollSkillV2",PRE_ROLL_TOOL_V2:"dnd5e.preRollToolV2",PRE_ROLL_HIT_DIE_V2:"dnd5e.preRollHitDieV2",PRE_ROLL_INITIATIVE_DIALOG:"dnd5e.preRollInitiativeDialog",PRE_ROLL_INITIATIVE:"dnd5e.preRollInitiative",ROLL_INITIATIVE:"dnd5e.rollInitiative",PRE_ROLL_ATTACK_V2:"dnd5e.preRollAttackV2",PRE_ROLL_DAMAGE_V2:"dnd5e.preRollDamageV2",POST_ROLL_CONFIG:"dnd5e.postRollConfiguration",RENDER_ROLL_CONFIGURATION_DIALOG:"renderRollConfigurationDialog",RENDER_SKILL_TOOL_ROLL_DIALOG:"renderSkillToolRollConfigurationDialog"},ne=class ne{static log(e="",t=[],i=!1){try{const s=game.settings.get(T,"debug-mode")||ne.debugOn;if(!(i||s))return;const l=Array.isArray(t)?t:[t];console.log(...ce,e,...l)}catch{if(i||ne.debugOn){const o=Array.isArray(t)?t:[t];console.log(...ce,e,...o)}}}static warn(e="",t=[]){const i=Array.isArray(t)?t:[t];console.warn(...ce,e,...i)}static error(e,t=[],i={ui:!1,console:!0,permanent:!1}){var o;const s=Array.isArray(t)?t:[t];i.ui&&((o=ui.notifications)==null||o.error(e,{localize:!0,permanent:i.permanent})),i.console&&console.error(...ce,e,...s)}};k(ne,"debugOn",!1);let a=ne;const v=class v{static serializeForTransport(e,t=!1){return a.log("serializeForTransport",[e,t]),e==null||t&&e.rolls&&Array.isArray(e.rolls)&&(e.rolls=e.rolls.map(i=>i instanceof Roll?i.toJSON():i)),e}static deserializeFromTransport(e,t=!1){a.log("deserializeFromTransport",[e,t]);let i={...e};if(!e)return i;if(t&&e.rolls&&e.rolls.length>0){const s=i.rolls.map(o=>{let l=o;return typeof o=="string"?l=Roll.fromJSON(o):l=Roll.fromJSON(JSON.stringify(o)),l});return i.rolls=[...s],i}return i}};k(v,"socket"),k(v,"_activeExecutions",new Map),k(v,"initialize",e=>{a.log("initialize",[e]),Hooks.once(Be.READY,()=>{if(typeof socketlib>"u"){a.error("SocketUtil Error: socketlib is not loaded. Ensure it is installed and enabled."),ui.notifications.error(game.i18n.localize("CRLNGN_ROLLS.notifications.socketlibMissing"),{permanent:!0});return}try{v.socket=socketlib.registerModule(T),e&&e()}catch{}})}),k(v,"registerCall",(e,t)=>{a.log("registerCall",[e]),v.socket&&v.socket.register(e,t)}),k(v,"sendMessage",(e,t)=>{a.log("sendMessage",[e]),t&&t()}),k(v,"execForGMs",async(e,...t)=>{if(a.log("execForGMs",[e,...t]),!!v.socket)return await v.socket.executeForAllGMs(e,...t)}),k(v,"execForAll",async(e,...t)=>{if(v.socket)return await v.socket.executeForEveryone(e,...t)}),k(v,"execForUser",async(e,t,...i)=>{if(a.log("execForUser #0",[e,t,...i]),!v.socket)return;if(a.log("execForUser #1",[t===game.user.id]),t===game.user.id)return null;const s=`${e}-${t}`;if(a.log("execForUser #2",[v._activeExecutions.has(s)]),v._activeExecutions.has(s))return null;v._activeExecutions.set(s,!0);try{const o=await v.socket.executeAsUser(e,t,...i);return a.log("execForUser #3 - response",[o]),o}catch(o){return a.error("execForUser #4 - error",[o]),null}finally{a.log("execForUser #5 - success",[]),v._activeExecutions.delete(s)}});let Q=v;class te{static initialize(){this.setDiceConfig()}static setDiceConfig(){if(!game.user)return{};const e=game.settings.storage.get("client");return this.diceConfig=e["core.diceConfiguration"]||"",this.diceConfig}static getDiceConfig(){return game.user?(this.setDiceConfig(),game.user.isGM&&this._sendDiceConfigToGMs(),this.diceConfig):{}}static _sendDiceConfigToGMs(){Q.execForGMs("receiveDiceConfig",game.user.id,this.diceConfig)}static receiveDiceConfig(e,t){var i,s;((i=game.user)!=null&&i.isGM||e===((s=game.user)==null?void 0:s.id))&&(this.playerDiceConfigs[e]=t?JSON.parse(t):{})}static getUserDiceConfig(e){var t;return e===((t=game.user)==null?void 0:t.id)?this.diceConfig:this.playerDiceConfigs[e]||{}}static requestDiceConfigFromUser(e){Q.execForUser("getDiceConfig",e)}static requestDiceConfigFromAllPlayers(){var e;(e=game.user)!=null&&e.isGM&&game.users.forEach(t=>{t.active&&!t.isGM&&t.id!==game.user.id&&this.requestDiceConfigFromUser(t.id)})}static clearPlayerConfigs(){this.playerDiceConfigs={}}static hasUserConfig(e){var t;return e===((t=game.user)==null?void 0:t.id)?!!this.diceConfig:!!this.playerDiceConfigs[e]}}k(te,"diceConfig",{}),k(te,"playerDiceConfigs",{});class A{static registerSettings(){const e=D();Object.entries(e).forEach(i=>{const s=i[1],o={name:s.label,hint:s.hint,default:s.default,type:s.propType,scope:s.scope,config:s.config,requiresReload:s.requiresReload||!1,onChange:l=>A.apply(s.tag,l)};s.choices&&(o.choices=s.choices);try{game.settings.register(T,s.tag,o)}catch(l){a.log(`Setting ${s.tag} already registered or error:`,l)}})}static get(e,t=T){if(!e)return null;let i=!1;try{if(t===T)i=game.settings.get(t,e);else{let o=game.settings.storage.get("client")[`${t}.${e}`];o===void 0&&(o=game.settings.storage.get("world").getSetting(`${t}.${e}`),i=o==null?void 0:o.value)}}catch{return a.log(`Setting ${t}.${e} not found, returning false`),!1}return i}static set(e,t,i=T){if(!e)return!1;let s=game.settings.storage.get("client")[`${i}.${e}`];s||(s=game.settings.storage.get("world").getSetting(`${i}.${e}`),a.log("SettingsUtil.set - world Setting?",[s]));try{game.settings.set(i,e,t),a.log("SettingsUtil.set - success",[i,e,t])}catch(o){a.error("SettingsUtil.set - error",[o])}return!0}static apply(e,t){const i=D();switch(e){case i.rollRequestsEnabled.tag:A.applyRollRequestsEnabled(t);break}}static applyRollRequestsEnabled(e){const t=document.querySelector(".chat-controls .flash-rolls-icon");t&&(e?t.classList.add("active"):t.classList.remove("active"))}}var ge,De;const oe=class oe{static isModuleOn(e){var i;const t=(i=game.modules)==null?void 0:i.get(e);return!!(t!=null&&t.active)}static html(e,t){return e.querySelector(t)}static getFullWidth(e){return window.getComputedStyle(e).width==="0px"?0:e.offsetWidth}static addCSSVars(e,t){let i=document.querySelector("#flash5e-vars");if(!i){const h=document.querySelector("body.flash5e");if(!h)return;i=document.createElement("style"),i.id="flash5e-vars",i.textContent=`body.flash5e {
}
`,h.prepend(i)}let s=i.textContent,o=s.indexOf("body.flash5e {"),l=s.indexOf("}",o);o===-1&&(s=`body.flash5e {
}
`,o=0,l=s.indexOf("}"));const r=s.substring(o+14,l).split(";").map(h=>h.trim()).filter(h=>h!==""),u={};r.forEach(h=>{const p=h.split(":");if(p.length>=2){const y=p[0].trim(),b=p.slice(1).join(":").trim();y&&(u[y]=b)}}),e.includes("i18n")&&typeof t=="string"&&!t.startsWith('"')&&!t.startsWith("'")&&!t.match(/^url\(|^rgba?\(|^hsla?\(/)&&(t=`"${t}"`),u[e]=t;const g=Object.entries(u).map(([h,p])=>`  ${h}: ${p};`).join(`
`),f=s.substring(0,o)+`body.flash5e {
`+g+`
}`+s.substring(l+1);i.textContent=f}static async processStyleSheetRules(e,t){var i;try{if(((i=e.ownerNode)==null?void 0:i.tagName)==="STYLE"){const s=e.ownerNode.textContent;this.extractFontsFromCSSText(s,t)}try{const s=e.cssRules||e.rules;if(!s)return;for(let o=0;o<s.length;o++){const l=s[o];if(l instanceof CSSFontFaceRule){const n=l.style.getPropertyValue("font-family");n&&(t.add(n),a.log("Found font-face rule:",[n]))}else if(l instanceof CSSImportRule){if(a.log("Found import rule:",[l.href]),l.styleSheet)await this.processStyleSheetRules(l.styleSheet,t);else if(l.href)try{const r=await(await fetch(l.href)).text();this.extractFontsFromCSSText(r,t)}catch(n){a.warn("Error fetching imported CSS:",[n])}}}}catch(s){if(s.name==="SecurityError"&&e.href){a.log("Security restriction on stylesheet, trying to fetch directly:",[e.href]);try{const l=await(await fetch(e.href)).text();this.extractFontsFromCSSText(l,t)}catch(o){a.warn("Error fetching cross-origin stylesheet:",[o])}}else a.warn("Error accessing CSS rules:",[s])}}catch(s){a.warn("Error in processStyleSheetRules:",[s])}}static extractFontsFromCSSText(e,t){if(!e)return;const i=/@font-face\s*{[^}]*font-family\s*:\s*(['"])(.+?)\1[^}]*}/gs;(e.match(i)||[]).forEach(o=>{const l=/font-family\s*:\s*(['"])(.+?)\1/,n=o.match(l);if(n&&n[2]){const r=n[2].trim();t.add(r)}})}static getOffsetBottom(e){const t=e.offsetTop,i=e.offsetHeight;return window.innerHeight-(t+i)}static async getAllFonts(){const e=new Set(Object.keys(CONFIG.fontDefinitions)),t=game.settings.get("core","fonts")||{},i=Object.entries(t).map(([l])=>l),s=await this.processStyleSheets();return Array.from(new Set([...e,...i,...s])).filter(l=>!/FontAwesome|Font Awesome|FoundryVTT/.test(l)).map(l=>l.replace(/['"]/g,"").trim()).sort((l,n)=>l.toLowerCase().localeCompare(n.toLowerCase()))||[]}static addCustomCSS(e,t="flash5e-custom-css",i=!0){if(!e)return;let s=document.querySelector("#"+t);s||(s=document.createElement("style"),s.id=t,s.textContent="",document.head.appendChild(s));const o=/@import\s+(?:url\()?\s*['"]?[^'")]+['"]?\s*\)?\s*;/g,l=[];let n=e,r;for(;(r=o.exec(e))!==null;)l.push(r[0]);if(n=e.replace(o,"").trim(),!i){s.textContent=l.join(`
`)+(l.length?`

`:"")+n;return}if(!s.textContent.includes(n)){const u=s.textContent,g=[];let f;for(;(f=o.exec(u))!==null;)g.push(f[0]);const h=u.replace(o,"").trim(),p=l.filter(b=>!g.includes(b)),y=[...g,...p];s.textContent=y.join(`
`)+(y.length?`

`:"")+h+(h&&n?`

`:"")+n}}static smoothScrollTo(e,t,i="horizontal",s=300,o=null){const l=e.dataset.scrollAnimationId;l&&cancelAnimationFrame(Number(l));const n=i==="horizontal",r=n?e.scrollLeft:e.scrollTop,u=t-r;if(u===0)return o&&o(),null;const g=performance.now(),f=p=>{const y=p-g;if(y>=s){n?e.scrollLeft=t:e.scrollTop=t,delete e.dataset.scrollAnimationId,o&&o();return}const b=y/s,C=b<.5?2*b*b:1-Math.pow(-2*b+2,2)/2;n?e.scrollLeft=r+u*C:e.scrollTop=r+u*C;const R=requestAnimationFrame(f);return e.dataset.scrollAnimationId=R,R},h=requestAnimationFrame(f);return e.dataset.scrollAnimationId=h,h}static confirmReload(e=game.i18n.localize("CRLNGN_UI.ui.reloadRequiredTitle"),t=game.i18n.localize("CRLNGN_UI.ui.reloadRequiredLabel"),i={}){const s={title:e,content:t,yes:{label:game.i18n.localize("CRLNGN_UI.ui.reloadButton"),callback:()=>(a.log("Reloading page after confirmation"),window.location.reload(),!0)},no:{label:game.i18n.localize("CRLNGN_UI.ui.cancelButton"),callback:()=>!1},defaultYes:!1,rejectClose:!1};return mergeObject(s,i),foundry.applications.api.DialogV2.confirm(s)}static renderTemplate(e,t){return foundry.applications.handlebars.renderTemplate(e,t)}static loadTemplate(e){return foundry.applications.handlebars.loadTemplate(e)}static loadTemplates(e){return Array.isArray(e)||(e=[e]),foundry.applications.handlebars.loadTemplates(e)}static isValidCSSRule(e){if(!e||typeof e!="string")return!1;const t=e.trim();if(!t)return!1;try{const i=document.createElement("style"),s=`${t} { color: inherit; }`;i.textContent=s,document.head.appendChild(i);const o=!!(i.sheet&&i.sheet.cssRules&&i.sheet.cssRules.length>0);return document.head.removeChild(i),o}catch(i){return a.log("CSS validation error:",[i,e]),!1}}static processCSSRules(e,t){if(!e||!t)return"";const i=Se(this,ge,De).call(this,e),s=t+` {
`+i.baseProperties.join(`
`)+`
}`,o=[],l=new Map;return i.nestedRules.forEach(n=>{const{selector:r,content:u}=n;if(r.startsWith("&")){const h=r.substring(1),p=t.split(",").map(y=>y.trim()).filter(Boolean).map(y=>y+h).join(", ");o.push(`${p} {
${u}
}`);return}l.has(u)||l.set(u,[]);const g=r.split(",").map(h=>h.trim()),f=t.split(",").map(h=>h.trim()).filter(Boolean);g.forEach(h=>{f.forEach(p=>{l.get(u).push(`${p} ${h}`)})})}),l.forEach((n,r)=>{o.push(`${n.join(", ")} {
${r}
}`)}),s+`

`+o.join(`

`)}static getActorOwner(e){const t=e.ownership||{};for(const[i,s]of Object.entries(t))if(s>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const o=game.users.get(i);if(o&&!o.isGM)return o}if((t==null?void 0:t.default)>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const i=game.users.filter(s=>!s.isGM)[0];if(i)return i}return null}};ge=new WeakSet,De=function(e){const t=[],i=[],s=e.split(`
`);let o=null,l=0;for(let n=0;n<s.length;n++){const r=s[n].trim();if(!r)continue;const u=(r.match(/{/g)||[]).length,g=(r.match(/}/g)||[]).length;if(r.includes("{")&&!o){o={selector:r.substring(0,r.indexOf("{")).trim(),content:"",startLine:n},l=1;const h=r.substring(r.indexOf("{")+1).trim();h&&!h.includes("}")&&(o.content+=h+`
`)}else o?(l+=u-g,l>0?o.content+=r+`
`:(o.content=o.content.replace(/}\s*$/,"").trim(),i.push(o),o=null)):!r.includes("{")&&!r.includes("}")&&t.push(r)}return{baseProperties:t,nestedRules:i}},pe(oe,ge),k(oe,"processStyleSheets",async()=>{const e=new Set(Object.keys(CONFIG.fontDefinitions)),t=game.settings.get("core","fonts")||{},i=Object.entries(t).map(([l])=>l),s=new Set;for(const l of document.styleSheets)try{if(l.ownerNode){const n=l.href||"",r=n.includes("css/")||n.includes("styles/"),u=n.includes("modules/flash-rolls-5e/"),g=n.includes("systems/");if(n&&!r&&!u&&!g)continue;await oe.processStyleSheetRules(l,s)}}catch(n){a.warn("Error processing stylesheet:",[n])}return a.log("Found fonts:",[{foundry:Array.from(e),custom:i,cssImported:Array.from(s)}]),Array.from(new Set([...e,...i,...s])).filter(l=>!/FontAwesome|Font Awesome|FoundryVTT/.test(l)).map(l=>l.replace(/['"]/g,"").trim()).sort((l,n)=>l.toLowerCase().localeCompare(n.toLowerCase()))}),k(oe,"wrapFontName",e=>{const t=e.replace(/['"`]/g,"");return t.includes(" ")?`"${t}"`:t});let V=oe;Hooks.once("ready",()=>{dnd5e.applications.dice.DamageRollConfigurationDialog||a.warn("DamageRollConfigurationDialog not found in dnd5e.applications.dice")});function re(c){return class extends c{constructor(e={},t={},i={}){var s,o;super(e,t,i),this.actors=i.actors||[],this.sendRequest=i.sendRequest??i.sendRequest??!0,this.showDC=i.showDC||!1,this.dcValue=i.dcValue||null,this.rollKey=i.rollKey||e.skill||e.ability||null,this.rollTypeString=i.rollTypeString||null,this.windowTitle=((s=i.window)==null?void 0:s.title)||"",this.windowSubtitle=((o=i.window)==null?void 0:o.subtitle)||""}_buildConfig(e,t,i){const s=t==null?void 0:t.get("ability"),o=t==null?void 0:t.get("dc"),l=t==null?void 0:t.get(`rolls.${i}.situational`);if(a.log("_buildConfig",[l,t,e]),l)e.parts||(e.parts=[]),e.parts.push("@situational"),e.data||(e.data={}),e.data.situational=l;else if(e.parts){const r=e.parts.indexOf("@situational");r!==-1&&e.parts.splice(r,1)}s&&(e.ability=s,this.config.ability=s);const n=super._buildConfig(e,t,i);if(o){const r=parseInt(o);isNaN(r)||(n.options=n.options||{},n.options.target=r)}else this.dcValue!==void 0&&this.dcValue!==null&&(n.options=n.options||{},n.options.target=this.dcValue);return a.log(`${this.constructor.name}._buildConfig`,[this.config,t,n]),n}_onChangeForm(e,t){a.log("_onChangeForm",[t.target.value]),super._onChangeForm(e,t);const i=this.element.querySelector('input[name="flash5e-send-request"]');i&&(this.sendRequest=i.checked);const s=this.element.querySelector('input[name="dc"]');s&&s.value&&(this.dcValue=parseInt(s.value)||null)}_finalizeRolls(e){const t=super._finalizeRolls(e);if(a.log("_finalizeRolls #1",[t,this.sendRequest]),this.dcValue!==void 0&&this.dcValue!==null)for(const i of t)i.options.target=this.dcValue;return this.config.sendRequest=this.sendRequest,t}async _onRender(e,t){var i,s,o;await super._onRender(e,t),((o=(s=(i=this.config.rolls)==null?void 0:i[0])==null?void 0:s.data)!=null&&o.situational||this.config.situational)&&(a.log(`${this.constructor.name}._onRender`,["Triggering rebuild for initial situational bonus"]),setTimeout(()=>{this.rebuild()},100))}}}const E={addSituationalBonus(c,e){var t;return a.log("Config before adding bonus:",[e,c]),e&&((t=c.rolls)!=null&&t[0])&&(c.rolls[0].parts||(c.rolls[0].parts=[]),c.rolls[0].data||(c.rolls[0].data={}),c.rolls[0].data.situational=e,c.rolls[0].parts.includes("@situational")||c.rolls[0].parts.push("@situational"),a.log("Config after adding bonus:",[c])),c},buildRollConfig(c,e,t={}){var o;const i={rolls:[{parts:e.parts||[],data:e.data||{},options:{...e.options||{},...((o=e.options)==null?void 0:o._fromFlashRolls)&&{_fromFlashRolls:!0}}}],advantage:c.config.advantage||!1,disadvantage:c.config.disadvantage||!1,target:c.config.target,subject:null,chatMessage:!0,legacy:!1,...c.config.rollMode&&{rollMode:c.config.rollMode},...t},s=c.config.situational;return s&&this.addSituationalBonus(i,s),this.ensureRollFlags(i,c)},ensureRollFlags(c,e){return c.isRollRequest=!game.user.isGM,c._showRequestedBy=!0,c._requestedBy=e.config.requestedBy||"GM",c},validateActors(c){return!c||c.length===0?null:(typeof c[0]=="string"&&(c=c.map(e=>game.actors.get(e)).filter(e=>e)),c.length>0?c:null)},getRollClass(c){const e=c==null?void 0:c.toLowerCase();return[d.DAMAGE,d.HEALING].includes(e)?CONFIG.Dice.DamageRoll||CONFIG.Dice.BasicRoll:[d.FORMULA,d.CUSTOM,d.HIT_DIE].includes(e)?CONFIG.Dice.BasicRoll:CONFIG.Dice.D20Roll},shouldShowDC(c){const e=c==null?void 0:c.toLowerCase();return[d.SAVE,d.SAVING_THROW,d.ABILITY,d.ABILITY_CHECK,d.CONCENTRATION,d.SKILL,d.TOOL].includes(e)},createBaseRollConfig(c,e,t){const i=e==null?void 0:e.toLowerCase(),s={data:c.getRollData(),subject:c,rolls:[{parts:[],data:c.getRollData(),options:{}}]};switch(i){case d.SKILL:s.skill=t;break;case d.TOOL:s.tool=t;break;case d.SAVE:case d.SAVING_THROW:case d.ABILITY:case d.ABILITY_CHECK:s.ability=t;break;case d.HIT_DIE:s.rolls[0].options.flavor="Hit Die";break}return s},createMessageConfig(c,e=null){const t={create:!1,data:{speaker:ChatMessage.getSpeaker({actor:c})}};return e&&(t.rollMode=e),t},async triggerRollDialog(c,e,t,i){const s=new c(e,t,i);return await new Promise(l=>{s.addEventListener("close",()=>{l({rolls:s.rolls,config:s.config,message:s.message,sendRequest:s.sendRequest,critical:s.config.critical,isCritical:s.config.isCritical})},{once:!0}),s.render({force:!0})})},processDialogResult(c,e,t,i,s={}){var b,C,R,m,I,_;if(!(c!=null&&c.rolls)||c.rolls.length===0)return null;const o=t==null?void 0:t.toLowerCase(),l=c.rolls[0];let n=!1,r=!1;((b=l==null?void 0:l.options)==null?void 0:b.advantageMode)!==void 0&&(n=l.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE,r=l.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE);const u=((C=l==null?void 0:l.data)==null?void 0:C.situational)||"",g=(R=l==null?void 0:l.options)==null?void 0:R.target,f={rolls:[{parts:((m=l==null?void 0:l.parts)==null?void 0:m.slice())||[],data:u?{situational:u}:{},options:g?{target:g}:{}}],subject:e[0],advantage:n,disadvantage:r,target:g,sendRequest:c.sendRequest,isRollRequest:c.sendRequest,skipRollDialog:s.skipRollDialog||!1,chatMessage:!0},h=D(),p=A.get(h.publicPlayerRolls.tag)===!0,y=this.determineRollMode(p,(I=c.message)==null?void 0:I.rollMode);return f.rollMode=y,(_=c.config)!=null&&_.ability&&[d.SKILL,d.TOOL].includes(o)&&(f.ability=c.config.ability),f},determineRollMode(c,e){return e||(c?CONST.DICE_ROLL_MODES.PUBLIC:game.settings.get("core","rollMode"))},isPlayerOwned(c){return Object.entries(c.ownership).some(([e,t])=>{const i=game.users.get(e);return i&&!i.isGM&&t>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})}};class W extends re(dnd5e.applications.dice.D20RollConfigurationDialog){constructor(e={},t={},i={}){i.rollType=i.rollType||CONFIG.Dice.D20Roll,super(e,t,i),a.log("constructor - initializing GM Dialog",[e,t,i])}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}get title(){return this.windowTitle||super.title}_prepareConfigurationData(e,t,i,s){a.log("_prepareConfigurationData",[e,t,i,s]);const o=super._prepareConfigurationData(e,t,i,s);return o.showDC=this.showDC,o.dcValue=this.dcValue,o.sendRequest=this.sendRequest,o.actorCount=this.actors.length,o}async _preparePartContext(e,t,i){return a.log("_preparePartContext",[e,t,i]),t=await super._preparePartContext(e,t,i),e==="configuration"&&(t.showDC=this.showDC,t.dcValue=this.dcValue,t.sendRequest=this.sendRequest,t.actorCount=this.actors.length),t}async _onRender(e,t){if(a.log("_onRender",[e,t]),super._onRender(e,t),this.element.querySelector(".gm-roll-config-fields"))return;let i=this.element.querySelector(".rolls .formulas");if(i&&(this.showDC||this.actors.length>0)){const s={showDC:this.showDC,dcValue:this.dcValue,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},o=await V.renderTemplate(`modules/${T}/templates/gm-roll-config-fields.hbs`,s),l=document.createElement("div");l.className="gm-roll-config-fields",l.innerHTML=o,i.parentNode.insertBefore(l,i)}this._attachButtonListeners()}_attachButtonListeners(){a.log("_attachButtonListeners",[this.element]),this.element.querySelectorAll('[data-action="advantage"], [data-action="normal"], [data-action="disadvantage"]').forEach(t=>{t.addEventListener("click",i=>{i.currentTarget.dataset.action})})}static async initConfiguration(e,t,i,s={}){var m,I,_,L,S,N,w,H,O;if(e=E.validateActors(e),!e)return null;const o=e[0];a.log("GMRollConfigDialog, initConfiguration",[]);const l=t==null?void 0:t.toLowerCase(),n=D(),r=A.get(n.publicPlayerRolls.tag)===!0,u=E.determineRollMode(r),g=E.shouldShowDC(l),f=E.getRollClass(l),h=E.createBaseRollConfig(o,t,i),p=E.createMessageConfig(o,u),y={options:{actors:e,sendRequest:e.some(F=>E.isPlayerOwned(F)),showDC:g,rollKey:i,rollType:f,rollTypeString:l,window:{title:W._getRollTitle(l,i,o),subtitle:W._getSubtitle(e)},...s}},b=await E.triggerRollDialog(this,h,p,y.options),C=E.processDialogResult(b,e,t,i,s);if(!C)return null;if((m=b.config)!=null&&m.ability&&[d.SKILL,d.TOOL].includes(l)){const F=((_=(I=o.system.skills)==null?void 0:I[i])==null?void 0:_.ability)||((S=(L=CONFIG.DND5E.skills)==null?void 0:L[i])==null?void 0:S.ability);b.config.ability!==F&&(C.ability=b.config.ability)}let R=y.options.window.title;if(b.config.ability&&[d.SKILL,d.TOOL].includes(l)){const F=((N=CONFIG.DND5E.abilities[b.config.ability])==null?void 0:N.label)||b.config.ability;if(l===d.SKILL){const x=((w=CONFIG.DND5E.skills[i])==null?void 0:w.label)||i;R=game.i18n.format("DND5E.SkillPromptTitle",{skill:x,ability:F})}else if(l===d.TOOL){const x=(O=(H=CONFIG.DND5E.enrichmentLookup)==null?void 0:H.tools)==null?void 0:O[i];let Y=i;if(x!=null&&x.id){const M=dnd5e.documents.Trait.getBaseItem(x.id,{indexOnly:!0});Y=(M==null?void 0:M.name)||i}R=game.i18n.format("DND5E.ToolPromptTitle",{tool:Y,ability:F})}}return C.rollTitle=R,C.rollType=l,C.rollKey=i,C}static _getRollTitle(e,t,i){var l,n,r,u,g,f,h,p,y,b,C,R,m,I,_,L,S,N;a.log("GMRollConfigDialog._getRollTitle",[e,t,i]),a.log("GMRollConfigDialog._getRollTitle - Detailed",{rollType:e,rollKey:t,actorName:i==null?void 0:i.name,actorAbilities:(l=i==null?void 0:i.system)!=null&&l.abilities?Object.keys(i.system.abilities):[],actorSkills:(n=i==null?void 0:i.system)!=null&&n.skills?Object.keys(i.system.skills):[],actorInitAbility:(g=(u=(r=i==null?void 0:i.system)==null?void 0:r.attributes)==null?void 0:u.init)==null?void 0:g.ability});let s="";const o=e==null?void 0:e.toLowerCase();switch([d.SAVE,d.ABILITY,d.ABILITY_CHECK].includes(o)&&!t&&a.warn("Missing rollKey for roll type",[o,t]),o){case d.SKILL:const w=((f=CONFIG.DND5E.skills[t])==null?void 0:f.label)||t,H=(h=i==null?void 0:i.system.skills)==null?void 0:h[t],O=(H==null?void 0:H.ability)||((p=CONFIG.DND5E.skills[t])==null?void 0:p.ability)||"int",F=((y=CONFIG.DND5E.abilities[O])==null?void 0:y.label)||O;s=game.i18n.format("DND5E.SkillPromptTitle",{skill:w,ability:F});break;case d.SAVE:case d.SAVING_THROW:const x=((b=CONFIG.DND5E.abilities[t])==null?void 0:b.label)||t;s=game.i18n.format("DND5E.SavePromptTitle",{ability:x});break;case d.ABILITY:case d.ABILITY_CHECK:const Y=((C=CONFIG.DND5E.abilities[t])==null?void 0:C.label)||t;s=game.i18n.format("DND5E.AbilityPromptTitle",{ability:Y});break;case d.CONCENTRATION:s=game.i18n.localize("DND5E.Concentration");break;case d.TOOL:const M=(m=(R=CONFIG.DND5E.enrichmentLookup)==null?void 0:R.tools)==null?void 0:m[t];let ie=t;if(M!=null&&M.id){const fe=dnd5e.documents.Trait.getBaseItem(M.id,{indexOnly:!0});ie=(fe==null?void 0:fe.name)||t}const ae=(I=i==null?void 0:i.system.tools)==null?void 0:I[t],Ie=(ae==null?void 0:ae.ability)||((S=(L=(_=CONFIG.DND5E.enrichmentLookup)==null?void 0:_.tools)==null?void 0:L[t])==null?void 0:S.ability)||"int",He=((N=CONFIG.DND5E.abilities[Ie])==null?void 0:N.label)||Ie;s=game.i18n.format("DND5E.ToolPromptTitle",{tool:ie,ability:He});break;case d.DEATH_SAVE:s=game.i18n.localize("DND5E.DeathSave");break;case d.INITIATIVE:case d.INITIATIVE_DIALOG:s=game.i18n.localize("DND5E.Initiative");break;default:s=game.i18n.localize("DND5E.Roll")}return a.log("_getRollTitle",[o,s]),s}static _getSubtitle(e=[]){return e.length===1?e[0].name:e.length>1?game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.multipleActors"):""}}class we extends re(dnd5e.applications.dice.RollConfigurationDialog){constructor(e={},t={},i={}){i.rollType=CONFIG.Dice.BasicRoll||Roll,i.showDC=!1,super(e,t,i),a.log("constructor",[e,t,i])}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config","hit-die-config"]})}_prepareConfigurationData(e,t,i,s){const o=super._prepareConfigurationData(e,t,i,s);return a.log("GMHitDieConfigDialog._prepareConfigurationData",[o]),o.formula="Hit Die (varies by actor)",o.sendRequest=this.sendRequest,o.actorCount=this.actors.length,o}async _preparePartContext(e,t,i){return t=await super._preparePartContext(e,t,i),e==="configuration"&&(t.sendRequest=this.sendRequest,t.actorCount=this.actors.length,t.formula="Hit Die (varies by actor)"),t}async _onRender(e,t){if(super._onRender(e,t),this.element.querySelector(".gm-roll-config-fields"))return;let i=this.element.querySelector(".rolls .formulas");if(i&&this.actors.length>0){const s={showDC:!1,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},o=await V.renderTemplate(`modules/${T}/templates/gm-roll-config-fields.hbs`,s),l=document.createElement("div");l.className="gm-roll-config-fields",l.innerHTML=o,i.parentNode.insertBefore(l,i)}}async _processSubmitData(e,t,i){await super._processSubmitData(e,t,i),this.sendRequest=i.get("flash5e-send-request")!=="false",a.log("_processSubmitData",[i,this.config])}_finalizeRolls(e){const t=super._finalizeRolls(e);return this.config.sendRequest=this.sendRequest,a.log("GMHitDieConfigDialog._finalizeRolls - before merge",[t]),t}static async initConfiguration(e,t,i,s={}){var y;if(e=E.validateActors(e),!e)return null;const o=e[0];a.log("GMHitDieConfigDialog, initConfiguration",[]);const l=D(),n=A.get(l.publicPlayerRolls.tag)===!0,r=E.determineRollMode(n),u={data:o.getRollData(),subject:o,rolls:[{parts:[],data:o.getRollData(),options:{flavor:"Hit Die Roll"}}]},g=E.createMessageConfig(o,r),f={options:{actors:e,sendRequest:e.some(b=>E.isPlayerOwned(b)),rollKey:i,rollType:CONFIG.Dice.BasicRoll||Roll,window:{title:game.i18n.localize("DND5E.HitDice"),subtitle:W._getSubtitle(e)},...s}},h=await E.triggerRollDialog(this,u,g,f.options);if(!(h!=null&&h.rolls)||h.rolls.length===0)return null;a.log("GMHitDieConfigDialog - dialog result",[h.rolls]);const p=E.processDialogResult(h,e,t,i,s);return p?((y=h.config)!=null&&y.ability&&(p.ability=h.config.ability),p):null}}class Ne extends re(dnd5e.applications.dice.SkillToolRollConfigurationDialog){constructor(e={},t={},i={}){const s=foundry.utils.mergeObject(e,{chooseAbility:!0});i.rollType=i.rollType||CONFIG.Dice.D20Roll,super(s,t,i),a.log("constructor",[e,t,i])}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}_prepareConfigurationData(e,t,i,s){a.log("_prepareConfigurationData",[e,t,i,s]);const o=super._prepareConfigurationData(e,t,i,s);return o.showDC=this.showDC,o.dcValue=this.dcValue,o.sendRequest=this.sendRequest,o.actorCount=this.actors.length,o}async _preparePartContext(e,t,i){return a.log("_preparePartContext",[e,t,i]),t=await super._preparePartContext(e,t,i),e==="configuration"&&(t.showDC=this.showDC,t.dcValue=this.dcValue,t.sendRequest=this.sendRequest,t.actorCount=this.actors.length),t}async _onRender(e,t){if(a.log("_onRender",[e,t]),super._onRender(e,t),this.element.querySelector(".gm-roll-config-fields"))return;let i=this.element.querySelector(".rolls .formulas");if(i&&(this.showDC||this.actors.length>0)){const s={showDC:this.showDC,dcValue:this.dcValue,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},o=await V.renderTemplate(`modules/${T}/templates/gm-roll-config-fields.hbs`,s),l=document.createElement("div");l.className="gm-roll-config-fields",l.innerHTML=o,i.parentNode.insertBefore(l,i)}this._attachButtonListeners()}_attachButtonListeners(){a.log("_attachButtonListeners",[]),this.element.querySelectorAll('[data-action="advantage"], [data-action="normal"], [data-action="disadvantage"]').forEach(t=>{t.addEventListener("click",i=>{i.currentTarget.dataset.action})})}static async initConfiguration(e,t,i,s={}){var m,I,_,L,S,N;if(e=E.validateActors(e),!e)return null;const o=e[0];a.log("GMSkillToolConfigDialog, initConfiguration",[]);const l=t==null?void 0:t.toLowerCase(),n=D(),r=A.get(n.publicPlayerRolls.tag)===!0,u=E.determineRollMode(r),g=E.shouldShowDC(l),f=CONFIG.Dice.D20Roll;let h=null;if(l===d.SKILL){const w=o.system.skills[i];h=(w==null?void 0:w.ability)||((m=CONFIG.DND5E.skills[i])==null?void 0:m.ability)||"int"}else if(l===d.TOOL){const w=(I=o.system.tools)==null?void 0:I[i];h=(w==null?void 0:w.ability)||((S=(L=(_=CONFIG.DND5E.enrichmentLookup)==null?void 0:_.tools)==null?void 0:L[i])==null?void 0:S.ability)||"int"}const p={data:o.getRollData(),subject:o,ability:h,chooseAbility:!0,rolls:[{parts:[],data:o.getRollData(),options:{}}]};l===d.SKILL?p.skill=i:l===d.TOOL&&(p.tool=i);const y=E.createMessageConfig(o,u),b={options:{actors:e,sendRequest:e.some(w=>E.isPlayerOwned(w)),showDC:g,rollKey:i,rollType:f,rollTypeString:l,window:{title:W._getRollTitle(l,i,o),subtitle:W._getSubtitle(e)},...s}},C=await E.triggerRollDialog(this,p,y,b.options),R=E.processDialogResult(C,e,t,i,s);return R?((N=C.config)!=null&&N.ability&&[d.SKILL,d.TOOL].includes(l)&&(R.ability=C.config.ability),R.rollTitle=b.options.window.title,R.rollType=l,R.rollKey=i,R):null}}class ze extends re(dnd5e.applications.dice.DamageRollConfigurationDialog){constructor(e={},t={},i={}){const s=foundry.utils.mergeObject({configure:!0},e);super(s,t,i),a.log("GMDamageConfigDialog.constructor",[s,t,i])}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","damage-roll","gm-roll-config"]})}_prepareConfigurationData(e,t,i,s){a.log("GMDamageConfigDialog._prepareConfigurationData",[e,t,i,s]);const o=super._prepareConfigurationData(e,t,i,s);return o.sendRequest=this.sendRequest,o.actorCount=this.actors.length,o}async _onRender(e,t){if(await super._onRender(e,t),this.actors.length>0){const i=this.element.querySelector(".rolls + .dialog-buttons");if(i&&!this.element.querySelector(".gm-roll-config-fields")){const s=document.createElement("div");s.className="gm-roll-config-fields",s.innerHTML=`
          <div class="form-group">
            <label class="checkbox">
              <input type="checkbox" name="flash5e-send-request" ${this.sendRequest?"checked":""}>
              ${game.i18n.localize("CRLNGN_ROLL_REQUESTS.ui.dialogs.sendRequestToPlayers")}
            </label>
          </div>
        `,i.insertAdjacentElement("beforebegin",s)}}}static async initConfiguration(e,t,i,s={},o={},l={}){var N,w,H,O,F;if(e=E.validateActors(e),a.log("GMDamageConfigDialog, initConfiguration actors",[e]),!e)return null;const n=e[0];a.log("GMDamageConfigDialog, initConfiguration #0",[o]);const r=D(),u=A.get(r.publicPlayerRolls.tag)===!0,g=E.determineRollMode(u,o.rollMode),f=t==null?void 0:t.toLowerCase(),h={subject:o.subject||n,data:n.getRollData(),critical:o.critical||{},rolls:o.rolls||[{parts:[],data:n.getRollData(),options:{}}]};a.log("GMDamageConfigDialog, initConfiguration #1",[h]);const p=E.createMessageConfig(n,g);a.log("GMDamageConfigDialog, initConfiguration #2",[p]);const{position:y,...b}=(l==null?void 0:l.options)||{},C={options:{actors:e,sendRequest:e.some(x=>E.isPlayerOwned(x)),rollKey:i,rollType:CONFIG.Dice.DamageRoll,rollTypeString:f,window:{title:game.i18n.localize("DND5E.DamageRoll"),subtitle:W._getSubtitle(e)},...b,...s}};a.log("GMDamageConfigDialog, initConfiguration #3",[C]);const R=await E.triggerRollDialog(this,h,p,C.options);if(a.log("GMDamageConfigDialog, initConfiguration #4",[R]),!(R!=null&&R.rolls)||R.rolls.length===0)return null;a.log("GMDamageConfigDialog, initConfiguration #5",[R]);const m=R.rolls[0],I=((N=m==null?void 0:m.data)==null?void 0:N.situational)||"",_=(w=m==null?void 0:m.options)==null?void 0:w.target,L={rolls:[{parts:[],data:I?{situational:I}:{},options:{..._&&{target:_},isCritical:((H=m==null?void 0:m.options)==null?void 0:H.isCritical)||(m==null?void 0:m.isCritical)||!1}}],subject:o.subject||n,target:_,isCritical:((O=m==null?void 0:m.options)==null?void 0:O.isCritical)||(m==null?void 0:m.isCritical)||!1,sendRequest:R.sendRequest,isRollRequest:R.sendRequest,skipRollDialog:s.skipRollDialog||!1,chatMessage:!0};a.log("GMDamageConfigDialog, initConfiguration #6",[L]);const S=E.determineRollMode(u,(F=R.message)==null?void 0:F.rollMode);return L.rollMode=S,L.rollTitle=C.options.window.title,L.rollType=f,L.rollKey=i,a.log("GMDamageConfigDialog, initConfiguration - result",[L]),L}}class Ue extends re(dnd5e.applications.dice.AttackRollConfigurationDialog){constructor(e={},t={},i={}){super(e,t,i),a.log("GMAttackConfigDialog.constructor",[e,t,i])}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}_prepareConfigurationData(e,t,i,s){a.log("GMAttackConfigDialog._prepareConfigurationData",[e,t,i,s]);const o=super._prepareConfigurationData(e,t,i,s);return o.sendRequest=this.sendRequest,o.actorCount=this.actors.length,o}async _preparePartContext(e,t,i){return t=await super._preparePartContext(e,t,i),e==="configuration"&&(t.sendRequest=this.sendRequest,t.actorCount=this.actors.length),t}async _onRender(e,t){if(await super._onRender(e,t),this.element.querySelector(".gm-roll-config-fields"))return;let i=this.element.querySelector(".rolls .formulas");if(i&&this.actors.length>0){const s={showDC:!1,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},o=await V.renderTemplate(`modules/${T}/templates/gm-roll-config-fields.hbs`,s),l=document.createElement("div");l.className="gm-roll-config-fields",l.innerHTML=o,i.parentNode.insertBefore(l,i)}}_finalizeRolls(e){return this.config.sendRequest=this.sendRequest,!this.sendRequest&&this.config.isRollRequest&&(this.config.isRollRequest=!1),super._finalizeRolls(e)}static async initConfiguration(e,t,i,s={},o={},l={}){var H,O,F,x,Y,M,ie;if(e=E.validateActors(e),!e)return null;const n=e[0];a.log("GMAttackConfigDialog, initConfiguration",[]);const r=D(),u=A.get(r.publicPlayerRolls.tag)===!0,g=t==null?void 0:t.toLowerCase(),f={subject:o.subject||n,data:n.getRollData(),rolls:[{parts:[],data:n.getRollData(),options:{}}]},h=E.determineRollMode(u),p=E.createMessageConfig(n,h),{position:y,...b}=(l==null?void 0:l.options)||{},C={options:{actors:e,sendRequest:e.some(ae=>E.isPlayerOwned(ae)),rollKey:i,rollType:CONFIG.Dice.D20Roll,rollTypeString:g,window:{title:game.i18n.localize("DND5E.Attack"),subtitle:W._getSubtitle(e)},...b,...s}},R=await E.triggerRollDialog(this,f,p,C.options);if(a.log("GMAttackConfigDialog, initConfiguration",[R==null?void 0:R.sendRequest]),!(R!=null&&R.rolls)||R.rolls.length===0)return null;const m=R.rolls[0];let I=!1,_=!1;((H=m==null?void 0:m.options)==null?void 0:H.advantageMode)!==void 0&&(I=m.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE,_=m.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE);const L=((O=m==null?void 0:m.data)==null?void 0:O.situational)||"",S=(F=m==null?void 0:m.options)==null?void 0:F.target,N={rolls:[{parts:[],data:L?{situational:L}:{},options:{...S&&{target:S},...((x=m==null?void 0:m.options)==null?void 0:x.ammunition)&&{ammunition:m.options.ammunition},...((Y=m==null?void 0:m.options)==null?void 0:Y.attackMode)&&{attackMode:m.options.attackMode},...((M=m==null?void 0:m.options)==null?void 0:M.mastery)!==void 0&&{mastery:m.options.mastery}}}],subject:o.subject||n,advantage:I,disadvantage:_,target:S,sendRequest:R.sendRequest,isRollRequest:R.sendRequest,skipDialog:s.skipDialogs||!1,chatMessage:!V.isModuleOn("midi-qol")||!0},w=E.determineRollMode(u,(ie=R.message)==null?void 0:ie.rollMode);return N.rollMode=w,N.rollTitle=C.options.window.title,N.rollType=g,N.rollKey=i,a.log("GMAttackConfigDialog, initConfiguration - SIMPLIFIED result",[N]),N}}const le=class le{static isModuleActive(e){const t=game.modules.get(e);return t&&t.active}static getMidiQOL(){return this.isModuleActive("midi-qol")&&typeof MidiQOL<"u"?MidiQOL:null}static async prepareMidiQOLSettings(){let e=null;if(a.log("prepareMidiQOLSettings #0",[game.settings]),le.isModuleActive("midi-qol")){a.log("prepareMidiQOLSettings #1",[MidiQOL]),e={autoFastForwardAbilityRolls:A.get("AutoFastForwardAbilityRolls","midi-qol")},clearTimeout(le.midiTimeout),le.midiTimeout=setTimeout(()=>{e&&A.set("AutoFastForwardAbilityRolls",e.autoFastForwardAbilityRolls,"midi-qol"),a.log("prepareMidiQOLSettings #timeout 1",[game.user.getFlag(T,"savedMidiQOLSettings")]),game.user.unsetFlag(T,"savedMidiQOLSettings"),a.log("prepareMidiQOLSettings #timeout 2",[game.user.getFlag(T,"savedMidiQOLSettings")])},4e3);try{a.log("prepareMidiQOLSettings #before",[A.get("AutoFastForwardAbilityRolls","midi-qol")]),await game.user.setFlag(T,"savedMidiQOLSettings",e),await A.set("AutoFastForwardAbilityRolls",!1,"midi-qol"),a.log("prepareMidiQOLSettings #after",[A.get("AutoFastForwardAbilityRolls","midi-qol"),MidiQOL])}catch(t){a.error("prepareMidiQOLSettings",[t])}finally{a.log("prepareMidiQOLSettings - saved temporary settings for MidiQOL",[])}}}};k(le,"midiTimeout",null);let ee=le;class $e{static findActivityForRoll(e,t){var o;if(!((o=e==null?void 0:e.system)!=null&&o.activities))return null;const i=e.system.activities;switch(t==null?void 0:t.toLowerCase()){case d.ATTACK:const l=i.getByType("attack");return(l==null?void 0:l[0])||null;case d.DAMAGE:const n=i.getByType("attack");if((n==null?void 0:n.length)>0)return n[0];const r=i.getByType("damage");if((r==null?void 0:r.length)>0)return r[0];const u=i.getByType("save");return(u==null?void 0:u.length)>0?u[0]:null;case d.ITEM_SAVE:const g=i.getByType("save");return(g==null?void 0:g[0])||null;default:return null}}static getActivitiesByType(e,t){var i;return(i=e==null?void 0:e.system)!=null&&i.activities?e.system.activities.getByType(t):[]}static hasActivityForRoll(e,t){return a.log("hasActivityForRoll",[e,t]),!!this.findActivityForRoll(e,t)}static async executeActivityRoll(e,t,i,s,o){var f,h,p,y,b,C,R,m;a.log("executeActivityRoll",[e,t,i,s,o]);const l=ee.isModuleActive("midi-qol"),n=e.items.get(i);if(!n)throw new Error(`Item ${i} not found on actor ${e.name}`);let r=null,u=null;if(s&&(r=(f=n.system.activities)==null?void 0:f.get(s)),r=r||this.findActivityForRoll(n,t),!r)throw new Error(`Activity not found on item ${n.name}`);a.log("executeActivityRoll - activity",[r,t]);const g=t==null?void 0:t.toLowerCase();if(r)switch(g){case d.ATTACK:a.log("executeActivityRoll - is attack activity",[o]);const I={attackMode:o.usage.attackMode,ammunition:o.usage.ammunition,mastery:o.usage.mastery,situational:(y=(p=(h=o.usage.rolls)==null?void 0:h[0])==null?void 0:p.data)==null?void 0:y.situational,advantage:o.usage.advantage,disadvantage:o.usage.disadvantage,rollMode:(b=o.message)==null?void 0:b.rollMode};await r.item.setFlag(T,"tempAttackConfig",I),a.log("executeActivityRoll - stored temp config as flag",[I]);try{if(o.message.create=!0,await r.use(o.usage,o.dialog,o.message),a.log("CRLNGN TEST",[o]),l&&ee.getMidiQOL())return}catch(_){a.error("executeActivityRoll - attack roll error",[_])}finally{await r.item.unsetFlag(T,"tempAttackConfig")}return;case d.DAMAGE:a.log("executeActivityRoll - damage roll",[r,o]),l||(o.message.create=!0),u={critical:o.usage.critical||{},situational:o.usage.rolls[0].data.situational||"",rollMode:(C=o.message)==null?void 0:C.rollMode,create:((R=o.message)==null?void 0:R.create)!==!1},(r.type===be.SAVE||r!=null&&r.damageOnly)&&await r.use(o.usage,o.dialog,o.message),await r.item.setFlag(T,"tempDamageConfig",u),a.log("executeActivityRoll - damage config with situational",[u]);try{if(l){const _=ee.getMidiQOL();if(_){const L=(m=_.Workflow)==null?void 0:m.getWorkflow(r.uuid),S=await L.activity.rollDamage({...o,workflow:L});return}}else await r.rollDamage(u,o.dialog,o.message)}catch(_){a.error(["executeActivityRoll - damage roll error",_])}finally{await r.item.unsetFlag(T,"tempDamageConfig")}return;default:a.log("executeActivityRoll - unknown roll type",[g]);return}throw new Error(`No suitable method found for ${g} on item ${n.name}`)}static getActivityDisplayInfo(e){return a.log("getActivityDisplayInfo",[e]),e?{name:e.name||e.constructor.metadata.label,type:e.type,icon:e.constructor.metadata.icon,canAttack:e.type==="attack",canDamage:["attack","damage","save"].includes(e.type),canSave:e.type==="save"}:null}static getDamageFormula(e){var i,s;if(a.log("getDamageFormula",[e]),!((s=(i=e==null?void 0:e.damage)==null?void 0:i.parts)!=null&&s.length))return null;const t=e.damage.parts.map(o=>o.formula).filter(o=>o);return t.length>0?t.join(" + "):null}static async syntheticItemRoll(e,t={}){a.log("syntheticItemRoll",[e,t]);const i=ee.getMidiQOL();if(!i){a.warn("MidiQOL is not active");return}let s={consumeUsage:!1,consumeSpellSlot:!1},o={fastForward:!1,fastForwardAttack:!1,dialogOptions:{fastForward:!1,fastForwardAttack:!1},configureDialog:!0,workflowOptions:{fastForward:!1,fastForwardAttack:!1}};return t={...s,...t},await i.completeItemUse(e,t,o)}}const{ApplicationV2:je,HandlebarsApplicationMixin:Qe}=foundry.applications.api;class _e extends Qe(je){constructor(e={}){super(e),this.formula=e.formula||"",this.readonly=e.readonly||!1,this.actor=e.actor,this.callback=e.callback,this.diceCounts={}}static get DEFAULT_OPTIONS(){return foundry.utils.mergeObject(super.DEFAULT_OPTIONS,{id:"flash5e-custom-roll-dialog",classes:["flash5e-dialog","flash5e-custom-roll-dialog"],tag:"div",window:{title:"CRLNGN_ROLLS.ui.dialogs.customRollTitle",icon:"fas fa-dice-d20",resizable:!1,positioned:!0,frame:!0},position:{width:420,height:"auto"}})}_onClickAction(e,t){switch(t.dataset.action){case"rollDice":return this.rollDice(e,t);case"addDie":return this.addDie(e,t);case"cancel":return this.cancel(e,t)}}async _prepareContext(e={}){return{...await super._prepareContext(e),formula:this.formula,readonly:this.readonly}}_attachPartListeners(e,t,i){super._attachPartListeners(e,t,i);const s=t.querySelector("#custom-roll-formula"),o=t.querySelector("#formula-validation-message");s&&!this.readonly&&(s.addEventListener("input",l=>{this.formula=l.target.value.trim(),this.updateValidationMessage(o)}),this.formula&&this.updateValidationMessage(o))}updateValidationMessage(e){if(!e)return;if(!this.formula){e.textContent="&nbsp;",e.classList.remove("error","success");return}this.validateFormula(this.formula)?(e.textContent=game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.formulaValid"),e.classList.remove("error"),e.classList.add("success")):(e.textContent=game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.formulaInvalid"),e.classList.remove("success"),e.classList.add("error"))}addDie(e,t){const i=t.dataset.die,s=this.element.querySelector("#custom-roll-formula");if(!s)return;const o=s.value.trim();if(o){const l=/(\d*)d(\d+)/g,n=new Map;let r=o,u;for(;(u=l.exec(o))!==null;){const h=parseInt(u[1]||"1"),p=u[2];n.set(p,(n.get(p)||0)+h),r=r.replace(u[0],"").trim()}const g=i.substring(1);n.set(g,(n.get(g)||0)+1);const f=[];for(const[h,p]of n)f.push(`${p}d${h}`);r=r.replace(/^\+\s*|\s*\+\s*$|\s*\+\s*\+/g,"").trim(),r&&r!=="+"?this.formula=`${f.join(" + ")} + ${r}`:this.formula=f.join(" + ")}else this.formula=`1${i}`;s.value=this.formula,s.dispatchEvent(new Event("input"))}validateFormula(e){var t;if(!e||e.trim()==="")return!1;try{return Roll.validate(e)}catch{try{return new Roll(e,((t=this.actor)==null?void 0:t.getRollData())||{}),!0}catch{return!1}}}async rollDice(){if(a.log("rollDice"),!this.validateFormula(this.formula)){ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:this.formula||"empty"}));return}this.callback&&await this.callback(this.formula),this.close()}cancel(){this.close()}static async prompt(e={}){return new Promise(t=>{const i=new this({...e,callback:s=>t(s)});i.addEventListener("close",()=>{i._resolved||t(null)}),i.render(!0)})}async close(e={}){return this._resolved=!0,super.close(e)}}k(_e,"PARTS",{main:{template:`modules/${j.ID}/templates/custom-roll-dialog.hbs`},footer:{template:`modules/${j.ID}/templates/custom-roll-dialog-footer.hbs`}});function We(c,e){var s,o,l,n,r;let t=game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${c}`)||c;const i=c==null?void 0:c.toLowerCase();if(e)switch(i){case d.SKILL:t+=` (${((s=CONFIG.DND5E.skills[e])==null?void 0:s.label)||e})`;break;case d.SAVE:t+=` (${((o=CONFIG.DND5E.abilities[e])==null?void 0:o.label)||e})`;break;case d.ABILITY:t+=` (${((l=CONFIG.DND5E.abilities[e])==null?void 0:l.label)||e})`;break;case d.TOOL:const u=(r=(n=CONFIG.DND5E.enrichmentLookup)==null?void 0:n.tools)==null?void 0:r[e];if(u!=null&&u.id){const g=dnd5e.documents.Trait.getBaseItem(u.id,{indexOnly:!0});t+=` (${(g==null?void 0:g.name)||e})`}else t+=` (${e})`;break;case d.CUSTOM:t=`${t}: ${e}`;break}return t}function Ye(c,e=We){if(c.length===0)return;const t={};for(const s of c){const o=`${s.rollType}_${s.rollKey||""}`;t[o]||(t[o]={rollType:s.rollType,rollKey:s.rollKey,actors:[],gm:s.gm}),t[o].actors.push(s.actor)}const i=Object.values(t);if(i.length===1&&i[0].actors.length===1){const s=i[0];ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestReceived",{gm:s.gm,rollType:e(s.rollType,s.rollKey)}))}else{const s=[];for(const o of i){const l=e(o.rollType,o.rollKey),n=o.actors.join(", ");s.push(`${l} (${n})`)}ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsReceivedMultiple",{gm:i[0].gm,requests:s.join("; ")}))}}function Ke(c){const e=c.ownership||{};for(const[t,i]of Object.entries(e))if(i>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const s=game.users.get(t);if(s&&!s.isGM)return s}return null}function Je(c,e=game.user){if(!(c!=null&&c.length))return;c.map(i=>canvas.tokens.get(i)).filter(i=>i).forEach(i=>i.setTarget(!0,{user:e}))}function ue(c){return c.type!=="character"&&c.type!=="npc"?!1:Object.entries(c.ownership).some(([e,t])=>{const i=game.users.get(e);return i&&!i.isGM&&t>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})}function Ee(c){if(c.type!=="character"&&c.type!=="npc")return!1;const e=game.scenes.active;return e&&e.tokens.some(t=>t.actorId===c.id)}function de(c,e){if(!game.scenes.active)return;const i=canvas.tokens.placeables.filter(s=>{var o;return((o=s.actor)==null?void 0:o.id)===c});for(const s of i)e?s.control({releaseOthers:!1}):s.release()}function Ae(c){return new Promise(e=>setTimeout(e,c))}function ke(){var c;return((c=ui==null?void 0:ui.sidebar)==null?void 0:c.expanded)||!1}function Oe(c){const e=document.querySelector("body");c?e.classList.add("flash5e-sidebar-expanded"):e.classList.remove("flash5e-sidebar-expanded"),Me()}function Ze(c,e){var l;const t=[];if(!c||e.size===0)return t;const i=j.ROLL_REQUEST_OPTIONS[c];if(!i||!i.subList)return t;const s=Array.from(e)[0],o=game.actors.get(s);if(i.subList==="tools"){const n=((l=CONFIG.DND5E.enrichmentLookup)==null?void 0:l.tools)||CONFIG.DND5E.tools||{};for(const[r,u]of Object.entries(n)){let g=r;if(u!=null&&u.id){const f=dnd5e.documents.Trait.getBaseItem(u.id,{indexOnly:!0});g=(f==null?void 0:f.name)||r}else g=r.replace(/([A-Z])/g," $1").replace(/^./,f=>f.toUpperCase()).trim();t.push({id:r,name:g,rollable:!0})}t.sort((r,u)=>r.name.localeCompare(u.name))}else if(o&&i.actorPath){const n=foundry.utils.getProperty(o,i.actorPath)||{},r=CONFIG.DND5E[i.subList];for(const[u,g]of Object.entries(n)){let f="";i.subList==="skills"&&(r!=null&&r[u])||i.subList==="abilities"&&(r!=null&&r[u])?f=r[u].label:f=g.label||game.i18n.localize(g.name||u)||u,t.push({id:u,name:f,rollable:!0})}i.subList==="skills"&&t.sort((u,g)=>u.name.localeCompare(g.name))}return t}const q=class q{static notify(e,t,i={}){if(!i.batch){ui.notifications[e](t);return}i.batchData&&(q.pendingNotifications.push(i.batchData),q.notificationTimer&&clearTimeout(q.notificationTimer),q.notificationTimer=setTimeout(()=>{Ye(q.pendingNotifications),q.pendingNotifications=[],q.notificationTimer=null},q.NOTIFICATION_BATCH_DELAY))}static notifyRollRequestsSent(e,t){const i=Object.entries(e);if(i.length!==0)if(i.length===1){const s=Object.values(e)[0],o=s.actors.map(l=>l.name).join(", ");ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsSentSingle",{rollType:t,actors:o,player:s.player.name}))}else{const s=i.map(([o,l])=>{const n=l.actors.map(r=>r.name).join(", ");return`${l.player.name} (${n})`});ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsSentMultiple",{rollType:t,count:i.length,players:s.join("; ")}))}}static clearPending(){q.notificationTimer&&(clearTimeout(q.notificationTimer),q.notificationTimer=null),q.pendingNotifications=[]}};k(q,"pendingNotifications",[]),k(q,"notificationTimer",null),k(q,"NOTIFICATION_BATCH_DELAY",500);let P=q;function Xe(c){var i;const e=[],t=[];for(const s of c){const o=((i=s.system.attributes.hp)==null?void 0:i.value)||0,l=s.system.attributes.death||{},n=l.success||0,r=l.failure||0;o<=0&&n<3&&r<3?e.push(s):t.push(s.name)}return t.length>0&&P.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.actorsSkippingDeathSave",{actors:t.join(", ")})),e}function et(c){const e=[],t=[];for(const i of c){const s=Ke(i);s?e.push({actor:i,owner:s}):t.push(i)}return{pcActors:e,npcActors:t}}function Me(c=!0){const e=document.querySelector("#chat-notifications #roll-privacy"),t=e?V.getFullWidth(e):0;V.addCSSVars("--flash-rolls-menu-offset",t+"px")}class B{static async initialize(){a.log("ChatMessageUtils.initialize"),await this.preloadTemplate()}static async preloadTemplate(){a.log("ChatMessageUtils.preloadTemplate");try{await V.loadTemplates([this.templatePath])}catch(e){a.error("Failed to preload template",e)}}static async createGroupRollMessage(e,t,i,s,o){a.log("ChatMessageUtils.createGroupRollMessage",[e.length,t,i,o]);const l=this.buildGroupRollData(e,t,i,s);l.groupRollId=o,this.pendingRolls.set(o,{actors:e.map(r=>r.id),rollType:t,rollKey:i,config:s,results:new Map});const n=await this.postGroupMessage(l);return n&&this.groupRollMessages.set(o,n),n}static buildGroupRollData(e,t,i,s){a.log("ChatMessageUtils.buildGroupRollData",[e.length,t,i]);let o=this._buildFlavorText(t,i,s);const l=e.map(n=>{var r,u;return{actorId:n.id,actorImg:n.img||((u=(r=n.prototypeToken)==null?void 0:r.texture)==null?void 0:u.src)||"icons/svg/mystery-man.svg",actorName:n.name,rolled:!1,showDice:!0,total:null,success:!1,failure:!1}});return{flavor:o,results:l,showDC:(s==null?void 0:s.dc)!==void 0&&s.dc!==null,dc:s==null?void 0:s.dc,moduleId:T}}static _buildFlavorText(e,t,i){var o,l,n;let s="";switch(e==null?void 0:e.toLowerCase()){case"ability":case"abilitycheck":const r=((o=CONFIG.DND5E.abilities[t])==null?void 0:o.label)||t;s=game.i18n.format("DND5E.AbilityPromptTitle",{ability:r});break;case"save":case"savingthrow":const u=((l=CONFIG.DND5E.abilities[t])==null?void 0:l.label)||t;s=game.i18n.format("DND5E.SavePromptTitle",{ability:u});break;case"skill":const g=((n=CONFIG.DND5E.skills[t])==null?void 0:n.label)||t;s=game.i18n.format("DND5E.SkillPromptTitle",{skill:g});break;case"tool":s=`Tool Check: ${t}`;break;case"initiative":s=game.i18n.localize("DND5E.Initiative");break;case"attack":s=(i==null?void 0:i.flavor)||"Attack Roll";break;case"damage":s=(i==null?void 0:i.flavor)||"Damage Roll";break;default:s=(i==null?void 0:i.flavor)||"Roll Request"}return s}static async postGroupMessage(e){a.log("ChatMessageUtils.postGroupMessage",[e]);try{const i={content:await V.renderTemplate(this.templatePath,e),speaker:ChatMessage.getSpeaker({alias:"Flash Rolls"}),flags:{[T]:{isGroupRoll:!0,groupRollId:e.groupRollId,rollData:e}}};return await ChatMessage.create(i)}catch(t){return a.error("Failed to post group message",t),null}}static async updateGroupRollMessage(e,t,i){a.log("ChatMessageUtils.updateGroupRollMessage",[e,t,i.total]);let s=this.groupRollMessages.get(e),o=this.pendingRolls.get(e);if(s||(s=game.messages.contents.find(g=>g.getFlag(T,"groupRollId")===e&&g.getFlag(T,"isGroupRoll")),s&&(this.groupRollMessages.set(e,s),a.log("updateGroupRollMessage - Found and registered group message",[e]),o||(o={actors:s.getFlag(T,"rollData").results.map(f=>f.actorId),results:new Map},this.pendingRolls.set(e,o)))),!s){a.log("No group message found for groupRollId",e);return}o&&o.results&&o.results.set(t,{total:i.total,roll:i});const l=s.getFlag(T,"rollData"),n=l.results.findIndex(u=>u.actorId===t);n!==-1&&(l.results[n].rolled=!0,l.results[n].showDice=!1,l.results[n].total=i.total,l.showDC&&l.dc&&(l.results[n].success=i.total>=l.dc,l.results[n].failure=i.total<l.dc));const r=await renderTemplate(this.templatePath,l);await s.update({content:r,flags:{[T]:{rollData:l}}}),o!=null&&o.results&&(o!=null&&o.actors)&&o.results.size===o.actors.length&&(this.pendingRolls.delete(e),setTimeout(()=>{this.groupRollMessages.delete(e)},6e4))}static interceptRollMessage(e,t,i){var u,g;a.log("ChatMessageUtils.interceptRollMessage #0",[e,i]);const s=D(),o=A.get(s.groupRollsMsgEnabled.tag);if(!o)return;a.log("interceptRollMessage #1",[o]),a.log("interceptRollMessage - message flags",[e.flags]);const l=e.getFlag(T,"groupRollId");if(a.log("interceptRollMessage - groupRollId from flag",[l,this.groupRollMessages]),!l){a.log("interceptRollMessage - no groupRollId in flag");return}if(!game.user.isGM&&!this.groupRollMessages.has(l)){const h=game.messages.contents.find(p=>p.getFlag(T,"groupRollId")===l&&p.getFlag(T,"isGroupRoll"));h&&(this.groupRollMessages.set(l,h),a.log("interceptRollMessage - Registered group roll message",[l]))}if(!this.groupRollMessages.has(l)){a.log("interceptRollMessage - groupRollId not in map",[l,Array.from(this.groupRollMessages.keys())]);return}a.log("interceptRollMessage #2",[l]);const n=(u=e.rolls)==null?void 0:u[0];if(!n)return;a.log("interceptRollMessage #3",[n]);const r=(g=e.speaker)==null?void 0:g.actor;if(r)if(a.log("interceptRollMessage #4",[r]),t instanceof HTMLElement&&(t.style.display="none"),game.user.isGM){this.updateGroupRollMessage(l,r,n);const f=e.id;if(this.messagesScheduledForDeletion.has(f))return;this.messagesScheduledForDeletion.add(f),t instanceof HTMLElement&&setTimeout(async()=>{a.log("interceptRollMessage - deletion",[f]);try{game.messages.get(f)?(await e.delete(),a.log("interceptRollMessage - Deleted individual message",[f])):a.log("interceptRollMessage - Message already deleted",[f])}catch(h){console.trace("ERROR!",h.message),a.log("interceptRollMessage - Error deleting message",[f,h.message])}finally{this.messagesScheduledForDeletion.delete(f)}},1e3)}else t instanceof HTMLElement&&(t.style.display="none"),a.log("interceptRollMessage - Player hiding message, GM will handle update",[l])}static async handleRollCompletion(e,t,i){a.log("ChatMessageUtils.handleRollCompletion",[e,t,i.total]),await this.updateGroupRollMessage(e,t,i)}static isGroupRoll(e){return this.pendingRolls.has(e)||this.groupRollMessages.has(e)}static async addGroupRollFlag(e,t,i=null){const s=D(),o=A.get(s.groupRollsMsgEnabled.tag);if(a.log("addGroupRollFlag called",[e,t.groupRollId,this.isGroupRoll(t.groupRollId)]),!game.user.isGM&&t.groupRollId&&i&&(await i.setFlag(T,"tempGroupRollId",t.groupRollId),a.log("addGroupRollFlag - Stored tempGroupRollId on actor for player",[t.groupRollId,i.id]),!this.groupRollMessages.has(t.groupRollId))){const n=game.messages.contents.find(r=>r.getFlag(T,"groupRollId")===t.groupRollId&&r.getFlag(T,"isGroupRoll"));n&&(this.groupRollMessages.set(t.groupRollId,n),a.log("addGroupRollFlag - Registered group roll message on player side",[t.groupRollId]))}o&&t.groupRollId&&(!game.user.isGM||this.isGroupRoll(t.groupRollId))&&(e.data=e.data||{},e.data.flags=e.data.flags||{},e.data.flags[T]=e.data.flags[T]||{},e.data.flags[T].groupRollId=t.groupRollId,a.log("addGroupRollFlag - Added flag to messageConfig",[e]))}static cleanup(){const e=Date.now()-3e5;for(const[t,i]of this.groupRollMessages.entries())i.timestamp<e&&(this.groupRollMessages.delete(t),this.pendingRolls.delete(t))}}k(B,"groupRollMessages",new Map),k(B,"pendingRolls",new Map),k(B,"messagesScheduledForDeletion",new Set),k(B,"templatePath","modules/flash-rolls-5e/templates/chat-msg-group-roll.hbs");const z={ability:async(c,e,t,i,s)=>{var l;a.log("RollHandlers.ability #1",[t]);const o=E.buildRollConfig(e,t,{ability:e.rollKey});a.log("RollHandlers.ability #2",[(l=o.rolls)==null?void 0:l[0]]),a.log("RollHandlers.ability - messageConfig",s),await B.addGroupRollFlag(s,e,c),await c.rollAbilityCheck(o,i,s)},abilitycheck:async(c,e,t,i,s)=>z.ability(c,e,t,i,s),save:async(c,e,t,i,s)=>{var l;const o=E.buildRollConfig(e,t,{ability:((l=e.config)==null?void 0:l.ability)||e.rollKey});await B.addGroupRollFlag(s,e,c),await c.rollSavingThrow(o,i,s)},savingthrow:async(c,e,t,i,s)=>z.save(c,e,t,i,s),skill:async(c,e,t,i,s)=>{var n,r,u,g,f,h;a.log("RollHandlers.skill #1",[e,t,i]);const o=((r=(n=c.system.skills)==null?void 0:n[e.rollKey])==null?void 0:r.ability)||((g=(u=CONFIG.DND5E.skills)==null?void 0:u[e.rollKey])==null?void 0:g.ability)||void 0,l=E.buildRollConfig(e,t,{skill:e.rollKey,chooseAbility:i.configure!==!1,ability:e.config.ability||o});if(e.config.ability&&i.configure===!1){const p=((f=CONFIG.DND5E.skills[e.rollKey])==null?void 0:f.label)||e.rollKey,y=((h=CONFIG.DND5E.abilities[e.config.ability])==null?void 0:h.label)||e.config.ability,b=game.i18n.format("DND5E.SkillPromptTitle",{skill:p,ability:y});s.data=s.data||{},s.data.flavor=b}a.log("RollHandlers.skill #2",[l,i,s]),await B.addGroupRollFlag(s,e,c),await c.rollSkill(l,i,s)},tool:async(c,e,t,i,s)=>{var r,u,g,f,h,p,y;a.log("RollHandlers.tool #1",[e,t]);const o=(r=c.system.tools)==null?void 0:r[e.rollKey],l=(o==null?void 0:o.ability)||((f=(g=(u=CONFIG.DND5E.enrichmentLookup)==null?void 0:u.tools)==null?void 0:g[e.rollKey])==null?void 0:f.ability)||"int",n=E.buildRollConfig(e,t,{tool:e.rollKey,chooseAbility:i.configure!==!1,ability:e.config.ability||l});if(e.config.ability&&i.configure===!1){const b=(p=(h=CONFIG.DND5E.enrichmentLookup)==null?void 0:h.tools)==null?void 0:p[e.rollKey];let C=e.rollKey;if(b!=null&&b.id){const I=dnd5e.documents.Trait.getBaseItem(b.id,{indexOnly:!0});C=(I==null?void 0:I.name)||e.rollKey}const R=((y=CONFIG.DND5E.abilities[e.config.ability])==null?void 0:y.label)||e.config.ability,m=game.i18n.format("DND5E.ToolPromptTitle",{tool:C,ability:R});s.data=s.data||{},s.data.flavor=m}a.log("RollHandlers.tool #2",[n,i,s]),await B.addGroupRollFlag(s,e,c),await c.rollToolCheck(n,i,s)},concentration:async(c,e,t,i,s)=>{const o=E.buildRollConfig(e,t);await B.addGroupRollFlag(s,e,c),await c.rollConcentration(o,i,s)},attack:async(c,e,t,i,s)=>{await z.handleActivityRoll(c,d.ATTACK,e,t,i,s)},damage:async(c,e,t,i,s)=>{await z.handleActivityRoll(c,d.DAMAGE,e,t,i,s)},itemsave:async(c,e,t,i,s)=>{await z.handleActivityRoll(c,d.ITEM_SAVE,e,t,i,s)},initiative:async(c,e,t,i,s)=>{var l,n,r;if(!game.combat){ui.notifications.warn(game.i18n.localize("COMBAT.NoneActive"));return}e.config.situational||(l=t.data)!=null&&l.situational,e.groupRollId;let o=c;if(!c.isToken){const u=canvas.tokens.placeables.find(g=>{var f;return((f=g.actor)==null?void 0:f.id)===c.id});if(u)o=u.actor;else{ui.notifications.error(game.i18n.format("COMBAT.NoneActive"));return}}await B.addGroupRollFlag(s,e,c),a.log("RollHandlers.initiative - START",[c,e,t,i]);try{if(i.configure){if(a.log("RollHandlers.initiative - Dialog",[]),e.config){const u=E.buildRollConfig(e,t,{ability:((r=(n=c.system.attributes)==null?void 0:n.init)==null?void 0:r.ability)||"dex"}),g={advantage:e.config.advantage||!1,disadvantage:e.config.disadvantage||!1,rollMode:e.config.rollMode||game.settings.get("core","rollMode"),rolls:u.rolls,groupRollId:e.groupRollId};await c.setFlag(T,"tempInitiativeConfig",g)}await o.rollInitiativeDialog(),await o.unsetFlag(T,"tempInitiativeConfig")}else{a.log("RollHandlers.initiative - Not dialog");const u={groupRollId:e.groupRollId};await c.setFlag(T,"tempInitiativeConfig",u);const g={createCombatants:!0,rerollInitiative:!0};await o.rollInitiative(g)}a.log("RollHandlers.initiative - COMPLETE")}catch(u){a.error("RollHandlers.initiative - Error",[u]),P.notify("error",`Initiative roll failed: ${u.message}`)}},initiativedialog:async(c,e,t,i,s)=>z.initiative(c,e,t,i,s),deathsave:async(c,e,t,i,s)=>{const o=E.buildRollConfig(e,t);await B.addGroupRollFlag(s,e,c),await c.rollDeathSave(o,i,s)},hitdie:async(c,e,t,i,s)=>{i.configure=game.user.isGM?i.configure:!0;const o=E.buildRollConfig(e,t,{denomination:e.rollKey});a.log("RollHandlers.hitdie",[o,i,s]),await c.rollHitDie(o,i,s)},custom:async(c,e,t,i,s)=>{await z.handleCustomRoll(c,e,i,s)},async handleActivityRoll(c,e,t,i,s,o){var l,n;if(a.log("RollHandlers.handleActivityRoll",[e,t,i]),t.rollKey){const r=E.buildRollConfig(t,i),u=((n=(l=r.rolls)==null?void 0:l[0])==null?void 0:n.options)||{},g={usage:{...t.config,rolls:r.rolls,...u.attackMode&&{attackMode:u.attackMode},...u.ammunition&&{ammunition:u.ammunition},...u.mastery!==void 0&&{mastery:u.mastery}},dialog:s,message:o};a.log("handleActivityRoll - final activity config",[g]),await $e.executeActivityRoll(c,e,t.rollKey,t.activityId,g)}},async handleCustomRoll(c,e,t,i){var l,n,r;const s=e.rollKey;if((t==null?void 0:t.configure)===!1){try{const u=new Roll(s,c.getRollData());u.options=u.options||{},u.options.isRollRequest=((l=e.config)==null?void 0:l.isRollRequest)!==!1,await u.evaluate({async:!0}),await u.toMessage({speaker:ChatMessage.getSpeaker({actor:c}),flavor:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${d.CUSTOM}`),rollMode:(i==null?void 0:i.rollMode)||((n=e.config)==null?void 0:n.rollMode)||game.settings.get("core","rollMode"),isRollRequest:((r=e.config)==null?void 0:r.isRollRequest)!==!1,create:(i==null?void 0:i.create)!==!1})}catch{ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:s}))}return}new _e({formula:s,readonly:!0,actor:c,callback:async u=>{try{const g=new Roll(u,c.getRollData());g.options=g.options||{},g.options.isRollRequest=!0,await g.evaluate({async:!0}),await g.toMessage({speaker:ChatMessage.getSpeaker({actor:c}),flavor:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${d.CUSTOM}`),rollMode:e.config.rollMode,isRollRequest:!0,_showRequestedBy:!0,_requestedBy:e.config.requestedBy||"GM"})}catch{ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:u}))}}}).render(!0)},async handleHitDieRecovery(c){const e=foundry.utils.mergeObject({type:"long",deltas:{hitDice:0},newDay:!1,rolls:[],updateData:{},updateItems:[]},{});"dhd"in e&&(e.deltas.hitDice=e.dhd),c._getRestHitDiceRecovery({maxHitDice:c.system.attributes.hd.max,type:"long"},e),e.dhd=e.deltas.hitDice,e.longRest=!0;try{if(e.updateData&&Object.keys(e.updateData).length>0){const t=await c.update(e.updateData,{isRest:!1})}else a.log("No actor updates to perform",[]);if(e.updateItems&&e.updateItems.length>0){const t=await c.updateEmbeddedDocuments("Item",e.updateItems,{isRest:!1})}else a.log("No item updates to perform",[])}catch(t){throw a.error("Error during updates in handleHitDieRecovery:",[t]),t}return a.log("handleHitDieRecovery #3",[e]),e}};async function ve(){return game.combat||(await(await Combat.create({scene:game.scenes.active.id})).activate(),P.notify("info",game.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.combatCreated"))),game.combat}async function Ge(c,e){if(!e.combat)return c;const t=c.map(o=>e.actors.get(o)).filter(o=>o),i=[],s=new Set;for(const o of t)e.combat.getCombatantsByActor(o.id).some(r=>r.initiative!==null)&&(i.push(o.name),s.add(o.id));if(a.log("filterActorsForInitiative",[i]),i.length>0)if(await foundry.applications.api.DialogV2.confirm({window:{title:e.i18n.localize("CRLNGN_ROLLS.ui.dialogs.rerollInitiativeTitle"),classes:["flash5e-dialog"]},content:"<p>"+e.i18n.format("CRLNGN_ROLLS.ui.dialogs.rerollInitiative",{actors:i.join(", ")})+"</p>",rejectClose:!1,modal:!0})){if(e.user.isGM)for(const l of s){const n=e.combat.getCombatantsByActor(l);a.log("filterActorsForInitiative - resetting initiative for combatants",[n]);for(const r of n)await r.update({initiative:null})}else a.log("filterActorsForInitiative - Player cannot reset initiative, will let system handle re-roll");return c}else{const l=c.filter(n=>!s.has(n));return l.length===0&&P.notify("info",e.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.allActorsHaveInitiative")),l}return c}class Fe{static initialize(){a.log("RollInterceptor.initialize"),game.user.isGM&&this.registerHooks()}static registerHooks(){a.log("RollInterceptor.registerHooks"),this._registerHook(G.PRE_ROLL_ABILITY_CHECK,this._handlePreRoll.bind(this,d.ABILITY)),this._registerHook(G.PRE_ROLL_SAVING_THROW,this._handlePreRoll.bind(this,d.SAVE)),this._registerHook(G.PRE_ROLL_SKILL_V2,this._handlePreRoll.bind(this,d.SKILL)),this._registerHook(G.PRE_ROLL_TOOL_V2,this._handlePreRoll.bind(this,d.TOOL)),this._registerHook(G.PRE_ROLL_ATTACK_V2,this._handlePreRoll.bind(this,d.ATTACK)),this._registerHook(G.PRE_ROLL_DAMAGE_V2,this._handlePreRoll.bind(this,d.DAMAGE)),this._registerHook(G.PRE_ROLL_DEATH_SAVE_V2,this._handlePreRoll.bind(this,d.DEATH_SAVE)),this._registerHook(G.PRE_ROLL_HIT_DIE_V2,this._handlePreRoll.bind(this,d.HIT_DIE)),this._registerHook(G.PRE_ROLL_INITIATIVE,this._handlePreRollInitiative.bind(this,d.INITIATIVE)),this._registerHook(G.PRE_ROLL_INITIATIVE_DIALOG,this._handlePreRollInitiative.bind(this,d.INITIATIVE)),this._registerHook(G.ROLL_INITIATIVE,this._handleRollInitiative.bind(this,d.INITIATIVE))}static _registerHook(e,t){a.log("RollInterceptor._registerHook");const i=Hooks.on(e,t);this.registeredHooks.add({hookName:e,hookId:i})}static unregisterHooks(){a.log("RollInterceptor.unregisterHooks");for(const{hookName:e,hookId:t}of this.registeredHooks)Hooks.off(e,t);this.registeredHooks.clear()}static _handlePreRollInitiative(e,t,i){a.log("_handlePreRollInitiative",[e,t,i])}static _handlePreRoll(e,t,i,s){var h,p,y,b,C,R,m,I,_;if(a.log("_handlePreRoll #0",[e,t,i,s]),!game.user.isGM||t.isRollRequest===!1)return;const o=V.isModuleOn(T,"midi-qol"),l=(t==null?void 0:t.hookNames)||(i==null?void 0:i.hookNames)||(s==null?void 0:s.hookNames)||[],n=l.includes("initiativeDialog")||l.includes("initiative");if(e===d.ATTACK){const L=(p=(h=t.subject)==null?void 0:h.item)==null?void 0:p.getFlag(T,"tempAttackConfig");if(a.log("_handlePreRoll - is Attack roll",[(y=t.subject)==null?void 0:y.item,L]),L){a.log("_handlePreRoll - found module flags, skipping interception",[L]);return}}if(e===d.DAMAGE){const L=(C=(b=t.subject)==null?void 0:b.item)==null?void 0:C.getFlag(T,"tempDamageConfig");if(a.log("RollInterceptor._handlePreRoll - is Damage roll",[(R=t.subject)==null?void 0:R.item,L]),L){a.log("RollInterceptor._handlePreRoll - found module flags, skipping interception",[L]);return}}if(n&&e===d.ABILITY&&(a.log("RollInterceptor._handlePreRoll - Overriding ability to initiative",[l]),e=d.INITIATIVE),t!=null&&t.isRollRequest||t.sendRequest===!1||i!=null&&i.isRollRequest||s!=null&&s.isRollRequest)return;let r;if(e===d.INITIATIVE&&t instanceof Actor){if(r=t,a.log("_handlePreRoll - Initiative",[t,i,s]),(i==null?void 0:i.isRollRequest)===!1||(s==null?void 0:s.isRollRequest)===!1)return}else e===d.HIT_DIE?r=((m=i==null?void 0:i.subject)==null?void 0:m.actor)||(i==null?void 0:i.subject)||(i==null?void 0:i.actor):e===d.ATTACK||e===d.DAMAGE?r=(I=t.subject)==null?void 0:I.actor:r=((_=t.subject)==null?void 0:_.actor)||t.subject||t.actor;const u=D();if(!A.get(u.rollInterceptionEnabled.tag)||!r||r.documentName!=="Actor")return;const f=V.getActorOwner(r);if(a.log("_handlePreRoll - ownership",[f]),!((!f||!f.active||f.id===game.user.id||i.configure===!1||t.isRollRequest===!1||t.skipRollDialog===!0||t.fastForward===!0)&&(a.log("_handlePreRoll - skipping interception",[i.configure,t.midiOptions]),!o)))return a.log("_handlePreRoll - intercepting roll #1",[t,s]),e===d.ATTACK&&(s={...s,rollMode:CONST.DICE_ROLL_MODES.PUBLIC}),a.log("_handlePreRoll - intercepting roll #2",[t,s]),this._showGMConfigDialog(r,f,e,t,i,s),!1}static _handleRollInitiative(e,t,i,s,o){a.log("_handleRollInitiative",[e,t,i,s,o])}static async _showGMConfigDialog(e,t,i,s,o,l){var u,g,f,h,p,y,b,C,R,m,I;a.log("_showGMConfigDialog - config",[i,s]);const n=D();A.get(n.rollInterceptionEnabled.tag);const r=A.get(n.rollRequestsEnabled.tag);try{const _=i==null?void 0:i.toLowerCase();if(_===d.INITIATIVE&&(!game.combat&&!await ve()||(await Ge([e.id],game)).length===0))return;let L;[d.SKILL,d.TOOL].includes(_)?L=Ne:_===d.HIT_DIE?L=we:_===d.ATTACK?L=Ue:_===d.DAMAGE?L=ze:L=W;let S={rolls:[{parts:[],data:{},options:{}}]};const N=D(),w=A.get(N.skipRollDialog.tag),H={actors:[e],rollType:_,showDC:!0,sendRequest:!0,skipRollDialog:w};a.log("_showGMConfigDialog #3",[S,H]);let O;if(w)O={sendRequest:!0,advantage:!1,disadvantage:!1,situational:"",rollMode:game.settings.get("core","rollMode")};else{let M=null;switch(_){case d.SKILL:S.skill=s.skill,S.ability=s.ability||((u=s.subject)==null?void 0:u.ability),M=S.skill;break;case d.TOOL:S.tool=s.tool,S.ability=s.ability||((g=s.subject)==null?void 0:g.ability),M=S.tool;break;case d.ABILITY:case d.SAVE:S.ability=s.ability||((f=s.subject)==null?void 0:f.ability),M=S.ability,S.ability==="con"&&s.targetValue!==void 0&&(i=d.CONCENTRATION);break;case d.CONCENTRATION:S.ability="con",M="con";break;case d.INITIATIVE:case d.INITIATIVE_DIALOG:M=((p=(h=e.system.attributes)==null?void 0:h.init)==null?void 0:p.ability)||"dex";break;case d.HIT_DIE:S.denomination=typeof s=="string"?s:s.denomination||((y=s.subject)==null?void 0:y.denomination),M=S.denomination;break;case d.ATTACK:o!=null&&o.options&&(S.ammunition=o.options.ammunition,S.attackMode=o.options.attackMode,S.mastery=o.options.mastery),M=(C=(b=s.subject)==null?void 0:b.item)==null?void 0:C.id;break;case d.DAMAGE:S.item=(R=s.subject)==null?void 0:R.item,S.subject=s.subject,S.critical=s.critical||{},M=(I=(m=s.subject)==null?void 0:m.item)==null?void 0:I.id;break;default:break}if(a.log("_showGMConfigDialog #4",[S,r]),!L.initConfiguration)throw a.error("DialogClass.initConfiguration not found",[L,L.name]),new Error(`DialogClass ${L.name} does not have initConfiguration method`);_===d.ATTACK||_===d.DAMAGE?O=await L.initConfiguration([e],_,M,{skipRollDialog:!1,sendRequest:r},s,o):O=await L.initConfiguration([e],_,M,{skipRollDialog:!1,sendRequest:r}),a.log("_showGMConfigDialog #4",[S])}if(!O){a.log("_showGMConfigDialog - Dialog cancelled");return}if(a.log("_showGMConfigDialog - sending _executeInterceptedRoll",[i,s,O]),!O.sendRequest||!r){await this._executeInterceptedRoll(e,i,s,O);return}const{event:F,...x}=s,Y={...x,...O,rolls:O.rolls,requestedBy:game.user.name,...i===d.ATTACK&&{chatMessage:!1}};this._sendRollRequest(e,t,i,Y)}catch(_){a.error("RollInterceptor._showGMConfigDialog - Error",[_]),this._sendRollRequest(e,t,i,s)}}static async _executeInterceptedRoll(e,t,i,s){var h,p,y,b,C,R,m,I,_,L,S,N,w,H;a.log("RollInterceptor._executeInterceptedRoll",[e,t,i,s]);const o=t==null?void 0:t.toLowerCase(),l=((h=s.rolls)==null?void 0:h[0])||{parts:[],data:{},options:{}},n=((p=l.data)==null?void 0:p.situational)||s.situational||"";let r;switch(o){case d.SKILL:r=i.skill;break;case d.TOOL:r=i.tool;break;case d.ABILITY:case d.SAVE:r=i.ability||((y=i.subject)==null?void 0:y.ability);break;case d.HIT_DIE:r=i.denomination;break;default:r=i.ability||i.skill||i.tool||i.denomination}const u={rollKey:r,config:{advantage:s.advantage||i.advantage,disadvantage:s.disadvantage||i.disadvantage,target:s.target||s.dc||i.target,rollMode:s.rollMode||i.rollMode,situational:n,isRollRequest:!1,ability:i.ability}};if(o===d.SKILL&&!u.config.ability)u.config.ability=((C=(b=e.system.skills)==null?void 0:b[u.rollKey])==null?void 0:C.ability)||((m=(R=CONFIG.DND5E.skills)==null?void 0:R[u.rollKey])==null?void 0:m.ability);else if(o===d.TOOL&&!u.config.ability){const O=(I=e.system.tools)==null?void 0:I[u.rollKey];u.config.ability=(O==null?void 0:O.ability)||((S=(L=(_=CONFIG.DND5E.enrichmentLookup)==null?void 0:_.tools)==null?void 0:L[u.rollKey])==null?void 0:S.ability)||"int"}else(o===d.ABILITY||o===d.SAVE)&&!u.config.ability&&(u.config.ability=u.rollKey);a.log("RollInterceptor._executeInterceptedRoll - requestData",[u,i,s]);const g={configure:!1,isRollRequest:!1},f={rollMode:u.config.rollMode,create:!0,isRollRequest:!1};try{const O=d,F=z[o];a.log("RollInterceptor._executeInterceptedRoll - handler 1",[F,o,z[o]]),F?((o===d.ATTACK||o===d.DAMAGE||o===d.SAVE)&&(u.rollKey=(w=(N=i.subject)==null?void 0:N.item)==null?void 0:w.id,u.activityId=(H=i.subject)==null?void 0:H.id),a.log("RollInterceptor._executeInterceptedRoll - handler 2",[u,l,g,f]),await F(e,u,l,g,f)):a.warn(`No handler found for roll type: ${o}`)}catch(O){a.error("RollInterceptor._executeInterceptedRoll",[O])}}static async _sendRollRequest(e,t,i,s){var h;a.log("_sendRollRequest",[e,t,i,s]),a.log("_sendRollRequest - config.rolls check",[s.rolls]);const o=D(),l=A.get(o.skipRollDialog);let n=i==null?void 0:i.toLowerCase();n===d.INITIATIVE&&(n=d.INITIATIVE_DIALOG);let r=null,u=null;switch(n){case d.ABILITY:case d.SAVE:r=s.ability;break;case d.SKILL:r=s.skill;break;case d.TOOL:r=s.tool;break;case d.ATTACK:case d.DAMAGE:a.log("_sendRollRequest - Attack/Damage roll config",[i,s]),r=(h=s.subject.item)==null?void 0:h.id,u=s.subject.id;break;case d.HIT_DIE:r=typeof s=="string"?s:s.denomination;break;case d.INITIATIVE_DIALOG:case d.INITIATIVE:r=null;break;case d.DEATH_SAVE:r=null;break;default:a.warn(`Unknown roll type: ${i}`);return}const g={...s};delete g.subject,delete g.workflow,delete g.item,delete g.activity;const f={type:"rollRequest",requestId:foundry.utils.randomID(),actorId:e.id,rollType:n,rollKey:r,activityId:u,rollProcessConfig:{...g,_requestedBy:game.user.name},skipRollDialog:l,targetTokenIds:Array.from(game.user.targets).map(p=>p.id),preserveTargets:A.get(o.useGMTargetTokens.tag)};t&&f&&Q.execForUser("handleRollRequest",t.id,f),ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestSent",{player:t.name,actor:e.name}))}}k(Fe,"registeredHooks",new Set);const{ApplicationV2:tt,HandlebarsApplicationMixin:it}=foundry.applications.api;var U;const X=class X extends it(tt){constructor(t={}){a.log("RollRequestsMenu.constructor",[t]);super(t);k(this,"_onClickOutside",t=>{if(a.log("_onClickOutside"),this.isLocked)return;const i=this.element;i&&(t.target.closest(".flash-rolls-menu")||i.contains(t.target)||t.target.closest("#flash-rolls-icon")||t.target.closest(".dialog, .app, .notification, .application")||this.close())});this.selectedActors=new Set,this.currentTab="pc",this.selectedRequestType=null,this.isLocked=!1,this.optionsExpanded=game.user.getFlag(j.ID,"menuOptionsExpanded")??!1,this._initializeFromSelectedTokens()}async _prepareContext(t){a.log("_prepareContext");const i=await super._prepareContext(t),s=game.actors.contents,o=[],l=[],n=game.scenes.active;for(const C of s){if(C.type!=="character"&&C.type!=="npc")continue;const R={id:C.id,uuid:C.uuid,name:C.name,img:C.img,selected:this.selectedActors.has(C.id),crlngnStats:this._getActorStats(C)};Object.entries(C.ownership).some(([I,_])=>{const L=game.users.get(I);return L&&!L.isGM&&_>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})?o.push(R):n!=null&&n.tokens.some(_=>_.actorId===C.id)&&l.push(R)}const r=D(),u=A.get(r.rollRequestsEnabled.tag),g=A.get(r.skipRollDialog.tag),f=A.get(r.groupRollsMsgEnabled.tag),h=this.currentTab==="pc"?o:l,p=h.length>0&&h.every(C=>this.selectedActors.has(C.id)),y=[];if(this.selectedActors.size>0)for(const[C,R]of Object.entries(j.ROLL_REQUEST_OPTIONS))y.push({id:C,name:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${R.name}`)||R.label,rollable:R.subList==null,hasSubList:!!R.subList,selected:this.selectedRequestType===C});const b=Ze(this.selectedRequestType,this.selectedActors);return{...i,actors:h,currentTab:this.currentTab,isPCTab:this.currentTab==="pc",isNPCTab:this.currentTab==="npc",selectedTab:this.currentTab,rollRequestsEnabled:u,skipRollDialog:g,groupRollsMsg:f,selectAllOn:p,hasSelectedActors:this.selectedActors.size>0,requestTypes:y,rollTypes:b,showNames:!0,actorsLocked:this.isLocked,optionsExpanded:this.optionsExpanded}}_getActorStats(t){var l,n,r,u,g,f;a.log("_getActorStats");const i=t.system,s=[];(l=i.attributes)!=null&&l.hp&&s.push({abbrev:"HP",value:i.attributes.hp.value}),(n=i.attributes)!=null&&n.ac&&s.push({abbrev:"AC",value:i.attributes.ac.value});const o=(u=(r=i.attributes)==null?void 0:r.spell)==null?void 0:u.dc;return o&&s.push({abbrev:"DC",value:o}),(f=(g=i.skills)==null?void 0:g.prc)!=null&&f.passive&&s.push({abbrev:"PRC",value:i.skills.prc.passive}),s}async _renderFrame(t){const i=await super._renderFrame(t),s=document.querySelector("#chat-notifications");return s&&i&&s.insertBefore(i,s.firstChild),i}_onRender(t,i){if(a.log("_onRender"),super._onRender(t,i),this._attachListeners(),Me(),this.optionsExpanded){const s=this.element.querySelector(".options-toggle"),o=this.element.querySelector("li.options");s==null||s.classList.add("expanded"),o==null||o.classList.add("expanded")}setTimeout(()=>{document.addEventListener("click",this._onClickOutside,!0)},100),this._tokenControlHook=Hooks.on("controlToken",this._onTokenControlChange.bind(this))}_onTokenControlChange(t,i){a.log("_onTokenControlChange"),this.rendered&&(this._ignoreTokenControl||(this._tokenUpdateTimeout&&clearTimeout(this._tokenUpdateTimeout),this._tokenUpdateTimeout=setTimeout(()=>{this._initializeFromSelectedTokens(),this.render(),this._tokenUpdateTimeout=null},100)))}_attachListeners(){var l,n,r,u,g;a.log("_attachListeners");const t=this.element;(l=t.querySelector("#flash-rolls-toggle"))==null||l.addEventListener("change",this._onToggleRollRequests.bind(this)),(n=t.querySelector("#flash5e-skip-dialogs"))==null||n.addEventListener("change",this._onToggleSkipDialogs.bind(this)),(r=t.querySelector("#flash5e-actors-all"))==null||r.addEventListener("change",this._onToggleSelectAll.bind(this)),(u=t.querySelector("#flash5e-actors-lock"))==null||u.addEventListener("click",this._onToggleLock.bind(this)),(g=t.querySelector(".options-toggle"))==null||g.addEventListener("click",this._onToggleOptions.bind(this)),t.querySelectorAll(".actor-tab").forEach(f=>{f.addEventListener("click",this._onTabClick.bind(this))}),t.querySelectorAll(".actor").forEach(f=>{f.addEventListener("click",this._onActorClick.bind(this))}),t.querySelectorAll(".actor-select").forEach(f=>{f.addEventListener("click",this._onActorSelectClick.bind(this))});const s=t.querySelector(".request-types");s&&s.addEventListener("click",f=>{const h=f.target.closest("li");if(h&&h.dataset.id){const p={...f,currentTarget:h};this._onRequestTypeClick(p)}});const o=t.querySelector(".roll-types");o&&o.addEventListener("click",f=>{const h=f.target.closest("li");if(h&&h.dataset.id){const p={...f,currentTarget:h};this._onRollTypeClick(p)}})}async _onToggleRollRequests(t){a.log("_onToggleRollRequests");const i=D(),s=t.target.checked;await A.set(i.rollRequestsEnabled.tag,s),Pe.updateRollRequestsIcon(s)}async _onToggleSkipDialogs(t){a.log("_onToggleSkipDialogs");const i=D(),s=t.target.checked;await A.set(i.skipRollDialog.tag,s)}_onToggleSelectAll(t){a.log("_onToggleSelectAll");const i=t.target.checked;this._ignoreTokenControl=!0,(this.currentTab==="pc"?game.actors.contents.filter(o=>ue(o)):game.actors.contents.filter(o=>!ue(o)&&Ee(o))).forEach(o=>{i?(this.selectedActors.add(o.id),de(o.id,!0)):(this.selectedActors.delete(o.id),de(o.id,!1))}),setTimeout(()=>{this._ignoreTokenControl=!1},200),this.render(),this._updateRequestTypesVisibility()}_onToggleLock(t){a.log("_onToggleLock"),t.preventDefault(),this.isLocked=!this.isLocked;const i=t.currentTarget;i.classList.remove("fa-lock-keyhole","fa-lock-keyhole-open"),i.classList.add(this.isLocked?"fa-lock-keyhole":"fa-lock-keyhole-open")}async _onToggleOptions(t){a.log("_onToggleOptions"),t.preventDefault(),this.optionsExpanded=!this.optionsExpanded,await game.user.setFlag(j.ID,"menuOptionsExpanded",this.optionsExpanded);const i=t.currentTarget||t.target.closest(".options-toggle");i&&i.classList.toggle("expanded",this.optionsExpanded);const s=this.element.querySelector("li.options");s&&s.classList.toggle("expanded",this.optionsExpanded)}_initializeFromSelectedTokens(){var i;a.log("_initializeFromSelectedTokens");const t=((i=canvas.tokens)==null?void 0:i.controlled)||[];this.selectedActors.clear();for(const s of t)if(s.actor&&(this.selectedActors.add(s.actor.id),this.selectedActors.size===1)){const o=ue(s.actor);this.currentTab=o?"pc":"npc"}}async _onTabClick(t){var s;a.log("_onTabClick");const i=t.currentTarget.dataset.tab;i!==this.currentTab&&(this.selectedActors.clear(),(s=canvas.tokens)==null||s.releaseAll(),this.selectedRequestType=null,this.currentTab=i,await this.render())}_onActorClick(t){if(a.log("_onActorClick"),t.target.closest(".actor-select"))return;const s=t.currentTarget.dataset.id;this._toggleActorSelection(s)}_onActorSelectClick(t){a.log("_onActorSelectClick"),t.stopPropagation();const i=t.currentTarget.dataset.id;this._toggleActorSelection(i)}_toggleActorSelection(t){a.log("_toggleActorSelection"),this._ignoreTokenControl=!0,this.selectedActors.has(t)?(this.selectedActors.delete(t),de(t,!1)):(this.selectedActors.add(t),de(t,!0)),setTimeout(()=>{this._ignoreTokenControl=!1},100),this.render(),this._updateRequestTypesVisibility(),this._updateSelectAllState()}_updateRequestTypesVisibility(){a.log("_updateRequestTypesVisibility"),this.render()}_updateSelectAllState(){a.log("_updateSelectAllState");const t=this.element.querySelector("#flash5e-actors-all"),i=this.currentTab==="pc"?"pc":"npc",s=this.element.querySelectorAll(`.${i}-actors .actor-item input[type="checkbox"]`),o=Array.from(s).filter(l=>l.checked).length;t.checked=o>0&&o===s.length,t.indeterminate=o>0&&o<s.length}async _onRequestTypeClick(t){const i=t.currentTarget,s=i.dataset.id,o=j.ROLL_REQUEST_OPTIONS[s];if(a.log("_onRequestTypeClick",[s,i.dataset,o]),!o){a.error("Unknown request type:",[s]);return}this.selectedRequestType===s?this.selectedRequestType=null:this.selectedRequestType=s,o.subList?await this.render():this.selectedRequestType&&this._triggerRoll(s,null)}_onRollTypeClick(t){a.log("_onRollTypeClick");const i=t.currentTarget.dataset.id;this._triggerRoll(this.selectedRequestType,i)}_getValidActorIds(t){return t.filter(i=>{const s=game.actors.get(i);if(!s)return!1;const o=ue(s),l=!o&&Ee(s);return this.currentTab==="pc"&&o||this.currentTab==="npc"&&l})}async _handleCustomRoll(){return await this._showCustomRollDialog()}async _getRollConfiguration(t,i,s,o,l){const n=D(),r=A.get(n.rollRequestsEnabled.tag);if(!o&&i!==d.CUSTOM){let u;[d.SKILL,d.TOOL].includes(i)?u=Ne:i===d.HIT_DIE?u=we:u=W;const g=await u.initConfiguration(t,i,s,{skipRollDialog:o,sendRequest:r||!1});return a.log("_getRollConfiguration",[g]),g}else{const u={rolls:[{parts:[],data:{},options:{}}],advantage:!1,disadvantage:!1,rollMode:game.settings.get("core","rollMode"),chatMessage:!0,isRollRequest:!1,skipRollDialog:!0,sendRequest:r&&l.length>0};return i===d.DEATH_SAVE&&(u.target=10),u}}async _orchestrateRollsForActors(t,i,s,o,l){const n=D(),r=[],u=[],g=[];a.log("_orchestrateRollsForActors",[t,i,s]);const f=foundry.utils.randomID(),h=[];if(t.sendRequest){for(const{actor:b,owner:C}of i)C.active?g.push({actor:b,owner:C}):(A.get(n.showOfflineNotifications.tag)&&P.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.playerOffline",{player:C.name})),u.push(b));h.push(...g.map(({actor:b})=>b))}else s.push(...i.map(({actor:b})=>b));h.push(...u,...s);const p=A.get(n.groupRollsMsgEnabled.tag);p&&h.length>1&&await B.createGroupRollMessage(h,o,l,t,f);for(const{actor:b,owner:C}of g){const R=p&&h.length>1?f:null;await this._sendRollRequestToPlayer(b,C,o,l,t,!0,R),r.push({actor:b,owner:C}),await Ae(100)}r.length>0&&this._showConsolidatedNotification(r,o,l);const y=[...u,...s];y.length>0&&(t.skipRollDialog=!0,t.groupRollId=p&&h.length>1?f:null,await this._handleGMRolls(y,o,l,t))}async _triggerRoll(t,i){var y,b,C;a.log("_triggerRoll",[t,i]);const s=D(),o=Array.from(this.selectedActors),l=A.get(s.skipRollDialog.tag),n=this._getValidActorIds(o);let r=n.map(R=>game.actors.get(R));const u=j.ROLL_REQUEST_OPTIONS[t],g=(y=(u==null?void 0:u.name)||t)==null?void 0:y.toLowerCase();switch(g){case d.CUSTOM:if(i=await this._handleCustomRoll(),!i)return;break;case d.INITIATIVE:case d.INITIATIVE_DIALOG:if(await ve()){a.log("_triggerRoll - initiative",[n]);for(const I of n){const _=game.actors.get(I);if(_){const L=game.combat.getCombatantsByActor(I);(!L||L.length===0)&&(a.log("_triggerRoll - adding actor to combat",_.name),await game.combat.createEmbeddedDocuments("Combatant",[{actorId:I,tokenId:(C=(b=_.getActiveTokens())==null?void 0:b[0])==null?void 0:C.id}]))}}const m=await Ge(n,game);if(a.log("_triggerRoll filteredActorIds",[m,!m.length]),!m.length)return;r=m.map(I=>game.actors.get(I))}break;case d.DEATH_SAVE:r=await Xe(r);break}if(!r.length){P.notify("warn","No valid actors selected");return}const{pcActors:f,npcActors:h}=et(r),p=await this._getRollConfiguration(r,g,i,l,f);a.log("_triggerRoll config",[p]),p&&(await this._orchestrateRollsForActors(p,f,h,g,i),setTimeout(()=>this.close(),500))}async _sendRollRequestToPlayer(t,i,s,o,l,n=!1,r=null){a.log("_sendRollRequestToPlayer #A",[s,o]);const u=D();let g=s==null?void 0:s.toLowerCase();if(g===d.ABILITY_CHECK?g=d.ABILITY:g===d.SAVING_THROW?g=d.SAVE:g===d.INITIATIVE_DIALOG&&(g=d.INITIATIVE),g===d.HIT_DIE){const p=t.system.attributes.hd;if(p.value>0)o=p.largestAvailable;else if(await foundry.applications.api.DialogV2.confirm({window:{title:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.hitDie.refillTitle")||"No Hit Dice Available",classes:["flash5e-hit-die-dialog"]},position:{width:420},content:`<p>${game.i18n.format("CRLNGN_ROLLS.ui.dialogs.hitDie.refillMessage",{actors:t.name})||""}</p>`,modal:!0,rejectClose:!1,yes:{label:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.hitDie.refillAndSend")||"Refill & Send",icon:""},no:{label:game.i18n.localize("Cancel")||"Cancel",icon:""}})){try{a.log("About to call handleHitDieRecovery for",[t.name]);const b=await z.handleHitDieRecovery(t);a.log("handleHitDieRecovery completed",[b])}catch(b){a.error("Error calling handleHitDieRecovery:",[b])}o=t.system.attributes.hd.largestAvailable,P.notify("info",game.i18n.format("CRLNGN_ROLLS.ui.dialogs.hitDie.refilled",{actor:t.name})||`Hit dice refilled for ${t.name}`)}else return}const f={...l};delete f.subject,delete f.workflow,delete f.item,delete f.activity;const h={type:"rollRequest",groupRollId:r||foundry.utils.randomID(),actorId:t.id,rollType:g,rollKey:o,activityId:null,rollProcessConfig:{...f,_requestedBy:game.user.name},skipRollDialog:!1,targetTokenIds:Array.from(game.user.targets).map(p=>p.id),preserveTargets:A.get(u.useGMTargetTokens.tag)};a.log("_sendRollRequestToPlayer - prepareMidiQOLSettings",[]),Q.execForUser("handleRollRequest",i.id,h),n||P.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestSent",{player:i.name,actor:t.name}))}_showConsolidatedNotification(t,i,s){var r,u,g,f,h;a.log("_showConsolidatedNotification");const o={};for(const{actor:p,owner:y}of t)o[y.id]||(o[y.id]={player:y,actors:[]}),o[y.id].actors.push(p);for(const[p,y]of Object.entries(j.ROLL_REQUEST_OPTIONS))if(y.name===i)break;const l=i;let n=game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${l}`)||l;if(s){const p=l.toLowerCase();if(p===d.SKILL)n=`${n} (${((r=CONFIG.DND5E.skills[s])==null?void 0:r.label)||s})`;else if(p===d.SAVING_THROW)n=`${n} (${((u=CONFIG.DND5E.abilities[s])==null?void 0:u.label)||s})`;else if(p===d.ABILITY_CHECK)n=`${n} (${((g=CONFIG.DND5E.abilities[s])==null?void 0:g.label)||s})`;else if(p===d.TOOL){const y=(h=(f=CONFIG.DND5E.enrichmentLookup)==null?void 0:f.tools)==null?void 0:h[s];if(y!=null&&y.id){const b=dnd5e.documents.Trait.getBaseItem(y.id,{indexOnly:!0});n=`${n} (${(b==null?void 0:b.name)||s})`}else n=`${n} (${s})`}else p===d.CUSTOM&&(n=`${n}: ${s}`)}P.notifyRollRequestsSent(o,n)}async _handleGMRolls(t,i,s,o){a.log("_handleGMRolls",[t,i,s,o]);for(const l of t)await this._initiateRoll(l,i,s,o),await Ae(100)}async _initiateRoll(t,i,s,o){var l,n,r,u,g;a.log("_initiateRoll",[i,s,o]);try{const f=i.toLowerCase();let h=s;if(f===d.HIT_DIE){const I=t.system.attributes.hd;if(I){const _=["d6","d8","d10","d12","d20"];for(const L of _)if((((l=I[L])==null?void 0:l.value)||0)>0){h=L;break}}if(!h)if(a.log("_initiateRoll - No hit dice available",[t.name]),await foundry.applications.api.DialogV2.confirm({window:{title:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.hitDie.refillTitle")||"No Hit Dice Available",classes:["flash5e-hit-die-dialog"]},position:{width:420},content:`<p>${game.i18n.format("CRLNGN_ROLLS.ui.dialogs.hitDie.refillMessageLocal",{actors:t.name})||""}</p>`,modal:!0,rejectClose:!1,yes:{label:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.hitDie.refillAndRoll")||"Refill & Roll",icon:""},no:{label:game.i18n.localize("Cancel")||"Cancel",icon:""}})){const L=await z.handleHitDieRecovery(t);if(a.log("Hit die recovery result",[L]),P.notify("info",game.i18n.format("CRLNGN_ROLLS.ui.dialogs.hitDie.refilled",{actor:t.name})),h=t.system.attributes.hd.largestAvailable,!h){P.notify("warn",game.i18n.format("DND5E.HitDiceWarn",{name:t.name}));return}}else return}const p=((u=(r=(n=o.rolls)==null?void 0:n[0])==null?void 0:r.data)==null?void 0:u.situational)||"",y={rollKey:h,groupRollId:o.groupRollId,config:{...o,situational:p,rollMode:o.rollMode||game.settings.get("core","rollMode"),advantage:o.advantage||!1,disadvantage:o.disadvantage||!1,target:o.target}},b={configure:!o.fastForward&&!o.skipRollDialog,isRollRequest:!0},C={rollMode:o.rollMode||game.settings.get("core","rollMode"),create:o.chatMessage!==!1,isRollRequest:!0},R=((g=o.rolls)==null?void 0:g[0])||{},m=z[f];m?await m(t,y,R,b,C):P.notify("warn",`Unknown roll type: ${i}`)}catch(f){a.error("executeActorRoll",[f]),P.notify("error",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:t.name}))}}async _onClose(t){a.log("_onClose",[t]),await super._onClose(t),this.selectedActors.clear(),this.selectedRequestType=null,document.removeEventListener("click",this._onClickOutside,!0),this._tokenControlHook&&(Hooks.off("controlToken",this._tokenControlHook),this._tokenControlHook=null),this._tokenUpdateTimeout&&(clearTimeout(this._tokenUpdateTimeout),this._tokenUpdateTimeout=null),Z(X,U)===this&&Re(X,U,null)}setPosition(t={}){return a.log("setPosition"),this}async _showCustomRollDialog(){return a.log("_showCustomRollDialog"),_e.prompt({formula:"",readonly:!1})}static toggle(){a.log("RollRequestsMenu.toggle"),Z(this,U)?Z(this,U).rendered?Z(this,U).close():(Z(this,U)._initializeFromSelectedTokens(),Z(this,U).render(!0)):(Re(this,U,new X),Z(this,U).render(!0))}};U=new WeakMap,pe(X,U,null),k(X,"DEFAULT_OPTIONS",{id:"flash-rolls-menu",classes:["flash-rolls-menu"],tag:"div",window:{frame:!1,resizable:!1,minimizable:!1},position:{}}),k(X,"PARTS",{main:{template:`modules/${j.ID}/templates/requests-menus.hbs`}});let Ce=X;class Pe{static addSidebarControls(e,t,i){if(!game.user.isGM||e.id!=="sidebar")return;const s=document.querySelector("#roll-privacy");if(a.log("addSidebarControls",[s]),!s||s.querySelector(".flash-rolls-icon"))return;const o=D(),l=A.get(o.rollRequestsEnabled.tag),n=document.createElement("button");n.id="flash-rolls-icon",n.setAttribute("data-tooltip-direction","RIGHT"),n.className=`ui-control icon chat-control-icon flash-rolls-icon${l?" active":""}`,n.title=game.i18n.localize("CRLNGN_ROLLS.ui.menus.rollRequestsTitle"),n.innerHTML=`<i class="fas fa-bolt${l?"":"-slash"}"></i>`;const r=s.firstChild;r?r.parentNode.insertBefore(n,r):s.insertBefore(n,s.firstChild),a.log("addSidebarControls",[r,n]),n.addEventListener("click",u=>{u.stopPropagation(),u.preventDefault(),Ce.toggle()})}static updateRollRequestsIcon(e){const t=document.querySelector("#flash-rolls-icon i");t&&(t.className=`fas fa-bolt${e?"":"-slash"}`)}}class ye{static initialize(){Hooks.once($.INIT,this._onInit.bind(this)),Hooks.once($.READY,this._onReady.bind(this))}static _onInit(){D(),document.body.classList.add("flash5e"),A.registerSettings(),te.initialize(),this._registerHooks()}static _onReady(){ee.isModuleActive("midi-qol")?(a.log("HooksUtil.initialize",["midi-qol is active. Awaiting for it to be ready..."]),Hooks.once("midi-qol.ready",this._initModule.bind(this))):(a.log("HooksUtil.initialize",["midi-qol is NOT active. Starting..."]),this._initModule())}static async _initModule(){const e=D();A.get(e.debugMode.tag)&&(CONFIG.debug.hooks=!0),await B.initialize(),game.user.isGM?(Fe.initialize(),this._registerGMHooks()):(te.getDiceConfig(),this._registerPlayerHooks()),Oe(ke())}static _registerHooks(){this._registerHook($.RENDER_SIDEBAR,this._onRenderSidebar.bind(this)),this._registerHook($.PRE_CREATE_CHAT_MESSAGE,this._onPreCreateChatMessage.bind(this)),this._registerHook($.PRE_CREATE_CHAT_MESSAGE,this._onPreCreateChatMessageFlavor.bind(this)),this._registerHook($.RENDER_CHAT_MESSAGE,this._onRenderChatMessageHTML.bind(this)),this._registerHook($.CHANGE_SIDEBAR_TAB,this._onSidebarUpdate.bind(this)),this._registerHook($.COLLAPSE_SIDE_BAR,this._onSidebarUpdate.bind(this)),this._registerHook(G.RENDER_ROLL_CONFIGURATION_DIALOG,this._onRenderRollConfigDialog.bind(this)),this._registerHook(G.RENDER_SKILL_TOOL_ROLL_DIALOG,this._onRenderSkillToolDialog.bind(this)),this._registerHook(G.PRE_USE_ACTIVITY,this._onPreUseActivity.bind(this)),this._registerHook(G.POST_USE_ACTIVITY,this._onPostUseActivity.bind(this)),this._registerHook(G.PRE_ROLL_HIT_DIE_V2,this._onPreRollHitDieV2.bind(this)),this._registerHook(G.POST_ROLL_CONFIG,this._onPostRollConfig.bind(this))}static _registerGMHooks(){this._registerHook($.USER_CONNECTED,this._onUserConnected.bind(this)),this._registerHook($.PRE_CREATE_CHAT_MESSAGE,this._onPreCreateChatMessageGM.bind(this)),this._registerHook(G.PRE_ROLL_V2,this._onPreRoll.bind(this)),game.users.forEach(e=>{this._onUserConnected(e)})}static _registerPlayerHooks(){this._registerHook(G.PRE_ROLL_INITIATIVE_DIALOG,this._onPreRollInitiativeDialog.bind(this)),this._registerHook(G.PRE_ROLL_ATTACK_V2,this._onPreRollAttackV2.bind(this)),this._registerHook(G.PRE_ROLL_DAMAGE_V2,this._onPreRollDamageV2.bind(this)),Hooks.on("dnd5e.preRollAbilityCheckV2",(e,t,i)=>{a.log("_onPreRollAbilityCheckV2",[e,t,i]),e.isRollRequest&&(t.configure=!0)})}static _onSidebarUpdate(e){a.log("_onSidebarUpdate",[e]),Oe(ke())}static _onPostRollConfig(e,t,i,s){t._showRequestedBy&&e.length>0&&(s.data=s.data||{},s.data._showRequestedBy=!0,s.data._requestedBy=t._requestedBy)}static _onPreCreateChatMessage(e,t,i,s){var o,l,n,r,u,g,f,h,p,y;if(t._showRequestedBy&&((o=t.rolls)==null?void 0:o.length)>0){const b=t._requestedBy||"GM",C=game.i18n.format("CRLNGN_ROLL_REQUESTS.chat.requestedBy",{gm:b}),R=t.flavor||"";t.flavor=R?`${R} ${C}`:C}if((n=(l=t.flags)==null?void 0:l[T])!=null&&n.groupRollId&&a.log("_onPreCreateChatMessage - Found groupRollId in data flags",[t]),((r=t.rolls)==null?void 0:r.length)>0||(g=(u=t.flags)==null?void 0:u.core)!=null&&g.initiativeRoll){const b=t.speaker,C=b==null?void 0:b.actor;if(C){let R=game.actors.get(C);if(!R&&(b!=null&&b.token)){const m=canvas.tokens.get(b.token);m!=null&&m.actor&&(R=m.actor,a.log("_onPreCreateChatMessage - Using token actor from speaker",[R.name,R.id]))}if(!R){a.log("_onPreCreateChatMessage - No actor found",[C,b]);return}if(game.user.isGM){const m=R.isToken?(f=R.actor)==null?void 0:f.id:R.id,I=[C,m].filter(_=>_);for(const[_,L]of B.pendingRolls.entries())if(I.some(S=>L.actors.includes(S))){t.flags=t.flags||{},t.flags[T]=t.flags[T]||{},t.flags[T].groupRollId=_,a.log("_onPreCreateChatMessage - Added groupRollId flag (GM)",[_,C]);break}}else{let m=R.getFlag(T,"tempGroupRollId");if(!m&&R.isToken){const _=game.actors.get((h=R.actor)==null?void 0:h.id);_&&(m=_.getFlag(T,"tempGroupRollId"),a.log("_onPreCreateChatMessage - Checking base actor for tempGroupRollId",[_.id,m]))}if(m&&(R.unsetFlag(T,"tempGroupRollId"),R.isToken)){const _=game.actors.get((p=R.actor)==null?void 0:p.id);_&&_.unsetFlag(T,"tempGroupRollId")}let I=R.getFlag(T,"tempInitiativeConfig");if(!I&&R.isToken){const _=game.actors.get((y=R.actor)==null?void 0:y.id);_&&(I=_.getFlag(T,"tempInitiativeConfig"),a.log("_onPreCreateChatMessage - Checking base actor for tempInitiativeConfig",[_.id,I]))}(I!=null&&I.groupRollId||m)&&(t.flags=t.flags||{},t.flags[T]=t.flags[T]||{},t.flags[T].groupRollId=m||I.groupRollId,a.log("_onPreCreateChatMessage - Added groupRollId flag from initiative config",[I.groupRollId,C]))}}}}static _onPreCreateChatMessageFlavor(e,t,i,s){var o,l;if(((o=t.rolls)==null?void 0:o.length)>0&&t.rolls[0])try{const n=t.rolls[0];(l=n.options)!=null&&l._customFlavor&&(t.flavor=n.options._customFlavor)}catch(n){a.error("_onPreCreateChatMessageFlavor",[n])}}static _onRenderRollConfigDialog(e,t,i){var o,l,n,r,u;if(a.log("_onRenderRollConfigDialog #0",[e,i]),e._flashRollsApplied)return;if(((l=(o=e.config)==null?void 0:o.hookNames)==null?void 0:l.includes("initiativeDialog"))||((r=(n=e.element)==null?void 0:n.id)==null?void 0:r.includes("initiative"))){const g=(u=e.config)==null?void 0:u.subject;if(!g)return;if(g.getFlag(T,"tempInitiativeConfig")){e._flashRollsApplied=!0;const h=t.querySelector('input[name*="situational"]');setTimeout(()=>{h.dispatchEvent(new Event("change",{bubbles:!0,cancelable:!1}))},50)}return}else t.querySelectorAll('input[name*="situational"]').forEach((f,h)=>{var p,y,b,C;!f.value&&((C=(b=(y=(p=e.config)==null?void 0:p.rolls)==null?void 0:y[0])==null?void 0:b.data)!=null&&C.situational)&&(f.value=e.config.rolls[0].data.situational),a.log("_onRenderRollConfigDialog #1",[f.value,e.config.rolls[0]]),f.value&&(e._flashRollsApplied=!0,setTimeout(()=>{var R,m,I;f.dispatchEvent(new Event("change",{bubbles:!0,cancelable:!1})),(I=(m=(R=e.config)==null?void 0:R.rolls)==null?void 0:m[0])!=null&&I.data&&delete e.config.rolls[0].data.situational},50))})}static _onPreCreateChatMessageGM(e,t,i,s){a.log("_onPreCreateChatMessageGM",[e,t,i,s])}static _onRenderChatMessageHTML(e,t,i){a.log("_onRenderChatMessageHTML",[e,t,i]),B.interceptRollMessage(e,t,i)}static _onUserConnected(e){e.active&&e.id!==game.user.id&&te.requestDiceConfigFromUser(e.id)}static _onRenderApplicationV2(e,t,i){a.log("_onRenderApplicationV2",[e,t,i])}static _onRenderSidebar(e,t,i){a.log("_onRenderSidebar",[e,t,i]),Pe.addSidebarControls(e,t,i)}static _registerHook(e,t){const i=Hooks.on(e,t);return this.registeredHooks.set(`${e}_${i}`,i),i}static unregisterAll(){this.registeredHooks.forEach((e,t)=>{const i=t.split("_")[0];Hooks.off(i,e)}),this.registeredHooks.clear()}static isRegistered(e){for(const t of this.registeredHooks.keys())if(t.startsWith(`${e}_`))return!0;return!1}static _onPreRoll(e,t,i,s){a.log("_onPreRoll #0",[e,t,i,s])}static _onPreRollHitDieV2(e,t,i){if(a.log("_onPreRollHitDieV2 triggered",[e,t,i]),e.rolls&&e.rolls.length>1){const s=[];for(let o=0;o<e.rolls.length;o++){const l=e.rolls[o];l&&l.data&&l.data.situational&&s.push(l.data.situational)}if(s.length>0){e.rolls[0].data||(e.rolls[0].data={});const o=[...new Set(s)];e.rolls[0].data.situational=o.map(l=>{const n=l.toString().trim();return n.startsWith("-")?`(${n})`:n.startsWith("+")?`${n.substring(1)}`:`${n}`}).join(" + "),game.user.isGM&&!e.rolls[0].parts.find(l=>l.includes("@situational"))&&e.rolls[0].parts.push("@situational")}e.rolls=e.rolls.slice(0,1),a.log("Cleaned up hit die rolls",e.rolls)}}static _onPreRollInitiativeDialog(e,t,i){var l,n,r,u,g;const o=e.subject.getFlag(T,"tempInitiativeConfig");a.log("_onPreRollInitiativeDialog triggered",[e,o,t,i]),e.advantage=(o==null?void 0:o.advantage)||e.advantage||!1,e.disadvantage=(o==null?void 0:o.disadvantage)||e.disadvantage||!1,e.rollMode=(o==null?void 0:o.rollMode)||e.rollMode||CONST.DICE_ROLL_MODES.PUBLIC,i.rollMode=(o==null?void 0:o.rollMode)||i.rollMode||CONST.DICE_ROLL_MODES.PUBLIC,(r=(n=(l=o.rolls)==null?void 0:l[0])==null?void 0:n.data)!=null&&r.situational&&((g=(u=e.rolls)==null?void 0:u[0])!=null&&g.data)&&(e.rolls[0].data.situational=o.rolls[0].data.situational)}static _onPreRollAttackV2(e,t,i){var o,l;a.log("_onPreRollAttackV2 triggered",[e,t,i]);const s=(l=(o=e.subject)==null?void 0:o.item)==null?void 0:l.getFlag(T,"tempAttackConfig");if(s){if(a.log("_onPreRollAttackV2 - Found stored request config from flag",[s]),s.isRollRequest===!1||s.skipRollDialog===!0||s.sendRequest===!1){a.log("_onPreRollAttackV2 - Not a roll request, skipping",[s]);return}s.attackMode&&(e.attackMode=s.attackMode),s.ammunition&&(e.ammunition=s.ammunition),s.mastery!==void 0&&(e.mastery=s.mastery),e.advantage=s.advantage||!1,e.disadvantage=s.disadvantage||!1,i.rollMode=s.rollMode||i.rollMode||CONST.DICE_ROLL_MODES.PUBLIC,s.situational&&((!e.rolls||e.rolls.length===0)&&(e.rolls=[{parts:[],data:{},options:{}}]),e.rolls[0].data||(e.rolls[0].data={}),e.rolls[0].data.situational=s.situational),a.log("_onPreRollAttackV2 - Applied stored configuration to attack roll",[e,i])}}static _onPreRollDamageV2(e,t,i){var o,l;a.log("_onPreRollDamageV2 triggered",[e,t,i]);const s=(l=(o=e.subject)==null?void 0:o.item)==null?void 0:l.getFlag(T,"tempDamageConfig");if(s){if(a.log("_onPreRollDamageV2 - Found stored request config from flag",[s,s.situational]),s.isRollRequest===!1||s.skipRollDialog===!0||s.sendRequest===!1){a.log("_onPreRollDamageV2 - Not a roll request, skipping",[s]);return}s.critical&&(e.critical=s.critical),i.rollMode=s.rollMode||i.rollMode||CONST.DICE_ROLL_MODES.PUBLIC,s.situational&&((!e.rolls||e.rolls.length===0)&&(e.rolls=[{parts:[],data:{},options:{}}]),e.rolls[0].data||(e.rolls[0].data={}),e.rolls[0].data.situational=s.situational),a.log("_onPreRollDamageV2 - Applied stored configuration to damage roll",[e,i])}}static _onPreUseActivity(e,t,i,s){a.log("_onPreUseActivity triggered",[e,t,i,s]);const o=D(),l=A.get(o.rollRequestsEnabled.tag),n=A.get(o.rollInterceptionEnabled.tag);if(a.log("_onPreUseActivity - Settings",[l,n]),e.item.unsetFlag(T,"tempAttackConfig"),e.item.unsetFlag(T,"tempDamageConfig"),e.item.unsetFlag(T,"tempSaveConfig"),V.isModuleOn(T,"midi-qol"),!game.user.isGM||!l||!n)return;const r=e.actor;if(!r)return;switch(A.get(o.consumptionConfigMode.tag)){case 1:i.configure=!1;break;case 2:i.configure=game.user.isGM;break;case 3:i.configure=!game.user.isGM;break;default:i.configure=!0;break}e.type===be.SAVE&&(t.create={measuredTemplate:!1},t.hasConsumption=!1,t.consume={action:!1,resources:[],spellSlot:!1});const g=V.getActorOwner(r);g&&g.active&&!g.isGM&&(a.log("Preventing usage message for player-owned actor",[r.name]),s.create=!1)}static _onPostUseActivity(e,t,i,s){var o;if(game.user.isGM&&e.type===be.SAVE){a.log("_onPostUseActivity triggered",[e.damage]);const l=D(),n=A.get(l.skipRollDialog.tag);e.damage&&((o=e.damage.parts)==null?void 0:o.length)>0&&e.rollDamage(t,{...i,configure:!n},s)}}static _onRenderSkillToolDialog(e,t,i){var o,l;if(a.log("_onRenderSkillToolDialog triggered",[e]),e._abilityFlavorFixed)return;const s=t.querySelector('select[name="ability"]');if(s&&(o=e.config)!=null&&o.isRollRequest&&(l=e.config)!=null&&l.ability){const n=s.value,r=e.config.ability;n===r&&(e._abilityFlavorFixed=!0,setTimeout(()=>{const u=new Event("change",{bubbles:!0,cancelable:!0});s.dispatchEvent(u)},50))}}}k(ye,"registeredHooks",new Map),k(ye,"midiTimeout",null);class Te{static async handleRequest(e){var s;const t=V.isModuleOn(T,"midi-qol");if(a.log("handleRequest",[e]),game.user.isGM)return;const i=game.actors.get(e.actorId);!i||!i.isOwner||(t&&e.rollProcessConfig.midiOptions&&(e.rollProcessConfig.midiOptions={...e.rollProcessConfig.midiOptions,fastForward:!1,fastForwardAttack:!1,dialogOptions:{...e.rollProcessConfig.midiOptions.dialogOptions,fastForward:!1,fastForwardAttack:!1},workflowOptions:{...e.rollProcessConfig.midiOptions.workflowOptions,fastForward:!1,fastForwardAttack:!1}}),e.preserveTargets&&((s=e.targetTokenIds)==null?void 0:s.length)>0&&game.user.targets.size===0&&Je(e.targetTokenIds),P.notify("info","",{batch:!0,batchData:{actor:i.name,rollType:e.rollType,rollKey:e.rollKey,gm:e.rollProcessConfig._requestedBy||"GM"}}),Te.executePlayerRollRequest(i,e))}static async executePlayerRollRequest(e,t){var s,o;const i=D();A.get(i.publicPlayerRolls.tag),a.log("executePlayerRollRequest",[e,t]);try{const l=(s=t.rollType)==null?void 0:s.toLowerCase(),n=((o=t.rollProcessConfig.rolls)==null?void 0:o[0])||{parts:[],data:{},options:{}},u={configure:!(game.user.isGM?t.skipRollDialog:!1)},g=t.rollProcessConfig.rollMode,f=game.settings.get("core","rollMode"),p={rollMode:g||f,create:t.rollProcessConfig.chatMessage!==!1},y={rollKey:t.rollKey,activityId:t.activityId,config:t.rollProcessConfig,groupRollId:t.groupRollId},b=z[l];b?await b(e,y,n,u,p):(a.warn(`No handler found for roll type: ${l}`),P.notify("warn",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:e.name||"Unknown Actor"})))}catch(l){a.error("Error executing roll request:",[l]),P.notify("error",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:e.name||"Unknown Actor"}))}}}class se{static init(){Q.initialize(se.registerSocketCalls),ye.initialize()}static getDiceConfig(){return te.getDiceConfig()}static receiveDiceConfig(e,t){te.receiveDiceConfig(e,t)}static async handleRollRequest(e){return a.log("Main.handleRollRequest",e),Te.handleRequest(e)}static registerSocketCalls(){Q.registerCall(me.getDiceConfig,se.getDiceConfig),Q.registerCall(me.receiveDiceConfig,se.receiveDiceConfig),Q.registerCall(me.handleRollRequest,se.handleRollRequest)}}se.init();
//# sourceMappingURL=flash-rolls-5e.js.map
