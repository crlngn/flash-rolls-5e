var Ge=Object.defineProperty;var Ce=r=>{throw TypeError(r)};var Pe=(r,e,t)=>e in r?Ge(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t;var v=(r,e,t)=>Pe(r,typeof e!="symbol"?e+"":e,t),de=(r,e,t)=>e.has(r)||Ce("Cannot "+t);var K=(r,e,t)=>(de(r,e,"read from private field"),t?t.call(r):e.get(r)),ge=(r,e,t)=>e.has(r)?Ce("Cannot add the same private member more than once"):e instanceof WeakSet?e.add(r):e.set(r,t),fe=(r,e,t,i)=>(de(r,e,"write to private field"),i?i.call(r,t):e.set(r,t),t),ye=(r,e,t)=>(de(r,e,"access private method"),t);const Y={select:"select",checkbox:"checkbox"},Q={client:"client",world:"world"},k=()=>({debugMode:{tag:"debug-mode",label:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.debugMode.hint"),propType:Boolean,inputType:Y.checkbox,default:!0,scope:Q.client,config:!0},rollRequestsEnabled:{tag:"flash-rolls-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollRequestsEnabled.hint"),propType:Boolean,inputType:Y.checkbox,default:!0,scope:Q.world,config:!0},consumptionConfigMode:{tag:"consumption-config-mode",label:game.i18n.localize("CRLNGN_ROLLS.settings.consumptionConfigMode.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.consumptionConfigMode.hint"),propType:Number,inputType:Y.select,choices:{1:"Skip dialog for player and GM",2:"Skip dialog for player",3:"Skip dialog for GM",4:"Do not skip dialog"},default:1,scope:Q.world,config:!0},skipRollDialog:{tag:"skip-roll-dialog",label:game.i18n.localize("CRLNGN_ROLLS.settings.skipRollDialog.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.skipRollDialog.hint"),propType:Boolean,inputType:Y.checkbox,default:!1,scope:Q.world,config:!0},useGMTargetTokens:{tag:"use-gm-target-tokens",label:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.useGMTargetTokens.hint"),propType:Boolean,inputType:Y.checkbox,default:!1,scope:Q.world,config:!0},rollInterceptionEnabled:{tag:"roll-interception-enabled",label:game.i18n.localize("CRLNGN_ROLLS.settings.rollInterceptionEnabled.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.rollInterceptionEnabled.hint"),propType:Boolean,inputType:Y.checkbox,default:!0,scope:Q.world,config:!0},publicPlayerRolls:{tag:"public-player-rolls",label:game.i18n.localize("CRLNGN_ROLLS.settings.publicPlayerRolls.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.publicPlayerRolls.hint"),propType:Boolean,inputType:Y.checkbox,default:!0,scope:Q.world,config:!0},showOfflineNotifications:{tag:"show-offline-notifications",label:game.i18n.localize("CRLNGN_ROLLS.settings.showOfflineNotifications.label"),hint:game.i18n.localize("CRLNGN_ROLLS.settings.showOfflineNotifications.hint"),propType:Boolean,inputType:Y.checkbox,default:!0,scope:Q.world,config:!0}}),A="flash-rolls-5e",ne=["%cFlash Rolls 5e","color:rgb(47, 151, 161); font-weight: bold;","|"],he={receiveDiceConfig:"receiveDiceConfig",getDiceConfig:"getDiceConfig",handleRollRequest:"handleRollRequest"},d={ABILITY:"ability",ABILITY_CHECK:"abilitycheck",ATTACK:"attack",CONCENTRATION:"concentration",CUSTOM:"custom",DEATH_SAVE:"deathsave",FORMULA:"formula",DAMAGE:"damage",HEALING:"healing",HIT_DIE:"hitdie",INITIATIVE:"initiative",INITIATIVE_DIALOG:"initiativedialog",ITEM_SAVE:"itemsave",SAVE:"save",SAVING_THROW:"savingthrow",SKILL:"skill",TOOL:"tool"},qe={ABILITY_CHECK:{name:d.ABILITY_CHECK,label:"Ability Check",subList:"abilities",actorPath:"system.abilities"},SAVING_THROW:{name:d.SAVING_THROW,label:"Saving Throw",subList:"abilities",actorPath:"system.abilities"},SKILL:{name:d.SKILL,label:"Skill Check",subList:"skills",actorPath:"system.skills"},TOOL:{name:d.TOOL,label:"Tool Check",subList:"tools",actorPath:"system.tools"},CONCENTRATION:{name:d.CONCENTRATION,label:"Concentration Check",subList:null,actorPath:""},INITIATIVE:{name:d.INITIATIVE,label:"Initiative Roll",subList:null,actorPath:""},DEATH_SAVE:{name:d.DEATH_SAVE,label:"Death Save",subList:null,actorPath:""},HIT_DIE:{name:d.HIT_DIE,label:"Hit Die",subList:null,actorPath:""},CUSTOM:{name:d.CUSTOM,label:"Custom Roll",subList:null,actorPath:""}},$={ID:A,ROLL_REQUEST_OPTIONS:qe},J={INIT:"init",READY:"ready",CHANGE_SIDEBAR_TAB:"changeSidebarTab",RENDER_SIDEBAR:"renderSidebar",USER_CONNECTED:"userConnected",PRE_CREATE_CHAT_MESSAGE:"preCreateChatMessage",COLLAPSE_SIDE_BAR:"collapseSidebar"},Fe={READY:"socketlib.ready"},P={PRE_USE_ACTIVITY:"dnd5e.preUseActivity",PRE_ROLL_ABILITY_CHECK:"dnd5e.preRollAbilityCheckV2",PRE_ROLL_SAVING_THROW:"dnd5e.preRollSavingThrowV2",PRE_ROLL_DEATH_SAVE_V2:"dnd5e.preRollDeathSaveV2",PRE_ROLL_SKILL_V2:"dnd5e.preRollSkillV2",PRE_ROLL_TOOL_V2:"dnd5e.preRollToolV2",PRE_ROLL_HIT_DIE_V2:"dnd5e.preRollHitDieV2",PRE_ROLL_INITIATIVE_DIALOG:"dnd5e.preRollInitiativeDialog",PRE_ROLL_INITIATIVE:"dnd5e.preRollInitiative",ROLL_INITIATIVE:"dnd5e.rollInitiative",PRE_ROLL_ATTACK_V2:"dnd5e.preRollAttackV2",PRE_ROLL_DAMAGE_V2:"dnd5e.preRollDamageV2",POST_ROLL_CONFIG:"dnd5e.postRollConfiguration",RENDER_ROLL_CONFIGURATION_DIALOG:"renderRollConfigurationDialog",RENDER_SKILL_TOOL_ROLL_DIALOG:"renderSkillToolRollConfigurationDialog"},se=class se{static log(e="",t=[],i=!1){try{const o=game.settings.get(A,"debug-mode")||se.debugOn;if(!(i||o))return;const l=Array.isArray(t)?t:[t];console.log(...ne,e,...l)}catch{if(i||se.debugOn){const s=Array.isArray(t)?t:[t];console.log(...ne,e,...s)}}}static warn(e="",t=[]){const i=Array.isArray(t)?t:[t];console.warn(...ne,e,...i)}static error(e,t=[],i={ui:!1,console:!0,permanent:!1}){var s;const o=Array.isArray(t)?t:[t];i.ui&&((s=ui.notifications)==null||s.error(e,{localize:!0,permanent:i.permanent})),i.console&&console.error(...ne,e,...o)}};v(se,"debugOn",!1);let a=se;const M=class M{static serializeForTransport(e,t=!1){return a.log("serializeForTransport",[e,t]),e==null||t&&e.rolls&&Array.isArray(e.rolls)&&(e.rolls=e.rolls.map(i=>i instanceof Roll?i.toJSON():i)),e}static deserializeFromTransport(e,t=!1){a.log("deserializeFromTransport",[e,t]);let i={...e};if(!e)return i;if(t&&e.rolls&&e.rolls.length>0){const o=i.rolls.map(s=>{let l=s;return typeof s=="string"?l=Roll.fromJSON(s):l=Roll.fromJSON(JSON.stringify(s)),l});return i.rolls=[...o],i}return i}};v(M,"socket"),v(M,"_activeExecutions",new Map),v(M,"initialize",e=>{a.log("initialize",[e]),Hooks.once(Fe.READY,()=>{if(typeof socketlib>"u"){a.error("SocketUtil Error: socketlib is not loaded. Ensure it is installed and enabled."),ui.notifications.error(game.i18n.localize("CRLNGN_ROLLS.notifications.socketlibMissing"),{permanent:!0});return}try{M.socket=socketlib.registerModule(A),e&&e()}catch{}})}),v(M,"registerCall",(e,t)=>{a.log("registerCall",[e]),M.socket&&M.socket.register(e,t)}),v(M,"sendMessage",(e,t)=>{a.log("sendMessage",[e]),t&&t()}),v(M,"execForGMs",async(e,...t)=>{if(a.log("execForGMs",[e,...t]),!!M.socket)return await M.socket.executeForAllGMs(e,...t)}),v(M,"execForAll",async(e,...t)=>{if(M.socket)return await M.socket.executeForEveryone(e,...t)}),v(M,"execForUser",async(e,t,...i)=>{if(a.log("execForUser",[e,t,...i]),!M.socket)return;if(t===game.user.id)return null;const o=`${e}-${t}`;if(M._activeExecutions.has(o))return null;M._activeExecutions.set(o,!0);try{return await M.socket.executeAsUser(e,t,...i)}catch{return null}finally{M._activeExecutions.delete(o)}});let j=M;class X{static initialize(){this.setDiceConfig()}static setDiceConfig(){if(!game.user)return{};const e=game.settings.storage.get("client");return this.diceConfig=e["core.diceConfiguration"]||"",this.diceConfig}static getDiceConfig(){return game.user?(this.setDiceConfig(),game.user.isGM&&this._sendDiceConfigToGMs(),this.diceConfig):{}}static _sendDiceConfigToGMs(){j.execForGMs("receiveDiceConfig",game.user.id,this.diceConfig)}static receiveDiceConfig(e,t){var i,o;((i=game.user)!=null&&i.isGM||e===((o=game.user)==null?void 0:o.id))&&(this.playerDiceConfigs[e]=t?JSON.parse(t):{})}static getUserDiceConfig(e){var t;return e===((t=game.user)==null?void 0:t.id)?this.diceConfig:this.playerDiceConfigs[e]||{}}static requestDiceConfigFromUser(e){j.execForUser("getDiceConfig",e)}static requestDiceConfigFromAllPlayers(){var e;(e=game.user)!=null&&e.isGM&&game.users.forEach(t=>{t.active&&!t.isGM&&t.id!==game.user.id&&this.requestDiceConfigFromUser(t.id)})}static clearPlayerConfigs(){this.playerDiceConfigs={}}static hasUserConfig(e){var t;return e===((t=game.user)==null?void 0:t.id)?!!this.diceConfig:!!this.playerDiceConfigs[e]}}v(X,"diceConfig",{}),v(X,"playerDiceConfigs",{});class D{static registerSettings(){const e=k();Object.entries(e).forEach(async i=>{const o=i[1],s={name:o.label,hint:o.hint,default:o.default,type:o.propType,scope:o.scope,config:o.config,requiresReload:o.requiresReload||!1,onChange:l=>D.apply(o.tag,l)};o.choices&&(s.choices=o.choices),await game.settings.register(A,o.tag,s),(D.get(o.tag)===void 0||D.get(o.tag)===null)&&D.set(o.tag,o.default)})}static get(e,t=A){if(!e)return null;let i=!1;if(t===A)i=game.settings.get(t,e);else{let s=game.settings.storage.get("client")[`${t}.${e}`];s===void 0&&(s=game.settings.storage.get("world").getSetting(`${t}.${e}`),i=s==null?void 0:s.value)}return i}static set(e,t,i=A){if(!e)return!1;let o=game.settings.storage.get("client")[`${i}.${e}`];o||(o=game.settings.storage.get("world").getSetting(`${i}.${e}`));try{game.settings.set(i,e,t)}catch{}return!0}static apply(e,t){const i=k();switch(e){case i.rollRequestsEnabled.tag:D.applyRollRequestsEnabled(t);break}}static applyRollRequestsEnabled(e){const t=document.querySelector(".chat-controls .flash-rolls-icon");t&&(e?t.classList.add("active"):t.classList.remove("active"))}}var ce,Se;const ie=class ie{static isModuleOn(e){var i;const t=(i=game.modules)==null?void 0:i.get(e);return!!(t!=null&&t.active)}static html(e,t){return e.querySelector(t)}static getFullWidth(e){return window.getComputedStyle(e).width==="0px"?0:e.offsetWidth}static addCSSVars(e,t){let i=document.querySelector("#crlngn-ui-vars");if(!i){const h=document.querySelector("body.crlngn-ui");if(!h)return;i=document.createElement("style"),i.id="crlngn-ui-vars",i.textContent=`body.crlngn-ui {
}
`,h.prepend(i)}let o=i.textContent,s=o.indexOf("body.crlngn-ui {"),l=o.indexOf("}",s);s===-1&&(o=`body.crlngn-ui {
}
`,s=0,l=o.indexOf("}"));const c=o.substring(s+16,l).split(";").map(h=>h.trim()).filter(h=>h!==""),u={};c.forEach(h=>{const m=h.split(":");if(m.length>=2){const b=m[0].trim(),R=m.slice(1).join(":").trim();b&&(u[b]=R)}}),e.includes("i18n")&&typeof t=="string"&&!t.startsWith('"')&&!t.startsWith("'")&&!t.match(/^url\(|^rgba?\(|^hsla?\(/)&&(t=`"${t}"`),u[e]=t;const g=Object.entries(u).map(([h,m])=>`  ${h}: ${m};`).join(`
`),f=o.substring(0,s)+`body.crlngn-ui {
`+g+`
}`+o.substring(l+1);i.textContent=f}static async processStyleSheetRules(e,t){var i;try{if(((i=e.ownerNode)==null?void 0:i.tagName)==="STYLE"){const o=e.ownerNode.textContent;this.extractFontsFromCSSText(o,t)}try{const o=e.cssRules||e.rules;if(!o)return;for(let s=0;s<o.length;s++){const l=o[s];if(l instanceof CSSFontFaceRule){const n=l.style.getPropertyValue("font-family");n&&(t.add(n),a.log("Found font-face rule:",[n]))}else if(l instanceof CSSImportRule){if(a.log("Found import rule:",[l.href]),l.styleSheet)await this.processStyleSheetRules(l.styleSheet,t);else if(l.href)try{const c=await(await fetch(l.href)).text();this.extractFontsFromCSSText(c,t)}catch(n){a.warn("Error fetching imported CSS:",[n])}}}}catch(o){if(o.name==="SecurityError"&&e.href){a.log("Security restriction on stylesheet, trying to fetch directly:",[e.href]);try{const l=await(await fetch(e.href)).text();this.extractFontsFromCSSText(l,t)}catch(s){a.warn("Error fetching cross-origin stylesheet:",[s])}}else a.warn("Error accessing CSS rules:",[o])}}catch(o){a.warn("Error in processStyleSheetRules:",[o])}}static extractFontsFromCSSText(e,t){if(!e)return;const i=/@font-face\s*{[^}]*font-family\s*:\s*(['"])(.+?)\1[^}]*}/gs;(e.match(i)||[]).forEach(s=>{const l=/font-family\s*:\s*(['"])(.+?)\1/,n=s.match(l);if(n&&n[2]){const c=n[2].trim();t.add(c)}})}static getOffsetBottom(e){const t=e.offsetTop,i=e.offsetHeight;return window.innerHeight-(t+i)}static async getAllFonts(){const e=new Set(Object.keys(CONFIG.fontDefinitions)),t=game.settings.get("core","fonts")||{},i=Object.entries(t).map(([l])=>l),o=await this.processStyleSheets();return Array.from(new Set([...e,...i,...o])).filter(l=>!/FontAwesome|Font Awesome|FoundryVTT/.test(l)).map(l=>l.replace(/['"]/g,"").trim()).sort((l,n)=>l.toLowerCase().localeCompare(n.toLowerCase()))||[]}static addCustomCSS(e,t="crlngn-ui-custom-css",i=!0){if(!e)return;let o=document.querySelector("#"+t);o||(o=document.createElement("style"),o.id=t,o.textContent="",document.head.appendChild(o));const s=/@import\s+(?:url\()?\s*['"]?[^'")]+['"]?\s*\)?\s*;/g,l=[];let n=e,c;for(;(c=s.exec(e))!==null;)l.push(c[0]);if(n=e.replace(s,"").trim(),!i){o.textContent=l.join(`
`)+(l.length?`

`:"")+n;return}if(!o.textContent.includes(n)){const u=o.textContent,g=[];let f;for(;(f=s.exec(u))!==null;)g.push(f[0]);const h=u.replace(s,"").trim(),m=l.filter(R=>!g.includes(R)),b=[...g,...m];o.textContent=b.join(`
`)+(b.length?`

`:"")+h+(h&&n?`

`:"")+n}}static smoothScrollTo(e,t,i="horizontal",o=300,s=null){const l=e.dataset.scrollAnimationId;l&&cancelAnimationFrame(Number(l));const n=i==="horizontal",c=n?e.scrollLeft:e.scrollTop,u=t-c;if(u===0)return s&&s(),null;const g=performance.now(),f=m=>{const b=m-g;if(b>=o){n?e.scrollLeft=t:e.scrollTop=t,delete e.dataset.scrollAnimationId,s&&s();return}const R=b/o,y=R<.5?2*R*R:1-Math.pow(-2*R+2,2)/2;n?e.scrollLeft=c+u*y:e.scrollTop=c+u*y;const C=requestAnimationFrame(f);return e.dataset.scrollAnimationId=C,C},h=requestAnimationFrame(f);return e.dataset.scrollAnimationId=h,h}static confirmReload(e=game.i18n.localize("CRLNGN_UI.ui.reloadRequiredTitle"),t=game.i18n.localize("CRLNGN_UI.ui.reloadRequiredLabel"),i={}){const o={title:e,content:t,yes:{label:game.i18n.localize("CRLNGN_UI.ui.reloadButton"),callback:()=>(a.log("Reloading page after confirmation"),window.location.reload(),!0)},no:{label:game.i18n.localize("CRLNGN_UI.ui.cancelButton"),callback:()=>!1},defaultYes:!1,rejectClose:!1};return mergeObject(o,i),foundry.applications.api.DialogV2.confirm(o)}static renderTemplate(e,t){return foundry.applications.handlebars.renderTemplate(e,t)}static loadTemplate(e){return foundry.applications.handlebars.loadTemplate(e)}static isValidCSSRule(e){if(!e||typeof e!="string")return!1;const t=e.trim();if(!t)return!1;try{const i=document.createElement("style"),o=`${t} { color: inherit; }`;i.textContent=o,document.head.appendChild(i);const s=!!(i.sheet&&i.sheet.cssRules&&i.sheet.cssRules.length>0);return document.head.removeChild(i),s}catch(i){return a.log("CSS validation error:",[i,e]),!1}}static processCSSRules(e,t){if(!e||!t)return"";const i=ye(this,ce,Se).call(this,e),o=t+` {
`+i.baseProperties.join(`
`)+`
}`,s=[],l=new Map;return i.nestedRules.forEach(n=>{const{selector:c,content:u}=n;if(c.startsWith("&")){const h=c.substring(1),m=t.split(",").map(b=>b.trim()).filter(Boolean).map(b=>b+h).join(", ");s.push(`${m} {
${u}
}`);return}l.has(u)||l.set(u,[]);const g=c.split(",").map(h=>h.trim()),f=t.split(",").map(h=>h.trim()).filter(Boolean);g.forEach(h=>{f.forEach(m=>{l.get(u).push(`${m} ${h}`)})})}),l.forEach((n,c)=>{s.push(`${n.join(", ")} {
${c}
}`)}),o+`

`+s.join(`

`)}static getActorOwner(e){const t=e.ownership||{};for(const[i,o]of Object.entries(t))if(a.log("getActorOwner #1",[i,o,CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER]),o>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const s=game.users.get(i);if(s&&!s.isGM)return s}if((t==null?void 0:t.default)>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const i=game.users.filter(o=>!o.isGM)[0];if(a.log("getActorOwner #2",[i]),i)return i}return null}};ce=new WeakSet,Se=function(e){const t=[],i=[],o=e.split(`
`);let s=null,l=0;for(let n=0;n<o.length;n++){const c=o[n].trim();if(!c)continue;const u=(c.match(/{/g)||[]).length,g=(c.match(/}/g)||[]).length;if(c.includes("{")&&!s){s={selector:c.substring(0,c.indexOf("{")).trim(),content:"",startLine:n},l=1;const h=c.substring(c.indexOf("{")+1).trim();h&&!h.includes("}")&&(s.content+=h+`
`)}else s?(l+=u-g,l>0?s.content+=c+`
`:(s.content=s.content.replace(/}\s*$/,"").trim(),i.push(s),s=null)):!c.includes("{")&&!c.includes("}")&&t.push(c)}return{baseProperties:t,nestedRules:i}},ge(ie,ce),v(ie,"processStyleSheets",async()=>{const e=new Set(Object.keys(CONFIG.fontDefinitions)),t=game.settings.get("core","fonts")||{},i=Object.entries(t).map(([l])=>l),o=new Set;for(const l of document.styleSheets)try{if(l.ownerNode){const n=l.href||"",c=n.includes("css/")||n.includes("styles/"),u=n.includes("modules/crlngn-ui/"),g=n.includes("systems/");if(n&&!c&&!u&&!g)continue;await ie.processStyleSheetRules(l,o)}}catch(n){a.warn("Error processing stylesheet:",[n])}return a.log("Found fonts:",[{foundry:Array.from(e),custom:i,cssImported:Array.from(o)}]),Array.from(new Set([...e,...i,...o])).filter(l=>!/FontAwesome|Font Awesome|FoundryVTT/.test(l)).map(l=>l.replace(/['"]/g,"").trim()).sort((l,n)=>l.toLowerCase().localeCompare(n.toLowerCase()))}),v(ie,"wrapFontName",e=>{const t=e.replace(/['"`]/g,"");return t.includes(" ")?`"${t}"`:t});let U=ie;Hooks.once("ready",()=>{dnd5e.applications.dice.DamageRollConfigurationDialog||a.warn("DamageRollConfigurationDialog not found in dnd5e.applications.dice")});function le(r){return class extends r{constructor(e={},t={},i={}){var o,s;super(e,t,i),this.actors=i.actors||[],this.sendRequest=i.sendRequest??i.sendRequest??!0,this.showDC=i.showDC||!1,this.dcValue=i.dcValue||null,this.rollKey=i.rollKey||e.skill||e.ability||null,this.rollTypeString=i.rollTypeString||null,this.windowTitle=((o=i.window)==null?void 0:o.title)||"",this.windowSubtitle=((s=i.window)==null?void 0:s.subtitle)||""}_buildConfig(e,t,i){const o=t==null?void 0:t.get("ability"),s=t==null?void 0:t.get("dc"),l=t==null?void 0:t.get(`rolls.${i}.situational`);if(a.log("_buildConfig",[l,t,e]),l)e.parts||(e.parts=[]),e.parts.push("@situational"),e.data||(e.data={}),e.data.situational=l;else if(e.parts){const c=e.parts.indexOf("@situational");c!==-1&&e.parts.splice(c,1)}o&&(e.ability=o,this.config.ability=o);const n=super._buildConfig(e,t,i);if(s){const c=parseInt(s);isNaN(c)||(n.options=n.options||{},n.options.target=c)}else this.dcValue!==void 0&&this.dcValue!==null&&(n.options=n.options||{},n.options.target=this.dcValue);return a.log(`${this.constructor.name}._buildConfig`,[this.config,t,n]),n}_onChangeForm(e,t){a.log("_onChangeForm",[t.target.value]),super._onChangeForm(e,t);const i=this.element.querySelector('input[name="crlngn-send-request"]');i&&(this.sendRequest=i.checked);const o=this.element.querySelector('input[name="dc"]');o&&o.value&&(this.dcValue=parseInt(o.value)||null)}_finalizeRolls(e){const t=super._finalizeRolls(e);if(a.log("_finalizeRolls #1",[t,this.sendRequest]),this.dcValue!==void 0&&this.dcValue!==null)for(const i of t)i.options.target=this.dcValue;return this.config.sendRequest=this.sendRequest,t}async _onRender(e,t){var i,o,s;await super._onRender(e,t),((s=(o=(i=this.config.rolls)==null?void 0:i[0])==null?void 0:o.data)!=null&&s.situational||this.config.situational)&&(a.log(`${this.constructor.name}._onRender`,["Triggering rebuild for initial situational bonus"]),setTimeout(()=>{this.rebuild()},100))}}}const L={addSituationalBonus(r,e){var t;return a.log("Config before adding bonus:",[e,r]),e&&((t=r.rolls)!=null&&t[0])&&(r.rolls[0].parts||(r.rolls[0].parts=[]),r.rolls[0].data||(r.rolls[0].data={}),r.rolls[0].data.situational=e,r.rolls[0].parts.includes("@situational")||r.rolls[0].parts.push("@situational"),a.log("Config after adding bonus:",[r])),r},buildRollConfig(r,e,t={}){var s;const i={rolls:[{parts:e.parts||[],data:e.data||{},options:{...e.options||{},...((s=e.options)==null?void 0:s._fromFlashRolls)&&{_fromFlashRolls:!0}}}],advantage:r.config.advantage||!1,disadvantage:r.config.disadvantage||!1,target:r.config.target,subject:null,chatMessage:!0,legacy:!1,...r.config.rollMode&&{rollMode:r.config.rollMode},...t},o=r.config.situational;return o&&this.addSituationalBonus(i,o),this.ensureRollFlags(i,r)},ensureRollFlags(r,e){return r.isRollRequest=!game.user.isGM,r._showRequestedBy=!0,r._requestedBy=e.config.requestedBy||"GM",r},validateActors(r){return!r||r.length===0?null:(typeof r[0]=="string"&&(r=r.map(e=>game.actors.get(e)).filter(e=>e)),r.length>0?r:null)},getRollClass(r){const e=r==null?void 0:r.toLowerCase();return[d.DAMAGE,d.HEALING].includes(e)?CONFIG.Dice.DamageRoll||CONFIG.Dice.BasicRoll:[d.FORMULA,d.CUSTOM,d.HIT_DIE].includes(e)?CONFIG.Dice.BasicRoll:CONFIG.Dice.D20Roll},shouldShowDC(r){const e=r==null?void 0:r.toLowerCase();return[d.SAVE,d.SAVING_THROW,d.ABILITY,d.ABILITY_CHECK,d.CONCENTRATION,d.SKILL,d.TOOL].includes(e)},createBaseRollConfig(r,e,t){const i=e==null?void 0:e.toLowerCase(),o={data:r.getRollData(),subject:r,rolls:[{parts:[],data:r.getRollData(),options:{}}]};switch(i){case d.SKILL:o.skill=t;break;case d.TOOL:o.tool=t;break;case d.SAVE:case d.SAVING_THROW:case d.ABILITY:case d.ABILITY_CHECK:o.ability=t;break;case d.HIT_DIE:o.rolls[0].options.flavor="Hit Die";break}return o},createMessageConfig(r,e=null){const t={create:!1,data:{speaker:ChatMessage.getSpeaker({actor:r})}};return e&&(t.rollMode=e),t},async triggerRollDialog(r,e,t,i){const o=new r(e,t,i);return await new Promise(l=>{o.addEventListener("close",()=>{l({rolls:o.rolls,config:o.config,message:o.message,sendRequest:o.sendRequest,critical:o.config.critical,isCritical:o.config.isCritical})},{once:!0}),o.render({force:!0})})},processDialogResult(r,e,t,i,o={}){var R,y,C,p,_,T;if(!(r!=null&&r.rolls)||r.rolls.length===0)return null;const s=t==null?void 0:t.toLowerCase(),l=r.rolls[0];let n=!1,c=!1;((R=l==null?void 0:l.options)==null?void 0:R.advantageMode)!==void 0&&(n=l.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE,c=l.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE);const u=((y=l==null?void 0:l.data)==null?void 0:y.situational)||"",g=(C=l==null?void 0:l.options)==null?void 0:C.target,f={rolls:[{parts:((p=l==null?void 0:l.parts)==null?void 0:p.slice())||[],data:u?{situational:u}:{},options:g?{target:g}:{}}],subject:e[0],advantage:n,disadvantage:c,target:g,sendRequest:r.sendRequest,isRollRequest:r.sendRequest,skipRollDialog:o.skipRollDialog||!1,chatMessage:!0},h=k(),m=D.get(h.publicPlayerRolls.tag)===!0,b=this.determineRollMode(m,(_=r.message)==null?void 0:_.rollMode);return f.rollMode=b,(T=r.config)!=null&&T.ability&&[d.SKILL,d.TOOL].includes(s)&&(f.ability=r.config.ability),f},determineRollMode(r,e){return e||(r?CONST.DICE_ROLL_MODES.PUBLIC:game.settings.get("core","rollMode"))},isPlayerOwned(r){return Object.entries(r.ownership).some(([e,t])=>{const i=game.users.get(e);return i&&!i.isGM&&t>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})}};class W extends le(dnd5e.applications.dice.D20RollConfigurationDialog){constructor(e={},t={},i={}){i.rollType=i.rollType||CONFIG.Dice.D20Roll,super(e,t,i),a.log("constructor - initializing GM Dialog",[e,t,i])}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}get title(){return this.windowTitle||super.title}_prepareConfigurationData(e,t,i,o){a.log("_prepareConfigurationData",[e,t,i,o]);const s=super._prepareConfigurationData(e,t,i,o);return s.showDC=this.showDC,s.dcValue=this.dcValue,s.sendRequest=this.sendRequest,s.actorCount=this.actors.length,s}async _preparePartContext(e,t,i){return a.log("_preparePartContext",[e,t,i]),t=await super._preparePartContext(e,t,i),e==="configuration"&&(t.showDC=this.showDC,t.dcValue=this.dcValue,t.sendRequest=this.sendRequest,t.actorCount=this.actors.length),t}async _onRender(e,t){if(a.log("_onRender",[e,t]),super._onRender(e,t),this.element.querySelector(".gm-roll-config-fields"))return;let i=this.element.querySelector(".rolls .formulas");if(i&&(this.showDC||this.actors.length>0)){const o={showDC:this.showDC,dcValue:this.dcValue,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},s=await U.renderTemplate(`modules/${A}/templates/gm-roll-config-fields.hbs`,o),l=document.createElement("div");l.className="gm-roll-config-fields",l.innerHTML=s,i.parentNode.insertBefore(l,i)}this._attachButtonListeners()}_attachButtonListeners(){a.log("_attachButtonListeners",[this.element]),this.element.querySelectorAll('[data-action="advantage"], [data-action="normal"], [data-action="disadvantage"]').forEach(t=>{t.addEventListener("click",i=>{i.currentTarget.dataset.action})})}static async initConfiguration(e,t,i,o={}){var p,_,T,I,S,N,O,F,E;if(e=L.validateActors(e),!e)return null;const s=e[0];a.log("GMRollConfigDialog, initConfiguration",[]);const l=t==null?void 0:t.toLowerCase(),n=k(),c=D.get(n.publicPlayerRolls.tag)===!0,u=L.determineRollMode(c),g=L.shouldShowDC(l),f=L.getRollClass(l),h=L.createBaseRollConfig(s,t,i),m=L.createMessageConfig(s,u),b={options:{actors:e,sendRequest:e.some(G=>L.isPlayerOwned(G)),showDC:g,rollKey:i,rollType:f,rollTypeString:l,window:{title:W._getRollTitle(l,i,s),subtitle:W._getSubtitle(e)},...o}},R=await L.triggerRollDialog(this,h,m,b.options),y=L.processDialogResult(R,e,t,i,o);if(!y)return null;if((p=R.config)!=null&&p.ability&&[d.SKILL,d.TOOL].includes(l)){const G=((T=(_=s.system.skills)==null?void 0:_[i])==null?void 0:T.ability)||((S=(I=CONFIG.DND5E.skills)==null?void 0:I[i])==null?void 0:S.ability);R.config.ability!==G&&(y.ability=R.config.ability)}let C=b.options.window.title;if(R.config.ability&&[d.SKILL,d.TOOL].includes(l)){const G=((N=CONFIG.DND5E.abilities[R.config.ability])==null?void 0:N.label)||R.config.ability;if(l===d.SKILL){const V=((O=CONFIG.DND5E.skills[i])==null?void 0:O.label)||i;C=game.i18n.format("DND5E.SkillPromptTitle",{skill:V,ability:G})}else if(l===d.TOOL){const V=(E=(F=CONFIG.DND5E.enrichmentLookup)==null?void 0:F.tools)==null?void 0:E[i];let z=i;if(V!=null&&V.id){const w=dnd5e.documents.Trait.getBaseItem(V.id,{indexOnly:!0});z=(w==null?void 0:w.name)||i}C=game.i18n.format("DND5E.ToolPromptTitle",{tool:z,ability:G})}}return y.rollTitle=C,y.rollType=l,y.rollKey=i,y}static _getRollTitle(e,t,i){var l,n,c,u,g,f,h,m,b,R,y,C,p,_,T,I,S,N;a.log("GMRollConfigDialog._getRollTitle",[e,t,i]),a.log("GMRollConfigDialog._getRollTitle - Detailed",{rollType:e,rollKey:t,actorName:i==null?void 0:i.name,actorAbilities:(l=i==null?void 0:i.system)!=null&&l.abilities?Object.keys(i.system.abilities):[],actorSkills:(n=i==null?void 0:i.system)!=null&&n.skills?Object.keys(i.system.skills):[],actorInitAbility:(g=(u=(c=i==null?void 0:i.system)==null?void 0:c.attributes)==null?void 0:u.init)==null?void 0:g.ability});let o="";const s=e==null?void 0:e.toLowerCase();switch([d.SAVE,d.ABILITY,d.ABILITY_CHECK].includes(s)&&!t&&a.warn("Missing rollKey for roll type",[s,t]),s){case d.SKILL:const O=((f=CONFIG.DND5E.skills[t])==null?void 0:f.label)||t,F=(h=i==null?void 0:i.system.skills)==null?void 0:h[t],E=(F==null?void 0:F.ability)||((m=CONFIG.DND5E.skills[t])==null?void 0:m.ability)||"int",G=((b=CONFIG.DND5E.abilities[E])==null?void 0:b.label)||E;o=game.i18n.format("DND5E.SkillPromptTitle",{skill:O,ability:G});break;case d.SAVE:case d.SAVING_THROW:const V=((R=CONFIG.DND5E.abilities[t])==null?void 0:R.label)||t;o=game.i18n.format("DND5E.SavePromptTitle",{ability:V});break;case d.ABILITY:case d.ABILITY_CHECK:const z=((y=CONFIG.DND5E.abilities[t])==null?void 0:y.label)||t;o=game.i18n.format("DND5E.AbilityPromptTitle",{ability:z});break;case d.CONCENTRATION:o=game.i18n.localize("DND5E.Concentration");break;case d.TOOL:const w=(p=(C=CONFIG.DND5E.enrichmentLookup)==null?void 0:C.tools)==null?void 0:p[t];let ee=t;if(w!=null&&w.id){const ue=dnd5e.documents.Trait.getBaseItem(w.id,{indexOnly:!0});ee=(ue==null?void 0:ue.name)||t}const oe=(_=i==null?void 0:i.system.tools)==null?void 0:_[t],be=(oe==null?void 0:oe.ability)||((S=(I=(T=CONFIG.DND5E.enrichmentLookup)==null?void 0:T.tools)==null?void 0:I[t])==null?void 0:S.ability)||"int",Me=((N=CONFIG.DND5E.abilities[be])==null?void 0:N.label)||be;o=game.i18n.format("DND5E.ToolPromptTitle",{tool:ee,ability:Me});break;case d.DEATH_SAVE:o=game.i18n.localize("DND5E.DeathSave");break;case d.INITIATIVE:case d.INITIATIVE_DIALOG:o=game.i18n.localize("DND5E.Initiative");break;default:o=game.i18n.localize("DND5E.Roll")}return a.log("_getRollTitle",[s,o]),o}static _getSubtitle(e=[]){return e.length===1?e[0].name:e.length>1?game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.multipleActors"):""}}class De extends le(dnd5e.applications.dice.RollConfigurationDialog){constructor(e={},t={},i={}){i.rollType=CONFIG.Dice.BasicRoll||Roll,i.showDC=!1,super(e,t,i),a.log("constructor",[e,t,i])}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config","hit-die-config"]})}_prepareConfigurationData(e,t,i,o){const s=super._prepareConfigurationData(e,t,i,o);return a.log("GMHitDieConfigDialog._prepareConfigurationData",[s]),s.formula="Hit Die (varies by actor)",s.sendRequest=this.sendRequest,s.actorCount=this.actors.length,s}async _preparePartContext(e,t,i){return t=await super._preparePartContext(e,t,i),e==="configuration"&&(t.sendRequest=this.sendRequest,t.actorCount=this.actors.length,t.formula="Hit Die (varies by actor)"),t}async _onRender(e,t){if(super._onRender(e,t),this.element.querySelector(".gm-roll-config-fields"))return;let i=this.element.querySelector(".rolls .formulas");if(i&&this.actors.length>0){const o={showDC:!1,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},s=await U.renderTemplate(`modules/${A}/templates/gm-roll-config-fields.hbs`,o),l=document.createElement("div");l.className="gm-roll-config-fields",l.innerHTML=s,i.parentNode.insertBefore(l,i)}}async _processSubmitData(e,t,i){await super._processSubmitData(e,t,i),this.sendRequest=i.get("crlngn-send-request")!=="false",a.log("_processSubmitData",[i,this.config])}_finalizeRolls(e){const t=super._finalizeRolls(e);return this.config.sendRequest=this.sendRequest,a.log("GMHitDieConfigDialog._finalizeRolls - before merge",[t]),t}static async initConfiguration(e,t,i,o={}){var b;if(e=L.validateActors(e),!e)return null;const s=e[0];a.log("GMHitDieConfigDialog, initConfiguration",[]);const l=k(),n=D.get(l.publicPlayerRolls.tag)===!0,c=L.determineRollMode(n),u={data:s.getRollData(),subject:s,rolls:[{parts:[],data:s.getRollData(),options:{flavor:"Hit Die Roll"}}]},g=L.createMessageConfig(s,c),f={options:{actors:e,sendRequest:e.some(R=>L.isPlayerOwned(R)),rollKey:i,rollType:CONFIG.Dice.BasicRoll||Roll,window:{title:game.i18n.localize("DND5E.HitDice"),subtitle:W._getSubtitle(e)},...o}},h=await L.triggerRollDialog(this,u,g,f.options);if(!(h!=null&&h.rolls)||h.rolls.length===0)return null;a.log("GMHitDieConfigDialog - dialog result",[h.rolls]);const m=L.processDialogResult(h,e,t,i,o);return m?((b=h.config)!=null&&b.ability&&(m.ability=h.config.ability),m):null}}class Ee extends le(dnd5e.applications.dice.SkillToolRollConfigurationDialog){constructor(e={},t={},i={}){const o=foundry.utils.mergeObject(e,{chooseAbility:!0});i.rollType=i.rollType||CONFIG.Dice.D20Roll,super(o,t,i),a.log("constructor",[e,t,i])}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}_prepareConfigurationData(e,t,i,o){a.log("_prepareConfigurationData",[e,t,i,o]);const s=super._prepareConfigurationData(e,t,i,o);return s.showDC=this.showDC,s.dcValue=this.dcValue,s.sendRequest=this.sendRequest,s.actorCount=this.actors.length,s}async _preparePartContext(e,t,i){return a.log("_preparePartContext",[e,t,i]),t=await super._preparePartContext(e,t,i),e==="configuration"&&(t.showDC=this.showDC,t.dcValue=this.dcValue,t.sendRequest=this.sendRequest,t.actorCount=this.actors.length),t}async _onRender(e,t){if(a.log("_onRender",[e,t]),super._onRender(e,t),this.element.querySelector(".gm-roll-config-fields"))return;let i=this.element.querySelector(".rolls .formulas");if(i&&(this.showDC||this.actors.length>0)){const o={showDC:this.showDC,dcValue:this.dcValue,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},s=await U.renderTemplate(`modules/${A}/templates/gm-roll-config-fields.hbs`,o),l=document.createElement("div");l.className="gm-roll-config-fields",l.innerHTML=s,i.parentNode.insertBefore(l,i)}this._attachButtonListeners()}_attachButtonListeners(){a.log("_attachButtonListeners",[]),this.element.querySelectorAll('[data-action="advantage"], [data-action="normal"], [data-action="disadvantage"]').forEach(t=>{t.addEventListener("click",i=>{i.currentTarget.dataset.action})})}static async initConfiguration(e,t,i,o={}){var p,_,T,I,S,N;if(e=L.validateActors(e),!e)return null;const s=e[0];a.log("GMSkillToolConfigDialog, initConfiguration",[]);const l=t==null?void 0:t.toLowerCase(),n=k(),c=D.get(n.publicPlayerRolls.tag)===!0,u=L.determineRollMode(c),g=L.shouldShowDC(l),f=CONFIG.Dice.D20Roll;let h=null;if(l===d.SKILL){const O=s.system.skills[i];h=(O==null?void 0:O.ability)||((p=CONFIG.DND5E.skills[i])==null?void 0:p.ability)||"int"}else if(l===d.TOOL){const O=(_=s.system.tools)==null?void 0:_[i];h=(O==null?void 0:O.ability)||((S=(I=(T=CONFIG.DND5E.enrichmentLookup)==null?void 0:T.tools)==null?void 0:I[i])==null?void 0:S.ability)||"int"}const m={data:s.getRollData(),subject:s,ability:h,chooseAbility:!0,rolls:[{parts:[],data:s.getRollData(),options:{}}]};l===d.SKILL?m.skill=i:l===d.TOOL&&(m.tool=i);const b=L.createMessageConfig(s,u),R={options:{actors:e,sendRequest:e.some(O=>L.isPlayerOwned(O)),showDC:g,rollKey:i,rollType:f,rollTypeString:l,window:{title:W._getRollTitle(l,i,s),subtitle:W._getSubtitle(e)},...o}},y=await L.triggerRollDialog(this,m,b,R.options),C=L.processDialogResult(y,e,t,i,o);return C?((N=y.config)!=null&&N.ability&&[d.SKILL,d.TOOL].includes(l)&&(C.ability=y.config.ability),C.rollTitle=R.options.window.title,C.rollType=l,C.rollKey=i,C):null}}class He extends le(dnd5e.applications.dice.DamageRollConfigurationDialog){constructor(e={},t={},i={}){const o=foundry.utils.mergeObject({configure:!0},e);super(o,t,i),a.log("GMDamageConfigDialog.constructor",[o,t,i])}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","damage-roll","gm-roll-config"]})}_prepareConfigurationData(e,t,i,o){a.log("GMDamageConfigDialog._prepareConfigurationData",[e,t,i,o]);const s=super._prepareConfigurationData(e,t,i,o);return s.sendRequest=this.sendRequest,s.actorCount=this.actors.length,s}async _onRender(e,t){if(await super._onRender(e,t),this.actors.length>0){const i=this.element.querySelector(".rolls + .dialog-buttons");if(i&&!this.element.querySelector(".gm-roll-config-fields")){const o=document.createElement("div");o.className="gm-roll-config-fields",o.innerHTML=`
          <div class="form-group">
            <label class="checkbox">
              <input type="checkbox" name="crlngn-send-request" ${this.sendRequest?"checked":""}>
              ${game.i18n.localize("CRLNGN_ROLL_REQUESTS.ui.dialogs.sendRequestToPlayers")}
            </label>
          </div>
        `,i.insertAdjacentElement("beforebegin",o)}}}static async initConfiguration(e,t,i,o={},s={},l={}){var N,O,F,E,G;if(e=L.validateActors(e),a.log("GMDamageConfigDialog, initConfiguration actors",[e]),!e)return null;const n=e[0];a.log("GMDamageConfigDialog, initConfiguration #0",[s]);const c=k(),u=D.get(c.publicPlayerRolls.tag)===!0,g=L.determineRollMode(u,s.rollMode),f=t==null?void 0:t.toLowerCase(),h={subject:s.subject||n,data:n.getRollData(),critical:s.critical||{},rolls:s.rolls||[{parts:[],data:n.getRollData(),options:{}}]};a.log("GMDamageConfigDialog, initConfiguration #1",[h]);const m=L.createMessageConfig(n,g);a.log("GMDamageConfigDialog, initConfiguration #2",[m]);const{position:b,...R}=(l==null?void 0:l.options)||{},y={options:{actors:e,sendRequest:e.some(V=>L.isPlayerOwned(V)),rollKey:i,rollType:CONFIG.Dice.DamageRoll,rollTypeString:f,window:{title:game.i18n.localize("DND5E.DamageRoll"),subtitle:W._getSubtitle(e)},...R,...o}};a.log("GMDamageConfigDialog, initConfiguration #3",[y]);const C=await L.triggerRollDialog(this,h,m,y.options);if(a.log("GMDamageConfigDialog, initConfiguration #4",[C]),!(C!=null&&C.rolls)||C.rolls.length===0)return null;a.log("GMDamageConfigDialog, initConfiguration #5",[C]);const p=C.rolls[0],_=((N=p==null?void 0:p.data)==null?void 0:N.situational)||"",T=(O=p==null?void 0:p.options)==null?void 0:O.target,I={rolls:[{parts:[],data:_?{situational:_}:{},options:{...T&&{target:T},isCritical:((F=p==null?void 0:p.options)==null?void 0:F.isCritical)||(p==null?void 0:p.isCritical)||!1}}],subject:s.subject||n,target:T,isCritical:((E=p==null?void 0:p.options)==null?void 0:E.isCritical)||(p==null?void 0:p.isCritical)||!1,sendRequest:C.sendRequest,isRollRequest:C.sendRequest,skipRollDialog:o.skipRollDialog||!1,chatMessage:!0};a.log("GMDamageConfigDialog, initConfiguration #6",[I]);const S=L.determineRollMode(u,(G=C.message)==null?void 0:G.rollMode);return I.rollMode=S,I.rollTitle=y.options.window.title,I.rollType=f,I.rollKey=i,a.log("GMDamageConfigDialog, initConfiguration - result",[I]),I}}class Ve extends le(dnd5e.applications.dice.AttackRollConfigurationDialog){constructor(e={},t={},i={}){super(e,t,i),a.log("GMAttackConfigDialog.constructor",[e,t,i])}static get defaultOptions(){return foundry.utils.mergeObject(super.defaultOptions,{classes:["dnd5e2","roll-configuration","gm-roll-config"]})}_prepareConfigurationData(e,t,i,o){a.log("GMAttackConfigDialog._prepareConfigurationData",[e,t,i,o]);const s=super._prepareConfigurationData(e,t,i,o);return s.sendRequest=this.sendRequest,s.actorCount=this.actors.length,s}async _preparePartContext(e,t,i){return t=await super._preparePartContext(e,t,i),e==="configuration"&&(t.sendRequest=this.sendRequest,t.actorCount=this.actors.length),t}async _onRender(e,t){if(await super._onRender(e,t),this.element.querySelector(".gm-roll-config-fields"))return;let i=this.element.querySelector(".rolls .formulas");if(i&&this.actors.length>0){const o={showDC:!1,showSendRequest:this.actors.length>0,sendRequest:this.sendRequest},s=await U.renderTemplate(`modules/${A}/templates/gm-roll-config-fields.hbs`,o),l=document.createElement("div");l.className="gm-roll-config-fields",l.innerHTML=s,i.parentNode.insertBefore(l,i)}}_finalizeRolls(e){return this.config.sendRequest=this.sendRequest,!this.sendRequest&&this.config.isRollRequest&&(this.config.isRollRequest=!1),super._finalizeRolls(e)}static async initConfiguration(e,t,i,o={},s={},l={}){var F,E,G,V,z,w,ee;if(e=L.validateActors(e),!e)return null;const n=e[0];a.log("GMAttackConfigDialog, initConfiguration",[]);const c=k(),u=D.get(c.publicPlayerRolls.tag)===!0,g=t==null?void 0:t.toLowerCase(),f={subject:s.subject||n,data:n.getRollData(),rolls:[{parts:[],data:n.getRollData(),options:{}}]},h=L.determineRollMode(u),m=L.createMessageConfig(n,h),{position:b,...R}=(l==null?void 0:l.options)||{},y={options:{actors:e,sendRequest:e.some(oe=>L.isPlayerOwned(oe)),rollKey:i,rollType:CONFIG.Dice.D20Roll,rollTypeString:g,window:{title:game.i18n.localize("DND5E.Attack"),subtitle:W._getSubtitle(e)},...R,...o}},C=await L.triggerRollDialog(this,f,m,y.options);if(a.log("GMAttackConfigDialog, initConfiguration",[C==null?void 0:C.sendRequest]),!(C!=null&&C.rolls)||C.rolls.length===0)return null;const p=C.rolls[0];let _=!1,T=!1;((F=p==null?void 0:p.options)==null?void 0:F.advantageMode)!==void 0&&(_=p.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.ADVANTAGE,T=p.options.advantageMode===CONFIG.Dice.D20Roll.ADV_MODE.DISADVANTAGE);const I=((E=p==null?void 0:p.data)==null?void 0:E.situational)||"",S=(G=p==null?void 0:p.options)==null?void 0:G.target,N={rolls:[{parts:[],data:I?{situational:I}:{},options:{...S&&{target:S},...((V=p==null?void 0:p.options)==null?void 0:V.ammunition)&&{ammunition:p.options.ammunition},...((z=p==null?void 0:p.options)==null?void 0:z.attackMode)&&{attackMode:p.options.attackMode},...((w=p==null?void 0:p.options)==null?void 0:w.mastery)!==void 0&&{mastery:p.options.mastery}}}],subject:s.subject||n,advantage:_,disadvantage:T,target:S,sendRequest:C.sendRequest,isRollRequest:C.sendRequest,skipDialog:o.skipDialogs||!1,chatMessage:!0},O=L.determineRollMode(u,(ee=C.message)==null?void 0:ee.rollMode);return N.rollMode=O,N.rollTitle=y.options.window.title,N.rollType=g,N.rollKey=i,a.log("GMAttackConfigDialog, initConfiguration - SIMPLIFIED result",[N]),N}}class xe{static isModuleActive(e){const t=game.modules.get(e);return t&&t.active}static getMidiQOL(){return this.isMidiQOLActive()&&typeof MidiQOL<"u"?MidiQOL:null}}class Be{static findActivityForRoll(e,t){var s;if(!((s=e==null?void 0:e.system)!=null&&s.activities))return null;const i=e.system.activities;switch(t==null?void 0:t.toLowerCase()){case d.ATTACK:const l=i.getByType("attack");return(l==null?void 0:l[0])||null;case d.DAMAGE:const n=i.getByType("attack");if((n==null?void 0:n.length)>0)return n[0];const c=i.getByType("damage");if((c==null?void 0:c.length)>0)return c[0];const u=i.getByType("save");return(u==null?void 0:u.length)>0?u[0]:null;case d.ITEM_SAVE:const g=i.getByType("save");return(g==null?void 0:g[0])||null;default:return null}}static getActivitiesByType(e,t){var i;return(i=e==null?void 0:e.system)!=null&&i.activities?e.system.activities.getByType(t):[]}static hasActivityForRoll(e,t){return a.log("hasActivityForRoll",[e,t]),!!this.findActivityForRoll(e,t)}static async executeActivityRoll(e,t,i,o,s){var u,g,f,h,m,b,R;a.log("executeActivityRoll",[e,t,i,o,s]);const l=e.items.get(i);if(!l)throw new Error(`Item ${i} not found on actor ${e.name}`);let n=null;if(o&&(n=(u=l.system.activities)==null?void 0:u.get(o)),n=n||this.findActivityForRoll(l,t),!n)throw new Error(`Activity not found on item ${l.name}`);a.log("executeActivityRoll - activity",[n,t]);const c=t==null?void 0:t.toLowerCase();if(n)switch(c){case d.ATTACK:a.log("executeActivityRoll - is attack activity",[s]);const y={attackMode:s.usage.attackMode,ammunition:s.usage.ammunition,mastery:s.usage.mastery,situational:(h=(f=(g=s.usage.rolls)==null?void 0:g[0])==null?void 0:f.data)==null?void 0:h.situational,advantage:s.usage.advantage,disadvantage:s.usage.disadvantage,rollMode:(m=s.message)==null?void 0:m.rollMode};await n.item.setFlag(A,"tempAttackConfig",y),a.log("executeActivityRoll - stored temp config as flag",[y]);try{await n.use(s.usage,s.dialog,{...s.message,create:!0})}finally{await n.item.unsetFlag(A,"tempAttackConfig")}return;case d.DAMAGE:a.log("executeActivityRoll - damage roll",[n,s]);const C={critical:s.usage.critical||{},situational:s.usage.rolls[0].data.situational||"",rollMode:(b=s.message)==null?void 0:b.rollMode,create:((R=s.message)==null?void 0:R.create)!==!1};await n.item.setFlag(A,"tempDamageConfig",C),a.log("executeActivityRoll - damage config with situational",[C]);try{await n.rollDamage(C,s.dialog,s.message)}finally{await n.item.unsetFlag(A,"tempDamageConfig")}return;case d.ITEM_SAVE:return await l.use({activity:n.id},{skipRollDialog:s.fastForward});default:a.log("executeActivityRoll - unknown roll type",[c]);return}throw new Error(`No suitable method found for ${c} on item ${l.name}`)}static getActivityDisplayInfo(e){return a.log("getActivityDisplayInfo",[e]),e?{name:e.name||e.constructor.metadata.label,type:e.type,icon:e.constructor.metadata.icon,canAttack:e.type==="attack",canDamage:["attack","damage","save"].includes(e.type),canSave:e.type==="save"}:null}static getDamageFormula(e){var i,o;if(a.log("getDamageFormula",[e]),!((o=(i=e==null?void 0:e.damage)==null?void 0:i.parts)!=null&&o.length))return null;const t=e.damage.parts.map(s=>s.formula).filter(s=>s);return t.length>0?t.join(" + "):null}static async syntheticItemRoll(e,t={}){a.log("syntheticItemRoll",[e,t]);const i=xe.getMidiQOL();if(!i){a.warn("MidiQOL is not active");return}let o={consumeUsage:!1,consumeSpellSlot:!1},s={configureDialog:!0,workflowOptions:{autoRollAttack:!1,autoFastAttack:!1,autoRollDamage:"none",autoFastDamage:!1}};return t={...o,...t},await i.completeItemUse(e,t,s)}static async replaceDamage(e,t,{ignoreCrit:i=!1,damageType:o}={}){t=String(t),e.isCritical&&!i&&(t=await rollUtils.getCriticalFormula(t,e.item.getRollData()));let s=await new CONFIG.Dice.DamageRoll(t).evaluate();return await e.setDamageRolls([s]),s}}const{ApplicationV2:ze,HandlebarsApplicationMixin:$e}=foundry.applications.api;class Re extends $e(ze){constructor(e={}){super(e),this.formula=e.formula||"",this.readonly=e.readonly||!1,this.actor=e.actor,this.callback=e.callback,this.diceCounts={}}static get DEFAULT_OPTIONS(){return foundry.utils.mergeObject(super.DEFAULT_OPTIONS,{id:"crlngn-custom-roll-dialog",classes:["flash-rolls-5e-dialog","crlngn-custom-roll-dialog"],tag:"div",window:{title:"CRLNGN_ROLLS.ui.dialogs.customRollTitle",icon:"fas fa-dice-d20",resizable:!1,positioned:!0,frame:!0},position:{width:420,height:"auto"}})}_onClickAction(e,t){switch(t.dataset.action){case"rollDice":return this.rollDice(e,t);case"addDie":return this.addDie(e,t);case"cancel":return this.cancel(e,t)}}async _prepareContext(e={}){return{...await super._prepareContext(e),formula:this.formula,readonly:this.readonly}}_attachPartListeners(e,t,i){super._attachPartListeners(e,t,i);const o=t.querySelector("#custom-roll-formula"),s=t.querySelector("#formula-validation-message");o&&!this.readonly&&(o.addEventListener("input",l=>{this.formula=l.target.value.trim(),this.updateValidationMessage(s)}),this.formula&&this.updateValidationMessage(s))}updateValidationMessage(e){if(!e)return;if(!this.formula){e.textContent="&nbsp;",e.classList.remove("error","success");return}this.validateFormula(this.formula)?(e.textContent=game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.formulaValid"),e.classList.remove("error"),e.classList.add("success")):(e.textContent=game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.formulaInvalid"),e.classList.remove("success"),e.classList.add("error"))}addDie(e,t){const i=t.dataset.die,o=this.element.querySelector("#custom-roll-formula");if(!o)return;const s=o.value.trim();if(s){const l=/(\d*)d(\d+)/g,n=new Map;let c=s,u;for(;(u=l.exec(s))!==null;){const h=parseInt(u[1]||"1"),m=u[2];n.set(m,(n.get(m)||0)+h),c=c.replace(u[0],"").trim()}const g=i.substring(1);n.set(g,(n.get(g)||0)+1);const f=[];for(const[h,m]of n)f.push(`${m}d${h}`);c=c.replace(/^\+\s*|\s*\+\s*$|\s*\+\s*\+/g,"").trim(),c&&c!=="+"?this.formula=`${f.join(" + ")} + ${c}`:this.formula=f.join(" + ")}else this.formula=`1${i}`;o.value=this.formula,o.dispatchEvent(new Event("input"))}validateFormula(e){var t;if(!e||e.trim()==="")return!1;try{return Roll.validate(e)}catch{try{return new Roll(e,((t=this.actor)==null?void 0:t.getRollData())||{}),!0}catch{return!1}}}async rollDice(){if(a.log("rollDice"),!this.validateFormula(this.formula)){ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:this.formula||"empty"}));return}this.callback&&await this.callback(this.formula),this.close()}cancel(){this.close()}static async prompt(e={}){return new Promise(t=>{const i=new this({...e,callback:o=>t(o)});i.addEventListener("close",()=>{i._resolved||t(null)}),i.render(!0)})}async close(e={}){return this._resolved=!0,super.close(e)}}v(Re,"PARTS",{main:{template:`modules/${$.ID}/templates/custom-roll-dialog.hbs`},footer:{template:`modules/${$.ID}/templates/custom-roll-dialog-footer.hbs`}});function je(r,e){var o,s,l,n,c;let t=game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${r}`)||r;const i=r==null?void 0:r.toLowerCase();if(e)switch(i){case d.SKILL:t+=` (${((o=CONFIG.DND5E.skills[e])==null?void 0:o.label)||e})`;break;case d.SAVE:t+=` (${((s=CONFIG.DND5E.abilities[e])==null?void 0:s.label)||e})`;break;case d.ABILITY:t+=` (${((l=CONFIG.DND5E.abilities[e])==null?void 0:l.label)||e})`;break;case d.TOOL:const u=(c=(n=CONFIG.DND5E.enrichmentLookup)==null?void 0:n.tools)==null?void 0:c[e];if(u!=null&&u.id){const g=dnd5e.documents.Trait.getBaseItem(u.id,{indexOnly:!0});t+=` (${(g==null?void 0:g.name)||e})`}else t+=` (${e})`;break;case d.CUSTOM:t=`${t}: ${e}`;break}return t}function Ue(r,e=je){if(r.length===0)return;const t={};for(const o of r){const s=`${o.rollType}_${o.rollKey||""}`;t[s]||(t[s]={rollType:o.rollType,rollKey:o.rollKey,actors:[],gm:o.gm}),t[s].actors.push(o.actor)}const i=Object.values(t);if(i.length===1&&i[0].actors.length===1){const o=i[0];ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestReceived",{gm:o.gm,rollType:e(o.rollType,o.rollKey)}))}else{const o=[];for(const s of i){const l=e(s.rollType,s.rollKey),n=s.actors.join(", ");o.push(`${l} (${n})`)}ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsReceivedMultiple",{gm:i[0].gm,requests:o.join("; ")}))}}function We(r){const e=r.ownership||{};for(const[t,i]of Object.entries(e))if(i>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER){const o=game.users.get(t);if(o&&!o.isGM)return o}return null}function Ke(r,e=game.user){if(!(r!=null&&r.length))return;r.map(i=>canvas.tokens.get(i)).filter(i=>i).forEach(i=>i.setTarget(!0,{user:e}))}function ae(r){return r.type!=="character"&&r.type!=="npc"?!1:Object.entries(r.ownership).some(([e,t])=>{const i=game.users.get(e);return i&&!i.isGM&&t>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})}function _e(r){if(r.type!=="character"&&r.type!=="npc")return!1;const e=game.scenes.active;return e&&e.tokens.some(t=>t.actorId===r.id)}function re(r,e){if(!game.scenes.active)return;const i=canvas.tokens.placeables.filter(o=>{var s;return((s=o.actor)==null?void 0:s.id)===r});for(const o of i)e?o.control({releaseOthers:!1}):o.release()}function Te(r){return new Promise(e=>setTimeout(e,r))}function Le(){var r;return((r=ui==null?void 0:ui.sidebar)==null?void 0:r.expanded)||!1}function Ie(r){const e=document.querySelector("body");r?e.classList.add("crlngn-sidebar-expanded"):e.classList.remove("crlngn-sidebar-expanded"),Ae()}function Ye(r,e){var l;const t=[];if(!r||e.size===0)return t;const i=$.ROLL_REQUEST_OPTIONS[r];if(!i||!i.subList)return t;const o=Array.from(e)[0],s=game.actors.get(o);if(i.subList==="tools"){const n=((l=CONFIG.DND5E.enrichmentLookup)==null?void 0:l.tools)||CONFIG.DND5E.tools||{};for(const[c,u]of Object.entries(n)){let g=c;if(u!=null&&u.id){const f=dnd5e.documents.Trait.getBaseItem(u.id,{indexOnly:!0});g=(f==null?void 0:f.name)||c}else g=c.replace(/([A-Z])/g," $1").replace(/^./,f=>f.toUpperCase()).trim();t.push({id:c,name:g,rollable:!0})}t.sort((c,u)=>c.name.localeCompare(u.name))}else if(s&&i.actorPath){const n=foundry.utils.getProperty(s,i.actorPath)||{},c=CONFIG.DND5E[i.subList];for(const[u,g]of Object.entries(n)){let f="";i.subList==="skills"&&(c!=null&&c[u])||i.subList==="abilities"&&(c!=null&&c[u])?f=c[u].label:f=g.label||game.i18n.localize(g.name||u)||u,t.push({id:u,name:f,rollable:!0})}i.subList==="skills"&&t.sort((u,g)=>u.name.localeCompare(g.name))}return t}const H=class H{static notify(e,t,i={}){if(!i.batch){ui.notifications[e](t);return}i.batchData&&(H.pendingNotifications.push(i.batchData),H.notificationTimer&&clearTimeout(H.notificationTimer),H.notificationTimer=setTimeout(()=>{Ue(H.pendingNotifications),H.pendingNotifications=[],H.notificationTimer=null},H.NOTIFICATION_BATCH_DELAY))}static notifyRollRequestsSent(e,t){const i=Object.entries(e);if(i.length!==0)if(i.length===1){const o=Object.values(e)[0],s=o.actors.map(l=>l.name).join(", ");ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsSentSingle",{rollType:t,actors:s,player:o.player.name}))}else{const o=i.map(([s,l])=>{const n=l.actors.map(c=>c.name).join(", ");return`${l.player.name} (${n})`});ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestsSentMultiple",{rollType:t,count:i.length,players:o.join("; ")}))}}static clearPending(){H.notificationTimer&&(clearTimeout(H.notificationTimer),H.notificationTimer=null),H.pendingNotifications=[]}};v(H,"pendingNotifications",[]),v(H,"notificationTimer",null),v(H,"NOTIFICATION_BATCH_DELAY",500);let q=H;function Qe(r){var i;const e=[],t=[];for(const o of r){const s=((i=o.system.attributes.hp)==null?void 0:i.value)||0,l=o.system.attributes.death||{},n=l.success||0,c=l.failure||0;s<=0&&n<3&&c<3?e.push(o):t.push(o.name)}return t.length>0&&q.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.actorsSkippingDeathSave",{actors:t.join(", ")})),e}function Je(r){const e=[],t=[];for(const i of r){const o=We(i);o?e.push({actor:i,owner:o}):t.push(i)}return{pcActors:e,npcActors:t}}function Ae(r=!0){const e=document.querySelector("#chat-notifications #roll-privacy"),t=e?U.getFullWidth(e):0;U.addCSSVars("--flash-rolls-menu-offset",t+"px")}const x={ability:async(r,e,t,i,o)=>{var l;a.log("RollHandlers.ability #1",[t]);const s=L.buildRollConfig(e,t,{ability:e.rollKey});a.log("RollHandlers.ability #2",[(l=s.rolls)==null?void 0:l[0]]),a.log("RollHandlers.ability - messageConfig",o),await r.rollAbilityCheck(s,i,o)},abilitycheck:async(r,e,t,i,o)=>x.ability(r,e,t,i,o),save:async(r,e,t,i,o)=>{var l;const s=L.buildRollConfig(e,t,{ability:((l=e.config)==null?void 0:l.ability)||e.rollKey});await r.rollSavingThrow(s,i,o)},savingthrow:async(r,e,t,i,o)=>x.save(r,e,t,i,o),skill:async(r,e,t,i,o)=>{var n,c,u,g,f,h;a.log("RollHandlers.skill #1",[e,t,i]);const s=((c=(n=r.system.skills)==null?void 0:n[e.rollKey])==null?void 0:c.ability)||((g=(u=CONFIG.DND5E.skills)==null?void 0:u[e.rollKey])==null?void 0:g.ability)||void 0,l=L.buildRollConfig(e,t,{skill:e.rollKey,chooseAbility:i.configure!==!1,ability:e.config.ability||s});if(e.config.ability&&i.configure===!1){const m=((f=CONFIG.DND5E.skills[e.rollKey])==null?void 0:f.label)||e.rollKey,b=((h=CONFIG.DND5E.abilities[e.config.ability])==null?void 0:h.label)||e.config.ability,R=game.i18n.format("DND5E.SkillPromptTitle",{skill:m,ability:b});o.data=o.data||{},o.data.flavor=R}a.log("RollHandlers.skill #2",[l,i,o]),await r.rollSkill(l,i,o)},tool:async(r,e,t,i,o)=>{var c,u,g,f,h,m,b;a.log("RollHandlers.tool #1",[e,t]);const s=(c=r.system.tools)==null?void 0:c[e.rollKey],l=(s==null?void 0:s.ability)||((f=(g=(u=CONFIG.DND5E.enrichmentLookup)==null?void 0:u.tools)==null?void 0:g[e.rollKey])==null?void 0:f.ability)||"int",n=L.buildRollConfig(e,t,{tool:e.rollKey,chooseAbility:i.configure!==!1,ability:e.config.ability||l});if(e.config.ability&&i.configure===!1){const R=(m=(h=CONFIG.DND5E.enrichmentLookup)==null?void 0:h.tools)==null?void 0:m[e.rollKey];let y=e.rollKey;if(R!=null&&R.id){const _=dnd5e.documents.Trait.getBaseItem(R.id,{indexOnly:!0});y=(_==null?void 0:_.name)||e.rollKey}const C=((b=CONFIG.DND5E.abilities[e.config.ability])==null?void 0:b.label)||e.config.ability,p=game.i18n.format("DND5E.ToolPromptTitle",{tool:y,ability:C});o.data=o.data||{},o.data.flavor=p}a.log("RollHandlers.tool #2",[n,i,o]),await r.rollToolCheck(n,i,o)},concentration:async(r,e,t,i,o)=>{const s=L.buildRollConfig(e,t);await r.rollConcentration(s,i,o)},attack:async(r,e,t,i,o)=>{await x.handleActivityRoll(r,d.ATTACK,e,t,i,o)},damage:async(r,e,t,i,o)=>{await x.handleActivityRoll(r,d.DAMAGE,e,t,i,o)},itemsave:async(r,e,t,i,o)=>{await x.handleActivityRoll(r,d.ITEM_SAVE,e,t,i,o)},initiative:async(r,e,t,i,o)=>{var l,n,c;if(!game.combat){ui.notifications.warn(game.i18n.localize("COMBAT.NoneActive"));return}e.config.situational||(l=t.data)!=null&&l.situational;let s=r;if(!r.isToken){const u=canvas.tokens.placeables.find(g=>{var f;return((f=g.actor)==null?void 0:f.id)===r.id});if(u)s=u.actor;else{ui.notifications.error(game.i18n.format("COMBAT.NoneActive"));return}}try{if(i.configure){if(e.config){a.log("RollHandlers.initiative - Building roll config for flag storage",[{actorId:r.id,requestData:e,rollConfig:t}]);const u=L.buildRollConfig(e,t,{ability:((c=(n=r.system.attributes)==null?void 0:n.init)==null?void 0:c.ability)||"dex"}),g={advantage:e.config.advantage||!1,disadvantage:e.config.disadvantage||!1,rollMode:e.config.rollMode||game.settings.get("core","rollMode"),rolls:u.rolls};a.log("RollHandlers.initiative - Storing built config as actor flag",[{tempConfig:g}]),await r.setFlag(A,"tempInitiativeConfig",g)}await s.rollInitiativeDialog(),await r.unsetFlag(A,"tempInitiativeConfig")}else{const u={createCombatants:!0,rerollInitiative:!0};await s.rollInitiative(u)}a.log("RollHandlers.initiative - COMPLETE")}catch(u){a.error("RollHandlers.initiative - Error",[u]),q.notify("error",`Initiative roll failed: ${u.message}`)}},initiativedialog:async(r,e,t,i,o)=>x.initiative(r,e,t,i,o),deathsave:async(r,e,t,i,o)=>{const s=L.buildRollConfig(e,t);await r.rollDeathSave(s,i,o)},hitdie:async(r,e,t,i,o)=>{i.configure=game.user.isGM?i.configure:!0;const s=L.buildRollConfig(e,t,{denomination:e.rollKey});a.log("RollHandlers.hitdie",[s,i,o]),await r.rollHitDie(s,i,o)},custom:async(r,e,t,i,o)=>{await x.handleCustomRoll(r,e,i,o)},async handleActivityRoll(r,e,t,i,o,s){var l,n;if(a.log("RollHandlers.handleActivityRoll",[e,t,i]),t.rollKey){const c=L.buildRollConfig(t,i),u=((n=(l=c.rolls)==null?void 0:l[0])==null?void 0:n.options)||{},g={usage:{...t.config,rolls:c.rolls,...u.attackMode&&{attackMode:u.attackMode},...u.ammunition&&{ammunition:u.ammunition},...u.mastery!==void 0&&{mastery:u.mastery}},dialog:o,message:s};a.log("handleActivityRoll - final activity config",[g]),await Be.executeActivityRoll(r,e,t.rollKey,t.activityId,g)}},async handleCustomRoll(r,e,t,i){var l,n,c;const o=e.rollKey;if((t==null?void 0:t.configure)===!1){try{const u=new Roll(o,r.getRollData());u.options=u.options||{},u.options.isRollRequest=((l=e.config)==null?void 0:l.isRollRequest)!==!1,await u.evaluate({async:!0}),await u.toMessage({speaker:ChatMessage.getSpeaker({actor:r}),flavor:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${d.CUSTOM}`),rollMode:(i==null?void 0:i.rollMode)||((n=e.config)==null?void 0:n.rollMode)||game.settings.get("core","rollMode"),isRollRequest:((c=e.config)==null?void 0:c.isRollRequest)!==!1,create:(i==null?void 0:i.create)!==!1})}catch{ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:o}))}return}new Re({formula:o,readonly:!0,actor:r,callback:async u=>{try{const g=new Roll(u,r.getRollData());g.options=g.options||{},g.options.isRollRequest=!0,await g.evaluate({async:!0}),await g.toMessage({speaker:ChatMessage.getSpeaker({actor:r}),flavor:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${d.CUSTOM}`),rollMode:e.config.rollMode,isRollRequest:!0,_showRequestedBy:!0,_requestedBy:e.config.requestedBy||"GM"})}catch{ui.notifications.error(game.i18n.format("CRLNGN_ROLLS.ui.notifications.invalidFormula",{formula:u}))}}}).render(!0)},async handleHitDieRecovery(r){const e=foundry.utils.mergeObject({type:"long",deltas:{hitDice:0},newDay:!1,rolls:[],updateData:{},updateItems:[]},{});"dhd"in e&&(e.deltas.hitDice=e.dhd),r._getRestHitDiceRecovery({maxHitDice:r.system.attributes.hd.max,type:"long"},e),e.dhd=e.deltas.hitDice,e.longRest=!0;try{if(e.updateData&&Object.keys(e.updateData).length>0){const t=await r.update(e.updateData,{isRest:!1})}else a.log("No actor updates to perform",[]);if(e.updateItems&&e.updateItems.length>0){const t=await r.updateEmbeddedDocuments("Item",e.updateItems,{isRest:!1})}else a.log("No item updates to perform",[])}catch(t){throw a.error("Error during updates in handleHitDieRecovery:",[t]),t}return a.log("handleHitDieRecovery #3",[e]),e}};async function Oe(){return game.combat||(await(await Combat.create({scene:game.scenes.active.id})).activate(),q.notify("info",game.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.combatCreated"))),game.combat}async function ke(r,e){if(!e.combat)return r;const t=r.map(s=>e.actors.get(s)).filter(s=>s),i=[],o=new Set;for(const s of t)e.combat.getCombatantsByActor(s.id).some(c=>c.initiative!==null)&&(i.push(s.name),o.add(s.id));if(a.log("filterActorsForInitiative",[i]),i.length>0)if(await foundry.applications.api.DialogV2.confirm({window:{title:e.i18n.localize("CRLNGN_ROLLS.ui.dialogs.rerollInitiativeTitle"),classes:["flash-rolls-5e-dialog"]},content:"<p>"+e.i18n.format("CRLNGN_ROLLS.ui.dialogs.rerollInitiative",{actors:i.join(", ")})+"</p>",rejectClose:!1,modal:!0})){if(e.user.isGM)for(const l of o){const n=e.combat.getCombatantsByActor(l);a.log("filterActorsForInitiative - resetting initiative for combatants",[n]);for(const c of n)await c.update({initiative:null})}else a.log("filterActorsForInitiative - Player cannot reset initiative, will let system handle re-roll");return r}else{const l=r.filter(n=>!o.has(n));return l.length===0&&q.notify("info",e.i18n.localize("CRLNGN_ROLL_REQUESTS.notifications.allActorsHaveInitiative")),l}return r}class Ne{static initialize(){a.log("RollInterceptor.initialize"),game.user.isGM&&this.registerHooks()}static registerHooks(){a.log("RollInterceptor.registerHooks"),this._registerHook(P.PRE_ROLL_ABILITY_CHECK,this._handlePreRoll.bind(this,d.ABILITY)),this._registerHook(P.PRE_ROLL_SAVING_THROW,this._handlePreRoll.bind(this,d.SAVE)),this._registerHook(P.PRE_ROLL_SKILL_V2,this._handlePreRoll.bind(this,d.SKILL)),this._registerHook(P.PRE_ROLL_TOOL_V2,this._handlePreRoll.bind(this,d.TOOL)),this._registerHook(P.PRE_ROLL_ATTACK_V2,this._handlePreRoll.bind(this,d.ATTACK)),this._registerHook(P.PRE_ROLL_DAMAGE_V2,this._handlePreRoll.bind(this,d.DAMAGE)),this._registerHook(P.PRE_ROLL_DEATH_SAVE_V2,this._handlePreRoll.bind(this,d.DEATH_SAVE)),this._registerHook(P.PRE_ROLL_HIT_DIE_V2,this._handlePreRoll.bind(this,d.HIT_DIE)),this._registerHook(P.PRE_ROLL_INITIATIVE,this._handlePreRollInitiative.bind(this,d.INITIATIVE)),this._registerHook(P.PRE_ROLL_INITIATIVE_DIALOG,this._handlePreRollInitiative.bind(this,d.INITIATIVE)),this._registerHook(P.ROLL_INITIATIVE,this._handleRollInitiative.bind(this,d.INITIATIVE))}static _registerHook(e,t){a.log("RollInterceptor._registerHook");const i=Hooks.on(e,t);this.registeredHooks.add({hookName:e,hookId:i})}static unregisterHooks(){a.log("RollInterceptor.unregisterHooks");for(const{hookName:e,hookId:t}of this.registeredHooks)Hooks.off(e,t);this.registeredHooks.clear()}static _handlePreRollInitiative(e,t,i){a.log("_handlePreRollInitiative",[e,t,i])}static _handlePreRoll(e,t,i,o){var f,h,m,b,R,y,C,p;if(a.log("_handlePreRoll #0",[e,t,i,o]),!game.user.isGM||t.isRollRequest===!1)return;const s=(t==null?void 0:t.hookNames)||(i==null?void 0:i.hookNames)||(o==null?void 0:o.hookNames)||[],l=s.includes("initiativeDialog")||s.includes("initiative");if(e===d.ATTACK){a.log("_handlePreRoll - is Attack roll",[(f=t.subject)==null?void 0:f.item]);const _=(m=(h=t.subject)==null?void 0:h.item)==null?void 0:m.getFlag(A,"tempAttackConfig");if(_){a.log("_handlePreRoll - found module flags, skipping interception",[_]);return}}if(e===d.DAMAGE){a.log("RollInterceptor._handlePreRoll - is Damage roll",[t]);const _=(R=(b=t.subject)==null?void 0:b.item)==null?void 0:R.getFlag(A,"tempDamageConfig");if(_){a.log("RollInterceptor._handlePreRoll - found module flags, skipping interception",[_]);return}}if(l&&e===d.ABILITY&&(a.log("RollInterceptor._handlePreRoll - Overriding ability to initiative",[s]),e=d.INITIATIVE),t!=null&&t.isRollRequest||t.sendRequest===!1||i!=null&&i.isRollRequest||o!=null&&o.isRollRequest)return;let n;if(e===d.INITIATIVE&&t instanceof Actor){if(n=t,a.log("_handlePreRoll - Initiative",[t,i,o]),(i==null?void 0:i.isRollRequest)===!1||(o==null?void 0:o.isRollRequest)===!1)return}else e===d.HIT_DIE?n=((y=i==null?void 0:i.subject)==null?void 0:y.actor)||(i==null?void 0:i.subject)||(i==null?void 0:i.actor):e===d.ATTACK||e===d.DAMAGE?n=(C=t.subject)==null?void 0:C.actor:n=((p=t.subject)==null?void 0:p.actor)||t.subject||t.actor;const c=k();if(!D.get(c.rollInterceptionEnabled.tag)||!n||n.documentName!=="Actor")return;a.log("_handlePreRoll",[t,o]);const g=U.getActorOwner(n);if(!(!g||!g.active||g.id===game.user.id||i.configure===!1||t.isRollRequest===!1||t.skipRollDialog===!0||t.fastForward===!0))return a.log("_handlePreRoll - intercepting roll #1",[t,o]),e===d.ATTACK&&(o={...o,rollMode:CONST.DICE_ROLL_MODES.PUBLIC}),a.log("_handlePreRoll - intercepting roll #2",[t,o]),this._showGMConfigDialog(n,g,e,t,i,o),!1}static _handleRollInitiative(e,t,i,o,s){a.log("_handleRollInitiative",[e,t,i,o,s])}static async _showGMConfigDialog(e,t,i,o,s,l){var u,g,f,h,m,b,R,y,C,p,_;a.log("_showGMConfigDialog - config",[i,o]);const n=k();D.get(n.rollInterceptionEnabled.tag);const c=D.get(n.rollRequestsEnabled.tag);try{const T=i==null?void 0:i.toLowerCase();if(T===d.INITIATIVE&&(!game.combat&&!await Oe()||(await ke([e.id],game)).length===0))return;let I;[d.SKILL,d.TOOL].includes(T)?I=Ee:T===d.HIT_DIE?I=De:T===d.ATTACK?I=Ve:T===d.DAMAGE?I=He:I=W;let S={rolls:[{parts:[],data:{},options:{}}]};const N=k(),O=D.get(N.skipRollDialog.tag),F={actors:[e],rollType:T,showDC:!0,sendRequest:!0,skipRollDialog:O};a.log("_showGMConfigDialog #3",[S,F]);let E;if(O)E={sendRequest:!0,advantage:!1,disadvantage:!1,situational:"",rollMode:game.settings.get("core","rollMode")};else{let w=null;switch(T){case d.SKILL:S.skill=o.skill,S.ability=o.ability||((u=o.subject)==null?void 0:u.ability),w=S.skill;break;case d.TOOL:S.tool=o.tool,S.ability=o.ability||((g=o.subject)==null?void 0:g.ability),w=S.tool;break;case d.ABILITY:case d.SAVE:S.ability=o.ability||((f=o.subject)==null?void 0:f.ability),w=S.ability,S.ability==="con"&&o.targetValue!==void 0&&(i=d.CONCENTRATION);break;case d.CONCENTRATION:S.ability="con",w="con";break;case d.INITIATIVE:case d.INITIATIVE_DIALOG:w=((m=(h=e.system.attributes)==null?void 0:h.init)==null?void 0:m.ability)||"dex";break;case d.HIT_DIE:S.denomination=typeof o=="string"?o:o.denomination||((b=o.subject)==null?void 0:b.denomination),w=S.denomination;break;case d.ATTACK:s!=null&&s.options&&(S.ammunition=s.options.ammunition,S.attackMode=s.options.attackMode,S.mastery=s.options.mastery),w=(y=(R=o.subject)==null?void 0:R.item)==null?void 0:y.id;break;case d.DAMAGE:S.item=(C=o.subject)==null?void 0:C.item,S.subject=o.subject,S.critical=o.critical||{},w=(_=(p=o.subject)==null?void 0:p.item)==null?void 0:_.id;break;default:break}if(a.log("_showGMConfigDialog #4",[S,c]),!I.initConfiguration)throw a.error("DialogClass.initConfiguration not found",[I,I.name]),new Error(`DialogClass ${I.name} does not have initConfiguration method`);T===d.ATTACK||T===d.DAMAGE?E=await I.initConfiguration([e],T,w,{skipRollDialog:!1,sendRequest:c},o,s):E=await I.initConfiguration([e],T,w,{skipRollDialog:!1,sendRequest:c}),a.log("_showGMConfigDialog #4",[S])}if(!E){a.log("_showGMConfigDialog - Dialog cancelled");return}if(a.log("_showGMConfigDialog - sending _executeInterceptedRoll",[i,o,E]),!E.sendRequest||!c){await this._executeInterceptedRoll(e,i,o,E);return}const{event:G,...V}=o,z={...V,...E,rolls:E.rolls,requestedBy:game.user.name,...i===d.ATTACK&&{chatMessage:!1}};a.log("_showGMConfigDialog - finalConfig for damage roll",["rollType:",i,"result:",E,"result.rolls:",E.rolls,"finalConfig:",z,"finalConfig.rolls:",z.rolls]),this._sendRollRequest(e,t,i,z)}catch(T){a.error("RollInterceptor._showGMConfigDialog - Error",[T]),this._sendRollRequest(e,t,i,o)}}static async _executeInterceptedRoll(e,t,i,o){var h,m,b,R,y,C,p,_,T,I,S,N,O,F;a.log("RollInterceptor._executeInterceptedRoll",[e,t,i,o]);const s=t==null?void 0:t.toLowerCase(),l=((h=o.rolls)==null?void 0:h[0])||{parts:[],data:{},options:{}},n=((m=l.data)==null?void 0:m.situational)||o.situational||"";let c;switch(s){case d.SKILL:c=i.skill;break;case d.TOOL:c=i.tool;break;case d.ABILITY:case d.SAVE:c=i.ability||((b=i.subject)==null?void 0:b.ability);break;case d.HIT_DIE:c=i.denomination;break;default:c=i.ability||i.skill||i.tool||i.denomination}const u={rollKey:c,config:{advantage:o.advantage||i.advantage,disadvantage:o.disadvantage||i.disadvantage,target:o.target||o.dc||i.target,rollMode:o.rollMode||i.rollMode,situational:n,isRollRequest:!1,ability:i.ability}};if(s===d.SKILL&&!u.config.ability)u.config.ability=((y=(R=e.system.skills)==null?void 0:R[u.rollKey])==null?void 0:y.ability)||((p=(C=CONFIG.DND5E.skills)==null?void 0:C[u.rollKey])==null?void 0:p.ability);else if(s===d.TOOL&&!u.config.ability){const E=(_=e.system.tools)==null?void 0:_[u.rollKey];u.config.ability=(E==null?void 0:E.ability)||((S=(I=(T=CONFIG.DND5E.enrichmentLookup)==null?void 0:T.tools)==null?void 0:I[u.rollKey])==null?void 0:S.ability)||"int"}else(s===d.ABILITY||s===d.SAVE)&&!u.config.ability&&(u.config.ability=u.rollKey);a.log("RollInterceptor._executeInterceptedRoll - requestData",[u,i,o]);const g={configure:!1,isRollRequest:!1},f={rollMode:u.config.rollMode,create:!0,isRollRequest:!1};try{const E=d,G=x[s];a.log("RollInterceptor._executeInterceptedRoll - handler 1",[G,s,x[s]]),G?((s===d.ATTACK||s===d.DAMAGE||s===d.SAVE)&&(u.rollKey=(O=(N=i.subject)==null?void 0:N.item)==null?void 0:O.id,u.activityId=(F=i.subject)==null?void 0:F.id),a.log("RollInterceptor._executeInterceptedRoll - handler 2",[u,l,g,f]),await G(e,u,l,g,f)):a.warn(`No handler found for roll type: ${s}`)}catch(E){a.error("RollInterceptor._executeInterceptedRoll",[E])}}static async _showConfigurationDialog(e,t,i,o,s,l){a.log("RollInterceptor._showConfigurationDialog",[e,t,i,o,s,l]);try{const c={...o,_rollMethod:async h=>(this._sendRollRequest(e,t,i,h),new Roll("1d20").evaluate({async:!1})),configured:!1},u=s.cls,f=await new u(c,s.options).render(!0)}catch(n){a.error("RollInterceptor._showConfigurationDialog - error",[n]),this._sendRollRequest(e,t,i,o)}}static _sendRollRequest(e,t,i,o){var f,h,m,b,R,y,C;console.trace("_sendRollRequest",[e,t,i,o]),a.log("_sendRollRequest",[e,t,i,o]),a.log("_sendRollRequest - config.rolls check",["config.rolls:",o.rolls,"config.rolls[0]:",(f=o.rolls)==null?void 0:f[0],"config.rolls[0].data:",(m=(h=o.rolls)==null?void 0:h[0])==null?void 0:m.data,"config.rolls[0].data.situational:",(y=(R=(b=o.rolls)==null?void 0:b[0])==null?void 0:R.data)==null?void 0:y.situational]);const s=k(),l=D.get(s.skipRollDialog.tag);let n=i==null?void 0:i.toLowerCase();n===d.INITIATIVE&&(n=d.INITIATIVE_DIALOG);let c=null,u=null;switch(n){case d.ABILITY:case d.SAVE:c=o.ability;break;case d.SKILL:c=o.skill;break;case d.TOOL:c=o.tool;break;case d.ATTACK:case d.DAMAGE:a.log("_sendRollRequest - Attack/Damage roll config",[i,o]),c=(C=o.subject.item)==null?void 0:C.id,u=o.subject.id;break;case d.HIT_DIE:c=typeof o=="string"?o:o.denomination;break;case d.INITIATIVE_DIALOG:case d.INITIATIVE:c=null;break;case d.DEATH_SAVE:c=null;break;default:a.warn(`Unknown roll type: ${i}`);return}const g={type:"rollRequest",requestId:foundry.utils.randomID(),actorId:e.id,rollType:n,rollKey:c,activityId:u,rollProcessConfig:{...o,_requestedBy:game.user.name},skipRollDialog:l,targetTokenIds:Array.from(game.user.targets).map(p=>p.id),preserveTargets:D.get(s.useGMTargetTokens.tag)};j.execForUser("handleRollRequest",t.id,g),ui.notifications.info(game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestSent",{player:t.name,actor:e.name}))}}v(Ne,"registeredHooks",new Set);const{ApplicationV2:Ze,HandlebarsApplicationMixin:Xe}=foundry.applications.api;var B;const Z=class Z extends Xe(Ze){constructor(t={}){a.log("RollRequestsMenu.constructor",[t]);super(t);v(this,"_onClickOutside",t=>{if(a.log("_onClickOutside"),this.isLocked)return;const i=this.element;i&&(t.target.closest(".flash-rolls-menu")||i.contains(t.target)||t.target.closest("#flash-rolls-icon")||t.target.closest(".dialog, .app, .notification, .application")||this.close())});this.selectedActors=new Set,this.currentTab="pc",this.selectedRequestType=null,this.isLocked=!1,this.optionsExpanded=game.user.getFlag($.ID,"menuOptionsExpanded")??!1,this._initializeFromSelectedTokens()}async _prepareContext(t){a.log("_prepareContext");const i=await super._prepareContext(t),o=game.actors.contents,s=[],l=[],n=game.scenes.active;for(const R of o){if(R.type!=="character"&&R.type!=="npc")continue;const y={id:R.id,uuid:R.uuid,name:R.name,img:R.img,selected:this.selectedActors.has(R.id),crlngnStats:this._getActorStats(R)};Object.entries(R.ownership).some(([p,_])=>{const T=game.users.get(p);return T&&!T.isGM&&_>=CONST.DOCUMENT_OWNERSHIP_LEVELS.OWNER})?s.push(y):n!=null&&n.tokens.some(_=>_.actorId===R.id)&&l.push(y)}const c=k(),u=D.get(c.rollRequestsEnabled.tag),g=D.get(c.skipRollDialog.tag),f=this.currentTab==="pc"?s:l,h=f.length>0&&f.every(R=>this.selectedActors.has(R.id)),m=[];if(this.selectedActors.size>0)for(const[R,y]of Object.entries($.ROLL_REQUEST_OPTIONS))m.push({id:R,name:game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${y.name}`)||y.label,rollable:y.subList==null,hasSubList:!!y.subList,selected:this.selectedRequestType===R});const b=Ye(this.selectedRequestType,this.selectedActors);return{...i,actors:f,currentTab:this.currentTab,isPCTab:this.currentTab==="pc",isNPCTab:this.currentTab==="npc",selectedTab:this.currentTab,rollRequestsEnabled:u,skipRollDialog:g,selectAllOn:h,hasSelectedActors:this.selectedActors.size>0,requestTypes:m,rollTypes:b,showNames:!0,actorsLocked:this.isLocked,optionsExpanded:this.optionsExpanded}}_getActorStats(t){var l,n,c,u,g,f;a.log("_getActorStats");const i=t.system,o=[];(l=i.attributes)!=null&&l.hp&&o.push({abbrev:"HP",value:i.attributes.hp.value}),(n=i.attributes)!=null&&n.ac&&o.push({abbrev:"AC",value:i.attributes.ac.value});const s=(u=(c=i.attributes)==null?void 0:c.spell)==null?void 0:u.dc;return s&&o.push({abbrev:"DC",value:s}),(f=(g=i.skills)==null?void 0:g.prc)!=null&&f.passive&&o.push({abbrev:"PRC",value:i.skills.prc.passive}),o}async _renderFrame(t){const i=await super._renderFrame(t),o=document.querySelector("#chat-notifications");return o&&i&&o.insertBefore(i,o.firstChild),i}_onRender(t,i){if(a.log("_onRender"),super._onRender(t,i),this._attachListeners(),Ae(),this.optionsExpanded){const o=this.element.querySelector(".options-toggle"),s=this.element.querySelector("li.options");o==null||o.classList.add("expanded"),s==null||s.classList.add("expanded")}setTimeout(()=>{document.addEventListener("click",this._onClickOutside,!0)},100),this._tokenControlHook=Hooks.on("controlToken",this._onTokenControlChange.bind(this))}_onTokenControlChange(t,i){a.log("_onTokenControlChange"),this.rendered&&(this._ignoreTokenControl||(this._tokenUpdateTimeout&&clearTimeout(this._tokenUpdateTimeout),this._tokenUpdateTimeout=setTimeout(()=>{this._initializeFromSelectedTokens(),this.render(),this._tokenUpdateTimeout=null},100)))}_attachListeners(){var l,n,c,u,g;a.log("_attachListeners");const t=this.element;(l=t.querySelector("#flash-rolls-toggle"))==null||l.addEventListener("change",this._onToggleRollRequests.bind(this)),(n=t.querySelector("#crlngn-skip-dialogs"))==null||n.addEventListener("change",this._onToggleSkipDialogs.bind(this)),(c=t.querySelector("#crlngn-actors-all"))==null||c.addEventListener("change",this._onToggleSelectAll.bind(this)),(u=t.querySelector("#crlngn-actors-lock"))==null||u.addEventListener("click",this._onToggleLock.bind(this)),(g=t.querySelector(".options-toggle"))==null||g.addEventListener("click",this._onToggleOptions.bind(this)),t.querySelectorAll(".actor-tab").forEach(f=>{f.addEventListener("click",this._onTabClick.bind(this))}),t.querySelectorAll(".actor").forEach(f=>{f.addEventListener("click",this._onActorClick.bind(this))}),t.querySelectorAll(".actor-select").forEach(f=>{f.addEventListener("click",this._onActorSelectClick.bind(this))});const o=t.querySelector(".request-types");o&&o.addEventListener("click",f=>{const h=f.target.closest("li");if(h&&h.dataset.id){const m={...f,currentTarget:h};this._onRequestTypeClick(m)}});const s=t.querySelector(".roll-types");s&&s.addEventListener("click",f=>{const h=f.target.closest("li");if(h&&h.dataset.id){const m={...f,currentTarget:h};this._onRollTypeClick(m)}})}async _onToggleRollRequests(t){a.log("_onToggleRollRequests");const i=k(),o=t.target.checked;await D.set(i.rollRequestsEnabled.tag,o),we.updateRollRequestsIcon(o)}async _onToggleSkipDialogs(t){a.log("_onToggleSkipDialogs");const i=k(),o=t.target.checked;await D.set(i.skipRollDialog.tag,o)}_onToggleSelectAll(t){a.log("_onToggleSelectAll");const i=t.target.checked;this._ignoreTokenControl=!0,(this.currentTab==="pc"?game.actors.contents.filter(s=>ae(s)):game.actors.contents.filter(s=>!ae(s)&&_e(s))).forEach(s=>{i?(this.selectedActors.add(s.id),re(s.id,!0)):(this.selectedActors.delete(s.id),re(s.id,!1))}),setTimeout(()=>{this._ignoreTokenControl=!1},200),this.render(),this._updateRequestTypesVisibility()}_onToggleLock(t){a.log("_onToggleLock"),t.preventDefault(),this.isLocked=!this.isLocked;const i=t.currentTarget;i.classList.remove("fa-lock-keyhole","fa-lock-keyhole-open"),i.classList.add(this.isLocked?"fa-lock-keyhole":"fa-lock-keyhole-open")}async _onToggleOptions(t){a.log("_onToggleOptions"),t.preventDefault(),this.optionsExpanded=!this.optionsExpanded,await game.user.setFlag($.ID,"menuOptionsExpanded",this.optionsExpanded);const i=t.currentTarget||t.target.closest(".options-toggle");i&&i.classList.toggle("expanded",this.optionsExpanded);const o=this.element.querySelector("li.options");o&&o.classList.toggle("expanded",this.optionsExpanded)}_initializeFromSelectedTokens(){var i;a.log("_initializeFromSelectedTokens");const t=((i=canvas.tokens)==null?void 0:i.controlled)||[];this.selectedActors.clear();for(const o of t)if(o.actor&&(this.selectedActors.add(o.actor.id),this.selectedActors.size===1)){const s=ae(o.actor);this.currentTab=s?"pc":"npc"}}async _onTabClick(t){var o;a.log("_onTabClick");const i=t.currentTarget.dataset.tab;i!==this.currentTab&&(this.selectedActors.clear(),(o=canvas.tokens)==null||o.releaseAll(),this.selectedRequestType=null,this.currentTab=i,await this.render())}_onActorClick(t){if(a.log("_onActorClick"),t.target.closest(".actor-select"))return;const o=t.currentTarget.dataset.id;this._toggleActorSelection(o)}_onActorSelectClick(t){a.log("_onActorSelectClick"),t.stopPropagation();const i=t.currentTarget.dataset.id;this._toggleActorSelection(i)}_toggleActorSelection(t){a.log("_toggleActorSelection"),this._ignoreTokenControl=!0,this.selectedActors.has(t)?(this.selectedActors.delete(t),re(t,!1)):(this.selectedActors.add(t),re(t,!0)),setTimeout(()=>{this._ignoreTokenControl=!1},100),this.render(),this._updateRequestTypesVisibility(),this._updateSelectAllState()}_updateRequestTypesVisibility(){a.log("_updateRequestTypesVisibility"),this.render()}_updateSelectAllState(){a.log("_updateSelectAllState");const t=this.element.querySelector("#crlngn-actors-all"),i=this.currentTab==="pc"?"pc":"npc",o=this.element.querySelectorAll(`.${i}-actors .actor-item input[type="checkbox"]`),s=Array.from(o).filter(l=>l.checked).length;t.checked=s>0&&s===o.length,t.indeterminate=s>0&&s<o.length}async _onRequestTypeClick(t){const i=t.currentTarget,o=i.dataset.id,s=$.ROLL_REQUEST_OPTIONS[o];if(a.log("_onRequestTypeClick",[o,i.dataset,s]),!s){a.error("Unknown request type:",[o]);return}this.selectedRequestType===o?this.selectedRequestType=null:this.selectedRequestType=o,s.subList?await this.render():this.selectedRequestType&&this._triggerRoll(o,null)}_onRollTypeClick(t){a.log("_onRollTypeClick");const i=t.currentTarget.dataset.id;this._triggerRoll(this.selectedRequestType,i)}_getValidActorIds(t){return t.filter(i=>{const o=game.actors.get(i);if(!o)return!1;const s=ae(o),l=!s&&_e(o);return this.currentTab==="pc"&&s||this.currentTab==="npc"&&l})}async _handleCustomRoll(){return await this._showCustomRollDialog()}async _getRollConfiguration(t,i,o,s,l){const n=k(),c=D.get(n.rollRequestsEnabled.tag);if(!s&&i!==d.CUSTOM){let u;[d.SKILL,d.TOOL].includes(i)?u=Ee:i===d.HIT_DIE?u=De:u=W;const g=await u.initConfiguration(t,i,o,{skipRollDialog:s,sendRequest:c||!1});return a.log("_getRollConfiguration",[g]),g}else{const u={rolls:[{parts:[],data:{},options:{}}],advantage:!1,disadvantage:!1,rollMode:game.settings.get("core","rollMode"),chatMessage:!0,isRollRequest:!1,skipRollDialog:!0,sendRequest:c&&l.length>0};return i===d.DEATH_SAVE&&(u.target=10),u}}async _orchestrateRollsForActors(t,i,o,s,l){const n=k(),c=[],u=[],g=[];if(a.log("_orchestrateRollsForActors",[t,i,o]),t.sendRequest)for(const{actor:h,owner:m}of i)m.active?g.push({actor:h,owner:m}):(D.get(n.showOfflineNotifications.tag)&&q.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.playerOffline",{player:m.name})),u.push(h));else o.push(...i.map(({actor:h})=>h));for(const{actor:h,owner:m}of g)await this._sendRollRequestToPlayer(h,m,s,l,t,!0),c.push({actor:h,owner:m}),await Te(100);c.length>0&&this._showConsolidatedNotification(c,s,l);const f=[...u,...o];f.length>0&&(t.skipRollDialog=!0,await this._handleGMRolls(f,s,l,t))}async _triggerRoll(t,i){var b,R,y;a.log("_triggerRoll",[t,i]);const o=k(),s=Array.from(this.selectedActors),l=D.get(o.skipRollDialog.tag),n=this._getValidActorIds(s);let c=n.map(C=>game.actors.get(C));const u=$.ROLL_REQUEST_OPTIONS[t],g=(b=(u==null?void 0:u.name)||t)==null?void 0:b.toLowerCase();switch(g){case d.CUSTOM:if(i=await this._handleCustomRoll(),!i)return;break;case d.INITIATIVE:case d.INITIATIVE_DIALOG:if(await Oe()){a.log("_triggerRoll - initiative",[n]);for(const _ of n){const T=game.actors.get(_);if(T){const I=game.combat.getCombatantsByActor(_);(!I||I.length===0)&&(a.log("_triggerRoll - adding actor to combat",T.name),await game.combat.createEmbeddedDocuments("Combatant",[{actorId:_,tokenId:(y=(R=T.getActiveTokens())==null?void 0:R[0])==null?void 0:y.id}]))}}const p=await ke(n,game);if(a.log("_triggerRoll filteredActorIds",[p,!p.length]),!p.length)return;c=p.map(_=>game.actors.get(_))}break;case d.DEATH_SAVE:c=await Qe(c);break}if(!c.length){q.notify("warn","No valid actors selected");return}const{pcActors:f,npcActors:h}=Je(c),m=await this._getRollConfiguration(c,g,i,l,f);a.log("_triggerRoll config",[m]),m&&(await this._orchestrateRollsForActors(m,f,h,g,i),setTimeout(()=>this.close(),500))}async _sendRollRequestToPlayer(t,i,o,s,l,n=!1){a.log("_sendRollRequestToPlayer #A",[o,s]);const c=k();let u=o==null?void 0:o.toLowerCase();if(u===d.ABILITY_CHECK?u=d.ABILITY:u===d.SAVING_THROW?u=d.SAVE:u===d.INITIATIVE_DIALOG&&(u=d.INITIATIVE),u===d.HIT_DIE){const f=t.system.attributes.hd;if(f.value>0)s=f.largestAvailable;else if(await foundry.applications.api.DialogV2.confirm({window:{title:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.hitDie.refillTitle")||"No Hit Dice Available",classes:["crlngn-hit-die-dialog"]},position:{width:420},content:`<p>${game.i18n.format("CRLNGN_ROLLS.ui.dialogs.hitDie.refillMessage",{actors:t.name})||""}</p>`,modal:!0,rejectClose:!1,yes:{label:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.hitDie.refillAndSend")||"Refill & Send",icon:""},no:{label:game.i18n.localize("Cancel")||"Cancel",icon:""}})){try{a.log("About to call handleHitDieRecovery for",[t.name]);const m=await x.handleHitDieRecovery(t);a.log("handleHitDieRecovery completed",[m])}catch(m){a.error("Error calling handleHitDieRecovery:",[m])}s=t.system.attributes.hd.largestAvailable,a.log("_sendRollRequestToPlayer - Hit Die REFILL",[{hdData:t.system.attributes.hd}]),q.notify("info",game.i18n.format("CRLNGN_ROLLS.ui.dialogs.hitDie.refilled",{actor:t.name})||`Hit dice refilled for ${t.name}`)}else return}const g={type:"rollRequest",requestId:foundry.utils.randomID(),actorId:t.id,rollType:u,rollKey:s,activityId:null,rollProcessConfig:{...l,_requestedBy:game.user.name},skipRollDialog:!1,targetTokenIds:Array.from(game.user.targets).map(f=>f.id),preserveTargets:D.get(c.useGMTargetTokens.tag)};j.execForUser("handleRollRequest",i.id,g),n||q.notify("info",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollRequestSent",{player:i.name,actor:t.name}))}_showConsolidatedNotification(t,i,o){var c,u,g,f,h;a.log("_showConsolidatedNotification");const s={};for(const{actor:m,owner:b}of t)s[b.id]||(s[b.id]={player:b,actors:[]}),s[b.id].actors.push(m);for(const[m,b]of Object.entries($.ROLL_REQUEST_OPTIONS))if(b.name===i)break;const l=i;let n=game.i18n.localize(`CRLNGN_ROLLS.rollTypes.${l}`)||l;if(o){const m=l.toLowerCase();if(m===d.SKILL)n=`${n} (${((c=CONFIG.DND5E.skills[o])==null?void 0:c.label)||o})`;else if(m===d.SAVING_THROW)n=`${n} (${((u=CONFIG.DND5E.abilities[o])==null?void 0:u.label)||o})`;else if(m===d.ABILITY_CHECK)n=`${n} (${((g=CONFIG.DND5E.abilities[o])==null?void 0:g.label)||o})`;else if(m===d.TOOL){const b=(h=(f=CONFIG.DND5E.enrichmentLookup)==null?void 0:f.tools)==null?void 0:h[o];if(b!=null&&b.id){const R=dnd5e.documents.Trait.getBaseItem(b.id,{indexOnly:!0});n=`${n} (${(R==null?void 0:R.name)||o})`}else n=`${n} (${o})`}else m===d.CUSTOM&&(n=`${n}: ${o}`)}q.notifyRollRequestsSent(s,n)}async _handleGMRolls(t,i,o,s){a.log("_handleGMRolls",[t,i,o,s]);for(const l of t)await this._initiateRoll(l,i,o,s),await Te(100)}async _initiateRoll(t,i,o,s){var l,n,c,u,g;a.log("_initiateRoll",[i,o,s]);try{const f=i.toLowerCase();let h=o;if(f===d.HIT_DIE){const _=t.system.attributes.hd;if(_){const T=["d6","d8","d10","d12","d20"];for(const I of T)if((((l=_[I])==null?void 0:l.value)||0)>0){h=I;break}}if(!h)if(a.log("_initiateRoll - No hit dice available",[t.name]),await foundry.applications.api.DialogV2.confirm({window:{title:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.hitDie.refillTitle")||"No Hit Dice Available",classes:["crlngn-hit-die-dialog"]},position:{width:420},content:`<p>${game.i18n.format("CRLNGN_ROLLS.ui.dialogs.hitDie.refillMessageLocal",{actors:t.name})||""}</p>`,modal:!0,rejectClose:!1,yes:{label:game.i18n.localize("CRLNGN_ROLLS.ui.dialogs.hitDie.refillAndRoll")||"Refill & Roll",icon:""},no:{label:game.i18n.localize("Cancel")||"Cancel",icon:""}})){const I=await x.handleHitDieRecovery(t);if(a.log("Hit die recovery result",[I]),q.notify("info",game.i18n.format("CRLNGN_ROLLS.ui.dialogs.hitDie.refilled",{actor:t.name})),h=t.system.attributes.hd.largestAvailable,!h){q.notify("warn",game.i18n.format("DND5E.HitDiceWarn",{name:t.name}));return}}else return}const m=((u=(c=(n=s.rolls)==null?void 0:n[0])==null?void 0:c.data)==null?void 0:u.situational)||"",b={rollKey:h,config:{...s,situational:m,rollMode:s.rollMode||game.settings.get("core","rollMode"),advantage:s.advantage||!1,disadvantage:s.disadvantage||!1,target:s.target}},R={configure:!s.fastForward&&!s.skipRollDialog,isRollRequest:!0},y={rollMode:s.rollMode||game.settings.get("core","rollMode"),create:s.chatMessage!==!1,isRollRequest:!0},C=((g=s.rolls)==null?void 0:g[0])||{},p=x[f];p?await p(t,b,C,R,y):q.notify("warn",`Unknown roll type: ${i}`)}catch(f){a.error("executeActorRoll",[f]),q.notify("error",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:t.name}))}}async _onClose(t){a.log("_onClose",[t]),await super._onClose(t),this.selectedActors.clear(),this.selectedRequestType=null,document.removeEventListener("click",this._onClickOutside,!0),this._tokenControlHook&&(Hooks.off("controlToken",this._tokenControlHook),this._tokenControlHook=null),this._tokenUpdateTimeout&&(clearTimeout(this._tokenUpdateTimeout),this._tokenUpdateTimeout=null),K(Z,B)===this&&fe(Z,B,null)}setPosition(t={}){return a.log("setPosition"),this}async _showCustomRollDialog(){return a.log("_showCustomRollDialog"),Re.prompt({formula:"",readonly:!1})}static toggle(){a.log("RollRequestsMenu.toggle"),K(this,B)?K(this,B).rendered?K(this,B).close():(K(this,B)._initializeFromSelectedTokens(),K(this,B).render(!0)):(fe(this,B,new Z),K(this,B).render(!0))}};B=new WeakMap,ge(Z,B,null),v(Z,"DEFAULT_OPTIONS",{id:"flash-rolls-menu",classes:["flash-rolls-menu"],tag:"div",window:{frame:!1,resizable:!1,minimizable:!1},position:{}}),v(Z,"PARTS",{main:{template:`modules/${$.ID}/templates/requests-menus.hbs`}});let me=Z;class we{static addSidebarControls(e,t,i){if(!game.user.isGM||e.id!=="sidebar")return;const o=document.querySelector("#roll-privacy");if(a.log("addSidebarControls",[o]),!o||o.querySelector(".flash-rolls-icon"))return;const s=k(),l=D.get(s.rollRequestsEnabled.tag),n=document.createElement("button");n.id="flash-rolls-icon",n.setAttribute("data-tooltip-direction","RIGHT"),n.className=`ui-control icon chat-control-icon flash-rolls-icon${l?" active":""}`,n.title=game.i18n.localize("CRLNGN_ROLLS.ui.menus.rollRequestsTitle"),n.innerHTML=`<i class="fas fa-bolt${l?"":"-slash"}"></i>`;const c=o.firstChild;c?c.parentNode.insertBefore(n,c):o.insertBefore(n,o.firstChild),a.log("addSidebarControls",[c,n]),n.addEventListener("click",u=>{u.stopPropagation(),u.preventDefault(),me.toggle()})}static updateRollRequestsIcon(e){const t=document.querySelector("#flash-rolls-icon i");t&&(t.className=`fas fa-bolt${e?"":"-slash"}`)}}class ve{static initialize(){Hooks.once(J.INIT,this._onInit.bind(this)),Hooks.once(J.READY,this._onReady.bind(this))}static _onInit(){k(),document.body.classList.add("flash-rolls-5e"),D.registerSettings(),X.initialize(),this._registerHooks()}static _onReady(){const e=k();D.get(e.debugMode.tag)&&(CONFIG.debug.hooks=!0),game.user.isGM?(Ne.initialize(),this._registerGMHooks()):(X.getDiceConfig(),this._registerPlayerHooks()),Ie(Le())}static _registerHooks(){this._registerHook(J.RENDER_SIDEBAR,this._onRenderSidebar.bind(this)),this._registerHook(J.PRE_CREATE_CHAT_MESSAGE,this._onPreCreateChatMessage.bind(this)),this._registerHook(J.PRE_CREATE_CHAT_MESSAGE,this._onPreCreateChatMessageFlavor.bind(this)),this._registerHook(J.CHANGE_SIDEBAR_TAB,this._onSidebarUpdate.bind(this)),this._registerHook(J.COLLAPSE_SIDE_BAR,this._onSidebarUpdate.bind(this)),this._registerHook(P.RENDER_ROLL_CONFIGURATION_DIALOG,this._onRenderRollConfigDialog.bind(this)),this._registerHook(P.RENDER_SKILL_TOOL_ROLL_DIALOG,this._onRenderSkillToolDialog.bind(this)),this._registerHook(P.PRE_USE_ACTIVITY,this._onPreUseActivity.bind(this)),this._registerHook(P.PRE_ROLL_HIT_DIE_V2,this._onPreRollHitDieV2.bind(this)),this._registerHook(P.POST_ROLL_CONFIG,this._onPostRollConfig.bind(this))}static _registerGMHooks(){this._registerHook(J.USER_CONNECTED,this._onUserConnected.bind(this)),game.users.forEach(e=>{this._onUserConnected(e)})}static _registerPlayerHooks(){this._registerHook(P.PRE_ROLL_INITIATIVE_DIALOG,this._onPreRollInitiativeDialog.bind(this)),this._registerHook(P.PRE_ROLL_ATTACK_V2,this._onPreRollAttackV2.bind(this)),this._registerHook(P.PRE_ROLL_DAMAGE_V2,this._onPreRollDamageV2.bind(this))}static _onSidebarUpdate(e){a.log("_onSidebarUpdate",[e]),Ie(Le())}static _onPostRollConfig(e,t,i,o){t._showRequestedBy&&e.length>0&&(o.data=o.data||{},o.data._showRequestedBy=!0,o.data._requestedBy=t._requestedBy)}static _onPreCreateChatMessage(e,t,i,o){var s;if(t._showRequestedBy&&((s=t.rolls)==null?void 0:s.length)>0){const l=t._requestedBy||"GM",n=game.i18n.format("CRLNGN_ROLL_REQUESTS.chat.requestedBy",{gm:l}),c=t.flavor||"";t.flavor=c?`${c} ${n}`:n}}static _onPreCreateChatMessageFlavor(e,t,i,o){var s,l;if(((s=t.rolls)==null?void 0:s.length)>0&&t.rolls[0])try{const n=t.rolls[0];(l=n.options)!=null&&l._customFlavor&&(t.flavor=n.options._customFlavor)}catch(n){a.error("_onPreCreateChatMessageFlavor",[n])}}static _onRenderRollConfigDialog(e,t,i){var s,l,n,c,u;if(a.log("_onRenderRollConfigDialog #0",[e,i]),e._flashRollsApplied)return;if(((l=(s=e.config)==null?void 0:s.hookNames)==null?void 0:l.includes("initiativeDialog"))||((c=(n=e.element)==null?void 0:n.id)==null?void 0:c.includes("initiative"))){const g=(u=e.config)==null?void 0:u.subject;if(!g)return;if(g.getFlag(A,"tempInitiativeConfig")){e._flashRollsApplied=!0;const h=t.querySelector('input[name*="situational"]');setTimeout(()=>{h.dispatchEvent(new Event("change",{bubbles:!0,cancelable:!1}))},50)}return}else t.querySelectorAll('input[name*="situational"]').forEach((f,h)=>{var m,b,R,y;!f.value&&((y=(R=(b=(m=e.config)==null?void 0:m.rolls)==null?void 0:b[0])==null?void 0:R.data)!=null&&y.situational)&&(f.value=e.config.rolls[0].data.situational),a.log("_onRenderRollConfigDialog #1",[f.value,e.config.rolls[0]]),f.value&&(e._flashRollsApplied=!0,setTimeout(()=>{var C,p,_;f.dispatchEvent(new Event("change",{bubbles:!0,cancelable:!1})),(_=(p=(C=e.config)==null?void 0:C.rolls)==null?void 0:p[0])!=null&&_.data&&delete e.config.rolls[0].data.situational},50))})}static _onUserConnected(e){e.active&&e.id!==game.user.id&&X.requestDiceConfigFromUser(e.id)}static _onRenderApplicationV2(e,t,i){a.log("_onRenderApplicationV2",[e,t,i])}static _onRenderSidebar(e,t,i){a.log("_onRenderSidebar",[e,t,i]),we.addSidebarControls(e,t,i)}static _registerHook(e,t){const i=Hooks.on(e,t);return this.registeredHooks.set(`${e}_${i}`,i),i}static unregisterAll(){this.registeredHooks.forEach((e,t)=>{const i=t.split("_")[0];Hooks.off(i,e)}),this.registeredHooks.clear()}static isRegistered(e){for(const t of this.registeredHooks.keys())if(t.startsWith(`${e}_`))return!0;return!1}static _onPreRollHitDieV2(e,t,i){if(a.log("_onPreRollHitDieV2 triggered",[e,t,i]),e.rolls&&e.rolls.length>1){const o=[];for(let s=0;s<e.rolls.length;s++){const l=e.rolls[s];l&&l.data&&l.data.situational&&o.push(l.data.situational)}if(o.length>0){e.rolls[0].data||(e.rolls[0].data={});const s=[...new Set(o)];e.rolls[0].data.situational=s.map(l=>{const n=l.toString().trim();return n.startsWith("-")?`(${n})`:n.startsWith("+")?`${n.substring(1)}`:`${n}`}).join(" + "),game.user.isGM&&!e.rolls[0].parts.find(l=>l.includes("@situational"))&&e.rolls[0].parts.push("@situational")}e.rolls=e.rolls.slice(0,1),a.log("Cleaned up hit die rolls",e.rolls)}}static _onPreRollInitiativeDialog(e,t,i){var l,n,c,u,g;const s=e.subject.getFlag(A,"tempInitiativeConfig");a.log("_onPreRollInitiativeDialog triggered",[e,s,t,i]),e.advantage=(s==null?void 0:s.advantage)||e.advantage||!1,e.disadvantage=(s==null?void 0:s.disadvantage)||e.disadvantage||!1,e.rollMode=(s==null?void 0:s.rollMode)||e.rollMode||CONST.DICE_ROLL_MODES.PUBLIC,i.rollMode=(s==null?void 0:s.rollMode)||i.rollMode||CONST.DICE_ROLL_MODES.PUBLIC,(c=(n=(l=s.rolls)==null?void 0:l[0])==null?void 0:n.data)!=null&&c.situational&&((g=(u=e.rolls)==null?void 0:u[0])!=null&&g.data)&&(e.rolls[0].data.situational=s.rolls[0].data.situational)}static _onPreRollAttackV2(e,t,i){var s,l;a.log("_onPreRollAttackV2 triggered",[e,t,i]);const o=(l=(s=e.subject)==null?void 0:s.item)==null?void 0:l.getFlag(A,"tempAttackConfig");if(o){if(a.log("_onPreRollAttackV2 - Found stored request config from flag",[o]),o.isRollRequest===!1||o.skipRollDialog===!0||o.sendRequest===!1){a.log("_onPreRollAttackV2 - Not a roll request, skipping",[o]);return}o.attackMode&&(e.attackMode=o.attackMode),o.ammunition&&(e.ammunition=o.ammunition),o.mastery!==void 0&&(e.mastery=o.mastery),e.advantage=o.advantage||!1,e.disadvantage=o.disadvantage||!1,i.rollMode=o.rollMode||i.rollMode||CONST.DICE_ROLL_MODES.PUBLIC,o.situational&&((!e.rolls||e.rolls.length===0)&&(e.rolls=[{parts:[],data:{},options:{}}]),e.rolls[0].data||(e.rolls[0].data={}),e.rolls[0].data.situational=o.situational),a.log("_onPreRollAttackV2 - Applied stored configuration to attack roll",[e,i])}}static _onPreRollDamageV2(e,t,i){var s,l;a.log("_onPreRollDamageV2 triggered",[e,t,i]);const o=(l=(s=e.subject)==null?void 0:s.item)==null?void 0:l.getFlag(A,"tempDamageConfig");if(o){if(a.log("_onPreRollDamageV2 - Found stored request config from flag",[o,o.situational]),o.isRollRequest===!1||o.skipRollDialog===!0||o.sendRequest===!1){a.log("_onPreRollDamageV2 - Not a roll request, skipping",[o]);return}o.critical&&(e.critical=o.critical),i.rollMode=o.rollMode||i.rollMode||CONST.DICE_ROLL_MODES.PUBLIC,o.situational&&((!e.rolls||e.rolls.length===0)&&(e.rolls=[{parts:[],data:{},options:{}}]),e.rolls[0].data||(e.rolls[0].data={}),e.rolls[0].data.situational=o.situational),a.log("_onPreRollDamageV2 - Applied stored configuration to damage roll",[e,i])}}static _onPreUseActivity(e,t,i,o){a.log("_onPreUseActivity triggered",[e,t,i,o]);const s=k(),l=D.get(s.rollRequestsEnabled.tag),n=D.get(s.rollInterceptionEnabled.tag);if(a.log("_onPreUseActivity - Settings",[l,n]),e.item.unsetFlag(A,"tempAttackConfig"),e.item.unsetFlag(A,"tempDamageConfig"),e.item.unsetFlag(A,"tempSaveConfig"),!game.user.isGM||!l||!n)return;const c=e.actor;if(!c)return;i.configure=!1;const u=U.getActorOwner(c);u&&u.active&&!u.isGM&&(a.log("Preventing usage message for player-owned actor",[c.name]),o.create=!1)}static _onRenderSkillToolDialog(e,t,i){var s,l;if(a.log("_onRenderSkillToolDialog triggered",[e]),e._abilityFlavorFixed)return;const o=t.querySelector('select[name="ability"]');if(o&&(s=e.config)!=null&&s.isRollRequest&&(l=e.config)!=null&&l.ability){const n=o.value,c=e.config.ability;n===c&&(e._abilityFlavorFixed=!0,setTimeout(()=>{const u=new Event("change",{bubbles:!0,cancelable:!0});o.dispatchEvent(u)},50))}}}v(ve,"registeredHooks",new Map);class pe{static async handleRequest(e){var i;if(a.log("handleRequest",[e]),game.user.isGM)return;const t=game.actors.get(e.actorId);!t||!t.isOwner||(e.preserveTargets&&((i=e.targetTokenIds)==null?void 0:i.length)>0&&game.user.targets.size===0&&Ke(e.targetTokenIds),q.notify("info","",{batch:!0,batchData:{actor:t.name,rollType:e.rollType,rollKey:e.rollKey,gm:e.rollProcessConfig._requestedBy||"GM"}}),pe.executePlayerRollRequest(t,e))}static async executePlayerRollRequest(e,t){var s,l;const i=k(),o=D.get(i.publicPlayerRolls.tag);a.log("executePlayerRollRequest",[e,t]);try{const n=(s=t.rollType)==null?void 0:s.toLowerCase(),c=((l=t.rollProcessConfig.rolls)==null?void 0:l[0])||{parts:[],data:{},options:{}},g={configure:!(game.user.isGM?t.skipRollDialog:!1)},f=t.rollProcessConfig.rollMode,h=game.settings.get("core","rollMode"),m=f||h;a.log("executePlayerRollRequest - Roll Mode Debug",{publicPlayerRolls:o,rollModeFromGM:f,defaultRollMode:h,finalRollMode:m,fullConfig:t.rollProcessConfig});const b={rollMode:m,create:t.rollProcessConfig.chatMessage!==!1},R={rollKey:t.rollKey,activityId:t.activityId,config:t.rollProcessConfig},y=x[n];y?await y(e,R,c,g,b):(a.warn(`No handler found for roll type: ${n}`),q.notify("warn",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:e.name||"Unknown Actor"})))}catch(n){a.error("Error executing roll request:",[n]),q.notify("error",game.i18n.format("CRLNGN_ROLL_REQUESTS.notifications.rollError",{actor:e.name||"Unknown Actor"}))}}}class te{static init(){j.initialize(te.registerSocketCalls),ve.initialize()}static getDiceConfig(){return X.getDiceConfig()}static receiveDiceConfig(e,t){X.receiveDiceConfig(e,t)}static async handleRollRequest(e){return pe.handleRequest(e)}static registerSocketCalls(){j.registerCall(he.getDiceConfig,te.getDiceConfig),j.registerCall(he.receiveDiceConfig,te.receiveDiceConfig),j.registerCall(he.handleRollRequest,te.handleRollRequest)}}te.init();
//# sourceMappingURL=flash-rolls-5e.js.map
